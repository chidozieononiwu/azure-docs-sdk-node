### YamlMime:UniversalReference
items:
  - uid: '@azure/abort-controller.SpanContext'
    name: SpanContext
    fullName: SpanContext
    children:
      - '@azure/abort-controller.SpanContext.isRemote'
      - '@azure/abort-controller.SpanContext.spanId'
      - '@azure/abort-controller.SpanContext.traceFlags'
      - '@azure/abort-controller.SpanContext.traceId'
      - '@azure/abort-controller.SpanContext.traceState'
    langs:
      - typeScript
    type: interface
    summary: |-
      A SpanContext represents the portion of a <xref:Span> which must be
      serialized and propagated along side of a <xref:DistributedContext>.
    package: '@azure/abort-controller'
  - uid: '@azure/abort-controller.SpanContext.isRemote'
    name: isRemote
    fullName: isRemote
    children: []
    langs:
      - typeScript
    type: property
    summary: Only true if the SpanContext was propagated from a remote parent.
    optional: true
    syntax:
      content: 'isRemote?: undefined | false | true'
      return:
        type:
          - undefined | false | true
        description: ''
    package: '@azure/abort-controller'
  - uid: '@azure/abort-controller.SpanContext.spanId'
    name: spanId
    fullName: spanId
    children: []
    langs:
      - typeScript
    type: property
    summary: |-
      The ID of the Span. It is globally unique with practically sufficient
      probability by being made as 8 randomly generated bytes, encoded as a 16
      lowercase hex characters corresponding to 64 bits.
    syntax:
      content: 'spanId: string'
      return:
        type:
          - string
        description: ''
    package: '@azure/abort-controller'
  - uid: '@azure/abort-controller.SpanContext.traceFlags'
    name: traceFlags
    fullName: traceFlags
    children: []
    langs:
      - typeScript
    type: property
    summary: |
      Trace flags to propagate.
      It is represented as 1 byte (bitmap). Bit to represent whether trace is
      sampled or not. When set, the least significant bit documents that the
      caller may have recorded trace data. A caller who does not record trace
      data out-of-band leaves this flag unset.

      SAMPLED = 0x1 and UNSAMPLED = 0x0;
    optional: true
    syntax:
      content: 'traceFlags?: TraceFlags'
      return:
        type:
          - '@azure/abort-controller.TraceFlags'
        description: ''
    package: '@azure/abort-controller'
  - uid: '@azure/abort-controller.SpanContext.traceId'
    name: traceId
    fullName: traceId
    children: []
    langs:
      - typeScript
    type: property
    summary: |-
      The ID of the trace that this span belongs to. It is worldwide unique
      with practically sufficient probability by being made as 16 randomly
      generated bytes, encoded as a 32 lowercase hex characters corresponding to
      128 bits.
    syntax:
      content: 'traceId: string'
      return:
        type:
          - string
        description: ''
    package: '@azure/abort-controller'
  - uid: '@azure/abort-controller.SpanContext.traceState'
    name: traceState
    fullName: traceState
    children: []
    langs:
      - typeScript
    type: property
    summary: |
      Tracing-system-specific info to propagate.
      The tracestate field value is a `list` as defined below. The `list` is a
      series of `list-members` separated by commas `,`, and a list-member is a
      key/value pair separated by an equals sign `=`. Spaces and horizontal tabs
      surrounding `list-members` are ignored. There can be a maximum of 32
      `list-members` in a `list`.
      More Info: https://www.w3.org/TR/trace-context/#tracestate-field

      Examples:
          Single tracing system (generic format):
              tracestate: rojo=00f067aa0ba902b7
          Multiple tracing systems (with different formatting):
              tracestate: rojo=00f067aa0ba902b7,congo=t61rcWkgMzE
    optional: true
    syntax:
      content: 'traceState?: TraceState'
      return:
        type:
          - '@azure/abort-controller.TraceState'
        description: ''
    package: '@azure/abort-controller'
references:
  - uid: '@azure/abort-controller.TraceFlags'
    name: TraceFlags
    spec.typeScript:
      - name: TraceFlags
        fullName: TraceFlags
        uid: '@azure/abort-controller.TraceFlags'
  - uid: '@azure/abort-controller.TraceState'
    name: TraceState
    spec.typeScript:
      - name: TraceState
        fullName: TraceState
        uid: '@azure/abort-controller.TraceState'
