### YamlMime:UniversalReference
items:
  - uid: '@azure/abort-controller.tls.CommonConnectionOptions'
    name: CommonConnectionOptions
    fullName: CommonConnectionOptions
    children:
      - '@azure/abort-controller.tls.CommonConnectionOptions.ALPNProtocols'
      - '@azure/abort-controller.tls.CommonConnectionOptions.enableTrace'
      - '@azure/abort-controller.tls.CommonConnectionOptions.rejectUnauthorized'
      - '@azure/abort-controller.tls.CommonConnectionOptions.requestCert'
      - '@azure/abort-controller.tls.CommonConnectionOptions.secureContext'
      - '@azure/abort-controller.tls.CommonConnectionOptions.SNICallback'
    langs:
      - typeScript
    type: interface
    summary: ''
    package: '@azure/abort-controller'
  - uid: '@azure/abort-controller.tls.CommonConnectionOptions.ALPNProtocols'
    name: ALPNProtocols
    fullName: ALPNProtocols
    children: []
    langs:
      - typeScript
    type: property
    summary: |-
      An array of strings or a Buffer naming possible ALPN protocols.
      (Protocols should be ordered by their priority.)
    optional: true
    syntax:
      content: 'ALPNProtocols?: string[] | Uint8Array[] | Uint8Array'
      return:
        type:
          - 'string[] | Uint8Array[] | Uint8Array'
        description: ''
    package: '@azure/abort-controller'
  - uid: '@azure/abort-controller.tls.CommonConnectionOptions.enableTrace'
    name: enableTrace
    fullName: enableTrace
    children: []
    langs:
      - typeScript
    type: property
    summary: >-
      When enabled, TLS packet trace information is written to `stderr`. This
      can be

      used to debug TLS connection problems.
    optional: true
    syntax:
      content: 'enableTrace?: boolean'
      return:
        type:
          - boolean
        description: ''
    package: '@azure/abort-controller'
  - uid: '@azure/abort-controller.tls.CommonConnectionOptions.rejectUnauthorized'
    name: rejectUnauthorized
    fullName: rejectUnauthorized
    children: []
    langs:
      - typeScript
    type: property
    summary: |-
      If true the server will reject any connection which is not
      authorized with the list of supplied CAs. This option only has an
      effect if requestCert is true.
    optional: true
    syntax:
      content: 'rejectUnauthorized?: boolean'
      return:
        type:
          - boolean
        description: ''
    package: '@azure/abort-controller'
  - uid: '@azure/abort-controller.tls.CommonConnectionOptions.requestCert'
    name: requestCert
    fullName: requestCert
    children: []
    langs:
      - typeScript
    type: property
    summary: |-
      If true the server will request a certificate from clients that
      connect and attempt to verify that certificate. Defaults to
      false.
    optional: true
    syntax:
      content: 'requestCert?: boolean'
      return:
        type:
          - boolean
        description: ''
    package: '@azure/abort-controller'
  - uid: '@azure/abort-controller.tls.CommonConnectionOptions.secureContext'
    name: secureContext
    fullName: secureContext
    children: []
    langs:
      - typeScript
    type: property
    summary: An optional TLS context object from tls.createSecureContext()
    optional: true
    syntax:
      content: 'secureContext?: SecureContext'
      return:
        type:
          - '@azure/abort-controller.tls.SecureContext'
        description: ''
    package: '@azure/abort-controller'
  - uid: '@azure/abort-controller.tls.CommonConnectionOptions.SNICallback'
    name: SNICallback
    fullName: SNICallback
    children: []
    langs:
      - typeScript
    type: property
    summary: |-
      SNICallback(servername, cb) <Function> A function that will be
      called if the client supports SNI TLS extension. Two arguments
      will be passed when called: servername and cb. SNICallback should
      invoke cb(null, ctx), where ctx is a SecureContext instance.
      (tls.createSecureContext(...) can be used to get a proper
      SecureContext.) If SNICallback wasn't provided the default callback
      with high-level API will be used (see below).
    optional: true
    syntax:
      content: >-
        SNICallback?: (servername: string, cb: (err: Error | null, ctx:
        SecureContext) => void) => void
      return:
        type:
          - >-
            (servername: string, cb: (err: Error | null, ctx: SecureContext) =>
            void) => void
        description: ''
    package: '@azure/abort-controller'
references:
  - uid: '@azure/abort-controller.net.Server'
    name: Server
    spec.typeScript:
      - name: Server
        fullName: Server
        uid: '@azure/abort-controller.net.Server'
  - uid: '@azure/abort-controller.tls.SecureContextOptions'
    name: SecureContextOptions
    spec.typeScript:
      - name: SecureContextOptions
        fullName: SecureContextOptions
        uid: '@azure/abort-controller.tls.SecureContextOptions'
  - uid: '@azure/abort-controller.net.AddressInfo | string | null'
    name: AddressInfo | string | null
    spec.typeScript:
      - name: AddressInfo
        fullName: AddressInfo
        uid: '@azure/abort-controller.net.AddressInfo'
      - name: ' | string | null'
        fullName: ' | string | null'
  - uid: '@azure/abort-controller.tls.TLSSocket'
    name: TLSSocket
    spec.typeScript:
      - name: TLSSocket
        fullName: TLSSocket
        uid: '@azure/abort-controller.tls.TLSSocket'
  - uid: '@azure/abort-controller.net.ListenOptions'
    name: ListenOptions
    spec.typeScript:
      - name: ListenOptions
        fullName: ListenOptions
        uid: '@azure/abort-controller.net.ListenOptions'
  - uid: '@azure/abort-controller.net.Socket'
    name: Socket
    spec.typeScript:
      - name: Socket
        fullName: Socket
        uid: '@azure/abort-controller.net.Socket'
  - uid: '@azure/abort-controller.tls.TLSSocketOptions'
    name: TLSSocketOptions
    spec.typeScript:
      - name: TLSSocketOptions
        fullName: TLSSocketOptions
        uid: '@azure/abort-controller.tls.TLSSocketOptions'
  - uid: '@azure/abort-controller.net.AddressInfo | string'
    name: AddressInfo | string
    spec.typeScript:
      - name: AddressInfo
        fullName: AddressInfo
        uid: '@azure/abort-controller.net.AddressInfo'
      - name: ' | string'
        fullName: ' | string'
  - uid: '@azure/abort-controller.net.SocketConnectOpts'
    name: SocketConnectOpts
    spec.typeScript:
      - name: SocketConnectOpts
        fullName: SocketConnectOpts
        uid: '@azure/abort-controller.net.SocketConnectOpts'
  - uid: '@azure/abort-controller.tls.PeerCertificate | object | null'
    name: PeerCertificate | object | null
    spec.typeScript:
      - name: PeerCertificate
        fullName: PeerCertificate
        uid: '@azure/abort-controller.tls.PeerCertificate'
      - name: ' | object | null'
        fullName: ' | object | null'
  - uid: '@azure/abort-controller.tls.CipherNameAndProtocol'
    name: CipherNameAndProtocol
    spec.typeScript:
      - name: CipherNameAndProtocol
        fullName: CipherNameAndProtocol
        uid: '@azure/abort-controller.tls.CipherNameAndProtocol'
  - uid: '@azure/abort-controller.tls.EphemeralKeyInfo | object | null'
    name: EphemeralKeyInfo | object | null
    spec.typeScript:
      - name: EphemeralKeyInfo
        fullName: EphemeralKeyInfo
        uid: '@azure/abort-controller.tls.EphemeralKeyInfo'
      - name: ' | object | null'
        fullName: ' | object | null'
  - uid: '@azure/abort-controller.tls.DetailedPeerCertificate'
    name: DetailedPeerCertificate
    spec.typeScript:
      - name: DetailedPeerCertificate
        fullName: DetailedPeerCertificate
        uid: '@azure/abort-controller.tls.DetailedPeerCertificate'
  - uid: '@azure/abort-controller.tls.PeerCertificate'
    name: PeerCertificate
    spec.typeScript:
      - name: PeerCertificate
        fullName: PeerCertificate
        uid: '@azure/abort-controller.tls.PeerCertificate'
  - uid: >-
      @azure/abort-controller.tls.PeerCertificate |
      @azure/abort-controller.tls.DetailedPeerCertificate
    name: DetailedPeerCertificate
    spec.typeScript:
      - name: PeerCertificate
        fullName: PeerCertificate
        uid: '@azure/abort-controller.tls.PeerCertificate'
      - name: ' | '
        fullName: ' | '
      - name: DetailedPeerCertificate
        fullName: DetailedPeerCertificate
        uid: '@azure/abort-controller.tls.DetailedPeerCertificate'
  - uid: '@azure/abort-controller.NodeJS.WritableStream'
    name: WritableStream
    spec.typeScript:
      - name: WritableStream
        fullName: WritableStream
        uid: '@azure/abort-controller.NodeJS.WritableStream'
  - uid: '@azure/abort-controller.BufferEncoding'
    name: BufferEncoding
    spec.typeScript:
      - name: BufferEncoding
        fullName: BufferEncoding
        uid: '@azure/abort-controller.BufferEncoding'
  - uid: '@azure/abort-controller.NodeJS.ReadableStream'
    name: ReadableStream
    spec.typeScript:
      - name: ReadableStream
        fullName: ReadableStream
        uid: '@azure/abort-controller.NodeJS.ReadableStream'
  - uid: '@azure/abort-controller.stream.internal.ReadableOptions'
    name: ReadableOptions
    spec.typeScript:
      - name: ReadableOptions
        fullName: ReadableOptions
        uid: '@azure/abort-controller.stream.internal.ReadableOptions'
  - uid: '@azure/abort-controller.stream.internal.Readable'
    name: Readable
    spec.typeScript:
      - name: Readable
        fullName: Readable
        uid: '@azure/abort-controller.stream.internal.Readable'
  - uid: '@azure/abort-controller.tls.SecureContext'
    name: SecureContext
    spec.typeScript:
      - name: SecureContext
        fullName: SecureContext
        uid: '@azure/abort-controller.tls.SecureContext'
  - uid: '@azure/abort-controller.tls.checkServerIdentity'
    name: checkServerIdentity
    spec.typeScript:
      - name: checkServerIdentity
        fullName: checkServerIdentity
        uid: '@azure/abort-controller.tls.checkServerIdentity'
  - uid: string | Buffer | Array<Buffer | @azure/abort-controller.tls.KeyObject>
    name: KeyObject>
    spec.typeScript:
      - name: 'string | Buffer | Array<Buffer | '
        fullName: 'string | Buffer | Array<Buffer | '
      - name: KeyObject
        fullName: KeyObject
        uid: '@azure/abort-controller.tls.KeyObject'
      - name: '>'
        fullName: '>'
  - uid: '@azure/abort-controller.tls.SecureVersion'
    name: SecureVersion
    spec.typeScript:
      - name: SecureVersion
        fullName: SecureVersion
        uid: '@azure/abort-controller.tls.SecureVersion'
  - uid: >-
      string | Buffer | Array<string | Buffer |
      @azure/abort-controller.tls.PxfObject>
    name: PxfObject>
    spec.typeScript:
      - name: 'string | Buffer | Array<string | Buffer | '
        fullName: 'string | Buffer | Array<string | Buffer | '
      - name: PxfObject
        fullName: PxfObject
        uid: '@azure/abort-controller.tls.PxfObject'
      - name: '>'
        fullName: '>'
  - uid: '@azure/abort-controller.tls.PSKCallbackNegotation | null'
    name: PSKCallbackNegotation | null
    spec.typeScript:
      - name: PSKCallbackNegotation
        fullName: PSKCallbackNegotation
        uid: '@azure/abort-controller.tls.PSKCallbackNegotation'
      - name: ' | null'
        fullName: ' | null'
  - uid: '@azure/abort-controller.tls.Certificate'
    name: Certificate
    spec.typeScript:
      - name: Certificate
        fullName: Certificate
        uid: '@azure/abort-controller.tls.Certificate'
  - uid: DataView | @azure/abort-controller.NodeJS.TypedArray
    name: TypedArray
    spec.typeScript:
      - name: 'DataView | '
        fullName: 'DataView | '
      - name: TypedArray
        fullName: TypedArray
        uid: '@azure/abort-controller.NodeJS.TypedArray'
  - uid: DataView | @azure/abort-controller.NodeJS.TypedArray | null
    name: TypedArray | null
    spec.typeScript:
      - name: 'DataView | '
        fullName: 'DataView | '
      - name: TypedArray
        fullName: TypedArray
        uid: '@azure/abort-controller.NodeJS.TypedArray'
      - name: ' | null'
        fullName: ' | null'
  - uid: '@azure/abort-controller.tls.ConnectionOptions'
    name: ConnectionOptions
    spec.typeScript:
      - name: ConnectionOptions
        fullName: ConnectionOptions
        uid: '@azure/abort-controller.tls.ConnectionOptions'
  - uid: '@azure/abort-controller.tls.SecurePair'
    name: SecurePair
    spec.typeScript:
      - name: SecurePair
        fullName: SecurePair
        uid: '@azure/abort-controller.tls.SecurePair'
  - uid: '@azure/abort-controller.tls.Server'
    name: Server
    spec.typeScript:
      - name: Server
        fullName: Server
        uid: '@azure/abort-controller.tls.Server'
  - uid: '@azure/abort-controller.tls.TlsOptions'
    name: TlsOptions
    spec.typeScript:
      - name: TlsOptions
        fullName: TlsOptions
        uid: '@azure/abort-controller.tls.TlsOptions'
