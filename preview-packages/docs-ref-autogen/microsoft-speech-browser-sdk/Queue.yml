### YamlMime:UniversalReference
items:
  - uid: microsoft-speech-browser-sdk.Queue
    name: Queue
    fullName: Queue<TItem>
    children:
      - microsoft-speech-browser-sdk.Queue.Dequeue
      - microsoft-speech-browser-sdk.Queue.Dispose
      - microsoft-speech-browser-sdk.Queue.DrainAndDispose
      - microsoft-speech-browser-sdk.Queue.Enqueue
      - microsoft-speech-browser-sdk.Queue.EnqueueFromPromise
      - microsoft-speech-browser-sdk.Queue.IsDisposed
      - microsoft-speech-browser-sdk.Queue.Length
      - microsoft-speech-browser-sdk.Queue.Peek
      - microsoft-speech-browser-sdk.Queue.constructor
    langs:
      - typeScript
    type: class
    summary: ''
    package: microsoft-speech-browser-sdk
  - uid: microsoft-speech-browser-sdk.Queue.Dequeue
    name: Dequeue
    fullName: Dequeue
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    syntax:
      content: 'Dequeue: () => Promise<TItem>'
      return:
        type:
          - () => Promise<TItem>
        description: ''
    package: microsoft-speech-browser-sdk
  - uid: microsoft-speech-browser-sdk.Queue.Dispose
    name: Dispose
    fullName: Dispose
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    syntax:
      content: 'Dispose: (reason?: string) => void'
      return:
        type:
          - '(reason?: string) => void'
        description: ''
    package: microsoft-speech-browser-sdk
  - uid: microsoft-speech-browser-sdk.Queue.DrainAndDispose
    name: DrainAndDispose
    fullName: DrainAndDispose
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    syntax:
      content: >-
        DrainAndDispose: (pendingItemProcessor: (pendingItemInQueue: TItem) =>
        void, reason?: string) => Promise<boolean>
      return:
        type:
          - >-
            (pendingItemProcessor: (pendingItemInQueue: TItem) => void, reason?:
            string) => Promise<boolean>
        description: ''
    package: microsoft-speech-browser-sdk
  - uid: microsoft-speech-browser-sdk.Queue.Enqueue
    name: Enqueue
    fullName: Enqueue
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    syntax:
      content: 'Enqueue: (item: TItem) => void'
      return:
        type:
          - '(item: TItem) => void'
        description: ''
    package: microsoft-speech-browser-sdk
  - uid: microsoft-speech-browser-sdk.Queue.EnqueueFromPromise
    name: EnqueueFromPromise
    fullName: EnqueueFromPromise
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    syntax:
      content: 'EnqueueFromPromise: (promise: Promise<TItem>) => void'
      return:
        type:
          - '(promise: Promise<TItem>) => void'
        description: ''
    package: microsoft-speech-browser-sdk
  - uid: microsoft-speech-browser-sdk.Queue.IsDisposed
    name: IsDisposed
    fullName: IsDisposed
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    syntax:
      content: 'IsDisposed: () => boolean'
      return:
        type:
          - () => boolean
        description: ''
    package: microsoft-speech-browser-sdk
  - uid: microsoft-speech-browser-sdk.Queue.Length
    name: Length
    fullName: Length
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    syntax:
      content: 'Length: () => number'
      return:
        type:
          - () => number
        description: ''
    package: microsoft-speech-browser-sdk
  - uid: microsoft-speech-browser-sdk.Queue.Peek
    name: Peek
    fullName: Peek
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    syntax:
      content: 'Peek: () => Promise<TItem>'
      return:
        type:
          - () => Promise<TItem>
        description: ''
    package: microsoft-speech-browser-sdk
  - uid: microsoft-speech-browser-sdk.Queue.constructor
    name: Queue(List<TItem>)
    children: []
    type: constructor
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'new Queue(list?: List<TItem>)'
      parameters:
        - id: list
          type:
            - microsoft-speech-browser-sdk.List<TItem>
          description: ''
          optional: true
    package: microsoft-speech-browser-sdk
references:
  - uid: microsoft-speech-browser-sdk.List<TItem>
    name: List<TItem>
    spec.typeScript:
      - name: List
        fullName: List
        uid: microsoft-speech-browser-sdk.List
      - name: <TItem>
        fullName: <TItem>
