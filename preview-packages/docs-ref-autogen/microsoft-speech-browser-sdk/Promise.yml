### YamlMime:UniversalReference
items:
  - uid: microsoft-speech-browser-sdk.Promise
    name: Promise
    fullName: Promise<T>
    children:
      - microsoft-speech-browser-sdk.Promise.ContinueWith
      - microsoft-speech-browser-sdk.Promise.ContinueWithPromise
      - microsoft-speech-browser-sdk.Promise.Finally
      - microsoft-speech-browser-sdk.Promise.On
      - microsoft-speech-browser-sdk.Promise.OnSuccessContinueWith
      - microsoft-speech-browser-sdk.Promise.OnSuccessContinueWithPromise
      - microsoft-speech-browser-sdk.Promise.constructor
      - microsoft-speech-browser-sdk.Promise.Result
    langs:
      - typeScript
    type: class
    summary: ''
    package: microsoft-speech-browser-sdk
  - uid: microsoft-speech-browser-sdk.Promise.ContinueWith
    name: 'ContinueWith((promiseResult: PromiseResult<T>) => TContinuationResult)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function ContinueWith<TContinuationResult>(continuationCallback:
        (promiseResult: PromiseResult<T>) => TContinuationResult)
      parameters:
        - id: continuationCallback
          type:
            - '(promiseResult: PromiseResult<T>) => TContinuationResult'
          description: ''
      return:
        type:
          - microsoft-speech-browser-sdk.Promise<TContinuationResult>
        description: ''
    package: microsoft-speech-browser-sdk
  - uid: microsoft-speech-browser-sdk.Promise.ContinueWithPromise
    name: >-
      ContinueWithPromise((promiseResult: PromiseResult<T>) =>
      Promise<TContinuationResult>)
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function ContinueWithPromise<TContinuationResult>(continuationCallback:
        (promiseResult: PromiseResult<T>) => Promise<TContinuationResult>)
      parameters:
        - id: continuationCallback
          type:
            - '(promiseResult: PromiseResult<T>) => Promise<TContinuationResult>'
          description: ''
      return:
        type:
          - microsoft-speech-browser-sdk.Promise<TContinuationResult>
        description: ''
    package: microsoft-speech-browser-sdk
  - uid: microsoft-speech-browser-sdk.Promise.Finally
    name: Finally(() => void)
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function Finally(callback: () => void)'
      parameters:
        - id: callback
          type:
            - () => void
          description: ''
      return:
        type:
          - microsoft-speech-browser-sdk.Promise<T>
        description: ''
    package: microsoft-speech-browser-sdk
  - uid: microsoft-speech-browser-sdk.Promise.On
    name: 'On((result: T) => void, (error: string) => void)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function On(successCallback: (result: T) => void, errorCallback: (error:
        string) => void)
      parameters:
        - id: successCallback
          type:
            - '(result: T) => void'
          description: ''
        - id: errorCallback
          type:
            - '(error: string) => void'
          description: ''
      return:
        type:
          - microsoft-speech-browser-sdk.Promise<T>
        description: ''
    package: microsoft-speech-browser-sdk
  - uid: microsoft-speech-browser-sdk.Promise.OnSuccessContinueWith
    name: 'OnSuccessContinueWith((result: T) => TContinuationResult)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function
        OnSuccessContinueWith<TContinuationResult>(continuationCallback:
        (result: T) => TContinuationResult)
      parameters:
        - id: continuationCallback
          type:
            - '(result: T) => TContinuationResult'
          description: ''
      return:
        type:
          - microsoft-speech-browser-sdk.Promise<TContinuationResult>
        description: ''
    package: microsoft-speech-browser-sdk
  - uid: microsoft-speech-browser-sdk.Promise.OnSuccessContinueWithPromise
    name: 'OnSuccessContinueWithPromise((result: T) => Promise<TContinuationResult>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function
        OnSuccessContinueWithPromise<TContinuationResult>(continuationCallback:
        (result: T) => Promise<TContinuationResult>)
      parameters:
        - id: continuationCallback
          type:
            - '(result: T) => Promise<TContinuationResult>'
          description: ''
      return:
        type:
          - microsoft-speech-browser-sdk.Promise<TContinuationResult>
        description: ''
    package: microsoft-speech-browser-sdk
  - uid: microsoft-speech-browser-sdk.Promise.constructor
    name: Promise(Sink<T>)
    children: []
    type: constructor
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'new Promise(sink: Sink<T>)'
      parameters:
        - id: sink
          type:
            - microsoft-speech-browser-sdk.Sink<T>
          description: ''
    package: microsoft-speech-browser-sdk
  - uid: microsoft-speech-browser-sdk.Promise.Result
    name: Result()
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: function Result()
      parameters: []
      return:
        type:
          - microsoft-speech-browser-sdk.PromiseResult<T>
        description: ''
    package: microsoft-speech-browser-sdk
references:
  - uid: microsoft-speech-browser-sdk.Sink<T>
    name: Sink<T>
    spec.typeScript:
      - name: Sink
        fullName: Sink
        uid: microsoft-speech-browser-sdk.Sink
      - name: <T>
        fullName: <T>
  - uid: microsoft-speech-browser-sdk.Promise<TContinuationResult>
    name: Promise<TContinuationResult>
    spec.typeScript:
      - name: Promise
        fullName: Promise
        uid: microsoft-speech-browser-sdk.Promise
      - name: <TContinuationResult>
        fullName: <TContinuationResult>
  - uid: microsoft-speech-browser-sdk.Promise<T>
    name: Promise<T>
    spec.typeScript:
      - name: Promise
        fullName: Promise
        uid: microsoft-speech-browser-sdk.Promise
      - name: <T>
        fullName: <T>
  - uid: microsoft-speech-browser-sdk.PromiseResult<T>
    name: PromiseResult<T>
    spec.typeScript:
      - name: PromiseResult
        fullName: PromiseResult
        uid: microsoft-speech-browser-sdk.PromiseResult
      - name: <T>
        fullName: <T>
