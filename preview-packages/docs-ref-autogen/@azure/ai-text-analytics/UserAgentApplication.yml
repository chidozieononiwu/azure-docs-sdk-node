### YamlMime:UniversalReference
items:
  - uid: '@azure/abort-controller.UserAgentApplication'
    name: UserAgentApplication
    fullName: UserAgentApplication
    children:
      - '@azure/abort-controller.UserAgentApplication.acquireTokenPopup'
      - '@azure/abort-controller.UserAgentApplication.acquireTokenRedirect'
      - '@azure/abort-controller.UserAgentApplication.acquireTokenSilent'
      - '@azure/abort-controller.UserAgentApplication.authority'
      - '@azure/abort-controller.UserAgentApplication.getAccount'
      - '@azure/abort-controller.UserAgentApplication.getAllAccounts'
      - '@azure/abort-controller.UserAgentApplication.getAuthorityInstance'
      - '@azure/abort-controller.UserAgentApplication.getCurrentConfiguration'
      - '@azure/abort-controller.UserAgentApplication.getLoginInProgress'
      - '@azure/abort-controller.UserAgentApplication.getPostLogoutRedirectUri'
      - '@azure/abort-controller.UserAgentApplication.getRedirectUri'
      - '@azure/abort-controller.UserAgentApplication.loginPopup'
      - '@azure/abort-controller.UserAgentApplication.loginRedirect'
      - '@azure/abort-controller.UserAgentApplication.logout'
      - '@azure/abort-controller.UserAgentApplication.urlContainsHash'
      - '@azure/abort-controller.UserAgentApplication.constructor'
    langs:
      - typeScript
    type: class
    summary: >
      UserAgentApplication class

      Object Instance that the developer can use to make loginXX OR
      acquireTokenXX functions
    package: '@azure/abort-controller'
  - uid: '@azure/abort-controller.UserAgentApplication.acquireTokenPopup'
    name: acquireTokenPopup(AuthenticationParameters)
    children: []
    type: method
    langs:
      - typeScript
    summary: >-
      Use when you want to obtain an access_token for your API via opening a
      popup window in the user's browser
    syntax:
      content: 'function acquireTokenPopup(userRequest: AuthenticationParameters)'
      parameters:
        - id: userRequest
          type:
            - '@azure/abort-controller.AuthenticationParameters'
          description: ''
      return:
        type:
          - Promise<@azure/abort-controller.AuthResponse>
        description: >-
          - a promise that is fulfilled when this function has completed, or
          rejected if an error was raised. Returns the {@link AuthResponse}
          object
    package: '@azure/abort-controller'
  - uid: '@azure/abort-controller.UserAgentApplication.acquireTokenRedirect'
    name: acquireTokenRedirect(AuthenticationParameters)
    children: []
    type: method
    langs:
      - typeScript
    summary: >-
      Use when you want to obtain an access_token for your API by redirecting
      the user's browser window to the authorization endpoint.
    syntax:
      content: 'function acquireTokenRedirect(userRequest: AuthenticationParameters)'
      parameters:
        - id: userRequest
          type:
            - '@azure/abort-controller.AuthenticationParameters'
          description: ''
    package: '@azure/abort-controller'
  - uid: '@azure/abort-controller.UserAgentApplication.acquireTokenSilent'
    name: acquireTokenSilent(AuthenticationParameters)
    children: []
    type: method
    langs:
      - typeScript
    summary: >
      Use this function to obtain a token before every call to the API /
      resource provider

      MSAL return's a cached token when available

      Or it send's a request to the STS to obtain a new token using a hidden
      iframe.
    syntax:
      content: 'function acquireTokenSilent(userRequest: AuthenticationParameters)'
      parameters:
        - id: userRequest
          type:
            - '@azure/abort-controller.AuthenticationParameters'
          description: ''
      return:
        type:
          - Promise<@azure/abort-controller.AuthResponse>
        description: >-
          - a promise that is fulfilled when this function has completed, or
          rejected if an error was raised. Returns the {@link AuthResponse}
          object
    package: '@azure/abort-controller'
  - uid: '@azure/abort-controller.UserAgentApplication.authority'
    name: authority
    fullName: authority
    children: []
    langs:
      - typeScript
    type: property
    summary: |-
      setter for the authority URL
      Method to manage the authority URL.
    syntax:
      content: string authority
      return:
        type:
          - string
        description: authority
    package: '@azure/abort-controller'
  - uid: '@azure/abort-controller.UserAgentApplication.getAccount'
    name: getAccount()
    children: []
    type: method
    langs:
      - typeScript
    summary: |-
      Returns the signed in account
      (the account object is created at the time of successful login)
      or null when no state is found
    syntax:
      content: function getAccount()
      parameters: []
      return:
        type:
          - '@azure/abort-controller.Account'
        description: '- the account object stored in MSAL'
    package: '@azure/abort-controller'
  - uid: '@azure/abort-controller.UserAgentApplication.getAllAccounts'
    name: getAllAccounts()
    children: []
    type: method
    langs:
      - typeScript
    summary: >-
      Use to get a list of unique accounts in MSAL cache based on
      homeAccountIdentifier.
    syntax:
      content: function getAllAccounts()
      parameters: []
      return:
        type:
          - Array<@azure/abort-controller.Account>
        description: ''
    package: '@azure/abort-controller'
  - uid: '@azure/abort-controller.UserAgentApplication.getAuthorityInstance'
    name: getAuthorityInstance()
    children: []
    type: method
    langs:
      - typeScript
    summary: Get the current authority instance from the MSAL configuration object
    syntax:
      content: function getAuthorityInstance()
      parameters: []
      return:
        type:
          - Authority
        description: authority instance
    package: '@azure/abort-controller'
  - uid: '@azure/abort-controller.UserAgentApplication.getCurrentConfiguration'
    name: getCurrentConfiguration()
    children: []
    type: method
    langs:
      - typeScript
    summary: 'Use to get the current <xref:Configuration> object in MSAL'
    syntax:
      content: function getCurrentConfiguration()
      parameters: []
      return:
        type:
          - '@azure/abort-controller.Configuration'
        description: ''
    package: '@azure/abort-controller'
  - uid: '@azure/abort-controller.UserAgentApplication.getLoginInProgress'
    name: getLoginInProgress()
    children: []
    type: method
    langs:
      - typeScript
    summary: Return boolean flag to developer to help inform if login is in progress
    syntax:
      content: function getLoginInProgress()
      parameters: []
      return:
        type:
          - boolean
        description: true/false
    package: '@azure/abort-controller'
  - uid: '@azure/abort-controller.UserAgentApplication.getPostLogoutRedirectUri'
    name: getPostLogoutRedirectUri()
    children: []
    type: method
    langs:
      - typeScript
    summary: >-
      Use to get the post logout redirect uri configured in MSAL or null.

      Evaluates postLogoutredirectUri if its a function, otherwise simply
      returns its value.
    syntax:
      content: function getPostLogoutRedirectUri()
      parameters: []
      return:
        type:
          - string
        description: post logout redirect URL
    package: '@azure/abort-controller'
  - uid: '@azure/abort-controller.UserAgentApplication.getRedirectUri'
    name: getRedirectUri(string)
    children: []
    type: method
    langs:
      - typeScript
    summary: >-
      Use to get the redirect uri configured in MSAL or null.

      Evaluates redirectUri if its a function, otherwise simply returns its
      value.
    syntax:
      content: 'function getRedirectUri(reqRedirectUri?: string)'
      parameters:
        - id: reqRedirectUri
          type:
            - string
          description: ''
          optional: true
      return:
        type:
          - string
        description: redirect URL
    package: '@azure/abort-controller'
  - uid: '@azure/abort-controller.UserAgentApplication.loginPopup'
    name: loginPopup(AuthenticationParameters)
    children: []
    type: method
    langs:
      - typeScript
    summary: >-
      Use when initiating the login process via opening a popup window in the
      user's browser
    syntax:
      content: 'function loginPopup(userRequest?: AuthenticationParameters)'
      parameters:
        - id: userRequest
          type:
            - '@azure/abort-controller.AuthenticationParameters'
          description: ''
          optional: true
      return:
        type:
          - Promise<@azure/abort-controller.AuthResponse>
        description: >-
          - a promise that is fulfilled when this function has completed, or
          rejected if an error was raised. Returns the {@link AuthResponse}
          object
    package: '@azure/abort-controller'
  - uid: '@azure/abort-controller.UserAgentApplication.loginRedirect'
    name: loginRedirect(AuthenticationParameters)
    children: []
    type: method
    langs:
      - typeScript
    summary: >-
      Use when initiating the login process by redirecting the user's browser to
      the authorization endpoint.
    syntax:
      content: 'function loginRedirect(userRequest?: AuthenticationParameters)'
      parameters:
        - id: userRequest
          type:
            - '@azure/abort-controller.AuthenticationParameters'
          description: ''
          optional: true
    package: '@azure/abort-controller'
  - uid: '@azure/abort-controller.UserAgentApplication.logout'
    name: logout()
    children: []
    type: method
    langs:
      - typeScript
    summary: >-
      Use to log out the current user, and redirect the user to the
      postLogoutRedirectUri.

      Default behaviour is to redirect the user to `window.location.href`.
    syntax:
      content: function logout()
      parameters: []
    package: '@azure/abort-controller'
  - uid: '@azure/abort-controller.UserAgentApplication.urlContainsHash'
    name: urlContainsHash(string)
    children: []
    type: method
    langs:
      - typeScript
    summary: Public API to verify if the URL contains the hash with known properties
    syntax:
      content: 'function urlContainsHash(hash: string)'
      parameters:
        - id: hash
          type:
            - string
          description: |+

      return:
        type:
          - boolean
        description: ''
    package: '@azure/abort-controller'
  - uid: '@azure/abort-controller.UserAgentApplication.constructor'
    name: UserAgentApplication(Configuration)
    children: []
    type: constructor
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'new UserAgentApplication(configuration: Configuration)'
      parameters:
        - id: configuration
          type:
            - '@azure/abort-controller.Configuration'
          description: |
            object for the MSAL UserAgentApplication instance
    package: '@azure/abort-controller'
references:
  - uid: '@azure/abort-controller.Configuration'
    name: Configuration
    spec.typeScript:
      - name: Configuration
        fullName: Configuration
        uid: '@azure/abort-controller.Configuration'
  - uid: '@azure/abort-controller.AuthenticationParameters'
    name: AuthenticationParameters
    spec.typeScript:
      - name: AuthenticationParameters
        fullName: AuthenticationParameters
        uid: '@azure/abort-controller.AuthenticationParameters'
  - uid: Promise<@azure/abort-controller.AuthResponse>
    name: AuthResponse>
    spec.typeScript:
      - name: Promise<
        fullName: Promise<
      - name: AuthResponse
        fullName: AuthResponse
        uid: '@azure/abort-controller.AuthResponse'
      - name: '>'
        fullName: '>'
  - uid: '@azure/abort-controller.Account'
    name: Account
    spec.typeScript:
      - name: Account
        fullName: Account
        uid: '@azure/abort-controller.Account'
  - uid: Array<@azure/abort-controller.Account>
    name: Account>
    spec.typeScript:
      - name: Array<
        fullName: Array<
      - name: Account
        fullName: Account
        uid: '@azure/abort-controller.Account'
      - name: '>'
        fullName: '>'
