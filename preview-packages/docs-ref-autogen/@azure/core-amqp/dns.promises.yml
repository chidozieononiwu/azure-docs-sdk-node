### YamlMime:UniversalReference
items:
  - uid: tslib.dns.promises
    name: promises
    langs:
      - typeScript
    fullName: promises
    children:
      - tslib.dns.promises.getServers
      - tslib.dns.promises.lookup_4
      - tslib.dns.promises.lookup_2
      - tslib.dns.promises.lookup_1
      - tslib.dns.promises.lookup_3
      - tslib.dns.promises.lookup
      - tslib.dns.promises.lookupService
      - tslib.dns.promises.resolve
      - tslib.dns.promises.resolve_1
      - tslib.dns.promises.resolve_2
      - tslib.dns.promises.resolve_3
      - tslib.dns.promises.resolve_4
      - tslib.dns.promises.resolve_5
      - tslib.dns.promises.resolve_6
      - tslib.dns.promises.resolve_7
      - tslib.dns.promises.resolve_8
      - tslib.dns.promises.resolve_9
      - tslib.dns.promises.resolve_10
      - tslib.dns.promises.resolve_11
      - tslib.dns.promises.resolve_12
      - tslib.dns.promises.resolve4
      - tslib.dns.promises.resolve4_2
      - tslib.dns.promises.resolve4_1
      - tslib.dns.promises.resolve6
      - tslib.dns.promises.resolve6_2
      - tslib.dns.promises.resolve6_1
      - tslib.dns.promises.resolveAny
      - tslib.dns.promises.resolveCname
      - tslib.dns.promises.resolveMx
      - tslib.dns.promises.resolveNaptr
      - tslib.dns.promises.resolveNs
      - tslib.dns.promises.resolvePtr
      - tslib.dns.promises.Resolver
      - tslib.dns.promises.resolveSoa
      - tslib.dns.promises.resolveSrv
      - tslib.dns.promises.resolveTxt
      - tslib.dns.promises.reverse
      - tslib.dns.promises.setServers
    type: module
    summary: ''
    package: tslib
  - uid: tslib.dns.promises.getServers
    name: getServers()
    children: []
    type: function
    langs:
      - typeScript
    summary: ''
    syntax:
      content: function getServers()
      parameters: []
      return:
        type:
          - 'string[]'
        description: ''
    package: tslib
  - uid: tslib.dns.promises.lookup_4
    name: lookup(string)
    children: []
    type: function
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function lookup(hostname: string)'
      parameters:
        - id: hostname
          type:
            - string
          description: ''
      return:
        type:
          - Promise<tslib.dns.LookupAddress>
        description: ''
    package: tslib
  - uid: tslib.dns.promises.lookup_2
    name: 'lookup(string, LookupAllOptions)'
    children: []
    type: function
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function lookup(hostname: string, options: LookupAllOptions)'
      parameters:
        - id: hostname
          type:
            - string
          description: ''
        - id: options
          type:
            - tslib.dns.LookupAllOptions
          description: ''
      return:
        type:
          - 'Promise<tslib.dns.LookupAddress[]>'
        description: ''
    package: tslib
  - uid: tslib.dns.promises.lookup_1
    name: 'lookup(string, LookupOneOptions)'
    children: []
    type: function
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function lookup(hostname: string, options: LookupOneOptions)'
      parameters:
        - id: hostname
          type:
            - string
          description: ''
        - id: options
          type:
            - tslib.dns.LookupOneOptions
          description: ''
      return:
        type:
          - Promise<tslib.dns.LookupAddress>
        description: ''
    package: tslib
  - uid: tslib.dns.promises.lookup_3
    name: 'lookup(string, LookupOptions)'
    children: []
    type: function
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function lookup(hostname: string, options: LookupOptions)'
      parameters:
        - id: hostname
          type:
            - string
          description: ''
        - id: options
          type:
            - tslib.dns.LookupOptions
          description: ''
      return:
        type:
          - 'Promise<tslib.dns.LookupAddress | tslib.dns.LookupAddress[]>'
        description: ''
    package: tslib
  - uid: tslib.dns.promises.lookup
    name: 'lookup(string, number)'
    children: []
    type: function
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function lookup(hostname: string, family: number)'
      parameters:
        - id: hostname
          type:
            - string
          description: ''
        - id: family
          type:
            - number
          description: ''
      return:
        type:
          - Promise<tslib.dns.LookupAddress>
        description: ''
    package: tslib
  - uid: tslib.dns.promises.lookupService
    name: 'lookupService(string, number)'
    children: []
    type: function
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function lookupService(address: string, port: number)'
      parameters:
        - id: address
          type:
            - string
          description: ''
        - id: port
          type:
            - number
          description: ''
      return:
        type:
          - Promise<Object>
        description: ''
    package: tslib
  - uid: tslib.dns.promises.resolve
    name: resolve(string)
    children: []
    type: function
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function resolve(hostname: string)'
      parameters:
        - id: hostname
          type:
            - string
          description: ''
      return:
        type:
          - 'Promise<string[]>'
        description: ''
    package: tslib
  - uid: tslib.dns.promises.resolve_1
    name: 'resolve(string, "A")'
    children: []
    type: function
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function resolve(hostname: string, rrtype: "A")'
      parameters:
        - id: hostname
          type:
            - string
          description: ''
        - id: rrtype
          type:
            - '"A"'
          description: ''
      return:
        type:
          - 'Promise<string[]>'
        description: ''
    package: tslib
  - uid: tslib.dns.promises.resolve_2
    name: 'resolve(string, "AAAA")'
    children: []
    type: function
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function resolve(hostname: string, rrtype: "AAAA")'
      parameters:
        - id: hostname
          type:
            - string
          description: ''
        - id: rrtype
          type:
            - '"AAAA"'
          description: ''
      return:
        type:
          - 'Promise<string[]>'
        description: ''
    package: tslib
  - uid: tslib.dns.promises.resolve_3
    name: 'resolve(string, "ANY")'
    children: []
    type: function
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function resolve(hostname: string, rrtype: "ANY")'
      parameters:
        - id: hostname
          type:
            - string
          description: ''
        - id: rrtype
          type:
            - '"ANY"'
          description: ''
      return:
        type:
          - 'Promise<tslib.dns.AnyRecord[]>'
        description: ''
    package: tslib
  - uid: tslib.dns.promises.resolve_4
    name: 'resolve(string, "CNAME")'
    children: []
    type: function
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function resolve(hostname: string, rrtype: "CNAME")'
      parameters:
        - id: hostname
          type:
            - string
          description: ''
        - id: rrtype
          type:
            - '"CNAME"'
          description: ''
      return:
        type:
          - 'Promise<string[]>'
        description: ''
    package: tslib
  - uid: tslib.dns.promises.resolve_5
    name: 'resolve(string, "MX")'
    children: []
    type: function
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function resolve(hostname: string, rrtype: "MX")'
      parameters:
        - id: hostname
          type:
            - string
          description: ''
        - id: rrtype
          type:
            - '"MX"'
          description: ''
      return:
        type:
          - 'Promise<tslib.dns.MxRecord[]>'
        description: ''
    package: tslib
  - uid: tslib.dns.promises.resolve_6
    name: 'resolve(string, "NAPTR")'
    children: []
    type: function
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function resolve(hostname: string, rrtype: "NAPTR")'
      parameters:
        - id: hostname
          type:
            - string
          description: ''
        - id: rrtype
          type:
            - '"NAPTR"'
          description: ''
      return:
        type:
          - 'Promise<tslib.dns.NaptrRecord[]>'
        description: ''
    package: tslib
  - uid: tslib.dns.promises.resolve_7
    name: 'resolve(string, "NS")'
    children: []
    type: function
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function resolve(hostname: string, rrtype: "NS")'
      parameters:
        - id: hostname
          type:
            - string
          description: ''
        - id: rrtype
          type:
            - '"NS"'
          description: ''
      return:
        type:
          - 'Promise<string[]>'
        description: ''
    package: tslib
  - uid: tslib.dns.promises.resolve_8
    name: 'resolve(string, "PTR")'
    children: []
    type: function
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function resolve(hostname: string, rrtype: "PTR")'
      parameters:
        - id: hostname
          type:
            - string
          description: ''
        - id: rrtype
          type:
            - '"PTR"'
          description: ''
      return:
        type:
          - 'Promise<string[]>'
        description: ''
    package: tslib
  - uid: tslib.dns.promises.resolve_9
    name: 'resolve(string, "SOA")'
    children: []
    type: function
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function resolve(hostname: string, rrtype: "SOA")'
      parameters:
        - id: hostname
          type:
            - string
          description: ''
        - id: rrtype
          type:
            - '"SOA"'
          description: ''
      return:
        type:
          - Promise<tslib.dns.SoaRecord>
        description: ''
    package: tslib
  - uid: tslib.dns.promises.resolve_10
    name: 'resolve(string, "SRV")'
    children: []
    type: function
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function resolve(hostname: string, rrtype: "SRV")'
      parameters:
        - id: hostname
          type:
            - string
          description: ''
        - id: rrtype
          type:
            - '"SRV"'
          description: ''
      return:
        type:
          - 'Promise<tslib.dns.SrvRecord[]>'
        description: ''
    package: tslib
  - uid: tslib.dns.promises.resolve_11
    name: 'resolve(string, "TXT")'
    children: []
    type: function
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function resolve(hostname: string, rrtype: "TXT")'
      parameters:
        - id: hostname
          type:
            - string
          description: ''
        - id: rrtype
          type:
            - '"TXT"'
          description: ''
      return:
        type:
          - 'Promise<string[][]>'
        description: ''
    package: tslib
  - uid: tslib.dns.promises.resolve_12
    name: 'resolve(string, string)'
    children: []
    type: function
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function resolve(hostname: string, rrtype: string)'
      parameters:
        - id: hostname
          type:
            - string
          description: ''
        - id: rrtype
          type:
            - string
          description: ''
      return:
        type:
          - >-
            Promise<string[] | tslib.dns.MxRecord[] | tslib.dns.NaptrRecord[] |
            tslib.dns.SoaRecord | tslib.dns.SrvRecord[] | string[][] |
            tslib.dns.AnyRecord[]>
        description: ''
    package: tslib
  - uid: tslib.dns.promises.resolve4
    name: resolve4(string)
    children: []
    type: function
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function resolve4(hostname: string)'
      parameters:
        - id: hostname
          type:
            - string
          description: ''
      return:
        type:
          - 'Promise<string[]>'
        description: ''
    package: tslib
  - uid: tslib.dns.promises.resolve4_2
    name: 'resolve4(string, ResolveOptions)'
    children: []
    type: function
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function resolve4(hostname: string, options: ResolveOptions)'
      parameters:
        - id: hostname
          type:
            - string
          description: ''
        - id: options
          type:
            - tslib.dns.ResolveOptions
          description: ''
      return:
        type:
          - 'Promise<string[] | tslib.dns.RecordWithTtl[]>'
        description: ''
    package: tslib
  - uid: tslib.dns.promises.resolve4_1
    name: 'resolve4(string, ResolveWithTtlOptions)'
    children: []
    type: function
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function resolve4(hostname: string, options: ResolveWithTtlOptions)'
      parameters:
        - id: hostname
          type:
            - string
          description: ''
        - id: options
          type:
            - tslib.dns.ResolveWithTtlOptions
          description: ''
      return:
        type:
          - 'Promise<tslib.dns.RecordWithTtl[]>'
        description: ''
    package: tslib
  - uid: tslib.dns.promises.resolve6
    name: resolve6(string)
    children: []
    type: function
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function resolve6(hostname: string)'
      parameters:
        - id: hostname
          type:
            - string
          description: ''
      return:
        type:
          - 'Promise<string[]>'
        description: ''
    package: tslib
  - uid: tslib.dns.promises.resolve6_2
    name: 'resolve6(string, ResolveOptions)'
    children: []
    type: function
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function resolve6(hostname: string, options: ResolveOptions)'
      parameters:
        - id: hostname
          type:
            - string
          description: ''
        - id: options
          type:
            - tslib.dns.ResolveOptions
          description: ''
      return:
        type:
          - 'Promise<string[] | tslib.dns.RecordWithTtl[]>'
        description: ''
    package: tslib
  - uid: tslib.dns.promises.resolve6_1
    name: 'resolve6(string, ResolveWithTtlOptions)'
    children: []
    type: function
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function resolve6(hostname: string, options: ResolveWithTtlOptions)'
      parameters:
        - id: hostname
          type:
            - string
          description: ''
        - id: options
          type:
            - tslib.dns.ResolveWithTtlOptions
          description: ''
      return:
        type:
          - 'Promise<tslib.dns.RecordWithTtl[]>'
        description: ''
    package: tslib
  - uid: tslib.dns.promises.resolveAny
    name: resolveAny(string)
    children: []
    type: function
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function resolveAny(hostname: string)'
      parameters:
        - id: hostname
          type:
            - string
          description: ''
      return:
        type:
          - 'Promise<tslib.dns.AnyRecord[]>'
        description: ''
    package: tslib
  - uid: tslib.dns.promises.resolveCname
    name: resolveCname(string)
    children: []
    type: function
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function resolveCname(hostname: string)'
      parameters:
        - id: hostname
          type:
            - string
          description: ''
      return:
        type:
          - 'Promise<string[]>'
        description: ''
    package: tslib
  - uid: tslib.dns.promises.resolveMx
    name: resolveMx(string)
    children: []
    type: function
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function resolveMx(hostname: string)'
      parameters:
        - id: hostname
          type:
            - string
          description: ''
      return:
        type:
          - 'Promise<tslib.dns.MxRecord[]>'
        description: ''
    package: tslib
  - uid: tslib.dns.promises.resolveNaptr
    name: resolveNaptr(string)
    children: []
    type: function
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function resolveNaptr(hostname: string)'
      parameters:
        - id: hostname
          type:
            - string
          description: ''
      return:
        type:
          - 'Promise<tslib.dns.NaptrRecord[]>'
        description: ''
    package: tslib
  - uid: tslib.dns.promises.resolveNs
    name: resolveNs(string)
    children: []
    type: function
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function resolveNs(hostname: string)'
      parameters:
        - id: hostname
          type:
            - string
          description: ''
      return:
        type:
          - 'Promise<string[]>'
        description: ''
    package: tslib
  - uid: tslib.dns.promises.resolvePtr
    name: resolvePtr(string)
    children: []
    type: function
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function resolvePtr(hostname: string)'
      parameters:
        - id: hostname
          type:
            - string
          description: ''
      return:
        type:
          - 'Promise<string[]>'
        description: ''
    package: tslib
  - uid: tslib.dns.promises.resolveSoa
    name: resolveSoa(string)
    children: []
    type: function
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function resolveSoa(hostname: string)'
      parameters:
        - id: hostname
          type:
            - string
          description: ''
      return:
        type:
          - Promise<tslib.dns.SoaRecord>
        description: ''
    package: tslib
  - uid: tslib.dns.promises.resolveSrv
    name: resolveSrv(string)
    children: []
    type: function
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function resolveSrv(hostname: string)'
      parameters:
        - id: hostname
          type:
            - string
          description: ''
      return:
        type:
          - 'Promise<tslib.dns.SrvRecord[]>'
        description: ''
    package: tslib
  - uid: tslib.dns.promises.resolveTxt
    name: resolveTxt(string)
    children: []
    type: function
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function resolveTxt(hostname: string)'
      parameters:
        - id: hostname
          type:
            - string
          description: ''
      return:
        type:
          - 'Promise<string[][]>'
        description: ''
    package: tslib
  - uid: tslib.dns.promises.reverse
    name: reverse(string)
    children: []
    type: function
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function reverse(ip: string)'
      parameters:
        - id: ip
          type:
            - string
          description: ''
      return:
        type:
          - 'Promise<string[]>'
        description: ''
    package: tslib
  - uid: tslib.dns.promises.setServers
    name: setServers(ReadonlyArray<string>)
    children: []
    type: function
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function setServers(servers: ReadonlyArray<string>)'
      parameters:
        - id: servers
          type:
            - ReadonlyArray<string>
          description: ''
    package: tslib
references:
  - uid: tslib.dns.promises.getServers
    name: getServers
    spec.typeScript:
      - name: getServers
        fullName: getServers
        uid: tslib.dns.promises.getServers
  - uid: tslib.dns.promises.resolve_12
    name: resolve_12
    spec.typeScript:
      - name: resolve_12
        fullName: resolve_12
        uid: tslib.dns.promises.resolve_12
  - uid: tslib.dns.promises.resolve4_2
    name: resolve4_2
    spec.typeScript:
      - name: resolve4_2
        fullName: resolve4_2
        uid: tslib.dns.promises.resolve4_2
  - uid: tslib.dns.promises.resolve6_2
    name: resolve6_2
    spec.typeScript:
      - name: resolve6_2
        fullName: resolve6_2
        uid: tslib.dns.promises.resolve6_2
  - uid: tslib.dns.promises.resolveAny
    name: resolveAny
    spec.typeScript:
      - name: resolveAny
        fullName: resolveAny
        uid: tslib.dns.promises.resolveAny
  - uid: tslib.dns.promises.resolveCname
    name: resolveCname
    spec.typeScript:
      - name: resolveCname
        fullName: resolveCname
        uid: tslib.dns.promises.resolveCname
  - uid: tslib.dns.promises.resolveMx
    name: resolveMx
    spec.typeScript:
      - name: resolveMx
        fullName: resolveMx
        uid: tslib.dns.promises.resolveMx
  - uid: tslib.dns.promises.resolveNaptr
    name: resolveNaptr
    spec.typeScript:
      - name: resolveNaptr
        fullName: resolveNaptr
        uid: tslib.dns.promises.resolveNaptr
  - uid: tslib.dns.promises.resolveNs
    name: resolveNs
    spec.typeScript:
      - name: resolveNs
        fullName: resolveNs
        uid: tslib.dns.promises.resolveNs
  - uid: tslib.dns.promises.resolvePtr
    name: resolvePtr
    spec.typeScript:
      - name: resolvePtr
        fullName: resolvePtr
        uid: tslib.dns.promises.resolvePtr
  - uid: tslib.dns.promises.resolveSoa
    name: resolveSoa
    spec.typeScript:
      - name: resolveSoa
        fullName: resolveSoa
        uid: tslib.dns.promises.resolveSoa
  - uid: tslib.dns.promises.resolveSrv
    name: resolveSrv
    spec.typeScript:
      - name: resolveSrv
        fullName: resolveSrv
        uid: tslib.dns.promises.resolveSrv
  - uid: tslib.dns.promises.resolveTxt
    name: resolveTxt
    spec.typeScript:
      - name: resolveTxt
        fullName: resolveTxt
        uid: tslib.dns.promises.resolveTxt
  - uid: tslib.dns.promises.reverse
    name: reverse
    spec.typeScript:
      - name: reverse
        fullName: reverse
        uid: tslib.dns.promises.reverse
  - uid: tslib.dns.promises.setServers
    name: setServers
    spec.typeScript:
      - name: setServers
        fullName: setServers
        uid: tslib.dns.promises.setServers
  - uid: Promise<tslib.dns.LookupAddress>
    name: LookupAddress>
    spec.typeScript:
      - name: Promise<
        fullName: Promise<
      - name: LookupAddress
        fullName: LookupAddress
        uid: tslib.dns.LookupAddress
      - name: '>'
        fullName: '>'
  - uid: tslib.dns.LookupOneOptions
    name: LookupOneOptions
    spec.typeScript:
      - name: LookupOneOptions
        fullName: LookupOneOptions
        uid: tslib.dns.LookupOneOptions
  - uid: tslib.dns.LookupAllOptions
    name: LookupAllOptions
    spec.typeScript:
      - name: LookupAllOptions
        fullName: LookupAllOptions
        uid: tslib.dns.LookupAllOptions
  - uid: 'Promise<tslib.dns.LookupAddress[]>'
    name: 'LookupAddress[]>'
    spec.typeScript:
      - name: Promise<
        fullName: Promise<
      - name: LookupAddress
        fullName: LookupAddress
        uid: tslib.dns.LookupAddress
      - name: '[]>'
        fullName: '[]>'
  - uid: tslib.dns.LookupOptions
    name: LookupOptions
    spec.typeScript:
      - name: LookupOptions
        fullName: LookupOptions
        uid: tslib.dns.LookupOptions
  - uid: 'Promise<tslib.dns.LookupAddress | tslib.dns.LookupAddress[]>'
    name: 'LookupAddress[]>'
    spec.typeScript:
      - name: Promise<
        fullName: Promise<
      - name: LookupAddress
        fullName: LookupAddress
        uid: tslib.dns.LookupAddress
      - name: ' | '
        fullName: ' | '
      - name: LookupAddress
        fullName: LookupAddress
        uid: tslib.dns.LookupAddress
      - name: '[]>'
        fullName: '[]>'
  - uid: 'Promise<tslib.dns.AnyRecord[]>'
    name: 'AnyRecord[]>'
    spec.typeScript:
      - name: Promise<
        fullName: Promise<
      - name: AnyRecord
        fullName: AnyRecord
        uid: tslib.dns.AnyRecord
      - name: '[]>'
        fullName: '[]>'
  - uid: 'Promise<tslib.dns.MxRecord[]>'
    name: 'MxRecord[]>'
    spec.typeScript:
      - name: Promise<
        fullName: Promise<
      - name: MxRecord
        fullName: MxRecord
        uid: tslib.dns.MxRecord
      - name: '[]>'
        fullName: '[]>'
  - uid: 'Promise<tslib.dns.NaptrRecord[]>'
    name: 'NaptrRecord[]>'
    spec.typeScript:
      - name: Promise<
        fullName: Promise<
      - name: NaptrRecord
        fullName: NaptrRecord
        uid: tslib.dns.NaptrRecord
      - name: '[]>'
        fullName: '[]>'
  - uid: Promise<tslib.dns.SoaRecord>
    name: SoaRecord>
    spec.typeScript:
      - name: Promise<
        fullName: Promise<
      - name: SoaRecord
        fullName: SoaRecord
        uid: tslib.dns.SoaRecord
      - name: '>'
        fullName: '>'
  - uid: 'Promise<tslib.dns.SrvRecord[]>'
    name: 'SrvRecord[]>'
    spec.typeScript:
      - name: Promise<
        fullName: Promise<
      - name: SrvRecord
        fullName: SrvRecord
        uid: tslib.dns.SrvRecord
      - name: '[]>'
        fullName: '[]>'
  - uid: >-
      Promise<string[] | tslib.dns.MxRecord[] | tslib.dns.NaptrRecord[] |
      tslib.dns.SoaRecord | tslib.dns.SrvRecord[] | string[][] |
      tslib.dns.AnyRecord[]>
    name: 'AnyRecord[]>'
    spec.typeScript:
      - name: 'Promise<string[] | '
        fullName: 'Promise<string[] | '
      - name: MxRecord
        fullName: MxRecord
        uid: tslib.dns.MxRecord
      - name: '[] | '
        fullName: '[] | '
      - name: NaptrRecord
        fullName: NaptrRecord
        uid: tslib.dns.NaptrRecord
      - name: '[] | '
        fullName: '[] | '
      - name: SoaRecord
        fullName: SoaRecord
        uid: tslib.dns.SoaRecord
      - name: ' | '
        fullName: ' | '
      - name: SrvRecord
        fullName: SrvRecord
        uid: tslib.dns.SrvRecord
      - name: '[] | string[][] | '
        fullName: '[] | string[][] | '
      - name: AnyRecord
        fullName: AnyRecord
        uid: tslib.dns.AnyRecord
      - name: '[]>'
        fullName: '[]>'
  - uid: tslib.dns.ResolveWithTtlOptions
    name: ResolveWithTtlOptions
    spec.typeScript:
      - name: ResolveWithTtlOptions
        fullName: ResolveWithTtlOptions
        uid: tslib.dns.ResolveWithTtlOptions
  - uid: 'Promise<tslib.dns.RecordWithTtl[]>'
    name: 'RecordWithTtl[]>'
    spec.typeScript:
      - name: Promise<
        fullName: Promise<
      - name: RecordWithTtl
        fullName: RecordWithTtl
        uid: tslib.dns.RecordWithTtl
      - name: '[]>'
        fullName: '[]>'
  - uid: tslib.dns.ResolveOptions
    name: ResolveOptions
    spec.typeScript:
      - name: ResolveOptions
        fullName: ResolveOptions
        uid: tslib.dns.ResolveOptions
  - uid: 'Promise<string[] | tslib.dns.RecordWithTtl[]>'
    name: 'RecordWithTtl[]>'
    spec.typeScript:
      - name: 'Promise<string[] | '
        fullName: 'Promise<string[] | '
      - name: RecordWithTtl
        fullName: RecordWithTtl
        uid: tslib.dns.RecordWithTtl
      - name: '[]>'
        fullName: '[]>'
  - uid: tslib.dns.getServers
    name: getServers
    spec.typeScript:
      - name: getServers
        fullName: getServers
        uid: tslib.dns.getServers
  - uid: tslib.dns.resolve
    name: resolve
    spec.typeScript:
      - name: resolve
        fullName: resolve
        uid: tslib.dns.resolve
  - uid: tslib.dns.resolve4
    name: resolve4
    spec.typeScript:
      - name: resolve4
        fullName: resolve4
        uid: tslib.dns.resolve4
  - uid: tslib.dns.resolve6
    name: resolve6
    spec.typeScript:
      - name: resolve6
        fullName: resolve6
        uid: tslib.dns.resolve6
  - uid: tslib.dns.resolveAny
    name: resolveAny
    spec.typeScript:
      - name: resolveAny
        fullName: resolveAny
        uid: tslib.dns.resolveAny
  - uid: tslib.dns.resolveCname
    name: resolveCname
    spec.typeScript:
      - name: resolveCname
        fullName: resolveCname
        uid: tslib.dns.resolveCname
  - uid: tslib.dns.resolveMx
    name: resolveMx
    spec.typeScript:
      - name: resolveMx
        fullName: resolveMx
        uid: tslib.dns.resolveMx
  - uid: tslib.dns.resolveNaptr
    name: resolveNaptr
    spec.typeScript:
      - name: resolveNaptr
        fullName: resolveNaptr
        uid: tslib.dns.resolveNaptr
  - uid: tslib.dns.resolveNs
    name: resolveNs
    spec.typeScript:
      - name: resolveNs
        fullName: resolveNs
        uid: tslib.dns.resolveNs
  - uid: tslib.dns.resolvePtr
    name: resolvePtr
    spec.typeScript:
      - name: resolvePtr
        fullName: resolvePtr
        uid: tslib.dns.resolvePtr
  - uid: tslib.dns.resolveSoa
    name: resolveSoa
    spec.typeScript:
      - name: resolveSoa
        fullName: resolveSoa
        uid: tslib.dns.resolveSoa
  - uid: tslib.dns.resolveSrv
    name: resolveSrv
    spec.typeScript:
      - name: resolveSrv
        fullName: resolveSrv
        uid: tslib.dns.resolveSrv
  - uid: tslib.dns.resolveTxt
    name: resolveTxt
    spec.typeScript:
      - name: resolveTxt
        fullName: resolveTxt
        uid: tslib.dns.resolveTxt
  - uid: tslib.dns.reverse
    name: reverse
    spec.typeScript:
      - name: reverse
        fullName: reverse
        uid: tslib.dns.reverse
  - uid: tslib.dns.setServers
    name: setServers
    spec.typeScript:
      - name: setServers
        fullName: setServers
        uid: tslib.dns.setServers
  - uid: tslib.dns.RecordWithTtl
    name: RecordWithTtl
    spec.typeScript:
      - name: RecordWithTtl
        fullName: RecordWithTtl
        uid: tslib.dns.RecordWithTtl
  - uid: tslib.dns.MxRecord
    name: MxRecord
    spec.typeScript:
      - name: MxRecord
        fullName: MxRecord
        uid: tslib.dns.MxRecord
  - uid: tslib.dns.NaptrRecord
    name: NaptrRecord
    spec.typeScript:
      - name: NaptrRecord
        fullName: NaptrRecord
        uid: tslib.dns.NaptrRecord
  - uid: tslib.dns.SoaRecord
    name: SoaRecord
    spec.typeScript:
      - name: SoaRecord
        fullName: SoaRecord
        uid: tslib.dns.SoaRecord
  - uid: tslib.dns.SrvRecord
    name: SrvRecord
    spec.typeScript:
      - name: SrvRecord
        fullName: SrvRecord
        uid: tslib.dns.SrvRecord
  - uid: tslib.dns.promises.lookup_4
    name: lookup_4
  - uid: tslib.dns.promises.lookup_2
    name: lookup_2
  - uid: tslib.dns.promises.lookup_1
    name: lookup_1
  - uid: tslib.dns.promises.lookup_3
    name: lookup_3
  - uid: tslib.dns.promises.lookup
    name: lookup
  - uid: tslib.dns.promises.lookupService
    name: lookupService
  - uid: tslib.dns.promises.resolve
    name: resolve
  - uid: tslib.dns.promises.resolve_1
    name: resolve_1
  - uid: tslib.dns.promises.resolve_2
    name: resolve_2
  - uid: tslib.dns.promises.resolve_3
    name: resolve_3
  - uid: tslib.dns.promises.resolve_4
    name: resolve_4
  - uid: tslib.dns.promises.resolve_5
    name: resolve_5
  - uid: tslib.dns.promises.resolve_6
    name: resolve_6
  - uid: tslib.dns.promises.resolve_7
    name: resolve_7
  - uid: tslib.dns.promises.resolve_8
    name: resolve_8
  - uid: tslib.dns.promises.resolve_9
    name: resolve_9
  - uid: tslib.dns.promises.resolve_10
    name: resolve_10
  - uid: tslib.dns.promises.resolve_11
    name: resolve_11
  - uid: tslib.dns.promises.resolve4
    name: resolve4
  - uid: tslib.dns.promises.resolve4_1
    name: resolve4_1
  - uid: tslib.dns.promises.resolve6
    name: resolve6
  - uid: tslib.dns.promises.resolve6_1
    name: resolve6_1
  - uid: tslib.dns.promises.Resolver
    name: Resolver
