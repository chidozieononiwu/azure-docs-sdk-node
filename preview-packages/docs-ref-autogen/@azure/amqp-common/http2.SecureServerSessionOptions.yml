### YamlMime:UniversalReference
items:
  - uid: '@azure/ms-rest-azure-env.http2.SecureServerSessionOptions'
    name: SecureServerSessionOptions
    fullName: SecureServerSessionOptions
    children:
      - '@azure/ms-rest-azure-env.http2.SecureServerSessionOptions.ALPNProtocols'
      - '@azure/ms-rest-azure-env.http2.SecureServerSessionOptions.ca'
      - '@azure/ms-rest-azure-env.http2.SecureServerSessionOptions.cert'
      - '@azure/ms-rest-azure-env.http2.SecureServerSessionOptions.ciphers'
      - >-
        @azure/ms-rest-azure-env.http2.SecureServerSessionOptions.clientCertEngine
      - >-
        @azure/ms-rest-azure-env.http2.SecureServerSessionOptions.createConnection
      - '@azure/ms-rest-azure-env.http2.SecureServerSessionOptions.crl'
      - '@azure/ms-rest-azure-env.http2.SecureServerSessionOptions.dhparam'
      - '@azure/ms-rest-azure-env.http2.SecureServerSessionOptions.ecdhCurve'
      - '@azure/ms-rest-azure-env.http2.SecureServerSessionOptions.enableTrace'
      - >-
        @azure/ms-rest-azure-env.http2.SecureServerSessionOptions.handshakeTimeout
      - >-
        @azure/ms-rest-azure-env.http2.SecureServerSessionOptions.honorCipherOrder
      - >-
        @azure/ms-rest-azure-env.http2.SecureServerSessionOptions.Http1IncomingMessage
      - >-
        @azure/ms-rest-azure-env.http2.SecureServerSessionOptions.Http1ServerResponse
      - >-
        @azure/ms-rest-azure-env.http2.SecureServerSessionOptions.Http2ServerRequest
      - >-
        @azure/ms-rest-azure-env.http2.SecureServerSessionOptions.Http2ServerResponse
      - '@azure/ms-rest-azure-env.http2.SecureServerSessionOptions.key'
      - >-
        @azure/ms-rest-azure-env.http2.SecureServerSessionOptions.maxDeflateDynamicTableSize
      - >-
        @azure/ms-rest-azure-env.http2.SecureServerSessionOptions.maxHeaderListPairs
      - >-
        @azure/ms-rest-azure-env.http2.SecureServerSessionOptions.maxOutstandingPings
      - >-
        @azure/ms-rest-azure-env.http2.SecureServerSessionOptions.maxReservedRemoteStreams
      - >-
        @azure/ms-rest-azure-env.http2.SecureServerSessionOptions.maxSendHeaderBlockLength
      - >-
        @azure/ms-rest-azure-env.http2.SecureServerSessionOptions.maxSessionMemory
      - '@azure/ms-rest-azure-env.http2.SecureServerSessionOptions.maxVersion'
      - '@azure/ms-rest-azure-env.http2.SecureServerSessionOptions.minVersion'
      - '@azure/ms-rest-azure-env.http2.SecureServerSessionOptions.NPNProtocols'
      - >-
        @azure/ms-rest-azure-env.http2.SecureServerSessionOptions.paddingStrategy
      - '@azure/ms-rest-azure-env.http2.SecureServerSessionOptions.passphrase'
      - >-
        @azure/ms-rest-azure-env.http2.SecureServerSessionOptions.peerMaxConcurrentStreams
      - '@azure/ms-rest-azure-env.http2.SecureServerSessionOptions.pfx'
      - >-
        @azure/ms-rest-azure-env.http2.SecureServerSessionOptions.privateKeyEngine
      - >-
        @azure/ms-rest-azure-env.http2.SecureServerSessionOptions.privateKeyIdentifier
      - '@azure/ms-rest-azure-env.http2.SecureServerSessionOptions.pskCallback'
      - >-
        @azure/ms-rest-azure-env.http2.SecureServerSessionOptions.pskIdentityHint
      - >-
        @azure/ms-rest-azure-env.http2.SecureServerSessionOptions.rejectUnauthorized
      - '@azure/ms-rest-azure-env.http2.SecureServerSessionOptions.requestCert'
      - '@azure/ms-rest-azure-env.http2.SecureServerSessionOptions.secureContext'
      - '@azure/ms-rest-azure-env.http2.SecureServerSessionOptions.secureOptions'
      - '@azure/ms-rest-azure-env.http2.SecureServerSessionOptions.secureProtocol'
      - '@azure/ms-rest-azure-env.http2.SecureServerSessionOptions.selectPadding'
      - >-
        @azure/ms-rest-azure-env.http2.SecureServerSessionOptions.sessionIdContext
      - '@azure/ms-rest-azure-env.http2.SecureServerSessionOptions.sessionTimeout'
      - '@azure/ms-rest-azure-env.http2.SecureServerSessionOptions.settings'
      - '@azure/ms-rest-azure-env.http2.SecureServerSessionOptions.sigalgs'
      - '@azure/ms-rest-azure-env.http2.SecureServerSessionOptions.SNICallback'
      - '@azure/ms-rest-azure-env.http2.SecureServerSessionOptions.ticketKeys'
    langs:
      - typeScript
    type: interface
    summary: ''
    extends:
      name: '@azure/ms-rest-azure-env.http2.ServerSessionOptions'
    package: '@azure/ms-rest-azure-env'
  - uid: '@azure/ms-rest-azure-env.http2.SecureServerSessionOptions.ALPNProtocols'
    name: ALPNProtocols
    fullName: ALPNProtocols
    children: []
    langs:
      - typeScript
    type: property
    summary: |-
      An array of strings or a Buffer naming possible ALPN protocols.
      (Protocols should be ordered by their priority.)
    optional: true
    syntax:
      content: 'ALPNProtocols?: string[] | Uint8Array[] | Uint8Array'
      return:
        type:
          - 'string[] | Uint8Array[] | Uint8Array'
        description: ''
    package: '@azure/ms-rest-azure-env'
  - uid: '@azure/ms-rest-azure-env.http2.SecureServerSessionOptions.ca'
    name: ca
    fullName: ca
    children: []
    langs:
      - typeScript
    type: property
    summary: |-
      Optionally override the trusted CA certificates. Default is to trust
      the well-known CAs curated by Mozilla. Mozilla's CAs are completely
      replaced when CAs are explicitly specified using this option.
    optional: true
    syntax:
      content: 'ca?: string | Buffer | Array<string | Buffer>'
      return:
        type:
          - string | Buffer | Array<string | Buffer>
        description: ''
    package: '@azure/ms-rest-azure-env'
  - uid: '@azure/ms-rest-azure-env.http2.SecureServerSessionOptions.cert'
    name: cert
    fullName: cert
    children: []
    langs:
      - typeScript
    type: property
    summary: |-
      Cert chains in PEM format. One cert chain should be provided per
       private key. Each cert chain should consist of the PEM formatted
       certificate for a provided private key, followed by the PEM
       formatted intermediate certificates (if any), in order, and not
       including the root CA (the root CA must be pre-known to the peer,
       see ca). When providing multiple cert chains, they do not have to
       be in the same order as their private keys in key. If the
       intermediate certificates are not provided, the peer will not be
       able to validate the certificate, and the handshake will fail.
    optional: true
    syntax:
      content: 'cert?: string | Buffer | Array<string | Buffer>'
      return:
        type:
          - string | Buffer | Array<string | Buffer>
        description: ''
    package: '@azure/ms-rest-azure-env'
  - uid: '@azure/ms-rest-azure-env.http2.SecureServerSessionOptions.ciphers'
    name: ciphers
    fullName: ciphers
    children: []
    langs:
      - typeScript
    type: property
    summary: |-
      Cipher suite specification, replacing the default. For more
      information, see modifying the default cipher suite. Permitted
      ciphers can be obtained via tls.getCiphers(). Cipher names must be
      uppercased in order for OpenSSL to accept them.
    optional: true
    syntax:
      content: 'ciphers?: undefined | string'
      return:
        type:
          - undefined | string
        description: ''
    package: '@azure/ms-rest-azure-env'
  - uid: '@azure/ms-rest-azure-env.http2.SecureServerSessionOptions.clientCertEngine'
    name: clientCertEngine
    fullName: clientCertEngine
    children: []
    langs:
      - typeScript
    type: property
    summary: Name of an OpenSSL engine which can provide the client certificate.
    optional: true
    syntax:
      content: 'clientCertEngine?: undefined | string'
      return:
        type:
          - undefined | string
        description: ''
    package: '@azure/ms-rest-azure-env'
  - uid: '@azure/ms-rest-azure-env.http2.SecureServerSessionOptions.createConnection'
    name: 'createConnection(URL, SessionOptions)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function createConnection(authority: URL, option: SessionOptions)'
      parameters:
        - id: authority
          type:
            - '@azure/ms-rest-azure-env.url.URL'
          description: ''
        - id: option
          type:
            - SessionOptions
          description: ''
      return:
        type:
          - stream.Duplex
        description: ''
    package: '@azure/ms-rest-azure-env'
  - uid: '@azure/ms-rest-azure-env.http2.SecureServerSessionOptions.crl'
    name: crl
    fullName: crl
    children: []
    langs:
      - typeScript
    type: property
    summary: PEM formatted CRLs (Certificate Revocation Lists).
    optional: true
    syntax:
      content: 'crl?: string | Buffer | Array<string | Buffer>'
      return:
        type:
          - string | Buffer | Array<string | Buffer>
        description: ''
    package: '@azure/ms-rest-azure-env'
  - uid: '@azure/ms-rest-azure-env.http2.SecureServerSessionOptions.dhparam'
    name: dhparam
    fullName: dhparam
    children: []
    langs:
      - typeScript
    type: property
    summary: |-
      Diffie Hellman parameters, required for Perfect Forward Secrecy. Use
      openssl dhparam to create the parameters. The key length must be
      greater than or equal to 1024 bits or else an error will be thrown.
      Although 1024 bits is permissible, use 2048 bits or larger for
      stronger security. If omitted or invalid, the parameters are
      silently discarded and DHE ciphers will not be available.
    optional: true
    syntax:
      content: 'dhparam?: string | Buffer'
      return:
        type:
          - string | Buffer
        description: ''
    package: '@azure/ms-rest-azure-env'
  - uid: '@azure/ms-rest-azure-env.http2.SecureServerSessionOptions.ecdhCurve'
    name: ecdhCurve
    fullName: ecdhCurve
    children: []
    langs:
      - typeScript
    type: property
    summary: |-
      A string describing a named curve or a colon separated list of curve
      NIDs or names, for example P-521:P-384:P-256, to use for ECDH key
      agreement. Set to auto to select the curve automatically. Use
      crypto.getCurves() to obtain a list of available curve names. On
      recent releases, openssl ecparam -list_curves will also display the
      name and description of each available elliptic curve. Default:
      tls.DEFAULT_ECDH_CURVE.
    optional: true
    syntax:
      content: 'ecdhCurve?: undefined | string'
      return:
        type:
          - undefined | string
        description: ''
    package: '@azure/ms-rest-azure-env'
  - uid: '@azure/ms-rest-azure-env.http2.SecureServerSessionOptions.enableTrace'
    name: enableTrace
    fullName: enableTrace
    children: []
    langs:
      - typeScript
    type: property
    summary: >-
      When enabled, TLS packet trace information is written to `stderr`. This
      can be

      used to debug TLS connection problems.
    optional: true
    syntax:
      content: 'enableTrace?: undefined | false | true'
      return:
        type:
          - undefined | false | true
        description: ''
    package: '@azure/ms-rest-azure-env'
  - uid: '@azure/ms-rest-azure-env.http2.SecureServerSessionOptions.handshakeTimeout'
    name: handshakeTimeout
    fullName: handshakeTimeout
    children: []
    langs:
      - typeScript
    type: property
    summary: |-
      Abort the connection if the SSL/TLS handshake does not finish in the
      specified number of milliseconds. A 'tlsClientError' is emitted on
      the tls.Server object whenever a handshake times out. Default:
      120000 (120 seconds).
    optional: true
    syntax:
      content: 'handshakeTimeout?: undefined | number'
      return:
        type:
          - undefined | number
        description: ''
    package: '@azure/ms-rest-azure-env'
  - uid: '@azure/ms-rest-azure-env.http2.SecureServerSessionOptions.honorCipherOrder'
    name: honorCipherOrder
    fullName: honorCipherOrder
    children: []
    langs:
      - typeScript
    type: property
    summary: |-
      Attempt to use the server's cipher suite preferences instead of the
      client's. When true, causes SSL_OP_CIPHER_SERVER_PREFERENCE to be
      set in secureOptions
    optional: true
    syntax:
      content: 'honorCipherOrder?: undefined | false | true'
      return:
        type:
          - undefined | false | true
        description: ''
    package: '@azure/ms-rest-azure-env'
  - uid: >-
      @azure/ms-rest-azure-env.http2.SecureServerSessionOptions.Http1IncomingMessage
    name: Http1IncomingMessage
    fullName: Http1IncomingMessage
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    optional: true
    syntax:
      content: 'Http1IncomingMessage?: undefined | IncomingMessage'
      return:
        type:
          - undefined | @azure/ms-rest-azure-env.http.IncomingMessage
        description: ''
    package: '@azure/ms-rest-azure-env'
  - uid: >-
      @azure/ms-rest-azure-env.http2.SecureServerSessionOptions.Http1ServerResponse
    name: Http1ServerResponse
    fullName: Http1ServerResponse
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    optional: true
    syntax:
      content: 'Http1ServerResponse?: undefined | ServerResponse'
      return:
        type:
          - undefined | @azure/ms-rest-azure-env.http.ServerResponse
        description: ''
    package: '@azure/ms-rest-azure-env'
  - uid: >-
      @azure/ms-rest-azure-env.http2.SecureServerSessionOptions.Http2ServerRequest
    name: Http2ServerRequest
    fullName: Http2ServerRequest
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    optional: true
    syntax:
      content: 'Http2ServerRequest?: undefined | Http2ServerRequest'
      return:
        type:
          - undefined | @azure/ms-rest-azure-env.http2.Http2ServerRequest
        description: ''
    package: '@azure/ms-rest-azure-env'
  - uid: >-
      @azure/ms-rest-azure-env.http2.SecureServerSessionOptions.Http2ServerResponse
    name: Http2ServerResponse
    fullName: Http2ServerResponse
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    optional: true
    syntax:
      content: 'Http2ServerResponse?: undefined | Http2ServerResponse'
      return:
        type:
          - undefined | @azure/ms-rest-azure-env.http2.Http2ServerResponse
        description: ''
    package: '@azure/ms-rest-azure-env'
  - uid: '@azure/ms-rest-azure-env.http2.SecureServerSessionOptions.key'
    name: key
    fullName: key
    children: []
    langs:
      - typeScript
    type: property
    summary: |-
      Private keys in PEM format. PEM allows the option of private keys
      being encrypted. Encrypted keys will be decrypted with
      options.passphrase. Multiple keys using different algorithms can be
      provided either as an array of unencrypted key strings or buffers,
      or an array of objects in the form {pem: <string|buffer>[,
      passphrase: <string>]}. The object form can only occur in an array.
      object.passphrase is optional. Encrypted keys will be decrypted with
      object.passphrase if provided, or options.passphrase if it is not.
    optional: true
    syntax:
      content: 'key?: string | Buffer | Array<Buffer | KeyObject>'
      return:
        type:
          - >-
            string | Buffer | Array<Buffer |
            @azure/ms-rest-azure-env.tls.KeyObject>
        description: ''
    package: '@azure/ms-rest-azure-env'
  - uid: >-
      @azure/ms-rest-azure-env.http2.SecureServerSessionOptions.maxDeflateDynamicTableSize
    name: maxDeflateDynamicTableSize
    fullName: maxDeflateDynamicTableSize
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    optional: true
    syntax:
      content: 'maxDeflateDynamicTableSize?: undefined | number'
      return:
        type:
          - undefined | number
        description: ''
    package: '@azure/ms-rest-azure-env'
  - uid: >-
      @azure/ms-rest-azure-env.http2.SecureServerSessionOptions.maxHeaderListPairs
    name: maxHeaderListPairs
    fullName: maxHeaderListPairs
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    optional: true
    syntax:
      content: 'maxHeaderListPairs?: undefined | number'
      return:
        type:
          - undefined | number
        description: ''
    package: '@azure/ms-rest-azure-env'
  - uid: >-
      @azure/ms-rest-azure-env.http2.SecureServerSessionOptions.maxOutstandingPings
    name: maxOutstandingPings
    fullName: maxOutstandingPings
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    optional: true
    syntax:
      content: 'maxOutstandingPings?: undefined | number'
      return:
        type:
          - undefined | number
        description: ''
    package: '@azure/ms-rest-azure-env'
  - uid: >-
      @azure/ms-rest-azure-env.http2.SecureServerSessionOptions.maxReservedRemoteStreams
    name: maxReservedRemoteStreams
    fullName: maxReservedRemoteStreams
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    optional: true
    syntax:
      content: 'maxReservedRemoteStreams?: undefined | number'
      return:
        type:
          - undefined | number
        description: ''
    package: '@azure/ms-rest-azure-env'
  - uid: >-
      @azure/ms-rest-azure-env.http2.SecureServerSessionOptions.maxSendHeaderBlockLength
    name: maxSendHeaderBlockLength
    fullName: maxSendHeaderBlockLength
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    optional: true
    syntax:
      content: 'maxSendHeaderBlockLength?: undefined | number'
      return:
        type:
          - undefined | number
        description: ''
    package: '@azure/ms-rest-azure-env'
  - uid: '@azure/ms-rest-azure-env.http2.SecureServerSessionOptions.maxSessionMemory'
    name: maxSessionMemory
    fullName: maxSessionMemory
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    optional: true
    syntax:
      content: 'maxSessionMemory?: undefined | number'
      return:
        type:
          - undefined | number
        description: ''
    package: '@azure/ms-rest-azure-env'
  - uid: '@azure/ms-rest-azure-env.http2.SecureServerSessionOptions.maxVersion'
    name: maxVersion
    fullName: maxVersion
    children: []
    langs:
      - typeScript
    type: property
    summary: >-
      Optionally set the maximum TLS version to allow. One

      of `'TLSv1.3'`, `'TLSv1.2'`, `'TLSv1.1'`, or `'TLSv1'`. Cannot be
      specified along with the

      `secureProtocol` option, use one or the other.

      **Default:** `'TLSv1.3'`, unless changed using CLI options. Using

      `--tls-max-v1.2` sets the default to `'TLSv1.2'`. Using `--tls-max-v1.3`
      sets the default to

      `'TLSv1.3'`. If multiple of the options are provided, the highest maximum
      is used.
    optional: true
    syntax:
      content: 'maxVersion?: SecureVersion'
      return:
        type:
          - '@azure/ms-rest-azure-env.tls.SecureVersion'
        description: ''
    package: '@azure/ms-rest-azure-env'
  - uid: '@azure/ms-rest-azure-env.http2.SecureServerSessionOptions.minVersion'
    name: minVersion
    fullName: minVersion
    children: []
    langs:
      - typeScript
    type: property
    summary: >-
      Optionally set the minimum TLS version to allow. One

      of `'TLSv1.3'`, `'TLSv1.2'`, `'TLSv1.1'`, or `'TLSv1'`. Cannot be
      specified along with the

      `secureProtocol` option, use one or the other.  It is not recommended to
      use

      less than TLSv1.2, but it may be required for interoperability.

      **Default:** `'TLSv1.2'`, unless changed using CLI options. Using

      `--tls-v1.0` sets the default to `'TLSv1'`. Using `--tls-v1.1` sets the
      default to

      `'TLSv1.1'`. Using `--tls-min-v1.3` sets the default to

      'TLSv1.3'. If multiple of the options are provided, the lowest minimum is
      used.
    optional: true
    syntax:
      content: 'minVersion?: SecureVersion'
      return:
        type:
          - '@azure/ms-rest-azure-env.tls.SecureVersion'
        description: ''
    package: '@azure/ms-rest-azure-env'
  - uid: '@azure/ms-rest-azure-env.http2.SecureServerSessionOptions.NPNProtocols'
    name: NPNProtocols
    fullName: NPNProtocols
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    optional: true
    syntax:
      content: 'NPNProtocols?: string[] | Buffer[] | Uint8Array[] | Buffer | Uint8Array'
      return:
        type:
          - 'string[] | Buffer[] | Uint8Array[] | Buffer | Uint8Array'
        description: ''
    package: '@azure/ms-rest-azure-env'
  - uid: '@azure/ms-rest-azure-env.http2.SecureServerSessionOptions.paddingStrategy'
    name: paddingStrategy
    fullName: paddingStrategy
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    optional: true
    syntax:
      content: 'paddingStrategy?: undefined | number'
      return:
        type:
          - undefined | number
        description: ''
    package: '@azure/ms-rest-azure-env'
  - uid: '@azure/ms-rest-azure-env.http2.SecureServerSessionOptions.passphrase'
    name: passphrase
    fullName: passphrase
    children: []
    langs:
      - typeScript
    type: property
    summary: Shared passphrase used for a single private key and/or a PFX.
    optional: true
    syntax:
      content: 'passphrase?: undefined | string'
      return:
        type:
          - undefined | string
        description: ''
    package: '@azure/ms-rest-azure-env'
  - uid: >-
      @azure/ms-rest-azure-env.http2.SecureServerSessionOptions.peerMaxConcurrentStreams
    name: peerMaxConcurrentStreams
    fullName: peerMaxConcurrentStreams
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    optional: true
    syntax:
      content: 'peerMaxConcurrentStreams?: undefined | number'
      return:
        type:
          - undefined | number
        description: ''
    package: '@azure/ms-rest-azure-env'
  - uid: '@azure/ms-rest-azure-env.http2.SecureServerSessionOptions.pfx'
    name: pfx
    fullName: pfx
    children: []
    langs:
      - typeScript
    type: property
    summary: |-
      PFX or PKCS12 encoded private key and certificate chain. pfx is an
      alternative to providing key and cert individually. PFX is usually
      encrypted, if it is, passphrase will be used to decrypt it. Multiple
      PFX can be provided either as an array of unencrypted PFX buffers,
      or an array of objects in the form {buf: <string|buffer>[,
      passphrase: <string>]}. The object form can only occur in an array.
      object.passphrase is optional. Encrypted PFX will be decrypted with
      object.passphrase if provided, or options.passphrase if it is not.
    optional: true
    syntax:
      content: 'pfx?: string | Buffer | Array<string | Buffer | PxfObject>'
      return:
        type:
          - >-
            string | Buffer | Array<string | Buffer |
            @azure/ms-rest-azure-env.tls.PxfObject>
        description: ''
    package: '@azure/ms-rest-azure-env'
  - uid: '@azure/ms-rest-azure-env.http2.SecureServerSessionOptions.privateKeyEngine'
    name: privateKeyEngine
    fullName: privateKeyEngine
    children: []
    langs:
      - typeScript
    type: property
    summary: |-
      Name of an OpenSSL engine to get private key from. Should be used
      together with privateKeyIdentifier.
    optional: true
    syntax:
      content: 'privateKeyEngine?: undefined | string'
      return:
        type:
          - undefined | string
        description: ''
    package: '@azure/ms-rest-azure-env'
  - uid: >-
      @azure/ms-rest-azure-env.http2.SecureServerSessionOptions.privateKeyIdentifier
    name: privateKeyIdentifier
    fullName: privateKeyIdentifier
    children: []
    langs:
      - typeScript
    type: property
    summary: |-
      Identifier of a private key managed by an OpenSSL engine. Should be
      used together with privateKeyEngine. Should not be set together with
      key, because both options define a private key in different ways.
    optional: true
    syntax:
      content: 'privateKeyIdentifier?: undefined | string'
      return:
        type:
          - undefined | string
        description: ''
    package: '@azure/ms-rest-azure-env'
  - uid: '@azure/ms-rest-azure-env.http2.SecureServerSessionOptions.pskCallback'
    name: 'pskCallback(TLSSocket, string)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function pskCallback(socket: TLSSocket, identity: string)'
      parameters:
        - id: socket
          type:
            - '@azure/ms-rest-azure-env.tls.TLSSocket'
          description: ''
        - id: identity
          type:
            - string
          description: identity parameter sent from the client.
      return:
        type:
          - DataView | @azure/ms-rest-azure-env.NodeJS.TypedArray | null
        description: >-
          pre-shared key that must either be

          a buffer or `null` to stop the negotiation process. Returned PSK must
          be

          compatible with the selected cipher's digest.


          When negotiating TLS-PSK (pre-shared keys), this function is called

          with the identity provided by the client.

          If the return value is `null` the negotiation process will stop and an

          "unknown_psk_identity" alert message will be sent to the other party.

          If the server wishes to hide the fact that the PSK identity was not
          known,

          the callback must provide some random data as `psk` to make the
          connection

          fail with "decrypt_error" before negotiation is finished.

          PSK ciphers are disabled by default, and using TLS-PSK thus

          requires explicitly specifying a cipher suite with the `ciphers`
          option.

          More information can be found in the RFC 4279.
    package: '@azure/ms-rest-azure-env'
  - uid: '@azure/ms-rest-azure-env.http2.SecureServerSessionOptions.pskIdentityHint'
    name: pskIdentityHint
    fullName: pskIdentityHint
    children: []
    langs:
      - typeScript
    type: property
    summary: |-
      hint to send to a client to help
      with selecting the identity during TLS-PSK negotiation. Will be ignored
      in TLS 1.3. Upon failing to set pskIdentityHint `tlsClientError` will be
      emitted with `ERR_TLS_PSK_SET_IDENTIY_HINT_FAILED` code.
    optional: true
    syntax:
      content: 'pskIdentityHint?: undefined | string'
      return:
        type:
          - undefined | string
        description: ''
    package: '@azure/ms-rest-azure-env'
  - uid: >-
      @azure/ms-rest-azure-env.http2.SecureServerSessionOptions.rejectUnauthorized
    name: rejectUnauthorized
    fullName: rejectUnauthorized
    children: []
    langs:
      - typeScript
    type: property
    summary: |-
      If true the server will reject any connection which is not
      authorized with the list of supplied CAs. This option only has an
      effect if requestCert is true.
    optional: true
    syntax:
      content: 'rejectUnauthorized?: undefined | false | true'
      return:
        type:
          - undefined | false | true
        description: ''
    package: '@azure/ms-rest-azure-env'
  - uid: '@azure/ms-rest-azure-env.http2.SecureServerSessionOptions.requestCert'
    name: requestCert
    fullName: requestCert
    children: []
    langs:
      - typeScript
    type: property
    summary: |-
      If true the server will request a certificate from clients that
      connect and attempt to verify that certificate. Defaults to
      false.
    optional: true
    syntax:
      content: 'requestCert?: undefined | false | true'
      return:
        type:
          - undefined | false | true
        description: ''
    package: '@azure/ms-rest-azure-env'
  - uid: '@azure/ms-rest-azure-env.http2.SecureServerSessionOptions.secureContext'
    name: secureContext
    fullName: secureContext
    children: []
    langs:
      - typeScript
    type: property
    summary: An optional TLS context object from tls.createSecureContext()
    optional: true
    syntax:
      content: 'secureContext?: SecureContext'
      return:
        type:
          - '@azure/ms-rest-azure-env.tls.SecureContext'
        description: ''
    package: '@azure/ms-rest-azure-env'
  - uid: '@azure/ms-rest-azure-env.http2.SecureServerSessionOptions.secureOptions'
    name: secureOptions
    fullName: secureOptions
    children: []
    langs:
      - typeScript
    type: property
    summary: |-
      Optionally affect the OpenSSL protocol behavior, which is not
      usually necessary. This should be used carefully if at all! Value is
      a numeric bitmask of the SSL_OP_* options from OpenSSL Options
    optional: true
    syntax:
      content: 'secureOptions?: undefined | number'
      return:
        type:
          - undefined | number
        description: ''
    package: '@azure/ms-rest-azure-env'
  - uid: '@azure/ms-rest-azure-env.http2.SecureServerSessionOptions.secureProtocol'
    name: secureProtocol
    fullName: secureProtocol
    children: []
    langs:
      - typeScript
    type: property
    summary: |-
      Legacy mechanism to select the TLS protocol version to use, it does
      not support independent control of the minimum and maximum version,
      and does not support limiting the protocol to TLSv1.3. Use
      minVersion and maxVersion instead. The possible values are listed as
      SSL_METHODS, use the function names as strings. For example, use
      'TLSv1_1_method' to force TLS version 1.1, or 'TLS_method' to allow
      any TLS protocol version up to TLSv1.3. It is not recommended to use
      TLS versions less than 1.2, but it may be required for
      interoperability. Default: none, see minVersion.
    optional: true
    syntax:
      content: 'secureProtocol?: undefined | string'
      return:
        type:
          - undefined | string
        description: ''
    package: '@azure/ms-rest-azure-env'
  - uid: '@azure/ms-rest-azure-env.http2.SecureServerSessionOptions.selectPadding'
    name: 'selectPadding(number, number)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function selectPadding(frameLen: number, maxFrameLen: number)'
      parameters:
        - id: frameLen
          type:
            - number
          description: ''
        - id: maxFrameLen
          type:
            - number
          description: ''
      return:
        type:
          - number
        description: ''
    package: '@azure/ms-rest-azure-env'
  - uid: '@azure/ms-rest-azure-env.http2.SecureServerSessionOptions.sessionIdContext'
    name: sessionIdContext
    fullName: sessionIdContext
    children: []
    langs:
      - typeScript
    type: property
    summary: |-
      Opaque identifier used by servers to ensure session state is not
      shared between applications. Unused by clients.
    optional: true
    syntax:
      content: 'sessionIdContext?: undefined | string'
      return:
        type:
          - undefined | string
        description: ''
    package: '@azure/ms-rest-azure-env'
  - uid: '@azure/ms-rest-azure-env.http2.SecureServerSessionOptions.sessionTimeout'
    name: sessionTimeout
    fullName: sessionTimeout
    children: []
    langs:
      - typeScript
    type: property
    summary: |-
      The number of seconds after which a TLS session created by the
      server will no longer be resumable. See Session Resumption for more
      information. Default: 300.
    optional: true
    syntax:
      content: 'sessionTimeout?: undefined | number'
      return:
        type:
          - undefined | number
        description: ''
    package: '@azure/ms-rest-azure-env'
  - uid: '@azure/ms-rest-azure-env.http2.SecureServerSessionOptions.settings'
    name: settings
    fullName: settings
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    optional: true
    syntax:
      content: 'settings?: Settings'
      return:
        type:
          - '@azure/ms-rest-azure-env.http2.Settings'
        description: ''
    package: '@azure/ms-rest-azure-env'
  - uid: '@azure/ms-rest-azure-env.http2.SecureServerSessionOptions.sigalgs'
    name: sigalgs
    fullName: sigalgs
    children: []
    langs:
      - typeScript
    type: property
    summary: |-
      Colon-separated list of supported signature algorithms. The list
       can contain digest algorithms (SHA256, MD5 etc.), public key
       algorithms (RSA-PSS, ECDSA etc.), combination of both (e.g
       'RSA+SHA384') or TLS v1.3 scheme names (e.g. rsa_pss_pss_sha512).
    optional: true
    syntax:
      content: 'sigalgs?: undefined | string'
      return:
        type:
          - undefined | string
        description: ''
    package: '@azure/ms-rest-azure-env'
  - uid: '@azure/ms-rest-azure-env.http2.SecureServerSessionOptions.SNICallback'
    name: SNICallback
    fullName: SNICallback
    children: []
    langs:
      - typeScript
    type: property
    summary: |-
      SNICallback(servername, cb) <Function> A function that will be
      called if the client supports SNI TLS extension. Two arguments
      will be passed when called: servername and cb. SNICallback should
      invoke cb(null, ctx), where ctx is a SecureContext instance.
      (tls.createSecureContext(...) can be used to get a proper
      SecureContext.) If SNICallback wasn't provided the default callback
      with high-level API will be used (see below).
    optional: true
    syntax:
      content: >-
        SNICallback?: undefined | (servername: string, cb: (err: Error | null,
        ctx: SecureContext) => void) => void
      return:
        type:
          - >-
            undefined | (servername: string, cb: (err: Error | null, ctx:
            SecureContext) => void) => void
        description: ''
    package: '@azure/ms-rest-azure-env'
  - uid: '@azure/ms-rest-azure-env.http2.SecureServerSessionOptions.ticketKeys'
    name: ticketKeys
    fullName: ticketKeys
    children: []
    langs:
      - typeScript
    type: property
    summary: 48-bytes of cryptographically strong pseudo-random data.
    optional: true
    syntax:
      content: 'ticketKeys?: Buffer'
      return:
        type:
          - '@azure/ms-rest-azure-env.Buffer'
        description: ''
    package: '@azure/ms-rest-azure-env'
references:
  - uid: '@azure/ms-rest-azure-env.stream.internal.Readable'
    name: Readable
    spec.typeScript:
      - name: Readable
        fullName: Readable
        uid: '@azure/ms-rest-azure-env.stream.internal.Readable'
  - uid: >-
      @azure/ms-rest-azure-env.net.Socket |
      @azure/ms-rest-azure-env.tls.TLSSocket
    name: TLSSocket
    spec.typeScript:
      - name: Socket
        fullName: Socket
        uid: '@azure/ms-rest-azure-env.net.Socket'
      - name: ' | '
        fullName: ' | '
      - name: TLSSocket
        fullName: TLSSocket
        uid: '@azure/ms-rest-azure-env.tls.TLSSocket'
  - uid: '@azure/ms-rest-azure-env.Error'
    name: Error
    spec.typeScript:
      - name: Error
        fullName: Error
        uid: '@azure/ms-rest-azure-env.Error'
  - uid: '@azure/ms-rest-azure-env.NodeJS.WritableStream'
    name: WritableStream
    spec.typeScript:
      - name: WritableStream
        fullName: WritableStream
        uid: '@azure/ms-rest-azure-env.NodeJS.WritableStream'
  - uid: '@azure/ms-rest-azure-env.BufferEncoding'
    name: BufferEncoding
    spec.typeScript:
      - name: BufferEncoding
        fullName: BufferEncoding
        uid: '@azure/ms-rest-azure-env.BufferEncoding'
  - uid: '@azure/ms-rest-azure-env.stream.internal.ReadableOptions'
    name: ReadableOptions
    spec.typeScript:
      - name: ReadableOptions
        fullName: ReadableOptions
        uid: '@azure/ms-rest-azure-env.stream.internal.ReadableOptions'
  - uid: '@azure/ms-rest-azure-env.stream.internal.Stream'
    name: Stream
    spec.typeScript:
      - name: Stream
        fullName: Stream
        uid: '@azure/ms-rest-azure-env.stream.internal.Stream'
  - uid: '@azure/ms-rest-azure-env.http.OutgoingHttpHeaders'
    name: OutgoingHttpHeaders
    spec.typeScript:
      - name: OutgoingHttpHeaders
        fullName: OutgoingHttpHeaders
        uid: '@azure/ms-rest-azure-env.http.OutgoingHttpHeaders'
  - uid: '@azure/ms-rest-azure-env.NodeJS.ArrayBufferView'
    name: ArrayBufferView
    spec.typeScript:
      - name: ArrayBufferView
        fullName: ArrayBufferView
        uid: '@azure/ms-rest-azure-env.NodeJS.ArrayBufferView'
  - uid: '@azure/ms-rest-azure-env.http2.ClientSessionRequestOptions'
    name: ClientSessionRequestOptions
    spec.typeScript:
      - name: ClientSessionRequestOptions
        fullName: ClientSessionRequestOptions
        uid: '@azure/ms-rest-azure-env.http2.ClientSessionRequestOptions'
  - uid: '@azure/ms-rest-azure-env.http2.SessionShutdownOptions'
    name: SessionShutdownOptions
    spec.typeScript:
      - name: SessionShutdownOptions
        fullName: SessionShutdownOptions
        uid: '@azure/ms-rest-azure-env.http2.SessionShutdownOptions'
  - uid: '@azure/ms-rest-azure-env.stream.internal.DuplexOptions'
    name: DuplexOptions
    spec.typeScript:
      - name: DuplexOptions
        fullName: DuplexOptions
        uid: '@azure/ms-rest-azure-env.stream.internal.DuplexOptions'
  - uid: '@azure/ms-rest-azure-env.tls.Server'
    name: Server
    spec.typeScript:
      - name: Server
        fullName: Server
        uid: '@azure/ms-rest-azure-env.tls.Server'
  - uid: '@azure/ms-rest-azure-env.net.AddressInfo | string | null'
    name: AddressInfo | string | null
    spec.typeScript:
      - name: AddressInfo
        fullName: AddressInfo
        uid: '@azure/ms-rest-azure-env.net.AddressInfo'
      - name: ' | string | null'
        fullName: ' | string | null'
  - uid: '@azure/ms-rest-azure-env.http2.Http2ServerRequest'
    name: Http2ServerRequest
    spec.typeScript:
      - name: Http2ServerRequest
        fullName: Http2ServerRequest
        uid: '@azure/ms-rest-azure-env.http2.Http2ServerRequest'
  - uid: '@azure/ms-rest-azure-env.http2.Http2ServerResponse'
    name: Http2ServerResponse
    spec.typeScript:
      - name: Http2ServerResponse
        fullName: Http2ServerResponse
        uid: '@azure/ms-rest-azure-env.http2.Http2ServerResponse'
  - uid: '@azure/ms-rest-azure-env.tls.TLSSocket'
    name: TLSSocket
    spec.typeScript:
      - name: TLSSocket
        fullName: TLSSocket
        uid: '@azure/ms-rest-azure-env.tls.TLSSocket'
  - uid: '@azure/ms-rest-azure-env.net.Server'
    name: Server
    spec.typeScript:
      - name: Server
        fullName: Server
        uid: '@azure/ms-rest-azure-env.net.Server'
  - uid: '@azure/ms-rest-azure-env.events.EventEmitter.EventEmitter'
    name: EventEmitter
    spec.typeScript:
      - name: EventEmitter
        fullName: EventEmitter
        uid: '@azure/ms-rest-azure-env.events.EventEmitter.EventEmitter'
  - uid: '@azure/ms-rest-azure-env.events.EventEmitterOptions'
    name: EventEmitterOptions
    spec.typeScript:
      - name: EventEmitterOptions
        fullName: EventEmitterOptions
        uid: '@azure/ms-rest-azure-env.events.EventEmitterOptions'
  - uid: '@azure/ms-rest-azure-env.stream.internal.Duplex'
    name: Duplex
    spec.typeScript:
      - name: Duplex
        fullName: Duplex
        uid: '@azure/ms-rest-azure-env.stream.internal.Duplex'
  - uid: '@azure/ms-rest-azure-env.http2.ClientSessionOptions'
    name: ClientSessionOptions
    spec.typeScript:
      - name: ClientSessionOptions
        fullName: ClientSessionOptions
        uid: '@azure/ms-rest-azure-env.http2.ClientSessionOptions'
  - uid: string | Buffer | Array<Buffer | @azure/ms-rest-azure-env.tls.KeyObject>
    name: KeyObject>
    spec.typeScript:
      - name: 'string | Buffer | Array<Buffer | '
        fullName: 'string | Buffer | Array<Buffer | '
      - name: KeyObject
        fullName: KeyObject
        uid: '@azure/ms-rest-azure-env.tls.KeyObject'
      - name: '>'
        fullName: '>'
  - uid: '@azure/ms-rest-azure-env.tls.SecureVersion'
    name: SecureVersion
    spec.typeScript:
      - name: SecureVersion
        fullName: SecureVersion
        uid: '@azure/ms-rest-azure-env.tls.SecureVersion'
  - uid: >-
      string | Buffer | Array<string | Buffer |
      @azure/ms-rest-azure-env.tls.PxfObject>
    name: PxfObject>
    spec.typeScript:
      - name: 'string | Buffer | Array<string | Buffer | '
        fullName: 'string | Buffer | Array<string | Buffer | '
      - name: PxfObject
        fullName: PxfObject
        uid: '@azure/ms-rest-azure-env.tls.PxfObject'
      - name: '>'
        fullName: '>'
  - uid: '@azure/ms-rest-azure-env.tls.SecureContext'
    name: SecureContext
    spec.typeScript:
      - name: SecureContext
        fullName: SecureContext
        uid: '@azure/ms-rest-azure-env.tls.SecureContext'
  - uid: '@azure/ms-rest-azure-env.Buffer'
    name: Buffer
    spec.typeScript:
      - name: Buffer
        fullName: Buffer
        uid: '@azure/ms-rest-azure-env.Buffer'
  - uid: '@azure/ms-rest-azure-env.http2.Settings'
    name: Settings
    spec.typeScript:
      - name: Settings
        fullName: Settings
        uid: '@azure/ms-rest-azure-env.http2.Settings'
  - uid: '@azure/ms-rest-azure-env.tls.PSKCallbackNegotation | null'
    name: PSKCallbackNegotation | null
    spec.typeScript:
      - name: PSKCallbackNegotation
        fullName: PSKCallbackNegotation
        uid: '@azure/ms-rest-azure-env.tls.PSKCallbackNegotation'
      - name: ' | null'
        fullName: ' | null'
  - uid: undefined | @azure/ms-rest-azure-env.http.IncomingMessage
    name: IncomingMessage
    spec.typeScript:
      - name: 'undefined | '
        fullName: 'undefined | '
      - name: IncomingMessage
        fullName: IncomingMessage
        uid: '@azure/ms-rest-azure-env.http.IncomingMessage'
  - uid: undefined | @azure/ms-rest-azure-env.http.ServerResponse
    name: ServerResponse
    spec.typeScript:
      - name: 'undefined | '
        fullName: 'undefined | '
      - name: ServerResponse
        fullName: ServerResponse
        uid: '@azure/ms-rest-azure-env.http.ServerResponse'
  - uid: undefined | @azure/ms-rest-azure-env.http2.Http2ServerRequest
    name: Http2ServerRequest
    spec.typeScript:
      - name: 'undefined | '
        fullName: 'undefined | '
      - name: Http2ServerRequest
        fullName: Http2ServerRequest
        uid: '@azure/ms-rest-azure-env.http2.Http2ServerRequest'
  - uid: undefined | @azure/ms-rest-azure-env.http2.Http2ServerResponse
    name: Http2ServerResponse
    spec.typeScript:
      - name: 'undefined | '
        fullName: 'undefined | '
      - name: Http2ServerResponse
        fullName: Http2ServerResponse
        uid: '@azure/ms-rest-azure-env.http2.Http2ServerResponse'
  - uid: '@azure/ms-rest-azure-env.url.URL'
    name: URL
    spec.typeScript:
      - name: URL
        fullName: URL
        uid: '@azure/ms-rest-azure-env.url.URL'
  - uid: DataView | @azure/ms-rest-azure-env.NodeJS.TypedArray | null
    name: TypedArray | null
    spec.typeScript:
      - name: 'DataView | '
        fullName: 'DataView | '
      - name: TypedArray
        fullName: TypedArray
        uid: '@azure/ms-rest-azure-env.NodeJS.TypedArray'
      - name: ' | null'
        fullName: ' | null'
  - uid: '@azure/ms-rest-azure-env.http2.ServerSessionOptions'
    name: ServerSessionOptions
    spec.typeScript:
      - name: ServerSessionOptions
        fullName: ServerSessionOptions
        uid: '@azure/ms-rest-azure-env.http2.ServerSessionOptions'
  - uid: '@azure/ms-rest-azure-env.http2.StreamPriorityOptions'
    name: StreamPriorityOptions
    spec.typeScript:
      - name: StreamPriorityOptions
        fullName: StreamPriorityOptions
        uid: '@azure/ms-rest-azure-env.http2.StreamPriorityOptions'
  - uid: '@azure/ms-rest-azure-env.http2.ServerStreamResponseOptions'
    name: ServerStreamResponseOptions
    spec.typeScript:
      - name: ServerStreamResponseOptions
        fullName: ServerStreamResponseOptions
        uid: '@azure/ms-rest-azure-env.http2.ServerStreamResponseOptions'
  - uid: '@azure/ms-rest-azure-env.http2.ServerStreamFileResponseOptions'
    name: ServerStreamFileResponseOptions
    spec.typeScript:
      - name: ServerStreamFileResponseOptions
        fullName: ServerStreamFileResponseOptions
        uid: '@azure/ms-rest-azure-env.http2.ServerStreamFileResponseOptions'
  - uid: '@azure/ms-rest-azure-env.http2.ServerStreamFileResponseOptionsWithError'
    name: ServerStreamFileResponseOptionsWithError
    spec.typeScript:
      - name: ServerStreamFileResponseOptionsWithError
        fullName: ServerStreamFileResponseOptionsWithError
        uid: >-
          @azure/ms-rest-azure-env.http2.ServerStreamFileResponseOptionsWithError
  - uid: '@azure/ms-rest-azure-env.fs.Stats'
    name: Stats
    spec.typeScript:
      - name: Stats
        fullName: Stats
        uid: '@azure/ms-rest-azure-env.fs.Stats'
  - uid: string | @azure/ms-rest-azure-env.url.URL
    name: URL
    spec.typeScript:
      - name: 'string | '
        fullName: 'string | '
      - name: URL
        fullName: URL
        uid: '@azure/ms-rest-azure-env.url.URL'
  - uid: >-
      @azure/ms-rest-azure-env.http2.ClientSessionOptions |
      SecureClientSessionOptions
    name: ClientSessionOptions | SecureClientSessionOptions
    spec.typeScript:
      - name: ClientSessionOptions
        fullName: ClientSessionOptions
        uid: '@azure/ms-rest-azure-env.http2.ClientSessionOptions'
      - name: ' | SecureClientSessionOptions'
        fullName: ' | SecureClientSessionOptions'
