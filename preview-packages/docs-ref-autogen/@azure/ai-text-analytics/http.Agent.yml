### YamlMime:UniversalReference
items:
  - uid: '@azure/abort-controller.http.Agent'
    name: Agent
    fullName: Agent
    children:
      - '@azure/abort-controller.http.Agent.constructor'
      - '@azure/abort-controller.http.Agent.destroy'
      - '@azure/abort-controller.http.Agent.maxFreeSockets'
      - '@azure/abort-controller.http.Agent.maxSockets'
      - '@azure/abort-controller.http.Agent.requests'
      - '@azure/abort-controller.http.Agent.sockets'
    langs:
      - typeScript
    type: class
    summary: ''
    package: '@azure/abort-controller'
  - uid: '@azure/abort-controller.http.Agent.constructor'
    name: Agent(AgentOptions)
    children: []
    type: constructor
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'new Agent(opts?: AgentOptions)'
      parameters:
        - id: opts
          type:
            - '@azure/abort-controller.http.AgentOptions'
          description: ''
          optional: true
    package: '@azure/abort-controller'
  - uid: '@azure/abort-controller.http.Agent.destroy'
    name: destroy()
    children: []
    type: method
    langs:
      - typeScript
    summary: >-
      Destroy any sockets that are currently in use by the agent.

      It is usually not necessary to do this. However, if you are using an agent
      with KeepAlive enabled,

      then it is best to explicitly shut down the agent when you know that it
      will no longer be used. Otherwise,

      sockets may hang open for quite a long time before the server terminates
      them.
    syntax:
      content: function destroy()
      parameters: []
    package: '@azure/abort-controller'
  - uid: '@azure/abort-controller.http.Agent.maxFreeSockets'
    name: maxFreeSockets
    fullName: maxFreeSockets
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    syntax:
      content: 'maxFreeSockets: number'
      return:
        type:
          - number
        description: ''
    package: '@azure/abort-controller'
  - uid: '@azure/abort-controller.http.Agent.maxSockets'
    name: maxSockets
    fullName: maxSockets
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    syntax:
      content: 'maxSockets: number'
      return:
        type:
          - number
        description: ''
    package: '@azure/abort-controller'
  - uid: '@azure/abort-controller.http.Agent.requests'
    name: requests
    fullName: requests
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    syntax:
      content: 'requests: [key: string]: function'
      return:
        type:
          - '[key: string]: function'
        description: ''
    package: '@azure/abort-controller'
  - uid: '@azure/abort-controller.http.Agent.sockets'
    name: sockets
    fullName: sockets
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    syntax:
      content: 'sockets: [key: string]: function'
      return:
        type:
          - '[key: string]: function'
        description: ''
    package: '@azure/abort-controller'
references:
  - uid: '@azure/abort-controller.http.AgentOptions'
    name: AgentOptions
    spec.typeScript:
      - name: AgentOptions
        fullName: AgentOptions
        uid: '@azure/abort-controller.http.AgentOptions'
  - uid: '@azure/abort-controller.http.OutgoingMessage'
    name: OutgoingMessage
    spec.typeScript:
      - name: OutgoingMessage
        fullName: OutgoingMessage
        uid: '@azure/abort-controller.http.OutgoingMessage'
  - uid: >-
      string | @azure/abort-controller.url.URL |
      @azure/abort-controller.http.ClientRequestArgs
    name: ClientRequestArgs
    spec.typeScript:
      - name: 'string | '
        fullName: 'string | '
      - name: URL
        fullName: URL
        uid: '@azure/abort-controller.url.URL'
      - name: ' | '
        fullName: ' | '
      - name: ClientRequestArgs
        fullName: ClientRequestArgs
        uid: '@azure/abort-controller.http.ClientRequestArgs'
  - uid: '@azure/abort-controller.net.Socket'
    name: Socket
    spec.typeScript:
      - name: Socket
        fullName: Socket
        uid: '@azure/abort-controller.net.Socket'
  - uid: '@azure/abort-controller.http.OutgoingHttpHeaders | Array<Object>'
    name: OutgoingHttpHeaders | Array<Object>
    spec.typeScript:
      - name: OutgoingHttpHeaders
        fullName: OutgoingHttpHeaders
        uid: '@azure/abort-controller.http.OutgoingHttpHeaders'
      - name: ' | Array<Object>'
        fullName: ' | Array<Object>'
  - uid: '@azure/abort-controller.stream.internal.Readable'
    name: Readable
    spec.typeScript:
      - name: Readable
        fullName: Readable
        uid: '@azure/abort-controller.stream.internal.Readable'
  - uid: '@azure/abort-controller.http.OutgoingHttpHeaders'
    name: OutgoingHttpHeaders
    spec.typeScript:
      - name: OutgoingHttpHeaders
        fullName: OutgoingHttpHeaders
        uid: '@azure/abort-controller.http.OutgoingHttpHeaders'
  - uid: '@azure/abort-controller.http.IncomingHttpHeaders'
    name: IncomingHttpHeaders
    spec.typeScript:
      - name: IncomingHttpHeaders
        fullName: IncomingHttpHeaders
        uid: '@azure/abort-controller.http.IncomingHttpHeaders'
  - uid: '@azure/abort-controller.NodeJS.WritableStream'
    name: WritableStream
    spec.typeScript:
      - name: WritableStream
        fullName: WritableStream
        uid: '@azure/abort-controller.NodeJS.WritableStream'
  - uid: '@azure/abort-controller.BufferEncoding'
    name: BufferEncoding
    spec.typeScript:
      - name: BufferEncoding
        fullName: BufferEncoding
        uid: '@azure/abort-controller.BufferEncoding'
  - uid: '@azure/abort-controller.NodeJS.ReadableStream'
    name: ReadableStream
    spec.typeScript:
      - name: ReadableStream
        fullName: ReadableStream
        uid: '@azure/abort-controller.NodeJS.ReadableStream'
  - uid: '@azure/abort-controller.stream.internal.ReadableOptions'
    name: ReadableOptions
    spec.typeScript:
      - name: ReadableOptions
        fullName: ReadableOptions
        uid: '@azure/abort-controller.stream.internal.ReadableOptions'
  - uid: '@azure/abort-controller.stream.internal.Writable'
    name: Writable
    spec.typeScript:
      - name: Writable
        fullName: Writable
        uid: '@azure/abort-controller.stream.internal.Writable'
  - uid: '@azure/abort-controller.http.HttpBase'
    name: HttpBase
    spec.typeScript:
      - name: HttpBase
        fullName: HttpBase
        uid: '@azure/abort-controller.http.HttpBase'
  - uid: '@azure/abort-controller.http.RequestListener'
    name: RequestListener
    spec.typeScript:
      - name: RequestListener
        fullName: RequestListener
        uid: '@azure/abort-controller.http.RequestListener'
  - uid: '@azure/abort-controller.http.ServerOptions'
    name: ServerOptions
    spec.typeScript:
      - name: ServerOptions
        fullName: ServerOptions
        uid: '@azure/abort-controller.http.ServerOptions'
  - uid: '@azure/abort-controller.net.AddressInfo | string | null'
    name: AddressInfo | string | null
    spec.typeScript:
      - name: AddressInfo
        fullName: AddressInfo
        uid: '@azure/abort-controller.net.AddressInfo'
      - name: ' | string | null'
        fullName: ' | string | null'
  - uid: '@azure/abort-controller.net.ListenOptions'
    name: ListenOptions
    spec.typeScript:
      - name: ListenOptions
        fullName: ListenOptions
        uid: '@azure/abort-controller.net.ListenOptions'
  - uid: '@azure/abort-controller.http.IncomingMessage'
    name: IncomingMessage
    spec.typeScript:
      - name: IncomingMessage
        fullName: IncomingMessage
        uid: '@azure/abort-controller.http.IncomingMessage'
  - uid: '@azure/abort-controller.http.Agent | boolean'
    name: Agent | boolean
    spec.typeScript:
      - name: Agent
        fullName: Agent
        uid: '@azure/abort-controller.http.Agent'
      - name: ' | boolean'
        fullName: ' | boolean'
  - uid: '@azure/abort-controller.http.ClientRequestArgs'
    name: ClientRequestArgs
    spec.typeScript:
      - name: ClientRequestArgs
        fullName: ClientRequestArgs
        uid: '@azure/abort-controller.http.ClientRequestArgs'
  - uid: '@azure/abort-controller.http.ServerResponse'
    name: ServerResponse
    spec.typeScript:
      - name: ServerResponse
        fullName: ServerResponse
        uid: '@azure/abort-controller.http.ServerResponse'
  - uid: '@azure/abort-controller.http.Server'
    name: Server
    spec.typeScript:
      - name: Server
        fullName: Server
        uid: '@azure/abort-controller.http.Server'
  - uid: >-
      @azure/abort-controller.http.RequestOptions | string |
      @azure/abort-controller.url.URL
    name: URL
    spec.typeScript:
      - name: RequestOptions
        fullName: RequestOptions
        uid: '@azure/abort-controller.http.RequestOptions'
      - name: ' | string | '
        fullName: ' | string | '
      - name: URL
        fullName: URL
        uid: '@azure/abort-controller.url.URL'
  - uid: '@azure/abort-controller.http.ClientRequest'
    name: ClientRequest
    spec.typeScript:
      - name: ClientRequest
        fullName: ClientRequest
        uid: '@azure/abort-controller.http.ClientRequest'
  - uid: string | @azure/abort-controller.url.URL
    name: URL
    spec.typeScript:
      - name: 'string | '
        fullName: 'string | '
      - name: URL
        fullName: URL
        uid: '@azure/abort-controller.url.URL'
  - uid: '@azure/abort-controller.http.RequestOptions'
    name: RequestOptions
    spec.typeScript:
      - name: RequestOptions
        fullName: RequestOptions
        uid: '@azure/abort-controller.http.RequestOptions'
