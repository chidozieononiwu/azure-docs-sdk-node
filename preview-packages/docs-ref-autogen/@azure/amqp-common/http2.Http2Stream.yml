### YamlMime:UniversalReference
items:
  - uid: '@azure/ms-rest-azure-env.http2.Http2Stream'
    name: Http2Stream
    fullName: Http2Stream
    children:
      - '@azure/ms-rest-azure-env.http2.Http2Stream.aborted'
      - '@azure/ms-rest-azure-env.http2.Http2Stream.addListener_1'
      - '@azure/ms-rest-azure-env.http2.Http2Stream.addListener_2'
      - '@azure/ms-rest-azure-env.http2.Http2Stream.addListener_3'
      - '@azure/ms-rest-azure-env.http2.Http2Stream.addListener_4'
      - '@azure/ms-rest-azure-env.http2.Http2Stream.addListener_5'
      - '@azure/ms-rest-azure-env.http2.Http2Stream.addListener_6'
      - '@azure/ms-rest-azure-env.http2.Http2Stream.addListener_7'
      - '@azure/ms-rest-azure-env.http2.Http2Stream.addListener_8'
      - '@azure/ms-rest-azure-env.http2.Http2Stream.addListener_9'
      - '@azure/ms-rest-azure-env.http2.Http2Stream.addListener_11'
      - '@azure/ms-rest-azure-env.http2.Http2Stream.addListener_12'
      - '@azure/ms-rest-azure-env.http2.Http2Stream.addListener_13'
      - '@azure/ms-rest-azure-env.http2.Http2Stream.addListener_10'
      - '@azure/ms-rest-azure-env.http2.Http2Stream.addListener'
      - '@azure/ms-rest-azure-env.http2.Http2Stream.cork'
      - '@azure/ms-rest-azure-env.http2.Http2Stream.destroy'
      - '@azure/ms-rest-azure-env.http2.Http2Stream.destroyed'
      - '@azure/ms-rest-azure-env.http2.Http2Stream.emit_1'
      - '@azure/ms-rest-azure-env.http2.Http2Stream.emit_2'
      - '@azure/ms-rest-azure-env.http2.Http2Stream.emit_3'
      - '@azure/ms-rest-azure-env.http2.Http2Stream.emit_4'
      - '@azure/ms-rest-azure-env.http2.Http2Stream.emit_5'
      - '@azure/ms-rest-azure-env.http2.Http2Stream.emit_6'
      - '@azure/ms-rest-azure-env.http2.Http2Stream.emit_7'
      - '@azure/ms-rest-azure-env.http2.Http2Stream.emit_8'
      - '@azure/ms-rest-azure-env.http2.Http2Stream.emit_9'
      - '@azure/ms-rest-azure-env.http2.Http2Stream.emit_11'
      - '@azure/ms-rest-azure-env.http2.Http2Stream.emit_12'
      - '@azure/ms-rest-azure-env.http2.Http2Stream.emit_13'
      - '@azure/ms-rest-azure-env.http2.Http2Stream.emit_10'
      - '@azure/ms-rest-azure-env.http2.Http2Stream.emit'
      - '@azure/ms-rest-azure-env.http2.Http2Stream.end_1'
      - '@azure/ms-rest-azure-env.http2.Http2Stream.end_2'
      - '@azure/ms-rest-azure-env.http2.Http2Stream.end'
      - '@azure/ms-rest-azure-env.http2.Http2Stream.eventNames'
      - '@azure/ms-rest-azure-env.http2.Http2Stream.from'
      - '@azure/ms-rest-azure-env.http2.Http2Stream.getMaxListeners'
      - '@azure/ms-rest-azure-env.http2.Http2Stream.constructor'
      - '@azure/ms-rest-azure-env.http2.Http2Stream.isPaused'
      - '@azure/ms-rest-azure-env.http2.Http2Stream.listenerCount'
      - '@azure/ms-rest-azure-env.http2.Http2Stream.listeners'
      - '@azure/ms-rest-azure-env.http2.Http2Stream.off'
      - '@azure/ms-rest-azure-env.http2.Http2Stream.on_1'
      - '@azure/ms-rest-azure-env.http2.Http2Stream.on_2'
      - '@azure/ms-rest-azure-env.http2.Http2Stream.on_3'
      - '@azure/ms-rest-azure-env.http2.Http2Stream.on_4'
      - '@azure/ms-rest-azure-env.http2.Http2Stream.on_5'
      - '@azure/ms-rest-azure-env.http2.Http2Stream.on_6'
      - '@azure/ms-rest-azure-env.http2.Http2Stream.on_7'
      - '@azure/ms-rest-azure-env.http2.Http2Stream.on_8'
      - '@azure/ms-rest-azure-env.http2.Http2Stream.on_9'
      - '@azure/ms-rest-azure-env.http2.Http2Stream.on_11'
      - '@azure/ms-rest-azure-env.http2.Http2Stream.on_12'
      - '@azure/ms-rest-azure-env.http2.Http2Stream.on_13'
      - '@azure/ms-rest-azure-env.http2.Http2Stream.on_10'
      - '@azure/ms-rest-azure-env.http2.Http2Stream.on'
      - '@azure/ms-rest-azure-env.http2.Http2Stream.once_1'
      - '@azure/ms-rest-azure-env.http2.Http2Stream.once_2'
      - '@azure/ms-rest-azure-env.http2.Http2Stream.once_3'
      - '@azure/ms-rest-azure-env.http2.Http2Stream.once_4'
      - '@azure/ms-rest-azure-env.http2.Http2Stream.once_5'
      - '@azure/ms-rest-azure-env.http2.Http2Stream.once_6'
      - '@azure/ms-rest-azure-env.http2.Http2Stream.once_7'
      - '@azure/ms-rest-azure-env.http2.Http2Stream.once_8'
      - '@azure/ms-rest-azure-env.http2.Http2Stream.once_9'
      - '@azure/ms-rest-azure-env.http2.Http2Stream.once_11'
      - '@azure/ms-rest-azure-env.http2.Http2Stream.once_12'
      - '@azure/ms-rest-azure-env.http2.Http2Stream.once_13'
      - '@azure/ms-rest-azure-env.http2.Http2Stream.once_10'
      - '@azure/ms-rest-azure-env.http2.Http2Stream.once'
      - '@azure/ms-rest-azure-env.http2.Http2Stream.pause'
      - '@azure/ms-rest-azure-env.http2.Http2Stream.pipe'
      - '@azure/ms-rest-azure-env.http2.Http2Stream.prependListener_1'
      - '@azure/ms-rest-azure-env.http2.Http2Stream.prependListener_2'
      - '@azure/ms-rest-azure-env.http2.Http2Stream.prependListener_3'
      - '@azure/ms-rest-azure-env.http2.Http2Stream.prependListener_4'
      - '@azure/ms-rest-azure-env.http2.Http2Stream.prependListener_5'
      - '@azure/ms-rest-azure-env.http2.Http2Stream.prependListener_6'
      - '@azure/ms-rest-azure-env.http2.Http2Stream.prependListener_7'
      - '@azure/ms-rest-azure-env.http2.Http2Stream.prependListener_8'
      - '@azure/ms-rest-azure-env.http2.Http2Stream.prependListener_9'
      - '@azure/ms-rest-azure-env.http2.Http2Stream.prependListener_11'
      - '@azure/ms-rest-azure-env.http2.Http2Stream.prependListener_12'
      - '@azure/ms-rest-azure-env.http2.Http2Stream.prependListener_13'
      - '@azure/ms-rest-azure-env.http2.Http2Stream.prependListener_10'
      - '@azure/ms-rest-azure-env.http2.Http2Stream.prependListener'
      - '@azure/ms-rest-azure-env.http2.Http2Stream.prependOnceListener_1'
      - '@azure/ms-rest-azure-env.http2.Http2Stream.prependOnceListener_2'
      - '@azure/ms-rest-azure-env.http2.Http2Stream.prependOnceListener_3'
      - '@azure/ms-rest-azure-env.http2.Http2Stream.prependOnceListener_4'
      - '@azure/ms-rest-azure-env.http2.Http2Stream.prependOnceListener_5'
      - '@azure/ms-rest-azure-env.http2.Http2Stream.prependOnceListener_6'
      - '@azure/ms-rest-azure-env.http2.Http2Stream.prependOnceListener_7'
      - '@azure/ms-rest-azure-env.http2.Http2Stream.prependOnceListener_8'
      - '@azure/ms-rest-azure-env.http2.Http2Stream.prependOnceListener_9'
      - '@azure/ms-rest-azure-env.http2.Http2Stream.prependOnceListener_11'
      - '@azure/ms-rest-azure-env.http2.Http2Stream.prependOnceListener_12'
      - '@azure/ms-rest-azure-env.http2.Http2Stream.prependOnceListener_13'
      - '@azure/ms-rest-azure-env.http2.Http2Stream.prependOnceListener_10'
      - '@azure/ms-rest-azure-env.http2.Http2Stream.prependOnceListener'
      - '@azure/ms-rest-azure-env.http2.Http2Stream.priority'
      - '@azure/ms-rest-azure-env.http2.Http2Stream.push'
      - '@azure/ms-rest-azure-env.http2.Http2Stream.rawListeners'
      - '@azure/ms-rest-azure-env.http2.Http2Stream.read'
      - '@azure/ms-rest-azure-env.http2.Http2Stream.readable'
      - '@azure/ms-rest-azure-env.http2.Http2Stream.readableHighWaterMark'
      - '@azure/ms-rest-azure-env.http2.Http2Stream.readableLength'
      - '@azure/ms-rest-azure-env.http2.Http2Stream.readableObjectMode'
      - '@azure/ms-rest-azure-env.http2.Http2Stream.removeAllListeners'
      - '@azure/ms-rest-azure-env.http2.Http2Stream.removeListener'
      - '@azure/ms-rest-azure-env.http2.Http2Stream.removeListener_1'
      - '@azure/ms-rest-azure-env.http2.Http2Stream.removeListener_2'
      - '@azure/ms-rest-azure-env.http2.Http2Stream.removeListener_4'
      - '@azure/ms-rest-azure-env.http2.Http2Stream.removeListener_3'
      - '@azure/ms-rest-azure-env.http2.Http2Stream.removeListener_5'
      - '@azure/ms-rest-azure-env.http2.Http2Stream.resume'
      - '@azure/ms-rest-azure-env.http2.Http2Stream.rstCode'
      - '@azure/ms-rest-azure-env.http2.Http2Stream.rstStream'
      - '@azure/ms-rest-azure-env.http2.Http2Stream.rstWithCancel'
      - '@azure/ms-rest-azure-env.http2.Http2Stream.rstWithInternalError'
      - '@azure/ms-rest-azure-env.http2.Http2Stream.rstWithNoError'
      - '@azure/ms-rest-azure-env.http2.Http2Stream.rstWithProtocolError'
      - '@azure/ms-rest-azure-env.http2.Http2Stream.rstWithRefuse'
      - '@azure/ms-rest-azure-env.http2.Http2Stream.session'
      - '@azure/ms-rest-azure-env.http2.Http2Stream.setDefaultEncoding'
      - '@azure/ms-rest-azure-env.http2.Http2Stream.setEncoding'
      - '@azure/ms-rest-azure-env.http2.Http2Stream.setMaxListeners'
      - '@azure/ms-rest-azure-env.http2.Http2Stream.setTimeout'
      - '@azure/ms-rest-azure-env.http2.Http2Stream.state'
      - '@azure/ms-rest-azure-env.http2.Http2Stream.uncork'
      - '@azure/ms-rest-azure-env.http2.Http2Stream.unpipe'
      - '@azure/ms-rest-azure-env.http2.Http2Stream.unshift'
      - '@azure/ms-rest-azure-env.http2.Http2Stream.wrap'
      - '@azure/ms-rest-azure-env.http2.Http2Stream.writable'
      - '@azure/ms-rest-azure-env.http2.Http2Stream.writableCorked'
      - '@azure/ms-rest-azure-env.http2.Http2Stream.writableEnded'
      - '@azure/ms-rest-azure-env.http2.Http2Stream.writableFinished'
      - '@azure/ms-rest-azure-env.http2.Http2Stream.writableHighWaterMark'
      - '@azure/ms-rest-azure-env.http2.Http2Stream.writableLength'
      - '@azure/ms-rest-azure-env.http2.Http2Stream.writableObjectMode'
      - '@azure/ms-rest-azure-env.http2.Http2Stream.write_1'
      - '@azure/ms-rest-azure-env.http2.Http2Stream.write'
    langs:
      - typeScript
    type: interface
    summary: ''
    extends:
      name: '@azure/ms-rest-azure-env.stream.internal.Duplex'
    package: '@azure/ms-rest-azure-env'
  - uid: '@azure/ms-rest-azure-env.http2.Http2Stream.aborted'
    name: aborted
    fullName: aborted
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    syntax:
      content: 'aborted: boolean'
      return:
        type:
          - boolean
        description: ''
    package: '@azure/ms-rest-azure-env'
  - uid: '@azure/ms-rest-azure-env.http2.Http2Stream.addListener_1'
    name: 'addListener("aborted", () => void)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function addListener(event: "aborted", listener: () => void)'
      parameters:
        - id: event
          type:
            - '"aborted"'
          description: ''
        - id: listener
          type:
            - () => void
          description: ''
      return:
        type:
          - this
        description: ''
    package: '@azure/ms-rest-azure-env'
  - uid: '@azure/ms-rest-azure-env.http2.Http2Stream.addListener_2'
    name: 'addListener("close", () => void)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function addListener(event: "close", listener: () => void)'
      parameters:
        - id: event
          type:
            - '"close"'
          description: ''
        - id: listener
          type:
            - () => void
          description: ''
      return:
        type:
          - this
        description: ''
    package: '@azure/ms-rest-azure-env'
  - uid: '@azure/ms-rest-azure-env.http2.Http2Stream.addListener_3'
    name: 'addListener("data", (chunk: Buffer | string) => void)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function addListener(event: "data", listener: (chunk: Buffer | string)
        => void)
      parameters:
        - id: event
          type:
            - '"data"'
          description: ''
        - id: listener
          type:
            - '(chunk: Buffer | string) => void'
          description: ''
      return:
        type:
          - this
        description: ''
    package: '@azure/ms-rest-azure-env'
  - uid: '@azure/ms-rest-azure-env.http2.Http2Stream.addListener_4'
    name: 'addListener("drain", () => void)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function addListener(event: "drain", listener: () => void)'
      parameters:
        - id: event
          type:
            - '"drain"'
          description: ''
        - id: listener
          type:
            - () => void
          description: ''
      return:
        type:
          - this
        description: ''
    package: '@azure/ms-rest-azure-env'
  - uid: '@azure/ms-rest-azure-env.http2.Http2Stream.addListener_5'
    name: 'addListener("end", () => void)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function addListener(event: "end", listener: () => void)'
      parameters:
        - id: event
          type:
            - '"end"'
          description: ''
        - id: listener
          type:
            - () => void
          description: ''
      return:
        type:
          - this
        description: ''
    package: '@azure/ms-rest-azure-env'
  - uid: '@azure/ms-rest-azure-env.http2.Http2Stream.addListener_6'
    name: 'addListener("error", (err: Error) => void)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function addListener(event: "error", listener: (err: Error) => void)'
      parameters:
        - id: event
          type:
            - '"error"'
          description: ''
        - id: listener
          type:
            - '(err: Error) => void'
          description: ''
      return:
        type:
          - this
        description: ''
    package: '@azure/ms-rest-azure-env'
  - uid: '@azure/ms-rest-azure-env.http2.Http2Stream.addListener_7'
    name: 'addListener("finish", () => void)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function addListener(event: "finish", listener: () => void)'
      parameters:
        - id: event
          type:
            - '"finish"'
          description: ''
        - id: listener
          type:
            - () => void
          description: ''
      return:
        type:
          - this
        description: ''
    package: '@azure/ms-rest-azure-env'
  - uid: '@azure/ms-rest-azure-env.http2.Http2Stream.addListener_8'
    name: 'addListener("frameError", (frameType: number, errorCode: number) => void)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function addListener(event: "frameError", listener: (frameType: number,
        errorCode: number) => void)
      parameters:
        - id: event
          type:
            - '"frameError"'
          description: ''
        - id: listener
          type:
            - '(frameType: number, errorCode: number) => void'
          description: ''
      return:
        type:
          - this
        description: ''
    package: '@azure/ms-rest-azure-env'
  - uid: '@azure/ms-rest-azure-env.http2.Http2Stream.addListener_9'
    name: 'addListener("pipe", (src: stream.Readable) => void)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function addListener(event: "pipe", listener: (src: stream.Readable) =>
        void)
      parameters:
        - id: event
          type:
            - '"pipe"'
          description: ''
        - id: listener
          type:
            - '(src: stream.Readable) => void'
          description: ''
      return:
        type:
          - this
        description: ''
    package: '@azure/ms-rest-azure-env'
  - uid: '@azure/ms-rest-azure-env.http2.Http2Stream.addListener_11'
    name: 'addListener("streamClosed", (code: number) => void)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function addListener(event: "streamClosed", listener: (code: number) =>
        void)
      parameters:
        - id: event
          type:
            - '"streamClosed"'
          description: ''
        - id: listener
          type:
            - '(code: number) => void'
          description: ''
      return:
        type:
          - this
        description: ''
    package: '@azure/ms-rest-azure-env'
  - uid: '@azure/ms-rest-azure-env.http2.Http2Stream.addListener_12'
    name: 'addListener("timeout", () => void)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function addListener(event: "timeout", listener: () => void)'
      parameters:
        - id: event
          type:
            - '"timeout"'
          description: ''
        - id: listener
          type:
            - () => void
          description: ''
      return:
        type:
          - this
        description: ''
    package: '@azure/ms-rest-azure-env'
  - uid: '@azure/ms-rest-azure-env.http2.Http2Stream.addListener_13'
    name: >-
      addListener("trailers", (trailers: IncomingHttpHeaders, flags: number) =>
      void)
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function addListener(event: "trailers", listener: (trailers:
        IncomingHttpHeaders, flags: number) => void)
      parameters:
        - id: event
          type:
            - '"trailers"'
          description: ''
        - id: listener
          type:
            - '(trailers: IncomingHttpHeaders, flags: number) => void'
          description: ''
      return:
        type:
          - this
        description: ''
    package: '@azure/ms-rest-azure-env'
  - uid: '@azure/ms-rest-azure-env.http2.Http2Stream.addListener_10'
    name: 'addListener("unpipe", (src: stream.Readable) => void)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function addListener(event: "unpipe", listener: (src: stream.Readable)
        => void)
      parameters:
        - id: event
          type:
            - '"unpipe"'
          description: ''
        - id: listener
          type:
            - '(src: stream.Readable) => void'
          description: ''
      return:
        type:
          - this
        description: ''
    package: '@azure/ms-rest-azure-env'
  - uid: '@azure/ms-rest-azure-env.http2.Http2Stream.addListener'
    name: 'addListener(string, (args: any[]) => void)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function addListener(event: string, listener: (args: any[]) => void)'
      parameters:
        - id: event
          type:
            - string
          description: ''
        - id: listener
          type:
            - '(args: any[]) => void'
          description: ''
      return:
        type:
          - this
        description: ''
    package: '@azure/ms-rest-azure-env'
  - uid: '@azure/ms-rest-azure-env.http2.Http2Stream.cork'
    name: cork()
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: function cork()
      parameters: []
    package: '@azure/ms-rest-azure-env'
  - uid: '@azure/ms-rest-azure-env.http2.Http2Stream.destroy'
    name: destroy(Error)
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function destroy(error?: Error)'
      parameters:
        - id: error
          type:
            - '@azure/ms-rest-azure-env.Error'
          description: ''
          optional: true
    package: '@azure/ms-rest-azure-env'
  - uid: '@azure/ms-rest-azure-env.http2.Http2Stream.destroyed'
    name: destroyed
    fullName: destroyed
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    syntax:
      content: 'destroyed: boolean'
      return:
        type:
          - boolean
        description: ''
    package: '@azure/ms-rest-azure-env'
  - uid: '@azure/ms-rest-azure-env.http2.Http2Stream.emit_1'
    name: emit("aborted")
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function emit(event: "aborted")'
      parameters:
        - id: event
          type:
            - '"aborted"'
          description: ''
      return:
        type:
          - boolean
        description: ''
    package: '@azure/ms-rest-azure-env'
  - uid: '@azure/ms-rest-azure-env.http2.Http2Stream.emit_2'
    name: emit("close")
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function emit(event: "close")'
      parameters:
        - id: event
          type:
            - '"close"'
          description: ''
      return:
        type:
          - boolean
        description: ''
    package: '@azure/ms-rest-azure-env'
  - uid: '@azure/ms-rest-azure-env.http2.Http2Stream.emit_3'
    name: 'emit("data", Buffer | string)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function emit(event: "data", chunk: Buffer | string)'
      parameters:
        - id: event
          type:
            - '"data"'
          description: ''
        - id: chunk
          type:
            - Buffer | string
          description: ''
      return:
        type:
          - boolean
        description: ''
    package: '@azure/ms-rest-azure-env'
  - uid: '@azure/ms-rest-azure-env.http2.Http2Stream.emit_4'
    name: emit("drain")
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function emit(event: "drain")'
      parameters:
        - id: event
          type:
            - '"drain"'
          description: ''
      return:
        type:
          - boolean
        description: ''
    package: '@azure/ms-rest-azure-env'
  - uid: '@azure/ms-rest-azure-env.http2.Http2Stream.emit_5'
    name: emit("end")
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function emit(event: "end")'
      parameters:
        - id: event
          type:
            - '"end"'
          description: ''
      return:
        type:
          - boolean
        description: ''
    package: '@azure/ms-rest-azure-env'
  - uid: '@azure/ms-rest-azure-env.http2.Http2Stream.emit_6'
    name: 'emit("error", Error)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function emit(event: "error", err: Error)'
      parameters:
        - id: event
          type:
            - '"error"'
          description: ''
        - id: err
          type:
            - Error
          description: ''
      return:
        type:
          - boolean
        description: ''
    package: '@azure/ms-rest-azure-env'
  - uid: '@azure/ms-rest-azure-env.http2.Http2Stream.emit_7'
    name: emit("finish")
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function emit(event: "finish")'
      parameters:
        - id: event
          type:
            - '"finish"'
          description: ''
      return:
        type:
          - boolean
        description: ''
    package: '@azure/ms-rest-azure-env'
  - uid: '@azure/ms-rest-azure-env.http2.Http2Stream.emit_8'
    name: 'emit("frameError", number, number)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function emit(event: "frameError", frameType: number, errorCode: number)'
      parameters:
        - id: event
          type:
            - '"frameError"'
          description: ''
        - id: frameType
          type:
            - number
          description: ''
        - id: errorCode
          type:
            - number
          description: ''
      return:
        type:
          - boolean
        description: ''
    package: '@azure/ms-rest-azure-env'
  - uid: '@azure/ms-rest-azure-env.http2.Http2Stream.emit_9'
    name: 'emit("pipe", stream.Readable)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function emit(event: "pipe", src: stream.Readable)'
      parameters:
        - id: event
          type:
            - '"pipe"'
          description: ''
        - id: src
          type:
            - stream.Readable
          description: ''
      return:
        type:
          - boolean
        description: ''
    package: '@azure/ms-rest-azure-env'
  - uid: '@azure/ms-rest-azure-env.http2.Http2Stream.emit_11'
    name: 'emit("streamClosed", number)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function emit(event: "streamClosed", code: number)'
      parameters:
        - id: event
          type:
            - '"streamClosed"'
          description: ''
        - id: code
          type:
            - number
          description: ''
      return:
        type:
          - boolean
        description: ''
    package: '@azure/ms-rest-azure-env'
  - uid: '@azure/ms-rest-azure-env.http2.Http2Stream.emit_12'
    name: emit("timeout")
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function emit(event: "timeout")'
      parameters:
        - id: event
          type:
            - '"timeout"'
          description: ''
      return:
        type:
          - boolean
        description: ''
    package: '@azure/ms-rest-azure-env'
  - uid: '@azure/ms-rest-azure-env.http2.Http2Stream.emit_13'
    name: 'emit("trailers", IncomingHttpHeaders, number)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function emit(event: "trailers", trailers: IncomingHttpHeaders, flags:
        number)
      parameters:
        - id: event
          type:
            - '"trailers"'
          description: ''
        - id: trailers
          type:
            - IncomingHttpHeaders
          description: ''
        - id: flags
          type:
            - number
          description: ''
      return:
        type:
          - boolean
        description: ''
    package: '@azure/ms-rest-azure-env'
  - uid: '@azure/ms-rest-azure-env.http2.Http2Stream.emit_10'
    name: 'emit("unpipe", stream.Readable)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function emit(event: "unpipe", src: stream.Readable)'
      parameters:
        - id: event
          type:
            - '"unpipe"'
          description: ''
        - id: src
          type:
            - stream.Readable
          description: ''
      return:
        type:
          - boolean
        description: ''
    package: '@azure/ms-rest-azure-env'
  - uid: '@azure/ms-rest-azure-env.http2.Http2Stream.emit'
    name: 'emit(string | symbol, any[])'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function emit(event: string | symbol, args: any[])'
      parameters:
        - id: event
          type:
            - string | symbol
          description: ''
        - id: args
          type:
            - 'any[]'
          description: ''
      return:
        type:
          - boolean
        description: ''
    package: '@azure/ms-rest-azure-env'
  - uid: '@azure/ms-rest-azure-env.http2.Http2Stream.end_1'
    name: 'end(any, undefined | () => void)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function end(chunk: any, cb?: undefined | () => void)'
      parameters:
        - id: chunk
          type:
            - any
          description: ''
        - id: cb
          type:
            - undefined | () => void
          description: ''
          optional: true
    package: '@azure/ms-rest-azure-env'
  - uid: '@azure/ms-rest-azure-env.http2.Http2Stream.end_2'
    name: 'end(any, undefined | string, undefined | () => void)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function end(chunk: any, encoding?: undefined | string, cb?: undefined |
        () => void)
      parameters:
        - id: chunk
          type:
            - any
          description: ''
        - id: encoding
          type:
            - undefined | string
          description: ''
          optional: true
        - id: cb
          type:
            - undefined | () => void
          description: ''
          optional: true
    package: '@azure/ms-rest-azure-env'
  - uid: '@azure/ms-rest-azure-env.http2.Http2Stream.end'
    name: end(undefined | () => void)
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function end(cb?: undefined | () => void)'
      parameters:
        - id: cb
          type:
            - undefined | () => void
          description: ''
          optional: true
    package: '@azure/ms-rest-azure-env'
  - uid: '@azure/ms-rest-azure-env.http2.Http2Stream.eventNames'
    name: eventNames()
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: function eventNames()
      parameters: []
      return:
        type:
          - Array<string | symbol>
        description: ''
    package: '@azure/ms-rest-azure-env'
  - uid: '@azure/ms-rest-azure-env.http2.Http2Stream.from'
    name: 'from(Iterable<any> | AsyncIterable<any>, ReadableOptions)'
    children: []
    type: method
    langs:
      - typeScript
    summary: A utility method for creating Readable Streams out of iterators.
    syntax:
      content: >-
        static function from(iterable: Iterable<any> | AsyncIterable<any>,
        options?: ReadableOptions)
      parameters:
        - id: iterable
          type:
            - Iterable<any> | AsyncIterable<any>
          description: ''
        - id: options
          type:
            - '@azure/ms-rest-azure-env.stream.internal.ReadableOptions'
          description: ''
          optional: true
      return:
        type:
          - '@azure/ms-rest-azure-env.stream.internal.Readable'
        description: ''
    package: '@azure/ms-rest-azure-env'
  - uid: '@azure/ms-rest-azure-env.http2.Http2Stream.getMaxListeners'
    name: getMaxListeners()
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: function getMaxListeners()
      parameters: []
      return:
        type:
          - number
        description: ''
    package: '@azure/ms-rest-azure-env'
  - uid: '@azure/ms-rest-azure-env.http2.Http2Stream.constructor'
    name: Http2Stream(DuplexOptions)
    children: []
    type: constructor
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'new Http2Stream(opts?: DuplexOptions)'
      parameters:
        - id: opts
          type:
            - '@azure/ms-rest-azure-env.stream.internal.DuplexOptions'
          description: ''
          optional: true
    package: '@azure/ms-rest-azure-env'
  - uid: '@azure/ms-rest-azure-env.http2.Http2Stream.isPaused'
    name: isPaused()
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: function isPaused()
      parameters: []
      return:
        type:
          - boolean
        description: ''
    package: '@azure/ms-rest-azure-env'
  - uid: '@azure/ms-rest-azure-env.http2.Http2Stream.listenerCount'
    name: listenerCount(string | symbol)
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function listenerCount(type: string | symbol)'
      parameters:
        - id: type
          type:
            - string | symbol
          description: ''
      return:
        type:
          - number
        description: ''
    package: '@azure/ms-rest-azure-env'
  - uid: '@azure/ms-rest-azure-env.http2.Http2Stream.listeners'
    name: listeners(string | symbol)
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function listeners(event: string | symbol)'
      parameters:
        - id: event
          type:
            - string | symbol
          description: ''
      return:
        type:
          - 'Function[]'
        description: ''
    package: '@azure/ms-rest-azure-env'
  - uid: '@azure/ms-rest-azure-env.http2.Http2Stream.off'
    name: 'off(string | symbol, (args: any[]) => void)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function off(event: string | symbol, listener: (args: any[]) => void)'
      parameters:
        - id: event
          type:
            - string | symbol
          description: ''
        - id: listener
          type:
            - '(args: any[]) => void'
          description: ''
      return:
        type:
          - this
        description: ''
    package: '@azure/ms-rest-azure-env'
  - uid: '@azure/ms-rest-azure-env.http2.Http2Stream.on_1'
    name: 'on("aborted", () => void)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function on(event: "aborted", listener: () => void)'
      parameters:
        - id: event
          type:
            - '"aborted"'
          description: ''
        - id: listener
          type:
            - () => void
          description: ''
      return:
        type:
          - this
        description: ''
    package: '@azure/ms-rest-azure-env'
  - uid: '@azure/ms-rest-azure-env.http2.Http2Stream.on_2'
    name: 'on("close", () => void)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function on(event: "close", listener: () => void)'
      parameters:
        - id: event
          type:
            - '"close"'
          description: ''
        - id: listener
          type:
            - () => void
          description: ''
      return:
        type:
          - this
        description: ''
    package: '@azure/ms-rest-azure-env'
  - uid: '@azure/ms-rest-azure-env.http2.Http2Stream.on_3'
    name: 'on("data", (chunk: Buffer | string) => void)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function on(event: "data", listener: (chunk: Buffer | string) => void)'
      parameters:
        - id: event
          type:
            - '"data"'
          description: ''
        - id: listener
          type:
            - '(chunk: Buffer | string) => void'
          description: ''
      return:
        type:
          - this
        description: ''
    package: '@azure/ms-rest-azure-env'
  - uid: '@azure/ms-rest-azure-env.http2.Http2Stream.on_4'
    name: 'on("drain", () => void)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function on(event: "drain", listener: () => void)'
      parameters:
        - id: event
          type:
            - '"drain"'
          description: ''
        - id: listener
          type:
            - () => void
          description: ''
      return:
        type:
          - this
        description: ''
    package: '@azure/ms-rest-azure-env'
  - uid: '@azure/ms-rest-azure-env.http2.Http2Stream.on_5'
    name: 'on("end", () => void)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function on(event: "end", listener: () => void)'
      parameters:
        - id: event
          type:
            - '"end"'
          description: ''
        - id: listener
          type:
            - () => void
          description: ''
      return:
        type:
          - this
        description: ''
    package: '@azure/ms-rest-azure-env'
  - uid: '@azure/ms-rest-azure-env.http2.Http2Stream.on_6'
    name: 'on("error", (err: Error) => void)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function on(event: "error", listener: (err: Error) => void)'
      parameters:
        - id: event
          type:
            - '"error"'
          description: ''
        - id: listener
          type:
            - '(err: Error) => void'
          description: ''
      return:
        type:
          - this
        description: ''
    package: '@azure/ms-rest-azure-env'
  - uid: '@azure/ms-rest-azure-env.http2.Http2Stream.on_7'
    name: 'on("finish", () => void)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function on(event: "finish", listener: () => void)'
      parameters:
        - id: event
          type:
            - '"finish"'
          description: ''
        - id: listener
          type:
            - () => void
          description: ''
      return:
        type:
          - this
        description: ''
    package: '@azure/ms-rest-azure-env'
  - uid: '@azure/ms-rest-azure-env.http2.Http2Stream.on_8'
    name: 'on("frameError", (frameType: number, errorCode: number) => void)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function on(event: "frameError", listener: (frameType: number,
        errorCode: number) => void)
      parameters:
        - id: event
          type:
            - '"frameError"'
          description: ''
        - id: listener
          type:
            - '(frameType: number, errorCode: number) => void'
          description: ''
      return:
        type:
          - this
        description: ''
    package: '@azure/ms-rest-azure-env'
  - uid: '@azure/ms-rest-azure-env.http2.Http2Stream.on_9'
    name: 'on("pipe", (src: stream.Readable) => void)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function on(event: "pipe", listener: (src: stream.Readable) => void)'
      parameters:
        - id: event
          type:
            - '"pipe"'
          description: ''
        - id: listener
          type:
            - '(src: stream.Readable) => void'
          description: ''
      return:
        type:
          - this
        description: ''
    package: '@azure/ms-rest-azure-env'
  - uid: '@azure/ms-rest-azure-env.http2.Http2Stream.on_11'
    name: 'on("streamClosed", (code: number) => void)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function on(event: "streamClosed", listener: (code: number) => void)'
      parameters:
        - id: event
          type:
            - '"streamClosed"'
          description: ''
        - id: listener
          type:
            - '(code: number) => void'
          description: ''
      return:
        type:
          - this
        description: ''
    package: '@azure/ms-rest-azure-env'
  - uid: '@azure/ms-rest-azure-env.http2.Http2Stream.on_12'
    name: 'on("timeout", () => void)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function on(event: "timeout", listener: () => void)'
      parameters:
        - id: event
          type:
            - '"timeout"'
          description: ''
        - id: listener
          type:
            - () => void
          description: ''
      return:
        type:
          - this
        description: ''
    package: '@azure/ms-rest-azure-env'
  - uid: '@azure/ms-rest-azure-env.http2.Http2Stream.on_13'
    name: 'on("trailers", (trailers: IncomingHttpHeaders, flags: number) => void)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function on(event: "trailers", listener: (trailers: IncomingHttpHeaders,
        flags: number) => void)
      parameters:
        - id: event
          type:
            - '"trailers"'
          description: ''
        - id: listener
          type:
            - '(trailers: IncomingHttpHeaders, flags: number) => void'
          description: ''
      return:
        type:
          - this
        description: ''
    package: '@azure/ms-rest-azure-env'
  - uid: '@azure/ms-rest-azure-env.http2.Http2Stream.on_10'
    name: 'on("unpipe", (src: stream.Readable) => void)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function on(event: "unpipe", listener: (src: stream.Readable) => void)'
      parameters:
        - id: event
          type:
            - '"unpipe"'
          description: ''
        - id: listener
          type:
            - '(src: stream.Readable) => void'
          description: ''
      return:
        type:
          - this
        description: ''
    package: '@azure/ms-rest-azure-env'
  - uid: '@azure/ms-rest-azure-env.http2.Http2Stream.on'
    name: 'on(string, (args: any[]) => void)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function on(event: string, listener: (args: any[]) => void)'
      parameters:
        - id: event
          type:
            - string
          description: ''
        - id: listener
          type:
            - '(args: any[]) => void'
          description: ''
      return:
        type:
          - this
        description: ''
    package: '@azure/ms-rest-azure-env'
  - uid: '@azure/ms-rest-azure-env.http2.Http2Stream.once_1'
    name: 'once("aborted", () => void)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function once(event: "aborted", listener: () => void)'
      parameters:
        - id: event
          type:
            - '"aborted"'
          description: ''
        - id: listener
          type:
            - () => void
          description: ''
      return:
        type:
          - this
        description: ''
    package: '@azure/ms-rest-azure-env'
  - uid: '@azure/ms-rest-azure-env.http2.Http2Stream.once_2'
    name: 'once("close", () => void)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function once(event: "close", listener: () => void)'
      parameters:
        - id: event
          type:
            - '"close"'
          description: ''
        - id: listener
          type:
            - () => void
          description: ''
      return:
        type:
          - this
        description: ''
    package: '@azure/ms-rest-azure-env'
  - uid: '@azure/ms-rest-azure-env.http2.Http2Stream.once_3'
    name: 'once("data", (chunk: Buffer | string) => void)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function once(event: "data", listener: (chunk: Buffer | string) => void)'
      parameters:
        - id: event
          type:
            - '"data"'
          description: ''
        - id: listener
          type:
            - '(chunk: Buffer | string) => void'
          description: ''
      return:
        type:
          - this
        description: ''
    package: '@azure/ms-rest-azure-env'
  - uid: '@azure/ms-rest-azure-env.http2.Http2Stream.once_4'
    name: 'once("drain", () => void)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function once(event: "drain", listener: () => void)'
      parameters:
        - id: event
          type:
            - '"drain"'
          description: ''
        - id: listener
          type:
            - () => void
          description: ''
      return:
        type:
          - this
        description: ''
    package: '@azure/ms-rest-azure-env'
  - uid: '@azure/ms-rest-azure-env.http2.Http2Stream.once_5'
    name: 'once("end", () => void)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function once(event: "end", listener: () => void)'
      parameters:
        - id: event
          type:
            - '"end"'
          description: ''
        - id: listener
          type:
            - () => void
          description: ''
      return:
        type:
          - this
        description: ''
    package: '@azure/ms-rest-azure-env'
  - uid: '@azure/ms-rest-azure-env.http2.Http2Stream.once_6'
    name: 'once("error", (err: Error) => void)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function once(event: "error", listener: (err: Error) => void)'
      parameters:
        - id: event
          type:
            - '"error"'
          description: ''
        - id: listener
          type:
            - '(err: Error) => void'
          description: ''
      return:
        type:
          - this
        description: ''
    package: '@azure/ms-rest-azure-env'
  - uid: '@azure/ms-rest-azure-env.http2.Http2Stream.once_7'
    name: 'once("finish", () => void)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function once(event: "finish", listener: () => void)'
      parameters:
        - id: event
          type:
            - '"finish"'
          description: ''
        - id: listener
          type:
            - () => void
          description: ''
      return:
        type:
          - this
        description: ''
    package: '@azure/ms-rest-azure-env'
  - uid: '@azure/ms-rest-azure-env.http2.Http2Stream.once_8'
    name: 'once("frameError", (frameType: number, errorCode: number) => void)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function once(event: "frameError", listener: (frameType: number,
        errorCode: number) => void)
      parameters:
        - id: event
          type:
            - '"frameError"'
          description: ''
        - id: listener
          type:
            - '(frameType: number, errorCode: number) => void'
          description: ''
      return:
        type:
          - this
        description: ''
    package: '@azure/ms-rest-azure-env'
  - uid: '@azure/ms-rest-azure-env.http2.Http2Stream.once_9'
    name: 'once("pipe", (src: stream.Readable) => void)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function once(event: "pipe", listener: (src: stream.Readable) => void)'
      parameters:
        - id: event
          type:
            - '"pipe"'
          description: ''
        - id: listener
          type:
            - '(src: stream.Readable) => void'
          description: ''
      return:
        type:
          - this
        description: ''
    package: '@azure/ms-rest-azure-env'
  - uid: '@azure/ms-rest-azure-env.http2.Http2Stream.once_11'
    name: 'once("streamClosed", (code: number) => void)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function once(event: "streamClosed", listener: (code: number) => void)'
      parameters:
        - id: event
          type:
            - '"streamClosed"'
          description: ''
        - id: listener
          type:
            - '(code: number) => void'
          description: ''
      return:
        type:
          - this
        description: ''
    package: '@azure/ms-rest-azure-env'
  - uid: '@azure/ms-rest-azure-env.http2.Http2Stream.once_12'
    name: 'once("timeout", () => void)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function once(event: "timeout", listener: () => void)'
      parameters:
        - id: event
          type:
            - '"timeout"'
          description: ''
        - id: listener
          type:
            - () => void
          description: ''
      return:
        type:
          - this
        description: ''
    package: '@azure/ms-rest-azure-env'
  - uid: '@azure/ms-rest-azure-env.http2.Http2Stream.once_13'
    name: 'once("trailers", (trailers: IncomingHttpHeaders, flags: number) => void)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function once(event: "trailers", listener: (trailers:
        IncomingHttpHeaders, flags: number) => void)
      parameters:
        - id: event
          type:
            - '"trailers"'
          description: ''
        - id: listener
          type:
            - '(trailers: IncomingHttpHeaders, flags: number) => void'
          description: ''
      return:
        type:
          - this
        description: ''
    package: '@azure/ms-rest-azure-env'
  - uid: '@azure/ms-rest-azure-env.http2.Http2Stream.once_10'
    name: 'once("unpipe", (src: stream.Readable) => void)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function once(event: "unpipe", listener: (src: stream.Readable) => void)'
      parameters:
        - id: event
          type:
            - '"unpipe"'
          description: ''
        - id: listener
          type:
            - '(src: stream.Readable) => void'
          description: ''
      return:
        type:
          - this
        description: ''
    package: '@azure/ms-rest-azure-env'
  - uid: '@azure/ms-rest-azure-env.http2.Http2Stream.once'
    name: 'once(string, (args: any[]) => void)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function once(event: string, listener: (args: any[]) => void)'
      parameters:
        - id: event
          type:
            - string
          description: ''
        - id: listener
          type:
            - '(args: any[]) => void'
          description: ''
      return:
        type:
          - this
        description: ''
    package: '@azure/ms-rest-azure-env'
  - uid: '@azure/ms-rest-azure-env.http2.Http2Stream.pause'
    name: pause()
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: function pause()
      parameters: []
      return:
        type:
          - this
        description: ''
    package: '@azure/ms-rest-azure-env'
  - uid: '@azure/ms-rest-azure-env.http2.Http2Stream.pipe'
    name: 'pipe(T, undefined | Object)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function pipe<T>(destination: T, options?: undefined | Object)'
      parameters:
        - id: destination
          type:
            - T
          description: ''
        - id: options
          type:
            - undefined | Object
          description: ''
          optional: true
      return:
        type:
          - T
        description: ''
    package: '@azure/ms-rest-azure-env'
  - uid: '@azure/ms-rest-azure-env.http2.Http2Stream.prependListener_1'
    name: 'prependListener("aborted", () => void)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function prependListener(event: "aborted", listener: () => void)'
      parameters:
        - id: event
          type:
            - '"aborted"'
          description: ''
        - id: listener
          type:
            - () => void
          description: ''
      return:
        type:
          - this
        description: ''
    package: '@azure/ms-rest-azure-env'
  - uid: '@azure/ms-rest-azure-env.http2.Http2Stream.prependListener_2'
    name: 'prependListener("close", () => void)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function prependListener(event: "close", listener: () => void)'
      parameters:
        - id: event
          type:
            - '"close"'
          description: ''
        - id: listener
          type:
            - () => void
          description: ''
      return:
        type:
          - this
        description: ''
    package: '@azure/ms-rest-azure-env'
  - uid: '@azure/ms-rest-azure-env.http2.Http2Stream.prependListener_3'
    name: 'prependListener("data", (chunk: Buffer | string) => void)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function prependListener(event: "data", listener: (chunk: Buffer |
        string) => void)
      parameters:
        - id: event
          type:
            - '"data"'
          description: ''
        - id: listener
          type:
            - '(chunk: Buffer | string) => void'
          description: ''
      return:
        type:
          - this
        description: ''
    package: '@azure/ms-rest-azure-env'
  - uid: '@azure/ms-rest-azure-env.http2.Http2Stream.prependListener_4'
    name: 'prependListener("drain", () => void)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function prependListener(event: "drain", listener: () => void)'
      parameters:
        - id: event
          type:
            - '"drain"'
          description: ''
        - id: listener
          type:
            - () => void
          description: ''
      return:
        type:
          - this
        description: ''
    package: '@azure/ms-rest-azure-env'
  - uid: '@azure/ms-rest-azure-env.http2.Http2Stream.prependListener_5'
    name: 'prependListener("end", () => void)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function prependListener(event: "end", listener: () => void)'
      parameters:
        - id: event
          type:
            - '"end"'
          description: ''
        - id: listener
          type:
            - () => void
          description: ''
      return:
        type:
          - this
        description: ''
    package: '@azure/ms-rest-azure-env'
  - uid: '@azure/ms-rest-azure-env.http2.Http2Stream.prependListener_6'
    name: 'prependListener("error", (err: Error) => void)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function prependListener(event: "error", listener: (err: Error) => void)'
      parameters:
        - id: event
          type:
            - '"error"'
          description: ''
        - id: listener
          type:
            - '(err: Error) => void'
          description: ''
      return:
        type:
          - this
        description: ''
    package: '@azure/ms-rest-azure-env'
  - uid: '@azure/ms-rest-azure-env.http2.Http2Stream.prependListener_7'
    name: 'prependListener("finish", () => void)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function prependListener(event: "finish", listener: () => void)'
      parameters:
        - id: event
          type:
            - '"finish"'
          description: ''
        - id: listener
          type:
            - () => void
          description: ''
      return:
        type:
          - this
        description: ''
    package: '@azure/ms-rest-azure-env'
  - uid: '@azure/ms-rest-azure-env.http2.Http2Stream.prependListener_8'
    name: >-
      prependListener("frameError", (frameType: number, errorCode: number) =>
      void)
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function prependListener(event: "frameError", listener: (frameType:
        number, errorCode: number) => void)
      parameters:
        - id: event
          type:
            - '"frameError"'
          description: ''
        - id: listener
          type:
            - '(frameType: number, errorCode: number) => void'
          description: ''
      return:
        type:
          - this
        description: ''
    package: '@azure/ms-rest-azure-env'
  - uid: '@azure/ms-rest-azure-env.http2.Http2Stream.prependListener_9'
    name: 'prependListener("pipe", (src: stream.Readable) => void)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function prependListener(event: "pipe", listener: (src: stream.Readable)
        => void)
      parameters:
        - id: event
          type:
            - '"pipe"'
          description: ''
        - id: listener
          type:
            - '(src: stream.Readable) => void'
          description: ''
      return:
        type:
          - this
        description: ''
    package: '@azure/ms-rest-azure-env'
  - uid: '@azure/ms-rest-azure-env.http2.Http2Stream.prependListener_11'
    name: 'prependListener("streamClosed", (code: number) => void)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function prependListener(event: "streamClosed", listener: (code: number)
        => void)
      parameters:
        - id: event
          type:
            - '"streamClosed"'
          description: ''
        - id: listener
          type:
            - '(code: number) => void'
          description: ''
      return:
        type:
          - this
        description: ''
    package: '@azure/ms-rest-azure-env'
  - uid: '@azure/ms-rest-azure-env.http2.Http2Stream.prependListener_12'
    name: 'prependListener("timeout", () => void)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function prependListener(event: "timeout", listener: () => void)'
      parameters:
        - id: event
          type:
            - '"timeout"'
          description: ''
        - id: listener
          type:
            - () => void
          description: ''
      return:
        type:
          - this
        description: ''
    package: '@azure/ms-rest-azure-env'
  - uid: '@azure/ms-rest-azure-env.http2.Http2Stream.prependListener_13'
    name: >-
      prependListener("trailers", (trailers: IncomingHttpHeaders, flags: number)
      => void)
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function prependListener(event: "trailers", listener: (trailers:
        IncomingHttpHeaders, flags: number) => void)
      parameters:
        - id: event
          type:
            - '"trailers"'
          description: ''
        - id: listener
          type:
            - '(trailers: IncomingHttpHeaders, flags: number) => void'
          description: ''
      return:
        type:
          - this
        description: ''
    package: '@azure/ms-rest-azure-env'
  - uid: '@azure/ms-rest-azure-env.http2.Http2Stream.prependListener_10'
    name: 'prependListener("unpipe", (src: stream.Readable) => void)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function prependListener(event: "unpipe", listener: (src:
        stream.Readable) => void)
      parameters:
        - id: event
          type:
            - '"unpipe"'
          description: ''
        - id: listener
          type:
            - '(src: stream.Readable) => void'
          description: ''
      return:
        type:
          - this
        description: ''
    package: '@azure/ms-rest-azure-env'
  - uid: '@azure/ms-rest-azure-env.http2.Http2Stream.prependListener'
    name: 'prependListener(string, (args: any[]) => void)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function prependListener(event: string, listener: (args: any[]) => void)'
      parameters:
        - id: event
          type:
            - string
          description: ''
        - id: listener
          type:
            - '(args: any[]) => void'
          description: ''
      return:
        type:
          - this
        description: ''
    package: '@azure/ms-rest-azure-env'
  - uid: '@azure/ms-rest-azure-env.http2.Http2Stream.prependOnceListener_1'
    name: 'prependOnceListener("aborted", () => void)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function prependOnceListener(event: "aborted", listener: () => void)'
      parameters:
        - id: event
          type:
            - '"aborted"'
          description: ''
        - id: listener
          type:
            - () => void
          description: ''
      return:
        type:
          - this
        description: ''
    package: '@azure/ms-rest-azure-env'
  - uid: '@azure/ms-rest-azure-env.http2.Http2Stream.prependOnceListener_2'
    name: 'prependOnceListener("close", () => void)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function prependOnceListener(event: "close", listener: () => void)'
      parameters:
        - id: event
          type:
            - '"close"'
          description: ''
        - id: listener
          type:
            - () => void
          description: ''
      return:
        type:
          - this
        description: ''
    package: '@azure/ms-rest-azure-env'
  - uid: '@azure/ms-rest-azure-env.http2.Http2Stream.prependOnceListener_3'
    name: 'prependOnceListener("data", (chunk: Buffer | string) => void)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function prependOnceListener(event: "data", listener: (chunk: Buffer |
        string) => void)
      parameters:
        - id: event
          type:
            - '"data"'
          description: ''
        - id: listener
          type:
            - '(chunk: Buffer | string) => void'
          description: ''
      return:
        type:
          - this
        description: ''
    package: '@azure/ms-rest-azure-env'
  - uid: '@azure/ms-rest-azure-env.http2.Http2Stream.prependOnceListener_4'
    name: 'prependOnceListener("drain", () => void)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function prependOnceListener(event: "drain", listener: () => void)'
      parameters:
        - id: event
          type:
            - '"drain"'
          description: ''
        - id: listener
          type:
            - () => void
          description: ''
      return:
        type:
          - this
        description: ''
    package: '@azure/ms-rest-azure-env'
  - uid: '@azure/ms-rest-azure-env.http2.Http2Stream.prependOnceListener_5'
    name: 'prependOnceListener("end", () => void)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function prependOnceListener(event: "end", listener: () => void)'
      parameters:
        - id: event
          type:
            - '"end"'
          description: ''
        - id: listener
          type:
            - () => void
          description: ''
      return:
        type:
          - this
        description: ''
    package: '@azure/ms-rest-azure-env'
  - uid: '@azure/ms-rest-azure-env.http2.Http2Stream.prependOnceListener_6'
    name: 'prependOnceListener("error", (err: Error) => void)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function prependOnceListener(event: "error", listener: (err: Error) =>
        void)
      parameters:
        - id: event
          type:
            - '"error"'
          description: ''
        - id: listener
          type:
            - '(err: Error) => void'
          description: ''
      return:
        type:
          - this
        description: ''
    package: '@azure/ms-rest-azure-env'
  - uid: '@azure/ms-rest-azure-env.http2.Http2Stream.prependOnceListener_7'
    name: 'prependOnceListener("finish", () => void)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function prependOnceListener(event: "finish", listener: () => void)'
      parameters:
        - id: event
          type:
            - '"finish"'
          description: ''
        - id: listener
          type:
            - () => void
          description: ''
      return:
        type:
          - this
        description: ''
    package: '@azure/ms-rest-azure-env'
  - uid: '@azure/ms-rest-azure-env.http2.Http2Stream.prependOnceListener_8'
    name: >-
      prependOnceListener("frameError", (frameType: number, errorCode: number)
      => void)
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function prependOnceListener(event: "frameError", listener: (frameType:
        number, errorCode: number) => void)
      parameters:
        - id: event
          type:
            - '"frameError"'
          description: ''
        - id: listener
          type:
            - '(frameType: number, errorCode: number) => void'
          description: ''
      return:
        type:
          - this
        description: ''
    package: '@azure/ms-rest-azure-env'
  - uid: '@azure/ms-rest-azure-env.http2.Http2Stream.prependOnceListener_9'
    name: 'prependOnceListener("pipe", (src: stream.Readable) => void)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function prependOnceListener(event: "pipe", listener: (src:
        stream.Readable) => void)
      parameters:
        - id: event
          type:
            - '"pipe"'
          description: ''
        - id: listener
          type:
            - '(src: stream.Readable) => void'
          description: ''
      return:
        type:
          - this
        description: ''
    package: '@azure/ms-rest-azure-env'
  - uid: '@azure/ms-rest-azure-env.http2.Http2Stream.prependOnceListener_11'
    name: 'prependOnceListener("streamClosed", (code: number) => void)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function prependOnceListener(event: "streamClosed", listener: (code:
        number) => void)
      parameters:
        - id: event
          type:
            - '"streamClosed"'
          description: ''
        - id: listener
          type:
            - '(code: number) => void'
          description: ''
      return:
        type:
          - this
        description: ''
    package: '@azure/ms-rest-azure-env'
  - uid: '@azure/ms-rest-azure-env.http2.Http2Stream.prependOnceListener_12'
    name: 'prependOnceListener("timeout", () => void)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function prependOnceListener(event: "timeout", listener: () => void)'
      parameters:
        - id: event
          type:
            - '"timeout"'
          description: ''
        - id: listener
          type:
            - () => void
          description: ''
      return:
        type:
          - this
        description: ''
    package: '@azure/ms-rest-azure-env'
  - uid: '@azure/ms-rest-azure-env.http2.Http2Stream.prependOnceListener_13'
    name: >-
      prependOnceListener("trailers", (trailers: IncomingHttpHeaders, flags:
      number) => void)
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function prependOnceListener(event: "trailers", listener: (trailers:
        IncomingHttpHeaders, flags: number) => void)
      parameters:
        - id: event
          type:
            - '"trailers"'
          description: ''
        - id: listener
          type:
            - '(trailers: IncomingHttpHeaders, flags: number) => void'
          description: ''
      return:
        type:
          - this
        description: ''
    package: '@azure/ms-rest-azure-env'
  - uid: '@azure/ms-rest-azure-env.http2.Http2Stream.prependOnceListener_10'
    name: 'prependOnceListener("unpipe", (src: stream.Readable) => void)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function prependOnceListener(event: "unpipe", listener: (src:
        stream.Readable) => void)
      parameters:
        - id: event
          type:
            - '"unpipe"'
          description: ''
        - id: listener
          type:
            - '(src: stream.Readable) => void'
          description: ''
      return:
        type:
          - this
        description: ''
    package: '@azure/ms-rest-azure-env'
  - uid: '@azure/ms-rest-azure-env.http2.Http2Stream.prependOnceListener'
    name: 'prependOnceListener(string, (args: any[]) => void)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function prependOnceListener(event: string, listener: (args: any[]) =>
        void)
      parameters:
        - id: event
          type:
            - string
          description: ''
        - id: listener
          type:
            - '(args: any[]) => void'
          description: ''
      return:
        type:
          - this
        description: ''
    package: '@azure/ms-rest-azure-env'
  - uid: '@azure/ms-rest-azure-env.http2.Http2Stream.priority'
    name: priority(StreamPriorityOptions)
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function priority(options: StreamPriorityOptions)'
      parameters:
        - id: options
          type:
            - StreamPriorityOptions
          description: ''
    package: '@azure/ms-rest-azure-env'
  - uid: '@azure/ms-rest-azure-env.http2.Http2Stream.push'
    name: 'push(any, undefined | string)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function push(chunk: any, encoding?: undefined | string)'
      parameters:
        - id: chunk
          type:
            - any
          description: ''
        - id: encoding
          type:
            - undefined | string
          description: ''
          optional: true
      return:
        type:
          - boolean
        description: ''
    package: '@azure/ms-rest-azure-env'
  - uid: '@azure/ms-rest-azure-env.http2.Http2Stream.rawListeners'
    name: rawListeners(string | symbol)
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function rawListeners(event: string | symbol)'
      parameters:
        - id: event
          type:
            - string | symbol
          description: ''
      return:
        type:
          - 'Function[]'
        description: ''
    package: '@azure/ms-rest-azure-env'
  - uid: '@azure/ms-rest-azure-env.http2.Http2Stream.read'
    name: read(undefined | number)
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function read(size?: undefined | number)'
      parameters:
        - id: size
          type:
            - undefined | number
          description: ''
          optional: true
      return:
        type:
          - any
        description: ''
    package: '@azure/ms-rest-azure-env'
  - uid: '@azure/ms-rest-azure-env.http2.Http2Stream.readable'
    name: readable
    fullName: readable
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    syntax:
      content: 'readable: boolean'
      return:
        type:
          - boolean
        description: ''
    package: '@azure/ms-rest-azure-env'
  - uid: '@azure/ms-rest-azure-env.http2.Http2Stream.readableHighWaterMark'
    name: readableHighWaterMark
    fullName: readableHighWaterMark
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    syntax:
      content: 'readableHighWaterMark: number'
      return:
        type:
          - number
        description: ''
    package: '@azure/ms-rest-azure-env'
  - uid: '@azure/ms-rest-azure-env.http2.Http2Stream.readableLength'
    name: readableLength
    fullName: readableLength
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    syntax:
      content: 'readableLength: number'
      return:
        type:
          - number
        description: ''
    package: '@azure/ms-rest-azure-env'
  - uid: '@azure/ms-rest-azure-env.http2.Http2Stream.readableObjectMode'
    name: readableObjectMode
    fullName: readableObjectMode
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    syntax:
      content: 'readableObjectMode: boolean'
      return:
        type:
          - boolean
        description: ''
    package: '@azure/ms-rest-azure-env'
  - uid: '@azure/ms-rest-azure-env.http2.Http2Stream.removeAllListeners'
    name: removeAllListeners(string | symbol)
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function removeAllListeners(event?: string | symbol)'
      parameters:
        - id: event
          type:
            - string | symbol
          description: ''
          optional: true
      return:
        type:
          - this
        description: ''
    package: '@azure/ms-rest-azure-env'
  - uid: '@azure/ms-rest-azure-env.http2.Http2Stream.removeListener'
    name: 'removeListener("close", () => void)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function removeListener(event: "close", listener: () => void)'
      parameters:
        - id: event
          type:
            - '"close"'
          description: ''
        - id: listener
          type:
            - () => void
          description: ''
      return:
        type:
          - this
        description: ''
    package: '@azure/ms-rest-azure-env'
  - uid: '@azure/ms-rest-azure-env.http2.Http2Stream.removeListener_1'
    name: 'removeListener("data", (chunk: any) => void)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function removeListener(event: "data", listener: (chunk: any) => void)'
      parameters:
        - id: event
          type:
            - '"data"'
          description: ''
        - id: listener
          type:
            - '(chunk: any) => void'
          description: ''
      return:
        type:
          - this
        description: ''
    package: '@azure/ms-rest-azure-env'
  - uid: '@azure/ms-rest-azure-env.http2.Http2Stream.removeListener_2'
    name: 'removeListener("end", () => void)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function removeListener(event: "end", listener: () => void)'
      parameters:
        - id: event
          type:
            - '"end"'
          description: ''
        - id: listener
          type:
            - () => void
          description: ''
      return:
        type:
          - this
        description: ''
    package: '@azure/ms-rest-azure-env'
  - uid: '@azure/ms-rest-azure-env.http2.Http2Stream.removeListener_4'
    name: 'removeListener("error", (err: Error) => void)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function removeListener(event: "error", listener: (err: Error) => void)'
      parameters:
        - id: event
          type:
            - '"error"'
          description: ''
        - id: listener
          type:
            - '(err: Error) => void'
          description: ''
      return:
        type:
          - this
        description: ''
    package: '@azure/ms-rest-azure-env'
  - uid: '@azure/ms-rest-azure-env.http2.Http2Stream.removeListener_3'
    name: 'removeListener("readable", () => void)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function removeListener(event: "readable", listener: () => void)'
      parameters:
        - id: event
          type:
            - '"readable"'
          description: ''
        - id: listener
          type:
            - () => void
          description: ''
      return:
        type:
          - this
        description: ''
    package: '@azure/ms-rest-azure-env'
  - uid: '@azure/ms-rest-azure-env.http2.Http2Stream.removeListener_5'
    name: 'removeListener(string | symbol, (args: any[]) => void)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function removeListener(event: string | symbol, listener: (args: any[])
        => void)
      parameters:
        - id: event
          type:
            - string | symbol
          description: ''
        - id: listener
          type:
            - '(args: any[]) => void'
          description: ''
      return:
        type:
          - this
        description: ''
    package: '@azure/ms-rest-azure-env'
  - uid: '@azure/ms-rest-azure-env.http2.Http2Stream.resume'
    name: resume()
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: function resume()
      parameters: []
      return:
        type:
          - this
        description: ''
    package: '@azure/ms-rest-azure-env'
  - uid: '@azure/ms-rest-azure-env.http2.Http2Stream.rstCode'
    name: rstCode
    fullName: rstCode
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    syntax:
      content: 'rstCode: number'
      return:
        type:
          - number
        description: ''
    package: '@azure/ms-rest-azure-env'
  - uid: '@azure/ms-rest-azure-env.http2.Http2Stream.rstStream'
    name: rstStream(number)
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function rstStream(code: number)'
      parameters:
        - id: code
          type:
            - number
          description: ''
    package: '@azure/ms-rest-azure-env'
  - uid: '@azure/ms-rest-azure-env.http2.Http2Stream.rstWithCancel'
    name: rstWithCancel()
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: function rstWithCancel()
      parameters: []
    package: '@azure/ms-rest-azure-env'
  - uid: '@azure/ms-rest-azure-env.http2.Http2Stream.rstWithInternalError'
    name: rstWithInternalError()
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: function rstWithInternalError()
      parameters: []
    package: '@azure/ms-rest-azure-env'
  - uid: '@azure/ms-rest-azure-env.http2.Http2Stream.rstWithNoError'
    name: rstWithNoError()
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: function rstWithNoError()
      parameters: []
    package: '@azure/ms-rest-azure-env'
  - uid: '@azure/ms-rest-azure-env.http2.Http2Stream.rstWithProtocolError'
    name: rstWithProtocolError()
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: function rstWithProtocolError()
      parameters: []
    package: '@azure/ms-rest-azure-env'
  - uid: '@azure/ms-rest-azure-env.http2.Http2Stream.rstWithRefuse'
    name: rstWithRefuse()
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: function rstWithRefuse()
      parameters: []
    package: '@azure/ms-rest-azure-env'
  - uid: '@azure/ms-rest-azure-env.http2.Http2Stream.session'
    name: session
    fullName: session
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    syntax:
      content: 'session: Http2Session'
      return:
        type:
          - Http2Session
        description: ''
    package: '@azure/ms-rest-azure-env'
  - uid: '@azure/ms-rest-azure-env.http2.Http2Stream.setDefaultEncoding'
    name: setDefaultEncoding(string)
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function setDefaultEncoding(encoding: string)'
      parameters:
        - id: encoding
          type:
            - string
          description: ''
      return:
        type:
          - this
        description: ''
    package: '@azure/ms-rest-azure-env'
  - uid: '@azure/ms-rest-azure-env.http2.Http2Stream.setEncoding'
    name: setEncoding(string)
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function setEncoding(encoding: string)'
      parameters:
        - id: encoding
          type:
            - string
          description: ''
      return:
        type:
          - this
        description: ''
    package: '@azure/ms-rest-azure-env'
  - uid: '@azure/ms-rest-azure-env.http2.Http2Stream.setMaxListeners'
    name: setMaxListeners(number)
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function setMaxListeners(n: number)'
      parameters:
        - id: 'n'
          type:
            - number
          description: ''
      return:
        type:
          - this
        description: ''
    package: '@azure/ms-rest-azure-env'
  - uid: '@azure/ms-rest-azure-env.http2.Http2Stream.setTimeout'
    name: 'setTimeout(number, undefined | () => void)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function setTimeout(msecs: number, callback?: undefined | () => void)'
      parameters:
        - id: msecs
          type:
            - number
          description: ''
        - id: callback
          type:
            - undefined | () => void
          description: ''
          optional: true
    package: '@azure/ms-rest-azure-env'
  - uid: '@azure/ms-rest-azure-env.http2.Http2Stream.state'
    name: state
    fullName: state
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    syntax:
      content: 'state: StreamState'
      return:
        type:
          - StreamState
        description: ''
    package: '@azure/ms-rest-azure-env'
  - uid: '@azure/ms-rest-azure-env.http2.Http2Stream.uncork'
    name: uncork()
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: function uncork()
      parameters: []
    package: '@azure/ms-rest-azure-env'
  - uid: '@azure/ms-rest-azure-env.http2.Http2Stream.unpipe'
    name: unpipe(NodeJS.WritableStream)
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function unpipe(destination?: NodeJS.WritableStream)'
      parameters:
        - id: destination
          type:
            - '@azure/ms-rest-azure-env.NodeJS.WritableStream'
          description: ''
          optional: true
      return:
        type:
          - this
        description: ''
    package: '@azure/ms-rest-azure-env'
  - uid: '@azure/ms-rest-azure-env.http2.Http2Stream.unshift'
    name: 'unshift(any, BufferEncoding)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function unshift(chunk: any, encoding?: BufferEncoding)'
      parameters:
        - id: chunk
          type:
            - any
          description: ''
        - id: encoding
          type:
            - '@azure/ms-rest-azure-env.BufferEncoding'
          description: ''
          optional: true
    package: '@azure/ms-rest-azure-env'
  - uid: '@azure/ms-rest-azure-env.http2.Http2Stream.wrap'
    name: wrap(ReadableStream)
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function wrap(oldStream: ReadableStream)'
      parameters:
        - id: oldStream
          type:
            - ReadableStream
          description: ''
      return:
        type:
          - this
        description: ''
    package: '@azure/ms-rest-azure-env'
  - uid: '@azure/ms-rest-azure-env.http2.Http2Stream.writable'
    name: writable
    fullName: writable
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    syntax:
      content: 'writable: boolean'
      return:
        type:
          - boolean
        description: ''
    package: '@azure/ms-rest-azure-env'
  - uid: '@azure/ms-rest-azure-env.http2.Http2Stream.writableCorked'
    name: writableCorked
    fullName: writableCorked
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    syntax:
      content: 'writableCorked: number'
      return:
        type:
          - number
        description: ''
    package: '@azure/ms-rest-azure-env'
  - uid: '@azure/ms-rest-azure-env.http2.Http2Stream.writableEnded'
    name: writableEnded
    fullName: writableEnded
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    syntax:
      content: 'writableEnded: boolean'
      return:
        type:
          - boolean
        description: ''
    package: '@azure/ms-rest-azure-env'
  - uid: '@azure/ms-rest-azure-env.http2.Http2Stream.writableFinished'
    name: writableFinished
    fullName: writableFinished
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    syntax:
      content: 'writableFinished: boolean'
      return:
        type:
          - boolean
        description: ''
    package: '@azure/ms-rest-azure-env'
  - uid: '@azure/ms-rest-azure-env.http2.Http2Stream.writableHighWaterMark'
    name: writableHighWaterMark
    fullName: writableHighWaterMark
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    syntax:
      content: 'writableHighWaterMark: number'
      return:
        type:
          - number
        description: ''
    package: '@azure/ms-rest-azure-env'
  - uid: '@azure/ms-rest-azure-env.http2.Http2Stream.writableLength'
    name: writableLength
    fullName: writableLength
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    syntax:
      content: 'writableLength: number'
      return:
        type:
          - number
        description: ''
    package: '@azure/ms-rest-azure-env'
  - uid: '@azure/ms-rest-azure-env.http2.Http2Stream.writableObjectMode'
    name: writableObjectMode
    fullName: writableObjectMode
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    syntax:
      content: 'writableObjectMode: boolean'
      return:
        type:
          - boolean
        description: ''
    package: '@azure/ms-rest-azure-env'
  - uid: '@azure/ms-rest-azure-env.http2.Http2Stream.write_1'
    name: 'write(any, undefined | (error: Error | null | undefined) => void)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function write(chunk: any, cb?: undefined | (error: Error | null |
        undefined) => void)
      parameters:
        - id: chunk
          type:
            - any
          description: ''
        - id: cb
          type:
            - 'undefined | (error: Error | null | undefined) => void'
          description: ''
          optional: true
      return:
        type:
          - boolean
        description: ''
    package: '@azure/ms-rest-azure-env'
  - uid: '@azure/ms-rest-azure-env.http2.Http2Stream.write'
    name: >-
      write(any, undefined | string, undefined | (error: Error | null |
      undefined) => void)
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function write(chunk: any, encoding?: undefined | string, cb?: undefined
        | (error: Error | null | undefined) => void)
      parameters:
        - id: chunk
          type:
            - any
          description: ''
        - id: encoding
          type:
            - undefined | string
          description: ''
          optional: true
        - id: cb
          type:
            - 'undefined | (error: Error | null | undefined) => void'
          description: ''
          optional: true
      return:
        type:
          - boolean
        description: ''
    package: '@azure/ms-rest-azure-env'
references:
  - uid: '@azure/ms-rest-azure-env.stream.internal.Readable'
    name: Readable
    spec.typeScript:
      - name: Readable
        fullName: Readable
        uid: '@azure/ms-rest-azure-env.stream.internal.Readable'
  - uid: >-
      @azure/ms-rest-azure-env.net.Socket |
      @azure/ms-rest-azure-env.tls.TLSSocket
    name: TLSSocket
    spec.typeScript:
      - name: Socket
        fullName: Socket
        uid: '@azure/ms-rest-azure-env.net.Socket'
      - name: ' | '
        fullName: ' | '
      - name: TLSSocket
        fullName: TLSSocket
        uid: '@azure/ms-rest-azure-env.tls.TLSSocket'
  - uid: '@azure/ms-rest-azure-env.Error'
    name: Error
    spec.typeScript:
      - name: Error
        fullName: Error
        uid: '@azure/ms-rest-azure-env.Error'
  - uid: '@azure/ms-rest-azure-env.NodeJS.WritableStream'
    name: WritableStream
    spec.typeScript:
      - name: WritableStream
        fullName: WritableStream
        uid: '@azure/ms-rest-azure-env.NodeJS.WritableStream'
  - uid: '@azure/ms-rest-azure-env.BufferEncoding'
    name: BufferEncoding
    spec.typeScript:
      - name: BufferEncoding
        fullName: BufferEncoding
        uid: '@azure/ms-rest-azure-env.BufferEncoding'
  - uid: '@azure/ms-rest-azure-env.stream.internal.ReadableOptions'
    name: ReadableOptions
    spec.typeScript:
      - name: ReadableOptions
        fullName: ReadableOptions
        uid: '@azure/ms-rest-azure-env.stream.internal.ReadableOptions'
  - uid: '@azure/ms-rest-azure-env.stream.internal.Stream'
    name: Stream
    spec.typeScript:
      - name: Stream
        fullName: Stream
        uid: '@azure/ms-rest-azure-env.stream.internal.Stream'
  - uid: '@azure/ms-rest-azure-env.http.OutgoingHttpHeaders'
    name: OutgoingHttpHeaders
    spec.typeScript:
      - name: OutgoingHttpHeaders
        fullName: OutgoingHttpHeaders
        uid: '@azure/ms-rest-azure-env.http.OutgoingHttpHeaders'
  - uid: '@azure/ms-rest-azure-env.NodeJS.ArrayBufferView'
    name: ArrayBufferView
    spec.typeScript:
      - name: ArrayBufferView
        fullName: ArrayBufferView
        uid: '@azure/ms-rest-azure-env.NodeJS.ArrayBufferView'
  - uid: '@azure/ms-rest-azure-env.http2.ClientSessionRequestOptions'
    name: ClientSessionRequestOptions
    spec.typeScript:
      - name: ClientSessionRequestOptions
        fullName: ClientSessionRequestOptions
        uid: '@azure/ms-rest-azure-env.http2.ClientSessionRequestOptions'
  - uid: '@azure/ms-rest-azure-env.http2.SessionShutdownOptions'
    name: SessionShutdownOptions
    spec.typeScript:
      - name: SessionShutdownOptions
        fullName: SessionShutdownOptions
        uid: '@azure/ms-rest-azure-env.http2.SessionShutdownOptions'
  - uid: '@azure/ms-rest-azure-env.stream.internal.DuplexOptions'
    name: DuplexOptions
    spec.typeScript:
      - name: DuplexOptions
        fullName: DuplexOptions
        uid: '@azure/ms-rest-azure-env.stream.internal.DuplexOptions'
  - uid: '@azure/ms-rest-azure-env.tls.Server'
    name: Server
    spec.typeScript:
      - name: Server
        fullName: Server
        uid: '@azure/ms-rest-azure-env.tls.Server'
  - uid: '@azure/ms-rest-azure-env.net.AddressInfo | string | null'
    name: AddressInfo | string | null
    spec.typeScript:
      - name: AddressInfo
        fullName: AddressInfo
        uid: '@azure/ms-rest-azure-env.net.AddressInfo'
      - name: ' | string | null'
        fullName: ' | string | null'
  - uid: '@azure/ms-rest-azure-env.http2.Http2ServerRequest'
    name: Http2ServerRequest
    spec.typeScript:
      - name: Http2ServerRequest
        fullName: Http2ServerRequest
        uid: '@azure/ms-rest-azure-env.http2.Http2ServerRequest'
  - uid: '@azure/ms-rest-azure-env.http2.Http2ServerResponse'
    name: Http2ServerResponse
    spec.typeScript:
      - name: Http2ServerResponse
        fullName: Http2ServerResponse
        uid: '@azure/ms-rest-azure-env.http2.Http2ServerResponse'
  - uid: '@azure/ms-rest-azure-env.tls.TLSSocket'
    name: TLSSocket
    spec.typeScript:
      - name: TLSSocket
        fullName: TLSSocket
        uid: '@azure/ms-rest-azure-env.tls.TLSSocket'
  - uid: '@azure/ms-rest-azure-env.net.Server'
    name: Server
    spec.typeScript:
      - name: Server
        fullName: Server
        uid: '@azure/ms-rest-azure-env.net.Server'
  - uid: '@azure/ms-rest-azure-env.events.EventEmitter.EventEmitter'
    name: EventEmitter
    spec.typeScript:
      - name: EventEmitter
        fullName: EventEmitter
        uid: '@azure/ms-rest-azure-env.events.EventEmitter.EventEmitter'
  - uid: '@azure/ms-rest-azure-env.events.EventEmitterOptions'
    name: EventEmitterOptions
    spec.typeScript:
      - name: EventEmitterOptions
        fullName: EventEmitterOptions
        uid: '@azure/ms-rest-azure-env.events.EventEmitterOptions'
  - uid: '@azure/ms-rest-azure-env.stream.internal.Duplex'
    name: Duplex
    spec.typeScript:
      - name: Duplex
        fullName: Duplex
        uid: '@azure/ms-rest-azure-env.stream.internal.Duplex'
  - uid: '@azure/ms-rest-azure-env.http2.ClientSessionOptions'
    name: ClientSessionOptions
    spec.typeScript:
      - name: ClientSessionOptions
        fullName: ClientSessionOptions
        uid: '@azure/ms-rest-azure-env.http2.ClientSessionOptions'
  - uid: string | Buffer | Array<Buffer | @azure/ms-rest-azure-env.tls.KeyObject>
    name: KeyObject>
    spec.typeScript:
      - name: 'string | Buffer | Array<Buffer | '
        fullName: 'string | Buffer | Array<Buffer | '
      - name: KeyObject
        fullName: KeyObject
        uid: '@azure/ms-rest-azure-env.tls.KeyObject'
      - name: '>'
        fullName: '>'
  - uid: '@azure/ms-rest-azure-env.tls.SecureVersion'
    name: SecureVersion
    spec.typeScript:
      - name: SecureVersion
        fullName: SecureVersion
        uid: '@azure/ms-rest-azure-env.tls.SecureVersion'
  - uid: >-
      string | Buffer | Array<string | Buffer |
      @azure/ms-rest-azure-env.tls.PxfObject>
    name: PxfObject>
    spec.typeScript:
      - name: 'string | Buffer | Array<string | Buffer | '
        fullName: 'string | Buffer | Array<string | Buffer | '
      - name: PxfObject
        fullName: PxfObject
        uid: '@azure/ms-rest-azure-env.tls.PxfObject'
      - name: '>'
        fullName: '>'
  - uid: '@azure/ms-rest-azure-env.tls.SecureContext'
    name: SecureContext
    spec.typeScript:
      - name: SecureContext
        fullName: SecureContext
        uid: '@azure/ms-rest-azure-env.tls.SecureContext'
  - uid: '@azure/ms-rest-azure-env.Buffer'
    name: Buffer
    spec.typeScript:
      - name: Buffer
        fullName: Buffer
        uid: '@azure/ms-rest-azure-env.Buffer'
  - uid: '@azure/ms-rest-azure-env.http2.Settings'
    name: Settings
    spec.typeScript:
      - name: Settings
        fullName: Settings
        uid: '@azure/ms-rest-azure-env.http2.Settings'
  - uid: '@azure/ms-rest-azure-env.tls.PSKCallbackNegotation | null'
    name: PSKCallbackNegotation | null
    spec.typeScript:
      - name: PSKCallbackNegotation
        fullName: PSKCallbackNegotation
        uid: '@azure/ms-rest-azure-env.tls.PSKCallbackNegotation'
      - name: ' | null'
        fullName: ' | null'
  - uid: undefined | @azure/ms-rest-azure-env.http.IncomingMessage
    name: IncomingMessage
    spec.typeScript:
      - name: 'undefined | '
        fullName: 'undefined | '
      - name: IncomingMessage
        fullName: IncomingMessage
        uid: '@azure/ms-rest-azure-env.http.IncomingMessage'
  - uid: undefined | @azure/ms-rest-azure-env.http.ServerResponse
    name: ServerResponse
    spec.typeScript:
      - name: 'undefined | '
        fullName: 'undefined | '
      - name: ServerResponse
        fullName: ServerResponse
        uid: '@azure/ms-rest-azure-env.http.ServerResponse'
  - uid: undefined | @azure/ms-rest-azure-env.http2.Http2ServerRequest
    name: Http2ServerRequest
    spec.typeScript:
      - name: 'undefined | '
        fullName: 'undefined | '
      - name: Http2ServerRequest
        fullName: Http2ServerRequest
        uid: '@azure/ms-rest-azure-env.http2.Http2ServerRequest'
  - uid: undefined | @azure/ms-rest-azure-env.http2.Http2ServerResponse
    name: Http2ServerResponse
    spec.typeScript:
      - name: 'undefined | '
        fullName: 'undefined | '
      - name: Http2ServerResponse
        fullName: Http2ServerResponse
        uid: '@azure/ms-rest-azure-env.http2.Http2ServerResponse'
  - uid: '@azure/ms-rest-azure-env.url.URL'
    name: URL
    spec.typeScript:
      - name: URL
        fullName: URL
        uid: '@azure/ms-rest-azure-env.url.URL'
  - uid: DataView | @azure/ms-rest-azure-env.NodeJS.TypedArray | null
    name: TypedArray | null
    spec.typeScript:
      - name: 'DataView | '
        fullName: 'DataView | '
      - name: TypedArray
        fullName: TypedArray
        uid: '@azure/ms-rest-azure-env.NodeJS.TypedArray'
      - name: ' | null'
        fullName: ' | null'
  - uid: '@azure/ms-rest-azure-env.http2.ServerSessionOptions'
    name: ServerSessionOptions
    spec.typeScript:
      - name: ServerSessionOptions
        fullName: ServerSessionOptions
        uid: '@azure/ms-rest-azure-env.http2.ServerSessionOptions'
  - uid: '@azure/ms-rest-azure-env.http2.StreamPriorityOptions'
    name: StreamPriorityOptions
    spec.typeScript:
      - name: StreamPriorityOptions
        fullName: StreamPriorityOptions
        uid: '@azure/ms-rest-azure-env.http2.StreamPriorityOptions'
  - uid: '@azure/ms-rest-azure-env.http2.ServerStreamResponseOptions'
    name: ServerStreamResponseOptions
    spec.typeScript:
      - name: ServerStreamResponseOptions
        fullName: ServerStreamResponseOptions
        uid: '@azure/ms-rest-azure-env.http2.ServerStreamResponseOptions'
  - uid: '@azure/ms-rest-azure-env.http2.ServerStreamFileResponseOptions'
    name: ServerStreamFileResponseOptions
    spec.typeScript:
      - name: ServerStreamFileResponseOptions
        fullName: ServerStreamFileResponseOptions
        uid: '@azure/ms-rest-azure-env.http2.ServerStreamFileResponseOptions'
  - uid: '@azure/ms-rest-azure-env.http2.ServerStreamFileResponseOptionsWithError'
    name: ServerStreamFileResponseOptionsWithError
    spec.typeScript:
      - name: ServerStreamFileResponseOptionsWithError
        fullName: ServerStreamFileResponseOptionsWithError
        uid: >-
          @azure/ms-rest-azure-env.http2.ServerStreamFileResponseOptionsWithError
  - uid: '@azure/ms-rest-azure-env.fs.Stats'
    name: Stats
    spec.typeScript:
      - name: Stats
        fullName: Stats
        uid: '@azure/ms-rest-azure-env.fs.Stats'
  - uid: string | @azure/ms-rest-azure-env.url.URL
    name: URL
    spec.typeScript:
      - name: 'string | '
        fullName: 'string | '
      - name: URL
        fullName: URL
        uid: '@azure/ms-rest-azure-env.url.URL'
  - uid: >-
      @azure/ms-rest-azure-env.http2.ClientSessionOptions |
      SecureClientSessionOptions
    name: ClientSessionOptions | SecureClientSessionOptions
    spec.typeScript:
      - name: ClientSessionOptions
        fullName: ClientSessionOptions
        uid: '@azure/ms-rest-azure-env.http2.ClientSessionOptions'
      - name: ' | SecureClientSessionOptions'
        fullName: ' | SecureClientSessionOptions'
