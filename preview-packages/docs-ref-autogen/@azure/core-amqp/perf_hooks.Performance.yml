### YamlMime:UniversalReference
items:
  - uid: tslib.perf_hooks.Performance
    name: Performance
    fullName: Performance
    children:
      - tslib.perf_hooks.Performance.clearFunctions
      - tslib.perf_hooks.Performance.clearMarks
      - tslib.perf_hooks.Performance.clearMeasures
      - tslib.perf_hooks.Performance.getEntries
      - tslib.perf_hooks.Performance.getEntriesByName
      - tslib.perf_hooks.Performance.getEntriesByType
      - tslib.perf_hooks.Performance.mark
      - tslib.perf_hooks.Performance.measure
      - tslib.perf_hooks.Performance.nodeTiming
      - tslib.perf_hooks.Performance.now
      - tslib.perf_hooks.Performance.timeOrigin
      - tslib.perf_hooks.Performance.timerify
    langs:
      - typeScript
    type: interface
    summary: ''
    package: tslib
  - uid: tslib.perf_hooks.Performance.clearFunctions
    name: clearFunctions(undefined | string)
    children: []
    type: method
    langs:
      - typeScript
    summary: >-
      If name is not provided, removes all PerformanceFunction objects from the
      Performance Timeline.

      If name is provided, removes entries with name.
    syntax:
      content: 'function clearFunctions(name?: undefined | string)'
      parameters:
        - id: name
          type:
            - undefined | string
          description: |+

          optional: true
    package: tslib
  - uid: tslib.perf_hooks.Performance.clearMarks
    name: clearMarks(undefined | string)
    children: []
    type: method
    langs:
      - typeScript
    summary: >-
      If name is not provided, removes all PerformanceMark objects from the
      Performance Timeline.

      If name is provided, removes only the named mark.
    syntax:
      content: 'function clearMarks(name?: undefined | string)'
      parameters:
        - id: name
          type:
            - undefined | string
          description: |+

          optional: true
    package: tslib
  - uid: tslib.perf_hooks.Performance.clearMeasures
    name: clearMeasures(undefined | string)
    children: []
    type: method
    langs:
      - typeScript
    summary: >-
      If name is not provided, removes all PerformanceMeasure objects from the
      Performance Timeline.

      If name is provided, removes only objects whose performanceEntry.name
      matches name.
    syntax:
      content: 'function clearMeasures(name?: undefined | string)'
      parameters:
        - id: name
          type:
            - undefined | string
          description: ''
          optional: true
    package: tslib
  - uid: tslib.perf_hooks.Performance.getEntries
    name: getEntries()
    children: []
    type: method
    langs:
      - typeScript
    summary: >-
      Returns a list of all PerformanceEntry objects in chronological order with
      respect to performanceEntry.startTime.
    syntax:
      content: function getEntries()
      parameters: []
      return:
        type:
          - 'tslib.perf_hooks.PerformanceEntry[]'
        description: list of all PerformanceEntry objects
    package: tslib
  - uid: tslib.perf_hooks.Performance.getEntriesByName
    name: 'getEntriesByName(string, undefined | string)'
    children: []
    type: method
    langs:
      - typeScript
    summary: >-
      Returns a list of all PerformanceEntry objects in chronological order with
      respect to performanceEntry.startTime

      whose performanceEntry.name is equal to name, and optionally, whose
      performanceEntry.entryType is equal to type.
    syntax:
      content: 'function getEntriesByName(name: string, type?: undefined | string)'
      parameters:
        - id: name
          type:
            - string
          description: ''
        - id: type
          type:
            - undefined | string
          description: ''
          optional: true
      return:
        type:
          - 'tslib.perf_hooks.PerformanceEntry[]'
        description: list of all PerformanceEntry objects
    package: tslib
  - uid: tslib.perf_hooks.Performance.getEntriesByType
    name: getEntriesByType(string)
    children: []
    type: method
    langs:
      - typeScript
    summary: >-
      Returns a list of all PerformanceEntry objects in chronological order with
      respect to performanceEntry.startTime

      whose performanceEntry.entryType is equal to type.
    syntax:
      content: 'function getEntriesByType(type: string)'
      parameters:
        - id: type
          type:
            - string
          description: ''
      return:
        type:
          - 'tslib.perf_hooks.PerformanceEntry[]'
        description: list of all PerformanceEntry objects
    package: tslib
  - uid: tslib.perf_hooks.Performance.mark
    name: mark(undefined | string)
    children: []
    type: method
    langs:
      - typeScript
    summary: >-
      Creates a new PerformanceMark entry in the Performance Timeline.

      A PerformanceMark is a subclass of PerformanceEntry whose
      performanceEntry.entryType is always 'mark',

      and whose performanceEntry.duration is always 0.

      Performance marks are used to mark specific significant moments in the
      Performance Timeline.
    syntax:
      content: 'function mark(name?: undefined | string)'
      parameters:
        - id: name
          type:
            - undefined | string
          description: |+

          optional: true
    package: tslib
  - uid: tslib.perf_hooks.Performance.measure
    name: 'measure(string, string, string)'
    children: []
    type: method
    langs:
      - typeScript
    summary: >-
      Creates a new PerformanceMeasure entry in the Performance Timeline.

      A PerformanceMeasure is a subclass of PerformanceEntry whose
      performanceEntry.entryType is always 'measure',

      and whose performanceEntry.duration measures the number of milliseconds
      elapsed since startMark and endMark.

      The startMark argument may identify any existing PerformanceMark in the
      the Performance Timeline, or may identify

      any of the timestamp properties provided by the PerformanceNodeTiming
      class. If the named startMark does not exist,

      then startMark is set to timeOrigin by default.


      The endMark argument must identify any existing PerformanceMark in the the
      Performance Timeline or any of the timestamp

      properties provided by the PerformanceNodeTiming class. If the named
      endMark does not exist, an error will be thrown.
    syntax:
      content: 'function measure(name: string, startMark: string, endMark: string)'
      parameters:
        - id: name
          type:
            - string
          description: ''
        - id: startMark
          type:
            - string
          description: ''
        - id: endMark
          type:
            - string
          description: |+

    package: tslib
  - uid: tslib.perf_hooks.Performance.nodeTiming
    name: nodeTiming
    fullName: nodeTiming
    children: []
    langs:
      - typeScript
    type: property
    summary: >-
      An instance of the PerformanceNodeTiming class that provides performance
      metrics for specific Node.js operational milestones.
    syntax:
      content: 'nodeTiming: PerformanceNodeTiming'
      return:
        type:
          - tslib.perf_hooks.PerformanceNodeTiming
        description: ''
    package: tslib
  - uid: tslib.perf_hooks.Performance.now
    name: now()
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: function now()
      parameters: []
      return:
        type:
          - number
        description: the current high resolution millisecond timestamp
    package: tslib
  - uid: tslib.perf_hooks.Performance.timeOrigin
    name: timeOrigin
    fullName: timeOrigin
    children: []
    langs:
      - typeScript
    type: property
    summary: >-
      The timeOrigin specifies the high resolution millisecond timestamp from
      which all performance metric durations are measured.
    syntax:
      content: 'timeOrigin: number'
      return:
        type:
          - number
        description: ''
    package: tslib
  - uid: tslib.perf_hooks.Performance.timerify
    name: timerify(T)
    children: []
    type: method
    langs:
      - typeScript
    summary: >-
      Wraps a function within a new function that measures the running time of
      the wrapped function.

      A PerformanceObserver must be subscribed to the 'function' event type in
      order for the timing details to be accessed.
    syntax:
      content: 'function timerify<T>(fn: T)'
      parameters:
        - id: fn
          type:
            - T
          description: |+

      return:
        type:
          - T
        description: ''
    package: tslib
references:
  - uid: tslib.async_hooks.AsyncResource
    name: AsyncResource
    spec.typeScript:
      - name: AsyncResource
        fullName: AsyncResource
        uid: tslib.async_hooks.AsyncResource
  - uid: tslib.perf_hooks.PerformanceObserverCallback
    name: PerformanceObserverCallback
    spec.typeScript:
      - name: PerformanceObserverCallback
        fullName: PerformanceObserverCallback
        uid: tslib.perf_hooks.PerformanceObserverCallback
  - uid: tslib.perf_hooks.PerformanceNodeTiming
    name: PerformanceNodeTiming
    spec.typeScript:
      - name: PerformanceNodeTiming
        fullName: PerformanceNodeTiming
        uid: tslib.perf_hooks.PerformanceNodeTiming
  - uid: 'tslib.perf_hooks.PerformanceEntry[]'
    name: 'PerformanceEntry[]'
    spec.typeScript:
      - name: PerformanceEntry
        fullName: PerformanceEntry
        uid: tslib.perf_hooks.PerformanceEntry
      - name: '[]'
        fullName: '[]'
  - uid: tslib.perf_hooks.PerformanceEntry
    name: PerformanceEntry
    spec.typeScript:
      - name: PerformanceEntry
        fullName: PerformanceEntry
        uid: tslib.perf_hooks.PerformanceEntry
  - uid: tslib.perf_hooks.EventLoopMonitorOptions
    name: EventLoopMonitorOptions
    spec.typeScript:
      - name: EventLoopMonitorOptions
        fullName: EventLoopMonitorOptions
        uid: tslib.perf_hooks.EventLoopMonitorOptions
  - uid: tslib.perf_hooks.EventLoopDelayMonitor
    name: EventLoopDelayMonitor
    spec.typeScript:
      - name: EventLoopDelayMonitor
        fullName: EventLoopDelayMonitor
        uid: tslib.perf_hooks.EventLoopDelayMonitor
