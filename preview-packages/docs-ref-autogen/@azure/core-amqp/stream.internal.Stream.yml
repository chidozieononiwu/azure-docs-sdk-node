### YamlMime:UniversalReference
items:
  - uid: tslib.stream.internal.Stream
    name: Stream
    fullName: Stream
    children:
      - tslib.stream.internal.Stream.addListener
      - tslib.stream.internal.Stream.emit
      - tslib.stream.internal.Stream.eventNames
      - tslib.stream.internal.Stream.getMaxListeners
      - tslib.stream.internal.Stream.listenerCount
      - tslib.stream.internal.Stream.listeners
      - tslib.stream.internal.Stream.off
      - tslib.stream.internal.Stream.on
      - tslib.stream.internal.Stream.once
      - tslib.stream.internal.Stream.pipe
      - tslib.stream.internal.Stream.prependListener
      - tslib.stream.internal.Stream.prependOnceListener
      - tslib.stream.internal.Stream.rawListeners
      - tslib.stream.internal.Stream.removeAllListeners
      - tslib.stream.internal.Stream.removeListener
      - tslib.stream.internal.Stream.setMaxListeners
      - tslib.stream.internal.Stream.constructor
    langs:
      - typeScript
    type: class
    summary: ''
    extends:
      name: tslib.stream.internal
    package: tslib
  - uid: tslib.stream.internal.Stream.addListener
    name: 'addListener(string | symbol, (args: any[]) => void)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function addListener(event: string | symbol, listener: (args: any[]) =>
        void)
      parameters:
        - id: event
          type:
            - string | symbol
          description: ''
        - id: listener
          type:
            - '(args: any[]) => void'
          description: ''
      return:
        type:
          - this
        description: ''
    package: tslib
  - uid: tslib.stream.internal.Stream.emit
    name: 'emit(string | symbol, any[])'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function emit(event: string | symbol, args: any[])'
      parameters:
        - id: event
          type:
            - string | symbol
          description: ''
        - id: args
          type:
            - 'any[]'
          description: ''
      return:
        type:
          - boolean
        description: ''
    package: tslib
  - uid: tslib.stream.internal.Stream.eventNames
    name: eventNames()
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: function eventNames()
      parameters: []
      return:
        type:
          - Array<string | symbol>
        description: ''
    package: tslib
  - uid: tslib.stream.internal.Stream.getMaxListeners
    name: getMaxListeners()
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: function getMaxListeners()
      parameters: []
      return:
        type:
          - number
        description: ''
    package: tslib
  - uid: tslib.stream.internal.Stream.listenerCount
    name: listenerCount(string | symbol)
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function listenerCount(type: string | symbol)'
      parameters:
        - id: type
          type:
            - string | symbol
          description: ''
      return:
        type:
          - number
        description: ''
    package: tslib
  - uid: tslib.stream.internal.Stream.listeners
    name: listeners(string | symbol)
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function listeners(event: string | symbol)'
      parameters:
        - id: event
          type:
            - string | symbol
          description: ''
      return:
        type:
          - 'Function[]'
        description: ''
    package: tslib
  - uid: tslib.stream.internal.Stream.off
    name: 'off(string | symbol, (args: any[]) => void)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function off(event: string | symbol, listener: (args: any[]) => void)'
      parameters:
        - id: event
          type:
            - string | symbol
          description: ''
        - id: listener
          type:
            - '(args: any[]) => void'
          description: ''
      return:
        type:
          - this
        description: ''
    package: tslib
  - uid: tslib.stream.internal.Stream.on
    name: 'on(string | symbol, (args: any[]) => void)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function on(event: string | symbol, listener: (args: any[]) => void)'
      parameters:
        - id: event
          type:
            - string | symbol
          description: ''
        - id: listener
          type:
            - '(args: any[]) => void'
          description: ''
      return:
        type:
          - this
        description: ''
    package: tslib
  - uid: tslib.stream.internal.Stream.once
    name: 'once(string | symbol, (args: any[]) => void)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function once(event: string | symbol, listener: (args: any[]) => void)'
      parameters:
        - id: event
          type:
            - string | symbol
          description: ''
        - id: listener
          type:
            - '(args: any[]) => void'
          description: ''
      return:
        type:
          - this
        description: ''
    package: tslib
  - uid: tslib.stream.internal.Stream.pipe
    name: 'pipe(T, undefined | Object)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function pipe<T>(destination: T, options?: undefined | Object)'
      parameters:
        - id: destination
          type:
            - T
          description: ''
        - id: options
          type:
            - undefined | Object
          description: ''
          optional: true
      return:
        type:
          - T
        description: ''
    package: tslib
  - uid: tslib.stream.internal.Stream.prependListener
    name: 'prependListener(string | symbol, (args: any[]) => void)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function prependListener(event: string | symbol, listener: (args: any[])
        => void)
      parameters:
        - id: event
          type:
            - string | symbol
          description: ''
        - id: listener
          type:
            - '(args: any[]) => void'
          description: ''
      return:
        type:
          - this
        description: ''
    package: tslib
  - uid: tslib.stream.internal.Stream.prependOnceListener
    name: 'prependOnceListener(string | symbol, (args: any[]) => void)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function prependOnceListener(event: string | symbol, listener: (args:
        any[]) => void)
      parameters:
        - id: event
          type:
            - string | symbol
          description: ''
        - id: listener
          type:
            - '(args: any[]) => void'
          description: ''
      return:
        type:
          - this
        description: ''
    package: tslib
  - uid: tslib.stream.internal.Stream.rawListeners
    name: rawListeners(string | symbol)
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function rawListeners(event: string | symbol)'
      parameters:
        - id: event
          type:
            - string | symbol
          description: ''
      return:
        type:
          - 'Function[]'
        description: ''
    package: tslib
  - uid: tslib.stream.internal.Stream.removeAllListeners
    name: removeAllListeners(string | symbol)
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function removeAllListeners(event?: string | symbol)'
      parameters:
        - id: event
          type:
            - string | symbol
          description: ''
          optional: true
      return:
        type:
          - this
        description: ''
    package: tslib
  - uid: tslib.stream.internal.Stream.removeListener
    name: 'removeListener(string | symbol, (args: any[]) => void)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function removeListener(event: string | symbol, listener: (args: any[])
        => void)
      parameters:
        - id: event
          type:
            - string | symbol
          description: ''
        - id: listener
          type:
            - '(args: any[]) => void'
          description: ''
      return:
        type:
          - this
        description: ''
    package: tslib
  - uid: tslib.stream.internal.Stream.setMaxListeners
    name: setMaxListeners(number)
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function setMaxListeners(n: number)'
      parameters:
        - id: 'n'
          type:
            - number
          description: ''
      return:
        type:
          - this
        description: ''
    package: tslib
  - uid: tslib.stream.internal.Stream.constructor
    name: Stream(ReadableOptions)
    children: []
    type: constructor
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'new Stream(opts?: ReadableOptions)'
      parameters:
        - id: opts
          type:
            - tslib.stream.internal.ReadableOptions
          description: ''
          optional: true
    package: tslib
references:
  - uid: tslib.events.EventEmitter.EventEmitter
    name: EventEmitter
    spec.typeScript:
      - name: EventEmitter
        fullName: EventEmitter
        uid: tslib.events.EventEmitter.EventEmitter
  - uid: tslib.stream.internal.Readable
    name: Readable
    spec.typeScript:
      - name: Readable
        fullName: Readable
        uid: tslib.stream.internal.Readable
  - uid: tslib.stream.internal.DuplexOptions
    name: DuplexOptions
    spec.typeScript:
      - name: DuplexOptions
        fullName: DuplexOptions
        uid: tslib.stream.internal.DuplexOptions
  - uid: tslib.AbortError.Error
    name: Error
    spec.typeScript:
      - name: Error
        fullName: Error
        uid: tslib.AbortError.Error
  - uid: tslib.NodeJS.WritableStream
    name: WritableStream
    spec.typeScript:
      - name: WritableStream
        fullName: WritableStream
        uid: tslib.NodeJS.WritableStream
  - uid: tslib.BufferEncoding
    name: BufferEncoding
    spec.typeScript:
      - name: BufferEncoding
        fullName: BufferEncoding
        uid: tslib.BufferEncoding
  - uid: tslib.NodeJS.ReadableStream
    name: ReadableStream
    spec.typeScript:
      - name: ReadableStream
        fullName: ReadableStream
        uid: tslib.NodeJS.ReadableStream
  - uid: tslib.stream.internal.ReadableOptions
    name: ReadableOptions
    spec.typeScript:
      - name: ReadableOptions
        fullName: ReadableOptions
        uid: tslib.stream.internal.ReadableOptions
  - uid: tslib.stream.internal.Transform
    name: Transform
    spec.typeScript:
      - name: Transform
        fullName: Transform
        uid: tslib.stream.internal.Transform
  - uid: tslib.stream.internal.TransformOptions
    name: TransformOptions
    spec.typeScript:
      - name: TransformOptions
        fullName: TransformOptions
        uid: tslib.stream.internal.TransformOptions
  - uid: tslib.stream.internal.Stream
    name: Stream
    spec.typeScript:
      - name: Stream
        fullName: Stream
        uid: tslib.stream.internal.Stream
  - uid: tslib.stream.internal
    name: internal
    spec.typeScript:
      - name: internal
        fullName: internal
        uid: tslib.stream.internal
  - uid: tslib.stream.internal.Duplex
    name: Duplex
    spec.typeScript:
      - name: Duplex
        fullName: Duplex
        uid: tslib.stream.internal.Duplex
  - uid: tslib.stream.internal.WritableOptions
    name: WritableOptions
    spec.typeScript:
      - name: WritableOptions
        fullName: WritableOptions
        uid: tslib.stream.internal.WritableOptions
  - uid: tslib.stream.internal.TransformCallback
    name: TransformCallback
    spec.typeScript:
      - name: TransformCallback
        fullName: TransformCallback
        uid: tslib.stream.internal.TransformCallback
  - uid: tslib.stream.internal.Writable
    name: Writable
    spec.typeScript:
      - name: Writable
        fullName: Writable
        uid: tslib.stream.internal.Writable
  - uid: tslib.events.EventEmitterOptions
    name: EventEmitterOptions
    spec.typeScript:
      - name: EventEmitterOptions
        fullName: EventEmitterOptions
        uid: tslib.events.EventEmitterOptions
  - uid: >-
      tslib.NodeJS.ReadableStream | tslib.NodeJS.WritableStream |
      tslib.NodeJS.ReadWriteStream
    name: ReadWriteStream
    spec.typeScript:
      - name: ReadableStream
        fullName: ReadableStream
        uid: tslib.NodeJS.ReadableStream
      - name: ' | '
        fullName: ' | '
      - name: WritableStream
        fullName: WritableStream
        uid: tslib.NodeJS.WritableStream
      - name: ' | '
        fullName: ' | '
      - name: ReadWriteStream
        fullName: ReadWriteStream
        uid: tslib.NodeJS.ReadWriteStream
  - uid: tslib.stream.internal.FinishedOptions
    name: FinishedOptions
    spec.typeScript:
      - name: FinishedOptions
        fullName: FinishedOptions
        uid: tslib.stream.internal.FinishedOptions
  - uid: tslib.NodeJS.ReadWriteStream
    name: ReadWriteStream
    spec.typeScript:
      - name: ReadWriteStream
        fullName: ReadWriteStream
        uid: tslib.NodeJS.ReadWriteStream
  - uid: >-
      Array<tslib.NodeJS.ReadableStream | tslib.NodeJS.WritableStream |
      tslib.NodeJS.ReadWriteStream>
    name: ReadWriteStream>
    spec.typeScript:
      - name: Array<
        fullName: Array<
      - name: ReadableStream
        fullName: ReadableStream
        uid: tslib.NodeJS.ReadableStream
      - name: ' | '
        fullName: ' | '
      - name: WritableStream
        fullName: WritableStream
        uid: tslib.NodeJS.WritableStream
      - name: ' | '
        fullName: ' | '
      - name: ReadWriteStream
        fullName: ReadWriteStream
        uid: tslib.NodeJS.ReadWriteStream
      - name: '>'
        fullName: '>'
  - uid: tslib.NodeJS.ReadWriteStream | tslib.NodeJS.WritableStream
    name: WritableStream
    spec.typeScript:
      - name: ReadWriteStream
        fullName: ReadWriteStream
        uid: tslib.NodeJS.ReadWriteStream
      - name: ' | '
        fullName: ' | '
      - name: WritableStream
        fullName: WritableStream
        uid: tslib.NodeJS.WritableStream
  - uid: >-
      Array<tslib.NodeJS.ReadWriteStream | tslib.NodeJS.WritableStream | (err:
      ErrnoException | null) => void>
    name: 'WritableStream | (err: ErrnoException | null) => void>'
    spec.typeScript:
      - name: Array<
        fullName: Array<
      - name: ReadWriteStream
        fullName: ReadWriteStream
        uid: tslib.NodeJS.ReadWriteStream
      - name: ' | '
        fullName: ' | '
      - name: WritableStream
        fullName: WritableStream
        uid: tslib.NodeJS.WritableStream
      - name: ' | (err: ErrnoException | null) => void>'
        fullName: ' | (err: ErrnoException | null) => void>'
