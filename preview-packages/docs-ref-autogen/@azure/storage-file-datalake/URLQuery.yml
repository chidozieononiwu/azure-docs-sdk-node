### YamlMime:UniversalReference
items:
  - uid: '@azure/abort-controller.URLQuery'
    name: URLQuery
    fullName: URLQuery
    children:
      - '@azure/abort-controller.URLQuery.any'
      - '@azure/abort-controller.URLQuery.get'
      - '@azure/abort-controller.URLQuery.keys'
      - '@azure/abort-controller.URLQuery.parse'
      - '@azure/abort-controller.URLQuery.set'
      - '@azure/abort-controller.URLQuery.toString'
    langs:
      - typeScript
    type: class
    summary: A class that handles the query portion of a URLBuilder.
    package: '@azure/abort-controller'
  - uid: '@azure/abort-controller.URLQuery.any'
    name: any()
    children: []
    type: method
    langs:
      - typeScript
    summary: Get whether or not there any query parameters in this URLQuery.
    syntax:
      content: function any()
      parameters: []
      return:
        type:
          - boolean
        description: ''
    package: '@azure/abort-controller'
  - uid: '@azure/abort-controller.URLQuery.get'
    name: get(string)
    children: []
    type: method
    langs:
      - typeScript
    summary: >-
      Get the value of the query parameter with the provided name. If no
      parameter exists with the

      provided parameter name, then undefined will be returned.
    syntax:
      content: 'function get(parameterName: string)'
      parameters:
        - id: parameterName
          type:
            - string
          description: ''
      return:
        type:
          - 'string | string[] | undefined'
        description: ''
    package: '@azure/abort-controller'
  - uid: '@azure/abort-controller.URLQuery.keys'
    name: keys()
    children: []
    type: method
    langs:
      - typeScript
    summary: Get the keys of the query string.
    syntax:
      content: function keys()
      parameters: []
      return:
        type:
          - 'string[]'
        description: ''
    package: '@azure/abort-controller'
  - uid: '@azure/abort-controller.URLQuery.parse'
    name: parse(string)
    children: []
    type: method
    langs:
      - typeScript
    summary: Parse a URLQuery from the provided text.
    syntax:
      content: 'static function parse(text: string)'
      parameters:
        - id: text
          type:
            - string
          description: ''
      return:
        type:
          - '@azure/abort-controller.URLQuery'
        description: ''
    package: '@azure/abort-controller'
  - uid: '@azure/abort-controller.URLQuery.set'
    name: 'set(string, any)'
    children: []
    type: method
    langs:
      - typeScript
    summary: >-
      Set a query parameter with the provided name and value. If the
      parameterValue is undefined or

      empty, then this will attempt to remove an existing query parameter with
      the provided

      parameterName.
    syntax:
      content: 'function set(parameterName: string, parameterValue: any)'
      parameters:
        - id: parameterName
          type:
            - string
          description: ''
        - id: parameterValue
          type:
            - any
          description: ''
    package: '@azure/abort-controller'
  - uid: '@azure/abort-controller.URLQuery.toString'
    name: toString()
    children: []
    type: method
    langs:
      - typeScript
    summary: >-
      Get the string representation of this query. The return value will not
      start with a "?".
    syntax:
      content: function toString()
      parameters: []
      return:
        type:
          - string
        description: ''
    package: '@azure/abort-controller'
references:
  - uid: '@azure/abort-controller.URLQuery'
    name: URLQuery
    spec.typeScript:
      - name: URLQuery
        fullName: URLQuery
        uid: '@azure/abort-controller.URLQuery'
