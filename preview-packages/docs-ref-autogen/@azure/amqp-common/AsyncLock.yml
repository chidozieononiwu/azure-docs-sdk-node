### YamlMime:UniversalReference
items:
  - uid: '@azure/ms-rest-azure-env.AsyncLock'
    name: AsyncLock
    fullName: AsyncLock
    children:
      - '@azure/ms-rest-azure-env.AsyncLock.acquire'
      - '@azure/ms-rest-azure-env.AsyncLock.acquire_1'
      - '@azure/ms-rest-azure-env.AsyncLock.constructor'
      - '@azure/ms-rest-azure-env.AsyncLock.isBusy'
    langs:
      - typeScript
    type: class
    summary: ''
    package: '@azure/ms-rest-azure-env'
  - uid: '@azure/ms-rest-azure-env.AsyncLock.acquire'
    name: >-
      acquire(string | string[], () => T | PromiseLike<T> | (done:
      AsyncLockDoneCallback<T>) => any, AsyncLockOptions)
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function acquire<T>(key: string | string[], fn: () => T | PromiseLike<T>
        | (done: AsyncLockDoneCallback<T>) => any, opts?: AsyncLockOptions)
      parameters:
        - id: key
          type:
            - 'string | string[]'
          description: ''
        - id: fn
          type:
            - '() => T | PromiseLike<T> | (done: AsyncLockDoneCallback<T>) => any'
          description: ''
        - id: opts
          type:
            - '@azure/ms-rest-azure-env.AsyncLockOptions'
          description: ''
          optional: true
      return:
        type:
          - Promise<T>
        description: ''
    package: '@azure/ms-rest-azure-env'
  - uid: '@azure/ms-rest-azure-env.AsyncLock.acquire_1'
    name: >-
      acquire(string | string[], (done: AsyncLockDoneCallback<T>) => any,
      AsyncLockDoneCallback<T>, AsyncLockOptions)
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function acquire<T>(key: string | string[], fn: (done:
        AsyncLockDoneCallback<T>) => any, cb: AsyncLockDoneCallback<T>, opts?:
        AsyncLockOptions)
      parameters:
        - id: key
          type:
            - 'string | string[]'
          description: ''
        - id: fn
          type:
            - '(done: AsyncLockDoneCallback<T>) => any'
          description: ''
        - id: cb
          type:
            - '@azure/ms-rest-azure-env.AsyncLockDoneCallback<T>'
          description: ''
        - id: opts
          type:
            - '@azure/ms-rest-azure-env.AsyncLockOptions'
          description: ''
          optional: true
    package: '@azure/ms-rest-azure-env'
  - uid: '@azure/ms-rest-azure-env.AsyncLock.constructor'
    name: AsyncLock(AsyncLockOptions)
    children: []
    type: constructor
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'new AsyncLock(options?: AsyncLockOptions)'
      parameters:
        - id: options
          type:
            - '@azure/ms-rest-azure-env.AsyncLockOptions'
          description: ''
          optional: true
    package: '@azure/ms-rest-azure-env'
  - uid: '@azure/ms-rest-azure-env.AsyncLock.isBusy'
    name: isBusy(undefined | string)
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function isBusy(key?: undefined | string)'
      parameters:
        - id: key
          type:
            - undefined | string
          description: ''
          optional: true
      return:
        type:
          - boolean
        description: ''
    package: '@azure/ms-rest-azure-env'
references:
  - uid: '@azure/ms-rest-azure-env.AsyncLockOptions'
    name: AsyncLockOptions
    spec.typeScript:
      - name: AsyncLockOptions
        fullName: AsyncLockOptions
        uid: '@azure/ms-rest-azure-env.AsyncLockOptions'
  - uid: '@azure/ms-rest-azure-env.AsyncLockDoneCallback<T>'
    name: AsyncLockDoneCallback<T>
    spec.typeScript:
      - name: AsyncLockDoneCallback
        fullName: AsyncLockDoneCallback
        uid: '@azure/ms-rest-azure-env.AsyncLockDoneCallback'
      - name: <T>
        fullName: <T>
