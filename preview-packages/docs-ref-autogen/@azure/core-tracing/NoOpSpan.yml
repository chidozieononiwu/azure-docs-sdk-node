### YamlMime:UniversalReference
items:
  - uid: '@opentelemetry/types.NoOpSpan'
    name: NoOpSpan
    fullName: NoOpSpan
    children:
      - '@opentelemetry/types.NoOpSpan.addEvent'
      - '@opentelemetry/types.NoOpSpan.context'
      - '@opentelemetry/types.NoOpSpan.end'
      - '@opentelemetry/types.NoOpSpan.isRecording'
      - '@opentelemetry/types.NoOpSpan.setAttribute'
      - '@opentelemetry/types.NoOpSpan.setAttributes'
      - '@opentelemetry/types.NoOpSpan.setStatus'
      - '@opentelemetry/types.NoOpSpan.updateName'
    langs:
      - typeScript
    type: class
    summary: >-
      A no-op implementation of Span that can safely be used without
      side-effects.
    package: '@opentelemetry/types'
  - uid: '@opentelemetry/types.NoOpSpan.addEvent'
    name: 'addEvent(string, Attributes)'
    children: []
    type: method
    langs:
      - typeScript
    summary: Adds an event to the Span
    syntax:
      content: 'function addEvent(_name: string, _attributes?: Attributes)'
      parameters:
        - id: _name
          type:
            - string
          description: The name of the event
        - id: _attributes
          type:
            - '@opentelemetry/types.Attributes'
          description: |
            The associated attributes to add for this event
          optional: true
      return:
        type:
          - this
        description: ''
    package: '@opentelemetry/types'
  - uid: '@opentelemetry/types.NoOpSpan.context'
    name: context()
    children: []
    type: method
    langs:
      - typeScript
    summary: Returns the SpanContext associated with this Span.
    syntax:
      content: function context()
      parameters: []
      return:
        type:
          - '@opentelemetry/types.SpanContext'
        description: ''
    package: '@opentelemetry/types'
  - uid: '@opentelemetry/types.NoOpSpan.end'
    name: end(number)
    children: []
    type: method
    langs:
      - typeScript
    summary: Marks the end of Span execution.
    syntax:
      content: 'function end(_endTime?: number)'
      parameters:
        - id: _endTime
          type:
            - number
          description: |
            The time to use as the Span's end time. Defaults to
            the current time.
          optional: true
    package: '@opentelemetry/types'
  - uid: '@opentelemetry/types.NoOpSpan.isRecording'
    name: isRecording()
    children: []
    type: method
    langs:
      - typeScript
    summary: Returns whether this span will be recorded
    syntax:
      content: function isRecording()
      parameters: []
      return:
        type:
          - boolean
        description: ''
    package: '@opentelemetry/types'
  - uid: '@opentelemetry/types.NoOpSpan.setAttribute'
    name: 'setAttribute(string, unknown)'
    children: []
    type: method
    langs:
      - typeScript
    summary: Sets an attribute on the Span
    syntax:
      content: 'function setAttribute(_key: string, _value: unknown)'
      parameters:
        - id: _key
          type:
            - string
          description: the attribute key
        - id: _value
          type:
            - unknown
          description: |
            the attribute value
      return:
        type:
          - this
        description: ''
    package: '@opentelemetry/types'
  - uid: '@opentelemetry/types.NoOpSpan.setAttributes'
    name: setAttributes(Attributes)
    children: []
    type: method
    langs:
      - typeScript
    summary: Sets attributes on the Span
    syntax:
      content: 'function setAttributes(_attributes: Attributes)'
      parameters:
        - id: _attributes
          type:
            - '@opentelemetry/types.Attributes'
          description: |
            the attributes to add
      return:
        type:
          - this
        description: ''
    package: '@opentelemetry/types'
  - uid: '@opentelemetry/types.NoOpSpan.setStatus'
    name: setStatus(Status)
    children: []
    type: method
    langs:
      - typeScript
    summary: Sets a status on the span. Overrides the default of CanonicalCode.OK.
    syntax:
      content: 'function setStatus(_status: Status)'
      parameters:
        - id: _status
          type:
            - '@opentelemetry/types.Status'
          description: |
            The status to set.
      return:
        type:
          - this
        description: ''
    package: '@opentelemetry/types'
  - uid: '@opentelemetry/types.NoOpSpan.updateName'
    name: updateName(string)
    children: []
    type: method
    langs:
      - typeScript
    summary: Updates the name of the Span
    syntax:
      content: 'function updateName(_name: string)'
      parameters:
        - id: _name
          type:
            - string
          description: |
            the new Span name
      return:
        type:
          - this
        description: ''
    package: '@opentelemetry/types'
references:
  - uid: '@opentelemetry/types.Attributes'
    name: Attributes
    spec.typeScript:
      - name: Attributes
        fullName: Attributes
        uid: '@opentelemetry/types.Attributes'
  - uid: '@opentelemetry/types.SpanContext'
    name: SpanContext
    spec.typeScript:
      - name: SpanContext
        fullName: SpanContext
        uid: '@opentelemetry/types.SpanContext'
  - uid: '@opentelemetry/types.Status'
    name: Status
    spec.typeScript:
      - name: Status
        fullName: Status
        uid: '@opentelemetry/types.Status'
