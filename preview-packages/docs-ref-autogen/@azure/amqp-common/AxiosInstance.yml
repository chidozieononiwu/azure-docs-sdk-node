### YamlMime:UniversalReference
items:
  - uid: '@azure/ms-rest-azure-env.AxiosInstance'
    name: AxiosInstance
    fullName: AxiosInstance
    children:
      - '@azure/ms-rest-azure-env.AxiosInstance.defaults'
      - '@azure/ms-rest-azure-env.AxiosInstance.delete'
      - '@azure/ms-rest-azure-env.AxiosInstance.get'
      - '@azure/ms-rest-azure-env.AxiosInstance.getUri'
      - '@azure/ms-rest-azure-env.AxiosInstance.head'
      - '@azure/ms-rest-azure-env.AxiosInstance.interceptors'
      - '@azure/ms-rest-azure-env.AxiosInstance.options'
      - '@azure/ms-rest-azure-env.AxiosInstance.patch'
      - '@azure/ms-rest-azure-env.AxiosInstance.post'
      - '@azure/ms-rest-azure-env.AxiosInstance.put'
      - '@azure/ms-rest-azure-env.AxiosInstance.request'
    langs:
      - typeScript
    type: interface
    summary: ''
    package: '@azure/ms-rest-azure-env'
  - uid: '@azure/ms-rest-azure-env.AxiosInstance.defaults'
    name: defaults
    fullName: defaults
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    syntax:
      content: 'defaults: AxiosRequestConfig'
      return:
        type:
          - '@azure/ms-rest-azure-env.AxiosRequestConfig'
        description: ''
    package: '@azure/ms-rest-azure-env'
  - uid: '@azure/ms-rest-azure-env.AxiosInstance.delete'
    name: 'delete(string, AxiosRequestConfig)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function delete<T>(url: string, config?: AxiosRequestConfig)'
      parameters:
        - id: url
          type:
            - string
          description: ''
        - id: config
          type:
            - '@azure/ms-rest-azure-env.AxiosRequestConfig'
          description: ''
          optional: true
      return:
        type:
          - Promise<R>
        description: ''
    package: '@azure/ms-rest-azure-env'
  - uid: '@azure/ms-rest-azure-env.AxiosInstance.get'
    name: 'get(string, AxiosRequestConfig)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function get<T>(url: string, config?: AxiosRequestConfig)'
      parameters:
        - id: url
          type:
            - string
          description: ''
        - id: config
          type:
            - '@azure/ms-rest-azure-env.AxiosRequestConfig'
          description: ''
          optional: true
      return:
        type:
          - Promise<R>
        description: ''
    package: '@azure/ms-rest-azure-env'
  - uid: '@azure/ms-rest-azure-env.AxiosInstance.getUri'
    name: getUri(AxiosRequestConfig)
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function getUri(config?: AxiosRequestConfig)'
      parameters:
        - id: config
          type:
            - '@azure/ms-rest-azure-env.AxiosRequestConfig'
          description: ''
          optional: true
      return:
        type:
          - string
        description: ''
    package: '@azure/ms-rest-azure-env'
  - uid: '@azure/ms-rest-azure-env.AxiosInstance.head'
    name: 'head(string, AxiosRequestConfig)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function head<T>(url: string, config?: AxiosRequestConfig)'
      parameters:
        - id: url
          type:
            - string
          description: ''
        - id: config
          type:
            - '@azure/ms-rest-azure-env.AxiosRequestConfig'
          description: ''
          optional: true
      return:
        type:
          - Promise<R>
        description: ''
    package: '@azure/ms-rest-azure-env'
  - uid: '@azure/ms-rest-azure-env.AxiosInstance.interceptors'
    name: interceptors
    fullName: interceptors
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    syntax:
      content: 'interceptors: Object'
      return:
        type:
          - Object
        description: ''
    package: '@azure/ms-rest-azure-env'
  - uid: '@azure/ms-rest-azure-env.AxiosInstance.options'
    name: 'options(string, AxiosRequestConfig)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function options<T>(url: string, config?: AxiosRequestConfig)'
      parameters:
        - id: url
          type:
            - string
          description: ''
        - id: config
          type:
            - '@azure/ms-rest-azure-env.AxiosRequestConfig'
          description: ''
          optional: true
      return:
        type:
          - Promise<R>
        description: ''
    package: '@azure/ms-rest-azure-env'
  - uid: '@azure/ms-rest-azure-env.AxiosInstance.patch'
    name: 'patch(string, any, AxiosRequestConfig)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function patch<T>(url: string, data?: any, config?: AxiosRequestConfig)'
      parameters:
        - id: url
          type:
            - string
          description: ''
        - id: data
          type:
            - any
          description: ''
          optional: true
        - id: config
          type:
            - '@azure/ms-rest-azure-env.AxiosRequestConfig'
          description: ''
          optional: true
      return:
        type:
          - Promise<R>
        description: ''
    package: '@azure/ms-rest-azure-env'
  - uid: '@azure/ms-rest-azure-env.AxiosInstance.post'
    name: 'post(string, any, AxiosRequestConfig)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function post<T>(url: string, data?: any, config?: AxiosRequestConfig)'
      parameters:
        - id: url
          type:
            - string
          description: ''
        - id: data
          type:
            - any
          description: ''
          optional: true
        - id: config
          type:
            - '@azure/ms-rest-azure-env.AxiosRequestConfig'
          description: ''
          optional: true
      return:
        type:
          - Promise<R>
        description: ''
    package: '@azure/ms-rest-azure-env'
  - uid: '@azure/ms-rest-azure-env.AxiosInstance.put'
    name: 'put(string, any, AxiosRequestConfig)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function put<T>(url: string, data?: any, config?: AxiosRequestConfig)'
      parameters:
        - id: url
          type:
            - string
          description: ''
        - id: data
          type:
            - any
          description: ''
          optional: true
        - id: config
          type:
            - '@azure/ms-rest-azure-env.AxiosRequestConfig'
          description: ''
          optional: true
      return:
        type:
          - Promise<R>
        description: ''
    package: '@azure/ms-rest-azure-env'
  - uid: '@azure/ms-rest-azure-env.AxiosInstance.request'
    name: request(AxiosRequestConfig)
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function request<T>(config: AxiosRequestConfig)'
      parameters:
        - id: config
          type:
            - '@azure/ms-rest-azure-env.AxiosRequestConfig'
          description: ''
      return:
        type:
          - Promise<R>
        description: ''
    package: '@azure/ms-rest-azure-env'
references:
  - uid: '@azure/ms-rest-azure-env.AxiosRequestConfig'
    name: AxiosRequestConfig
    spec.typeScript:
      - name: AxiosRequestConfig
        fullName: AxiosRequestConfig
        uid: '@azure/ms-rest-azure-env.AxiosRequestConfig'
