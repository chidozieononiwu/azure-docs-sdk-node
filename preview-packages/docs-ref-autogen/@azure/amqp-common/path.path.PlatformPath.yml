### YamlMime:UniversalReference
items:
  - uid: '@azure/ms-rest-azure-env.path.path.PlatformPath'
    name: PlatformPath
    fullName: PlatformPath
    children:
      - '@azure/ms-rest-azure-env.path.path.PlatformPath.basename'
      - '@azure/ms-rest-azure-env.path.path.PlatformPath.delimiter'
      - '@azure/ms-rest-azure-env.path.path.PlatformPath.dirname'
      - '@azure/ms-rest-azure-env.path.path.PlatformPath.extname'
      - '@azure/ms-rest-azure-env.path.path.PlatformPath.format'
      - '@azure/ms-rest-azure-env.path.path.PlatformPath.isAbsolute'
      - '@azure/ms-rest-azure-env.path.path.PlatformPath.join'
      - '@azure/ms-rest-azure-env.path.path.PlatformPath.normalize'
      - '@azure/ms-rest-azure-env.path.path.PlatformPath.parse'
      - '@azure/ms-rest-azure-env.path.path.PlatformPath.posix'
      - '@azure/ms-rest-azure-env.path.path.PlatformPath.relative'
      - '@azure/ms-rest-azure-env.path.path.PlatformPath.resolve'
      - '@azure/ms-rest-azure-env.path.path.PlatformPath.sep'
      - '@azure/ms-rest-azure-env.path.path.PlatformPath.toNamespacedPath'
      - '@azure/ms-rest-azure-env.path.path.PlatformPath.win32'
    langs:
      - typeScript
    type: interface
    summary: ''
    package: '@azure/ms-rest-azure-env'
  - uid: '@azure/ms-rest-azure-env.path.path.PlatformPath.basename'
    name: 'basename(string, undefined | string)'
    children: []
    type: method
    langs:
      - typeScript
    summary: |-
      Return the last portion of a path. Similar to the Unix basename command.
      Often used to extract the file name from a fully qualified path.
    syntax:
      content: 'function basename(p: string, ext?: undefined | string)'
      parameters:
        - id: p
          type:
            - string
          description: the path to evaluate.
        - id: ext
          type:
            - undefined | string
          description: |
            optionally, an extension to remove from the result.
          optional: true
      return:
        type:
          - string
        description: ''
    package: '@azure/ms-rest-azure-env'
  - uid: '@azure/ms-rest-azure-env.path.path.PlatformPath.delimiter'
    name: delimiter
    fullName: delimiter
    children: []
    langs:
      - typeScript
    type: property
    summary: 'The platform-specific file delimiter. '';'' or '':''.'
    syntax:
      content: 'delimiter: string'
      return:
        type:
          - string
        description: ''
    package: '@azure/ms-rest-azure-env'
  - uid: '@azure/ms-rest-azure-env.path.path.PlatformPath.dirname'
    name: dirname(string)
    children: []
    type: method
    langs:
      - typeScript
    summary: Return the directory name of a path. Similar to the Unix dirname command.
    syntax:
      content: 'function dirname(p: string)'
      parameters:
        - id: p
          type:
            - string
          description: |
            the path to evaluate.
      return:
        type:
          - string
        description: ''
    package: '@azure/ms-rest-azure-env'
  - uid: '@azure/ms-rest-azure-env.path.path.PlatformPath.extname'
    name: extname(string)
    children: []
    type: method
    langs:
      - typeScript
    summary: >-
      Return the extension of the path, from the last '.' to end of string in
      the last portion of the path.

      If there is no '.' in the last portion of the path or the first character
      of it is '.', then it returns an empty string
    syntax:
      content: 'function extname(p: string)'
      parameters:
        - id: p
          type:
            - string
          description: |
            the path to evaluate.
      return:
        type:
          - string
        description: ''
    package: '@azure/ms-rest-azure-env'
  - uid: '@azure/ms-rest-azure-env.path.path.PlatformPath.format'
    name: format(FormatInputPathObject)
    children: []
    type: method
    langs:
      - typeScript
    summary: Returns a path string from an object - the opposite of parse().
    syntax:
      content: 'function format(pP: FormatInputPathObject)'
      parameters:
        - id: pP
          type:
            - '@azure/ms-rest-azure-env.path.path.FormatInputPathObject'
          description: ''
      return:
        type:
          - string
        description: ''
    package: '@azure/ms-rest-azure-env'
  - uid: '@azure/ms-rest-azure-env.path.path.PlatformPath.isAbsolute'
    name: isAbsolute(string)
    children: []
    type: method
    langs:
      - typeScript
    summary: >-
      Determines whether {path} is an absolute path. An absolute path will
      always resolve to the same location, regardless of the working directory.
    syntax:
      content: 'function isAbsolute(p: string)'
      parameters:
        - id: p
          type:
            - string
          description: ''
      return:
        type:
          - boolean
        description: ''
    package: '@azure/ms-rest-azure-env'
  - uid: '@azure/ms-rest-azure-env.path.path.PlatformPath.join'
    name: 'join(string[])'
    children: []
    type: method
    langs:
      - typeScript
    summary: >-
      Join all arguments together and normalize the resulting path.

      Arguments must be strings. In v0.8, non-string arguments were silently
      ignored. In v0.10 and up, an exception is thrown.
    syntax:
      content: 'function join(paths: string[])'
      parameters:
        - id: paths
          type:
            - 'string[]'
          description: |
            paths to join.
      return:
        type:
          - string
        description: ''
    package: '@azure/ms-rest-azure-env'
  - uid: '@azure/ms-rest-azure-env.path.path.PlatformPath.normalize'
    name: normalize(string)
    children: []
    type: method
    langs:
      - typeScript
    summary: >-
      Normalize a string path, reducing '..' and '.' parts.

      When multiple slashes are found, they're replaced by a single one; when
      the path contains a trailing slash, it is preserved. On Windows
      backslashes are used.
    syntax:
      content: 'function normalize(p: string)'
      parameters:
        - id: p
          type:
            - string
          description: |
            string path to normalize.
      return:
        type:
          - string
        description: ''
    package: '@azure/ms-rest-azure-env'
  - uid: '@azure/ms-rest-azure-env.path.path.PlatformPath.parse'
    name: parse(string)
    children: []
    type: method
    langs:
      - typeScript
    summary: Returns an object from a path string - the opposite of format().
    syntax:
      content: 'function parse(p: string)'
      parameters:
        - id: p
          type:
            - string
          description: ''
      return:
        type:
          - '@azure/ms-rest-azure-env.path.path.ParsedPath'
        description: ''
    package: '@azure/ms-rest-azure-env'
  - uid: '@azure/ms-rest-azure-env.path.path.PlatformPath.posix'
    name: posix
    fullName: posix
    children: []
    langs:
      - typeScript
    type: property
    summary: |-
      Posix specific pathing.
      Same as parent object on posix.
    syntax:
      content: 'posix: PlatformPath'
      return:
        type:
          - '@azure/ms-rest-azure-env.path.path.PlatformPath'
        description: ''
    package: '@azure/ms-rest-azure-env'
  - uid: '@azure/ms-rest-azure-env.path.path.PlatformPath.relative'
    name: 'relative(string, string)'
    children: []
    type: method
    langs:
      - typeScript
    summary: >-
      Solve the relative path from {from} to {to}.

      At times we have two absolute paths, and we need to derive the relative
      path from one to the other. This is actually the reverse transform of
      path.resolve.
    syntax:
      content: 'function relative(from: string, to: string)'
      parameters:
        - id: from
          type:
            - string
          description: ''
        - id: to
          type:
            - string
          description: ''
      return:
        type:
          - string
        description: ''
    package: '@azure/ms-rest-azure-env'
  - uid: '@azure/ms-rest-azure-env.path.path.PlatformPath.resolve'
    name: 'resolve(string[])'
    children: []
    type: method
    langs:
      - typeScript
    summary: >
      The right-most parameter is considered {to}.  Other parameters are
      considered an array of {from}.

      Starting from leftmost {from} parameter, resolves {to} to an absolute
      path.


      If {to} isn't already absolute, {from} arguments are prepended in right to
      left order,

      until an absolute path is found. If after using all {from} paths still no
      absolute path is found,

      the current working directory is used as well. The resulting path is
      normalized,

      and trailing slashes are removed unless the path gets resolved to the root
      directory.
    syntax:
      content: 'function resolve(pathSegments: string[])'
      parameters:
        - id: pathSegments
          type:
            - 'string[]'
          description: |
            string paths to join.  Non-string arguments are ignored.
      return:
        type:
          - string
        description: ''
    package: '@azure/ms-rest-azure-env'
  - uid: '@azure/ms-rest-azure-env.path.path.PlatformPath.sep'
    name: sep
    fullName: sep
    children: []
    langs:
      - typeScript
    type: property
    summary: The platform-specific file separator. '\\' or '/'.
    syntax:
      content: 'sep: string'
      return:
        type:
          - string
        description: ''
    package: '@azure/ms-rest-azure-env'
  - uid: '@azure/ms-rest-azure-env.path.path.PlatformPath.toNamespacedPath'
    name: toNamespacedPath(string)
    children: []
    type: method
    langs:
      - typeScript
    summary: >-
      On Windows systems only, returns an equivalent namespace-prefixed path for
      the given path.

      If path is not a string, path will be returned without modifications.

      This method is meaningful only on Windows system.

      On POSIX systems, the method is non-operational and always returns path
      without modifications.
    syntax:
      content: 'function toNamespacedPath(path: string)'
      parameters:
        - id: path
          type:
            - string
          description: ''
      return:
        type:
          - string
        description: ''
    package: '@azure/ms-rest-azure-env'
  - uid: '@azure/ms-rest-azure-env.path.path.PlatformPath.win32'
    name: win32
    fullName: win32
    children: []
    langs:
      - typeScript
    type: property
    summary: |-
      Windows specific pathing.
      Same as parent object on windows
    syntax:
      content: 'win32: PlatformPath'
      return:
        type:
          - '@azure/ms-rest-azure-env.path.path.PlatformPath'
        description: ''
    package: '@azure/ms-rest-azure-env'
references:
  - uid: '@azure/ms-rest-azure-env.path.path.PlatformPath'
    name: PlatformPath
    spec.typeScript:
      - name: PlatformPath
        fullName: PlatformPath
        uid: '@azure/ms-rest-azure-env.path.path.PlatformPath'
  - uid: '@azure/ms-rest-azure-env.path.path.FormatInputPathObject'
    name: FormatInputPathObject
    spec.typeScript:
      - name: FormatInputPathObject
        fullName: FormatInputPathObject
        uid: '@azure/ms-rest-azure-env.path.path.FormatInputPathObject'
  - uid: '@azure/ms-rest-azure-env.path.path.ParsedPath'
    name: ParsedPath
    spec.typeScript:
      - name: ParsedPath
        fullName: ParsedPath
        uid: '@azure/ms-rest-azure-env.path.path.ParsedPath'
