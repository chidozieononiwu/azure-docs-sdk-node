### YamlMime:UniversalReference
items:
  - uid: '@azure/abort-controller.Container'
    name: Container
    fullName: Container
    children:
      - '@azure/abort-controller.Container.acquireLease_2'
      - '@azure/abort-controller.Container.acquireLease'
      - '@azure/abort-controller.Container.acquireLease_1'
      - '@azure/abort-controller.Container.breakLease_2'
      - '@azure/abort-controller.Container.breakLease'
      - '@azure/abort-controller.Container.breakLease_1'
      - '@azure/abort-controller.Container.changeLease_2'
      - '@azure/abort-controller.Container.changeLease'
      - '@azure/abort-controller.Container.changeLease_1'
      - '@azure/abort-controller.Container.constructor'
      - '@azure/abort-controller.Container.create_2'
      - '@azure/abort-controller.Container.create'
      - '@azure/abort-controller.Container.create_1'
      - '@azure/abort-controller.Container.deleteMethod_2'
      - '@azure/abort-controller.Container.deleteMethod'
      - '@azure/abort-controller.Container.deleteMethod_1'
      - '@azure/abort-controller.Container.getAccessPolicy_2'
      - '@azure/abort-controller.Container.getAccessPolicy'
      - '@azure/abort-controller.Container.getAccessPolicy_1'
      - '@azure/abort-controller.Container.getAccountInfo'
      - '@azure/abort-controller.Container.getAccountInfo_2'
      - '@azure/abort-controller.Container.getAccountInfo_1'
      - '@azure/abort-controller.Container.getProperties_2'
      - '@azure/abort-controller.Container.getProperties'
      - '@azure/abort-controller.Container.getProperties_1'
      - '@azure/abort-controller.Container.listBlobFlatSegment_2'
      - '@azure/abort-controller.Container.listBlobFlatSegment'
      - '@azure/abort-controller.Container.listBlobFlatSegment_1'
      - '@azure/abort-controller.Container.listBlobHierarchySegment_2'
      - '@azure/abort-controller.Container.listBlobHierarchySegment'
      - '@azure/abort-controller.Container.listBlobHierarchySegment_1'
      - '@azure/abort-controller.Container.releaseLease_2'
      - '@azure/abort-controller.Container.releaseLease'
      - '@azure/abort-controller.Container.releaseLease_1'
      - '@azure/abort-controller.Container.renewLease_2'
      - '@azure/abort-controller.Container.renewLease'
      - '@azure/abort-controller.Container.renewLease_1'
      - '@azure/abort-controller.Container.setAccessPolicy_2'
      - '@azure/abort-controller.Container.setAccessPolicy'
      - '@azure/abort-controller.Container.setAccessPolicy_1'
      - '@azure/abort-controller.Container.setMetadata_2'
      - '@azure/abort-controller.Container.setMetadata'
      - '@azure/abort-controller.Container.setMetadata_1'
    langs:
      - typeScript
    type: class
    summary: Class representing a Container.
    package: '@azure/abort-controller'
  - uid: '@azure/abort-controller.Container.acquireLease_2'
    name: 'acquireLease(ContainerAcquireLeaseOptionalParams, ServiceCallback<void>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function acquireLease(options: ContainerAcquireLeaseOptionalParams,
        callback: ServiceCallback<void>)
      parameters:
        - id: options
          type:
            - '@azure/abort-controller.ContainerAcquireLeaseOptionalParams'
          description: The optional parameters
        - id: callback
          type:
            - '@azure/abort-controller.ServiceCallback<void>'
          description: |
            The callback
    package: '@azure/abort-controller'
  - uid: '@azure/abort-controller.Container.acquireLease'
    name: acquireLease(Models.ContainerAcquireLeaseOptionalParams)
    children: []
    type: method
    langs:
      - typeScript
    summary: >-
      [Update] establishes and manages a lock on a container for delete
      operations. The lock duration

      can be 15 to 60 seconds, or can be infinite
    syntax:
      content: >-
        function acquireLease(options?:
        Models.ContainerAcquireLeaseOptionalParams)
      parameters:
        - id: options
          type:
            - Models.ContainerAcquireLeaseOptionalParams
          description: ''
          optional: true
      return:
        type:
          - Promise<Models.ContainerAcquireLeaseResponse>
        description: Promise<Models.ContainerAcquireLeaseResponse>
    package: '@azure/abort-controller'
  - uid: '@azure/abort-controller.Container.acquireLease_1'
    name: acquireLease(ServiceCallback<void>)
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function acquireLease(callback: ServiceCallback<void>)'
      parameters:
        - id: callback
          type:
            - '@azure/abort-controller.ServiceCallback<void>'
          description: |
            The callback
    package: '@azure/abort-controller'
  - uid: '@azure/abort-controller.Container.breakLease_2'
    name: 'breakLease(ContainerBreakLeaseOptionalParams, ServiceCallback<void>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function breakLease(options: ContainerBreakLeaseOptionalParams,
        callback: ServiceCallback<void>)
      parameters:
        - id: options
          type:
            - '@azure/abort-controller.ContainerBreakLeaseOptionalParams'
          description: The optional parameters
        - id: callback
          type:
            - '@azure/abort-controller.ServiceCallback<void>'
          description: |
            The callback
    package: '@azure/abort-controller'
  - uid: '@azure/abort-controller.Container.breakLease'
    name: breakLease(Models.ContainerBreakLeaseOptionalParams)
    children: []
    type: method
    langs:
      - typeScript
    summary: >-
      [Update] establishes and manages a lock on a container for delete
      operations. The lock duration

      can be 15 to 60 seconds, or can be infinite
    syntax:
      content: 'function breakLease(options?: Models.ContainerBreakLeaseOptionalParams)'
      parameters:
        - id: options
          type:
            - Models.ContainerBreakLeaseOptionalParams
          description: ''
          optional: true
      return:
        type:
          - Promise<Models.ContainerBreakLeaseResponse>
        description: Promise<Models.ContainerBreakLeaseResponse>
    package: '@azure/abort-controller'
  - uid: '@azure/abort-controller.Container.breakLease_1'
    name: breakLease(ServiceCallback<void>)
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function breakLease(callback: ServiceCallback<void>)'
      parameters:
        - id: callback
          type:
            - '@azure/abort-controller.ServiceCallback<void>'
          description: |
            The callback
    package: '@azure/abort-controller'
  - uid: '@azure/abort-controller.Container.changeLease_2'
    name: >-
      changeLease(string, string, ContainerChangeLeaseOptionalParams,
      ServiceCallback<void>)
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function changeLease(leaseId: string, proposedLeaseId: string, options:
        ContainerChangeLeaseOptionalParams, callback: ServiceCallback<void>)
      parameters:
        - id: leaseId
          type:
            - string
          description: Specifies the current lease ID on the resource.
        - id: proposedLeaseId
          type:
            - string
          description: >-
            Proposed lease ID, in a GUID string format. The Blob service returns
            400

            (Invalid request) if the proposed lease ID is not in the correct
            format. See Guid Constructor

            (String) for a list of valid GUID string formats.
        - id: options
          type:
            - '@azure/abort-controller.ContainerChangeLeaseOptionalParams'
          description: The optional parameters
        - id: callback
          type:
            - '@azure/abort-controller.ServiceCallback<void>'
          description: |
            The callback
    package: '@azure/abort-controller'
  - uid: '@azure/abort-controller.Container.changeLease'
    name: 'changeLease(string, string, Models.ContainerChangeLeaseOptionalParams)'
    children: []
    type: method
    langs:
      - typeScript
    summary: >-
      [Update] establishes and manages a lock on a container for delete
      operations. The lock duration

      can be 15 to 60 seconds, or can be infinite
    syntax:
      content: >-
        function changeLease(leaseId: string, proposedLeaseId: string, options?:
        Models.ContainerChangeLeaseOptionalParams)
      parameters:
        - id: leaseId
          type:
            - string
          description: Specifies the current lease ID on the resource.
        - id: proposedLeaseId
          type:
            - string
          description: >-
            Proposed lease ID, in a GUID string format. The Blob service returns
            400

            (Invalid request) if the proposed lease ID is not in the correct
            format. See Guid Constructor

            (String) for a list of valid GUID string formats.
        - id: options
          type:
            - Models.ContainerChangeLeaseOptionalParams
          description: ''
          optional: true
      return:
        type:
          - Promise<Models.ContainerChangeLeaseResponse>
        description: Promise<Models.ContainerChangeLeaseResponse>
    package: '@azure/abort-controller'
  - uid: '@azure/abort-controller.Container.changeLease_1'
    name: 'changeLease(string, string, ServiceCallback<void>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function changeLease(leaseId: string, proposedLeaseId: string, callback:
        ServiceCallback<void>)
      parameters:
        - id: leaseId
          type:
            - string
          description: Specifies the current lease ID on the resource.
        - id: proposedLeaseId
          type:
            - string
          description: >-
            Proposed lease ID, in a GUID string format. The Blob service returns
            400

            (Invalid request) if the proposed lease ID is not in the correct
            format. See Guid Constructor

            (String) for a list of valid GUID string formats.
        - id: callback
          type:
            - '@azure/abort-controller.ServiceCallback<void>'
          description: |
            The callback
    package: '@azure/abort-controller'
  - uid: '@azure/abort-controller.Container.constructor'
    name: Container(StorageClientContext)
    children: []
    type: constructor
    langs:
      - typeScript
    summary: Create a Container.
    syntax:
      content: 'new Container(client: StorageClientContext)'
      parameters:
        - id: client
          type:
            - '@azure/abort-controller.StorageClientContext'
          description: |
            Reference to the service client.
    package: '@azure/abort-controller'
  - uid: '@azure/abort-controller.Container.create_2'
    name: 'create(ContainerCreateOptionalParams, ServiceCallback<void>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function create(options: ContainerCreateOptionalParams, callback:
        ServiceCallback<void>)
      parameters:
        - id: options
          type:
            - '@azure/abort-controller.ContainerCreateOptionalParams'
          description: The optional parameters
        - id: callback
          type:
            - '@azure/abort-controller.ServiceCallback<void>'
          description: |
            The callback
    package: '@azure/abort-controller'
  - uid: '@azure/abort-controller.Container.create'
    name: create(Models.ContainerCreateOptionalParams)
    children: []
    type: method
    langs:
      - typeScript
    summary: >-
      creates a new container under the specified account. If the container with
      the same name already

      exists, the operation fails
    syntax:
      content: 'function create(options?: Models.ContainerCreateOptionalParams)'
      parameters:
        - id: options
          type:
            - Models.ContainerCreateOptionalParams
          description: ''
          optional: true
      return:
        type:
          - Promise<Models.ContainerCreateResponse>
        description: Promise<Models.ContainerCreateResponse>
    package: '@azure/abort-controller'
  - uid: '@azure/abort-controller.Container.create_1'
    name: create(ServiceCallback<void>)
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function create(callback: ServiceCallback<void>)'
      parameters:
        - id: callback
          type:
            - '@azure/abort-controller.ServiceCallback<void>'
          description: |
            The callback
    package: '@azure/abort-controller'
  - uid: '@azure/abort-controller.Container.deleteMethod_2'
    name: 'deleteMethod(ContainerDeleteMethodOptionalParams, ServiceCallback<void>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function deleteMethod(options: ContainerDeleteMethodOptionalParams,
        callback: ServiceCallback<void>)
      parameters:
        - id: options
          type:
            - '@azure/abort-controller.ContainerDeleteMethodOptionalParams'
          description: The optional parameters
        - id: callback
          type:
            - '@azure/abort-controller.ServiceCallback<void>'
          description: |
            The callback
    package: '@azure/abort-controller'
  - uid: '@azure/abort-controller.Container.deleteMethod'
    name: deleteMethod(Models.ContainerDeleteMethodOptionalParams)
    children: []
    type: method
    langs:
      - typeScript
    summary: >-
      operation marks the specified container for deletion. The container and
      any blobs contained

      within it are later deleted during garbage collection
    syntax:
      content: >-
        function deleteMethod(options?:
        Models.ContainerDeleteMethodOptionalParams)
      parameters:
        - id: options
          type:
            - Models.ContainerDeleteMethodOptionalParams
          description: ''
          optional: true
      return:
        type:
          - Promise<Models.ContainerDeleteResponse>
        description: Promise<Models.ContainerDeleteResponse>
    package: '@azure/abort-controller'
  - uid: '@azure/abort-controller.Container.deleteMethod_1'
    name: deleteMethod(ServiceCallback<void>)
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function deleteMethod(callback: ServiceCallback<void>)'
      parameters:
        - id: callback
          type:
            - '@azure/abort-controller.ServiceCallback<void>'
          description: |
            The callback
    package: '@azure/abort-controller'
  - uid: '@azure/abort-controller.Container.getAccessPolicy_2'
    name: >-
      getAccessPolicy(ContainerGetAccessPolicyOptionalParams,
      ServiceCallback<SignedIdentifier[]>)
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function getAccessPolicy(options:
        ContainerGetAccessPolicyOptionalParams, callback:
        ServiceCallback<SignedIdentifier[]>)
      parameters:
        - id: options
          type:
            - '@azure/abort-controller.ContainerGetAccessPolicyOptionalParams'
          description: The optional parameters
        - id: callback
          type:
            - >-
              @azure/abort-controller.ServiceCallback<@azure/abort-controller.SignedIdentifier[]>
          description: |
            The callback
    package: '@azure/abort-controller'
  - uid: '@azure/abort-controller.Container.getAccessPolicy'
    name: getAccessPolicy(Models.ContainerGetAccessPolicyOptionalParams)
    children: []
    type: method
    langs:
      - typeScript
    summary: >-
      gets the permissions for the specified container. The permissions indicate
      whether container

      data may be accessed publicly.
    syntax:
      content: >-
        function getAccessPolicy(options?:
        Models.ContainerGetAccessPolicyOptionalParams)
      parameters:
        - id: options
          type:
            - Models.ContainerGetAccessPolicyOptionalParams
          description: ''
          optional: true
      return:
        type:
          - Promise<Models.ContainerGetAccessPolicyResponse>
        description: Promise<Models.ContainerGetAccessPolicyResponse>
    package: '@azure/abort-controller'
  - uid: '@azure/abort-controller.Container.getAccessPolicy_1'
    name: 'getAccessPolicy(ServiceCallback<SignedIdentifier[]>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function getAccessPolicy(callback: ServiceCallback<SignedIdentifier[]>)'
      parameters:
        - id: callback
          type:
            - >-
              @azure/abort-controller.ServiceCallback<@azure/abort-controller.SignedIdentifier[]>
          description: |
            The callback
    package: '@azure/abort-controller'
  - uid: '@azure/abort-controller.Container.getAccountInfo'
    name: getAccountInfo(coreHttp.RequestOptionsBase)
    children: []
    type: method
    langs:
      - typeScript
    summary: Returns the sku name and account kind
    syntax:
      content: 'function getAccountInfo(options?: coreHttp.RequestOptionsBase)'
      parameters:
        - id: options
          type:
            - coreHttp.RequestOptionsBase
          description: ''
          optional: true
      return:
        type:
          - Promise<Models.ContainerGetAccountInfoResponse>
        description: Promise<Models.ContainerGetAccountInfoResponse>
    package: '@azure/abort-controller'
  - uid: '@azure/abort-controller.Container.getAccountInfo_2'
    name: 'getAccountInfo(RequestOptionsBase, ServiceCallback<void>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function getAccountInfo(options: RequestOptionsBase, callback:
        ServiceCallback<void>)
      parameters:
        - id: options
          type:
            - '@azure/abort-controller.RequestOptionsBase'
          description: The optional parameters
        - id: callback
          type:
            - '@azure/abort-controller.ServiceCallback<void>'
          description: |
            The callback
    package: '@azure/abort-controller'
  - uid: '@azure/abort-controller.Container.getAccountInfo_1'
    name: getAccountInfo(ServiceCallback<void>)
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function getAccountInfo(callback: ServiceCallback<void>)'
      parameters:
        - id: callback
          type:
            - '@azure/abort-controller.ServiceCallback<void>'
          description: |
            The callback
    package: '@azure/abort-controller'
  - uid: '@azure/abort-controller.Container.getProperties_2'
    name: 'getProperties(ContainerGetPropertiesOptionalParams, ServiceCallback<void>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function getProperties(options: ContainerGetPropertiesOptionalParams,
        callback: ServiceCallback<void>)
      parameters:
        - id: options
          type:
            - '@azure/abort-controller.ContainerGetPropertiesOptionalParams'
          description: The optional parameters
        - id: callback
          type:
            - '@azure/abort-controller.ServiceCallback<void>'
          description: |
            The callback
    package: '@azure/abort-controller'
  - uid: '@azure/abort-controller.Container.getProperties'
    name: getProperties(Models.ContainerGetPropertiesOptionalParams)
    children: []
    type: method
    langs:
      - typeScript
    summary: >-
      returns all user-defined metadata and system properties for the specified
      container. The data

      returned does not include the container's list of blobs
    syntax:
      content: >-
        function getProperties(options?:
        Models.ContainerGetPropertiesOptionalParams)
      parameters:
        - id: options
          type:
            - Models.ContainerGetPropertiesOptionalParams
          description: ''
          optional: true
      return:
        type:
          - Promise<Models.ContainerGetPropertiesResponse>
        description: Promise<Models.ContainerGetPropertiesResponse>
    package: '@azure/abort-controller'
  - uid: '@azure/abort-controller.Container.getProperties_1'
    name: getProperties(ServiceCallback<void>)
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function getProperties(callback: ServiceCallback<void>)'
      parameters:
        - id: callback
          type:
            - '@azure/abort-controller.ServiceCallback<void>'
          description: |
            The callback
    package: '@azure/abort-controller'
  - uid: '@azure/abort-controller.Container.listBlobFlatSegment_2'
    name: >-
      listBlobFlatSegment(ContainerListBlobFlatSegmentOptionalParams,
      ServiceCallback<ListBlobsFlatSegmentResponse>)
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function listBlobFlatSegment(options:
        ContainerListBlobFlatSegmentOptionalParams, callback:
        ServiceCallback<ListBlobsFlatSegmentResponse>)
      parameters:
        - id: options
          type:
            - '@azure/abort-controller.ContainerListBlobFlatSegmentOptionalParams'
          description: The optional parameters
        - id: callback
          type:
            - >-
              @azure/abort-controller.ServiceCallback<@azure/abort-controller.ListBlobsFlatSegmentResponse>
          description: |
            The callback
    package: '@azure/abort-controller'
  - uid: '@azure/abort-controller.Container.listBlobFlatSegment'
    name: listBlobFlatSegment(Models.ContainerListBlobFlatSegmentOptionalParams)
    children: []
    type: method
    langs:
      - typeScript
    summary: >-
      [Update] The List Blobs operation returns a list of the blobs under the
      specified container
    syntax:
      content: >-
        function listBlobFlatSegment(options?:
        Models.ContainerListBlobFlatSegmentOptionalParams)
      parameters:
        - id: options
          type:
            - Models.ContainerListBlobFlatSegmentOptionalParams
          description: ''
          optional: true
      return:
        type:
          - Promise<Models.ContainerListBlobFlatSegmentResponse>
        description: Promise<Models.ContainerListBlobFlatSegmentResponse>
    package: '@azure/abort-controller'
  - uid: '@azure/abort-controller.Container.listBlobFlatSegment_1'
    name: listBlobFlatSegment(ServiceCallback<ListBlobsFlatSegmentResponse>)
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function listBlobFlatSegment(callback:
        ServiceCallback<ListBlobsFlatSegmentResponse>)
      parameters:
        - id: callback
          type:
            - >-
              @azure/abort-controller.ServiceCallback<@azure/abort-controller.ListBlobsFlatSegmentResponse>
          description: |
            The callback
    package: '@azure/abort-controller'
  - uid: '@azure/abort-controller.Container.listBlobHierarchySegment_2'
    name: >-
      listBlobHierarchySegment(string,
      ContainerListBlobHierarchySegmentOptionalParams,
      ServiceCallback<ListBlobsHierarchySegmentResponse>)
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function listBlobHierarchySegment(delimiter: string, options:
        ContainerListBlobHierarchySegmentOptionalParams, callback:
        ServiceCallback<ListBlobsHierarchySegmentResponse>)
      parameters:
        - id: delimiter
          type:
            - string
          description: >-
            When the request includes this parameter, the operation returns a
            BlobPrefix

            element in the response body that acts as a placeholder for all
            blobs whose names begin with the

            same substring up to the appearance of the delimiter character. The
            delimiter may be a single

            character or a string.
        - id: options
          type:
            - >-
              @azure/abort-controller.ContainerListBlobHierarchySegmentOptionalParams
          description: The optional parameters
        - id: callback
          type:
            - >-
              @azure/abort-controller.ServiceCallback<@azure/abort-controller.ListBlobsHierarchySegmentResponse>
          description: |
            The callback
    package: '@azure/abort-controller'
  - uid: '@azure/abort-controller.Container.listBlobHierarchySegment'
    name: >-
      listBlobHierarchySegment(string,
      Models.ContainerListBlobHierarchySegmentOptionalParams)
    children: []
    type: method
    langs:
      - typeScript
    summary: >-
      [Update] The List Blobs operation returns a list of the blobs under the
      specified container
    syntax:
      content: >-
        function listBlobHierarchySegment(delimiter: string, options?:
        Models.ContainerListBlobHierarchySegmentOptionalParams)
      parameters:
        - id: delimiter
          type:
            - string
          description: >-
            When the request includes this parameter, the operation returns a
            BlobPrefix

            element in the response body that acts as a placeholder for all
            blobs whose names begin with the

            same substring up to the appearance of the delimiter character. The
            delimiter may be a single

            character or a string.
        - id: options
          type:
            - Models.ContainerListBlobHierarchySegmentOptionalParams
          description: ''
          optional: true
      return:
        type:
          - Promise<Models.ContainerListBlobHierarchySegmentResponse>
        description: Promise<Models.ContainerListBlobHierarchySegmentResponse>
    package: '@azure/abort-controller'
  - uid: '@azure/abort-controller.Container.listBlobHierarchySegment_1'
    name: >-
      listBlobHierarchySegment(string,
      ServiceCallback<ListBlobsHierarchySegmentResponse>)
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function listBlobHierarchySegment(delimiter: string, callback:
        ServiceCallback<ListBlobsHierarchySegmentResponse>)
      parameters:
        - id: delimiter
          type:
            - string
          description: >-
            When the request includes this parameter, the operation returns a
            BlobPrefix

            element in the response body that acts as a placeholder for all
            blobs whose names begin with the

            same substring up to the appearance of the delimiter character. The
            delimiter may be a single

            character or a string.
        - id: callback
          type:
            - >-
              @azure/abort-controller.ServiceCallback<@azure/abort-controller.ListBlobsHierarchySegmentResponse>
          description: |
            The callback
    package: '@azure/abort-controller'
  - uid: '@azure/abort-controller.Container.releaseLease_2'
    name: >-
      releaseLease(string, ContainerReleaseLeaseOptionalParams,
      ServiceCallback<void>)
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function releaseLease(leaseId: string, options:
        ContainerReleaseLeaseOptionalParams, callback: ServiceCallback<void>)
      parameters:
        - id: leaseId
          type:
            - string
          description: Specifies the current lease ID on the resource.
        - id: options
          type:
            - '@azure/abort-controller.ContainerReleaseLeaseOptionalParams'
          description: The optional parameters
        - id: callback
          type:
            - '@azure/abort-controller.ServiceCallback<void>'
          description: |
            The callback
    package: '@azure/abort-controller'
  - uid: '@azure/abort-controller.Container.releaseLease'
    name: 'releaseLease(string, Models.ContainerReleaseLeaseOptionalParams)'
    children: []
    type: method
    langs:
      - typeScript
    summary: >-
      [Update] establishes and manages a lock on a container for delete
      operations. The lock duration

      can be 15 to 60 seconds, or can be infinite
    syntax:
      content: >-
        function releaseLease(leaseId: string, options?:
        Models.ContainerReleaseLeaseOptionalParams)
      parameters:
        - id: leaseId
          type:
            - string
          description: Specifies the current lease ID on the resource.
        - id: options
          type:
            - Models.ContainerReleaseLeaseOptionalParams
          description: ''
          optional: true
      return:
        type:
          - Promise<Models.ContainerReleaseLeaseResponse>
        description: Promise<Models.ContainerReleaseLeaseResponse>
    package: '@azure/abort-controller'
  - uid: '@azure/abort-controller.Container.releaseLease_1'
    name: 'releaseLease(string, ServiceCallback<void>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function releaseLease(leaseId: string, callback: ServiceCallback<void>)'
      parameters:
        - id: leaseId
          type:
            - string
          description: Specifies the current lease ID on the resource.
        - id: callback
          type:
            - '@azure/abort-controller.ServiceCallback<void>'
          description: |
            The callback
    package: '@azure/abort-controller'
  - uid: '@azure/abort-controller.Container.renewLease_2'
    name: >-
      renewLease(string, ContainerRenewLeaseOptionalParams,
      ServiceCallback<void>)
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function renewLease(leaseId: string, options:
        ContainerRenewLeaseOptionalParams, callback: ServiceCallback<void>)
      parameters:
        - id: leaseId
          type:
            - string
          description: Specifies the current lease ID on the resource.
        - id: options
          type:
            - '@azure/abort-controller.ContainerRenewLeaseOptionalParams'
          description: The optional parameters
        - id: callback
          type:
            - '@azure/abort-controller.ServiceCallback<void>'
          description: |
            The callback
    package: '@azure/abort-controller'
  - uid: '@azure/abort-controller.Container.renewLease'
    name: 'renewLease(string, Models.ContainerRenewLeaseOptionalParams)'
    children: []
    type: method
    langs:
      - typeScript
    summary: >-
      [Update] establishes and manages a lock on a container for delete
      operations. The lock duration

      can be 15 to 60 seconds, or can be infinite
    syntax:
      content: >-
        function renewLease(leaseId: string, options?:
        Models.ContainerRenewLeaseOptionalParams)
      parameters:
        - id: leaseId
          type:
            - string
          description: Specifies the current lease ID on the resource.
        - id: options
          type:
            - Models.ContainerRenewLeaseOptionalParams
          description: ''
          optional: true
      return:
        type:
          - Promise<Models.ContainerRenewLeaseResponse>
        description: Promise<Models.ContainerRenewLeaseResponse>
    package: '@azure/abort-controller'
  - uid: '@azure/abort-controller.Container.renewLease_1'
    name: 'renewLease(string, ServiceCallback<void>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function renewLease(leaseId: string, callback: ServiceCallback<void>)'
      parameters:
        - id: leaseId
          type:
            - string
          description: Specifies the current lease ID on the resource.
        - id: callback
          type:
            - '@azure/abort-controller.ServiceCallback<void>'
          description: |
            The callback
    package: '@azure/abort-controller'
  - uid: '@azure/abort-controller.Container.setAccessPolicy_2'
    name: >-
      setAccessPolicy(ContainerSetAccessPolicyOptionalParams,
      ServiceCallback<void>)
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function setAccessPolicy(options:
        ContainerSetAccessPolicyOptionalParams, callback: ServiceCallback<void>)
      parameters:
        - id: options
          type:
            - '@azure/abort-controller.ContainerSetAccessPolicyOptionalParams'
          description: The optional parameters
        - id: callback
          type:
            - '@azure/abort-controller.ServiceCallback<void>'
          description: |
            The callback
    package: '@azure/abort-controller'
  - uid: '@azure/abort-controller.Container.setAccessPolicy'
    name: setAccessPolicy(Models.ContainerSetAccessPolicyOptionalParams)
    children: []
    type: method
    langs:
      - typeScript
    summary: >-
      sets the permissions for the specified container. The permissions indicate
      whether blobs in a

      container may be accessed publicly.
    syntax:
      content: >-
        function setAccessPolicy(options?:
        Models.ContainerSetAccessPolicyOptionalParams)
      parameters:
        - id: options
          type:
            - Models.ContainerSetAccessPolicyOptionalParams
          description: ''
          optional: true
      return:
        type:
          - Promise<Models.ContainerSetAccessPolicyResponse>
        description: Promise<Models.ContainerSetAccessPolicyResponse>
    package: '@azure/abort-controller'
  - uid: '@azure/abort-controller.Container.setAccessPolicy_1'
    name: setAccessPolicy(ServiceCallback<void>)
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function setAccessPolicy(callback: ServiceCallback<void>)'
      parameters:
        - id: callback
          type:
            - '@azure/abort-controller.ServiceCallback<void>'
          description: |
            The callback
    package: '@azure/abort-controller'
  - uid: '@azure/abort-controller.Container.setMetadata_2'
    name: 'setMetadata(ContainerSetMetadataOptionalParams, ServiceCallback<void>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function setMetadata(options: ContainerSetMetadataOptionalParams,
        callback: ServiceCallback<void>)
      parameters:
        - id: options
          type:
            - '@azure/abort-controller.ContainerSetMetadataOptionalParams'
          description: The optional parameters
        - id: callback
          type:
            - '@azure/abort-controller.ServiceCallback<void>'
          description: |
            The callback
    package: '@azure/abort-controller'
  - uid: '@azure/abort-controller.Container.setMetadata'
    name: setMetadata(Models.ContainerSetMetadataOptionalParams)
    children: []
    type: method
    langs:
      - typeScript
    summary: >-
      operation sets one or more user-defined name-value pairs for the specified
      container.
    syntax:
      content: >-
        function setMetadata(options?:
        Models.ContainerSetMetadataOptionalParams)
      parameters:
        - id: options
          type:
            - Models.ContainerSetMetadataOptionalParams
          description: ''
          optional: true
      return:
        type:
          - Promise<Models.ContainerSetMetadataResponse>
        description: Promise<Models.ContainerSetMetadataResponse>
    package: '@azure/abort-controller'
  - uid: '@azure/abort-controller.Container.setMetadata_1'
    name: setMetadata(ServiceCallback<void>)
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function setMetadata(callback: ServiceCallback<void>)'
      parameters:
        - id: callback
          type:
            - '@azure/abort-controller.ServiceCallback<void>'
          description: |
            The callback
    package: '@azure/abort-controller'
references:
  - uid: '@azure/abort-controller.StorageClientContext'
    name: StorageClientContext
    spec.typeScript:
      - name: StorageClientContext
        fullName: StorageClientContext
        uid: '@azure/abort-controller.StorageClientContext'
  - uid: '@azure/abort-controller.ServiceCallback<void>'
    name: ServiceCallback<void>
    spec.typeScript:
      - name: ServiceCallback
        fullName: ServiceCallback
        uid: '@azure/abort-controller.ServiceCallback'
      - name: <void>
        fullName: <void>
  - uid: '@azure/abort-controller.ContainerAcquireLeaseOptionalParams'
    name: ContainerAcquireLeaseOptionalParams
    spec.typeScript:
      - name: ContainerAcquireLeaseOptionalParams
        fullName: ContainerAcquireLeaseOptionalParams
        uid: '@azure/abort-controller.ContainerAcquireLeaseOptionalParams'
  - uid: '@azure/abort-controller.ContainerBreakLeaseOptionalParams'
    name: ContainerBreakLeaseOptionalParams
    spec.typeScript:
      - name: ContainerBreakLeaseOptionalParams
        fullName: ContainerBreakLeaseOptionalParams
        uid: '@azure/abort-controller.ContainerBreakLeaseOptionalParams'
  - uid: '@azure/abort-controller.ContainerChangeLeaseOptionalParams'
    name: ContainerChangeLeaseOptionalParams
    spec.typeScript:
      - name: ContainerChangeLeaseOptionalParams
        fullName: ContainerChangeLeaseOptionalParams
        uid: '@azure/abort-controller.ContainerChangeLeaseOptionalParams'
  - uid: '@azure/abort-controller.ContainerCreateOptionalParams'
    name: ContainerCreateOptionalParams
    spec.typeScript:
      - name: ContainerCreateOptionalParams
        fullName: ContainerCreateOptionalParams
        uid: '@azure/abort-controller.ContainerCreateOptionalParams'
  - uid: '@azure/abort-controller.ContainerDeleteMethodOptionalParams'
    name: ContainerDeleteMethodOptionalParams
    spec.typeScript:
      - name: ContainerDeleteMethodOptionalParams
        fullName: ContainerDeleteMethodOptionalParams
        uid: '@azure/abort-controller.ContainerDeleteMethodOptionalParams'
  - uid: >-
      @azure/abort-controller.ServiceCallback<@azure/abort-controller.SignedIdentifier[]>
    name: 'SignedIdentifier[]>'
    spec.typeScript:
      - name: ServiceCallback
        fullName: ServiceCallback
        uid: '@azure/abort-controller.ServiceCallback'
      - name: <
        fullName: <
      - name: SignedIdentifier
        fullName: SignedIdentifier
        uid: '@azure/abort-controller.SignedIdentifier'
      - name: '[]>'
        fullName: '[]>'
  - uid: '@azure/abort-controller.ContainerGetAccessPolicyOptionalParams'
    name: ContainerGetAccessPolicyOptionalParams
    spec.typeScript:
      - name: ContainerGetAccessPolicyOptionalParams
        fullName: ContainerGetAccessPolicyOptionalParams
        uid: '@azure/abort-controller.ContainerGetAccessPolicyOptionalParams'
  - uid: '@azure/abort-controller.RequestOptionsBase'
    name: RequestOptionsBase
    spec.typeScript:
      - name: RequestOptionsBase
        fullName: RequestOptionsBase
        uid: '@azure/abort-controller.RequestOptionsBase'
  - uid: '@azure/abort-controller.ContainerGetPropertiesOptionalParams'
    name: ContainerGetPropertiesOptionalParams
    spec.typeScript:
      - name: ContainerGetPropertiesOptionalParams
        fullName: ContainerGetPropertiesOptionalParams
        uid: '@azure/abort-controller.ContainerGetPropertiesOptionalParams'
  - uid: >-
      @azure/abort-controller.ServiceCallback<@azure/abort-controller.ListBlobsFlatSegmentResponse>
    name: ListBlobsFlatSegmentResponse>
    spec.typeScript:
      - name: ServiceCallback
        fullName: ServiceCallback
        uid: '@azure/abort-controller.ServiceCallback'
      - name: <
        fullName: <
      - name: ListBlobsFlatSegmentResponse
        fullName: ListBlobsFlatSegmentResponse
        uid: '@azure/abort-controller.ListBlobsFlatSegmentResponse'
      - name: '>'
        fullName: '>'
  - uid: '@azure/abort-controller.ContainerListBlobFlatSegmentOptionalParams'
    name: ContainerListBlobFlatSegmentOptionalParams
    spec.typeScript:
      - name: ContainerListBlobFlatSegmentOptionalParams
        fullName: ContainerListBlobFlatSegmentOptionalParams
        uid: '@azure/abort-controller.ContainerListBlobFlatSegmentOptionalParams'
  - uid: >-
      @azure/abort-controller.ServiceCallback<@azure/abort-controller.ListBlobsHierarchySegmentResponse>
    name: ListBlobsHierarchySegmentResponse>
    spec.typeScript:
      - name: ServiceCallback
        fullName: ServiceCallback
        uid: '@azure/abort-controller.ServiceCallback'
      - name: <
        fullName: <
      - name: ListBlobsHierarchySegmentResponse
        fullName: ListBlobsHierarchySegmentResponse
        uid: '@azure/abort-controller.ListBlobsHierarchySegmentResponse'
      - name: '>'
        fullName: '>'
  - uid: '@azure/abort-controller.ContainerListBlobHierarchySegmentOptionalParams'
    name: ContainerListBlobHierarchySegmentOptionalParams
    spec.typeScript:
      - name: ContainerListBlobHierarchySegmentOptionalParams
        fullName: ContainerListBlobHierarchySegmentOptionalParams
        uid: >-
          @azure/abort-controller.ContainerListBlobHierarchySegmentOptionalParams
  - uid: '@azure/abort-controller.ContainerReleaseLeaseOptionalParams'
    name: ContainerReleaseLeaseOptionalParams
    spec.typeScript:
      - name: ContainerReleaseLeaseOptionalParams
        fullName: ContainerReleaseLeaseOptionalParams
        uid: '@azure/abort-controller.ContainerReleaseLeaseOptionalParams'
  - uid: '@azure/abort-controller.ContainerRenewLeaseOptionalParams'
    name: ContainerRenewLeaseOptionalParams
    spec.typeScript:
      - name: ContainerRenewLeaseOptionalParams
        fullName: ContainerRenewLeaseOptionalParams
        uid: '@azure/abort-controller.ContainerRenewLeaseOptionalParams'
  - uid: '@azure/abort-controller.ContainerSetAccessPolicyOptionalParams'
    name: ContainerSetAccessPolicyOptionalParams
    spec.typeScript:
      - name: ContainerSetAccessPolicyOptionalParams
        fullName: ContainerSetAccessPolicyOptionalParams
        uid: '@azure/abort-controller.ContainerSetAccessPolicyOptionalParams'
  - uid: '@azure/abort-controller.ContainerSetMetadataOptionalParams'
    name: ContainerSetMetadataOptionalParams
    spec.typeScript:
      - name: ContainerSetMetadataOptionalParams
        fullName: ContainerSetMetadataOptionalParams
        uid: '@azure/abort-controller.ContainerSetMetadataOptionalParams'
