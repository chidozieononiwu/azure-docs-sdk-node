### YamlMime:UniversalReference
items:
  - uid: tslib.child_process.ChildProcess
    name: ChildProcess
    fullName: ChildProcess
    children:
      - tslib.child_process.ChildProcess.addListener_1
      - tslib.child_process.ChildProcess.addListener_2
      - tslib.child_process.ChildProcess.addListener_3
      - tslib.child_process.ChildProcess.addListener_4
      - tslib.child_process.ChildProcess.addListener_5
      - tslib.child_process.ChildProcess.addListener
      - tslib.child_process.ChildProcess.channel
      - tslib.child_process.ChildProcess.constructor
      - tslib.child_process.ChildProcess.connected
      - tslib.child_process.ChildProcess.defaultMaxListeners
      - tslib.child_process.ChildProcess.disconnect
      - tslib.child_process.ChildProcess.emit_1
      - tslib.child_process.ChildProcess.emit_2
      - tslib.child_process.ChildProcess.emit_3
      - tslib.child_process.ChildProcess.emit_4
      - tslib.child_process.ChildProcess.emit_5
      - tslib.child_process.ChildProcess.emit
      - tslib.child_process.ChildProcess.eventNames
      - tslib.child_process.ChildProcess.getMaxListeners
      - tslib.child_process.ChildProcess.kill
      - tslib.child_process.ChildProcess.killed
      - tslib.child_process.ChildProcess.listenerCount
      - tslib.child_process.ChildProcess.listenerCount
      - tslib.child_process.ChildProcess.listeners
      - tslib.child_process.ChildProcess.off
      - tslib.child_process.ChildProcess.on_1
      - tslib.child_process.ChildProcess.on_2
      - tslib.child_process.ChildProcess.on_3
      - tslib.child_process.ChildProcess.on_4
      - tslib.child_process.ChildProcess.on_5
      - tslib.child_process.ChildProcess.on
      - tslib.child_process.ChildProcess.once_1
      - tslib.child_process.ChildProcess.once_2
      - tslib.child_process.ChildProcess.once_3
      - tslib.child_process.ChildProcess.once_4
      - tslib.child_process.ChildProcess.once_5
      - tslib.child_process.ChildProcess.once
      - tslib.child_process.ChildProcess.pid
      - tslib.child_process.ChildProcess.prependListener_1
      - tslib.child_process.ChildProcess.prependListener_2
      - tslib.child_process.ChildProcess.prependListener_3
      - tslib.child_process.ChildProcess.prependListener_4
      - tslib.child_process.ChildProcess.prependListener_5
      - tslib.child_process.ChildProcess.prependListener
      - tslib.child_process.ChildProcess.prependOnceListener_1
      - tslib.child_process.ChildProcess.prependOnceListener_2
      - tslib.child_process.ChildProcess.prependOnceListener_3
      - tslib.child_process.ChildProcess.prependOnceListener_4
      - tslib.child_process.ChildProcess.prependOnceListener_5
      - tslib.child_process.ChildProcess.prependOnceListener
      - tslib.child_process.ChildProcess.rawListeners
      - tslib.child_process.ChildProcess.ref
      - tslib.child_process.ChildProcess.removeAllListeners
      - tslib.child_process.ChildProcess.removeListener
      - tslib.child_process.ChildProcess.send_2
      - tslib.child_process.ChildProcess.send_1
      - tslib.child_process.ChildProcess.send
      - tslib.child_process.ChildProcess.setMaxListeners
      - tslib.child_process.ChildProcess.stderr
      - tslib.child_process.ChildProcess.stdin
      - tslib.child_process.ChildProcess.stdio
      - tslib.child_process.ChildProcess.stdout
      - tslib.child_process.ChildProcess.unref
    langs:
      - typeScript
    type: interface
    summary: ''
    extends:
      name: tslib.events.EventEmitter.EventEmitter
    package: tslib
  - uid: tslib.child_process.ChildProcess.addListener_1
    name: 'addListener("close", (code: number, signal: NodeJS.Signals) => void)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function addListener(event: "close", listener: (code: number, signal:
        NodeJS.Signals) => void)
      parameters:
        - id: event
          type:
            - '"close"'
          description: ''
        - id: listener
          type:
            - '(code: number, signal: NodeJS.Signals) => void'
          description: ''
      return:
        type:
          - this
        description: ''
    package: tslib
  - uid: tslib.child_process.ChildProcess.addListener_2
    name: 'addListener("disconnect", () => void)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function addListener(event: "disconnect", listener: () => void)'
      parameters:
        - id: event
          type:
            - '"disconnect"'
          description: ''
        - id: listener
          type:
            - () => void
          description: ''
      return:
        type:
          - this
        description: ''
    package: tslib
  - uid: tslib.child_process.ChildProcess.addListener_3
    name: 'addListener("error", (err: Error) => void)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function addListener(event: "error", listener: (err: Error) => void)'
      parameters:
        - id: event
          type:
            - '"error"'
          description: ''
        - id: listener
          type:
            - '(err: Error) => void'
          description: ''
      return:
        type:
          - this
        description: ''
    package: tslib
  - uid: tslib.child_process.ChildProcess.addListener_4
    name: 'addListener("exit", (code: number | null, signal: NodeJS) => void)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function addListener(event: "exit", listener: (code: number | null,
        signal: NodeJS) => void)
      parameters:
        - id: event
          type:
            - '"exit"'
          description: ''
        - id: listener
          type:
            - '(code: number | null, signal: NodeJS) => void'
          description: ''
      return:
        type:
          - this
        description: ''
    package: tslib
  - uid: tslib.child_process.ChildProcess.addListener_5
    name: >-
      addListener("message", (message: Serializable, sendHandle: SendHandle) =>
      void)
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function addListener(event: "message", listener: (message: Serializable,
        sendHandle: SendHandle) => void)
      parameters:
        - id: event
          type:
            - '"message"'
          description: ''
        - id: listener
          type:
            - '(message: Serializable, sendHandle: SendHandle) => void'
          description: ''
      return:
        type:
          - this
        description: ''
    package: tslib
  - uid: tslib.child_process.ChildProcess.addListener
    name: 'addListener(string, (args: any[]) => void)'
    children: []
    type: method
    langs:
      - typeScript
    summary: |-
      events.EventEmitter
      1. close
      2. disconnect
      3. error
      4. exit
      5. message
    syntax:
      content: 'function addListener(event: string, listener: (args: any[]) => void)'
      parameters:
        - id: event
          type:
            - string
          description: ''
        - id: listener
          type:
            - '(args: any[]) => void'
          description: ''
      return:
        type:
          - this
        description: ''
    package: tslib
  - uid: tslib.child_process.ChildProcess.channel
    name: channel
    fullName: channel
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    optional: true
    syntax:
      content: 'channel?: Pipe | null'
      return:
        type:
          - tslib.stream.internal.Pipe | null
        description: ''
    package: tslib
  - uid: tslib.child_process.ChildProcess.constructor
    name: ChildProcess(EventEmitterOptions)
    children: []
    type: constructor
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'new ChildProcess(options?: EventEmitterOptions)'
      parameters:
        - id: options
          type:
            - tslib.events.EventEmitterOptions
          description: ''
          optional: true
    package: tslib
  - uid: tslib.child_process.ChildProcess.connected
    name: connected
    fullName: connected
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    syntax:
      content: 'connected: boolean'
      return:
        type:
          - boolean
        description: ''
    package: tslib
  - uid: tslib.child_process.ChildProcess.defaultMaxListeners
    name: defaultMaxListeners
    fullName: defaultMaxListeners
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    syntax:
      content: 'static defaultMaxListeners: number'
      return:
        type:
          - number
        description: ''
    package: tslib
  - uid: tslib.child_process.ChildProcess.disconnect
    name: disconnect()
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: function disconnect()
      parameters: []
    package: tslib
  - uid: tslib.child_process.ChildProcess.emit_1
    name: 'emit("close", number, NodeJS.Signals)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function emit(event: "close", code: number, signal: NodeJS.Signals)'
      parameters:
        - id: event
          type:
            - '"close"'
          description: ''
        - id: code
          type:
            - number
          description: ''
        - id: signal
          type:
            - tslib.NodeJS.Signals
          description: ''
      return:
        type:
          - boolean
        description: ''
    package: tslib
  - uid: tslib.child_process.ChildProcess.emit_2
    name: emit("disconnect")
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function emit(event: "disconnect")'
      parameters:
        - id: event
          type:
            - '"disconnect"'
          description: ''
      return:
        type:
          - boolean
        description: ''
    package: tslib
  - uid: tslib.child_process.ChildProcess.emit_3
    name: 'emit("error", Error)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function emit(event: "error", err: Error)'
      parameters:
        - id: event
          type:
            - '"error"'
          description: ''
        - id: err
          type:
            - Error
          description: ''
      return:
        type:
          - boolean
        description: ''
    package: tslib
  - uid: tslib.child_process.ChildProcess.emit_4
    name: 'emit("exit", number | null, NodeJS)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function emit(event: "exit", code: number | null, signal: NodeJS)'
      parameters:
        - id: event
          type:
            - '"exit"'
          description: ''
        - id: code
          type:
            - number | null
          description: ''
        - id: signal
          type:
            - NodeJS
          description: ''
      return:
        type:
          - boolean
        description: ''
    package: tslib
  - uid: tslib.child_process.ChildProcess.emit_5
    name: 'emit("message", Serializable, SendHandle)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function emit(event: "message", message: Serializable, sendHandle:
        SendHandle)
      parameters:
        - id: event
          type:
            - '"message"'
          description: ''
        - id: message
          type:
            - tslib.child_process.Serializable
          description: ''
        - id: sendHandle
          type:
            - tslib.child_process.SendHandle
          description: ''
      return:
        type:
          - boolean
        description: ''
    package: tslib
  - uid: tslib.child_process.ChildProcess.emit
    name: 'emit(string | symbol, any[])'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function emit(event: string | symbol, args: any[])'
      parameters:
        - id: event
          type:
            - string | symbol
          description: ''
        - id: args
          type:
            - 'any[]'
          description: ''
      return:
        type:
          - boolean
        description: ''
    package: tslib
  - uid: tslib.child_process.ChildProcess.eventNames
    name: eventNames()
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: function eventNames()
      parameters: []
      return:
        type:
          - Array<string | symbol>
        description: ''
    package: tslib
  - uid: tslib.child_process.ChildProcess.getMaxListeners
    name: getMaxListeners()
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: function getMaxListeners()
      parameters: []
      return:
        type:
          - number
        description: ''
    package: tslib
  - uid: tslib.child_process.ChildProcess.kill
    name: kill(NodeJS)
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function kill(signal?: NodeJS)'
      parameters:
        - id: signal
          type:
            - NodeJS
          description: ''
          optional: true
    package: tslib
  - uid: tslib.child_process.ChildProcess.killed
    name: killed
    fullName: killed
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    syntax:
      content: 'killed: boolean'
      return:
        type:
          - boolean
        description: ''
    package: tslib
  - uid: tslib.child_process.ChildProcess.listenerCount
    name: 'listenerCount(EventEmitter, string | symbol)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        static function listenerCount(emitter: EventEmitter, event: string |
        symbol)
      parameters:
        - id: emitter
          type:
            - tslib.events.EventEmitter.EventEmitter
          description: ''
        - id: event
          type:
            - string | symbol
          description: ''
      return:
        type:
          - number
        description: ''
    package: tslib
    deprecated:
      content: since v4.0.0
  - uid: tslib.child_process.ChildProcess.listenerCount
    name: listenerCount(string | symbol)
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function listenerCount(type: string | symbol)'
      parameters:
        - id: type
          type:
            - string | symbol
          description: ''
      return:
        type:
          - number
        description: ''
    package: tslib
  - uid: tslib.child_process.ChildProcess.listeners
    name: listeners(string | symbol)
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function listeners(event: string | symbol)'
      parameters:
        - id: event
          type:
            - string | symbol
          description: ''
      return:
        type:
          - 'Function[]'
        description: ''
    package: tslib
  - uid: tslib.child_process.ChildProcess.off
    name: 'off(string | symbol, (args: any[]) => void)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function off(event: string | symbol, listener: (args: any[]) => void)'
      parameters:
        - id: event
          type:
            - string | symbol
          description: ''
        - id: listener
          type:
            - '(args: any[]) => void'
          description: ''
      return:
        type:
          - this
        description: ''
    package: tslib
  - uid: tslib.child_process.ChildProcess.on_1
    name: 'on("close", (code: number, signal: NodeJS.Signals) => void)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function on(event: "close", listener: (code: number, signal:
        NodeJS.Signals) => void)
      parameters:
        - id: event
          type:
            - '"close"'
          description: ''
        - id: listener
          type:
            - '(code: number, signal: NodeJS.Signals) => void'
          description: ''
      return:
        type:
          - this
        description: ''
    package: tslib
  - uid: tslib.child_process.ChildProcess.on_2
    name: 'on("disconnect", () => void)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function on(event: "disconnect", listener: () => void)'
      parameters:
        - id: event
          type:
            - '"disconnect"'
          description: ''
        - id: listener
          type:
            - () => void
          description: ''
      return:
        type:
          - this
        description: ''
    package: tslib
  - uid: tslib.child_process.ChildProcess.on_3
    name: 'on("error", (err: Error) => void)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function on(event: "error", listener: (err: Error) => void)'
      parameters:
        - id: event
          type:
            - '"error"'
          description: ''
        - id: listener
          type:
            - '(err: Error) => void'
          description: ''
      return:
        type:
          - this
        description: ''
    package: tslib
  - uid: tslib.child_process.ChildProcess.on_4
    name: 'on("exit", (code: number | null, signal: NodeJS) => void)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function on(event: "exit", listener: (code: number | null, signal:
        NodeJS) => void)
      parameters:
        - id: event
          type:
            - '"exit"'
          description: ''
        - id: listener
          type:
            - '(code: number | null, signal: NodeJS) => void'
          description: ''
      return:
        type:
          - this
        description: ''
    package: tslib
  - uid: tslib.child_process.ChildProcess.on_5
    name: 'on("message", (message: Serializable, sendHandle: SendHandle) => void)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function on(event: "message", listener: (message: Serializable,
        sendHandle: SendHandle) => void)
      parameters:
        - id: event
          type:
            - '"message"'
          description: ''
        - id: listener
          type:
            - '(message: Serializable, sendHandle: SendHandle) => void'
          description: ''
      return:
        type:
          - this
        description: ''
    package: tslib
  - uid: tslib.child_process.ChildProcess.on
    name: 'on(string, (args: any[]) => void)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function on(event: string, listener: (args: any[]) => void)'
      parameters:
        - id: event
          type:
            - string
          description: ''
        - id: listener
          type:
            - '(args: any[]) => void'
          description: ''
      return:
        type:
          - this
        description: ''
    package: tslib
  - uid: tslib.child_process.ChildProcess.once_1
    name: 'once("close", (code: number, signal: NodeJS.Signals) => void)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function once(event: "close", listener: (code: number, signal:
        NodeJS.Signals) => void)
      parameters:
        - id: event
          type:
            - '"close"'
          description: ''
        - id: listener
          type:
            - '(code: number, signal: NodeJS.Signals) => void'
          description: ''
      return:
        type:
          - this
        description: ''
    package: tslib
  - uid: tslib.child_process.ChildProcess.once_2
    name: 'once("disconnect", () => void)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function once(event: "disconnect", listener: () => void)'
      parameters:
        - id: event
          type:
            - '"disconnect"'
          description: ''
        - id: listener
          type:
            - () => void
          description: ''
      return:
        type:
          - this
        description: ''
    package: tslib
  - uid: tslib.child_process.ChildProcess.once_3
    name: 'once("error", (err: Error) => void)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function once(event: "error", listener: (err: Error) => void)'
      parameters:
        - id: event
          type:
            - '"error"'
          description: ''
        - id: listener
          type:
            - '(err: Error) => void'
          description: ''
      return:
        type:
          - this
        description: ''
    package: tslib
  - uid: tslib.child_process.ChildProcess.once_4
    name: 'once("exit", (code: number | null, signal: NodeJS) => void)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function once(event: "exit", listener: (code: number | null, signal:
        NodeJS) => void)
      parameters:
        - id: event
          type:
            - '"exit"'
          description: ''
        - id: listener
          type:
            - '(code: number | null, signal: NodeJS) => void'
          description: ''
      return:
        type:
          - this
        description: ''
    package: tslib
  - uid: tslib.child_process.ChildProcess.once_5
    name: 'once("message", (message: Serializable, sendHandle: SendHandle) => void)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function once(event: "message", listener: (message: Serializable,
        sendHandle: SendHandle) => void)
      parameters:
        - id: event
          type:
            - '"message"'
          description: ''
        - id: listener
          type:
            - '(message: Serializable, sendHandle: SendHandle) => void'
          description: ''
      return:
        type:
          - this
        description: ''
    package: tslib
  - uid: tslib.child_process.ChildProcess.once
    name: 'once(string, (args: any[]) => void)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function once(event: string, listener: (args: any[]) => void)'
      parameters:
        - id: event
          type:
            - string
          description: ''
        - id: listener
          type:
            - '(args: any[]) => void'
          description: ''
      return:
        type:
          - this
        description: ''
    package: tslib
  - uid: tslib.child_process.ChildProcess.pid
    name: pid
    fullName: pid
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    syntax:
      content: 'pid: number'
      return:
        type:
          - number
        description: ''
    package: tslib
  - uid: tslib.child_process.ChildProcess.prependListener_1
    name: 'prependListener("close", (code: number, signal: NodeJS.Signals) => void)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function prependListener(event: "close", listener: (code: number,
        signal: NodeJS.Signals) => void)
      parameters:
        - id: event
          type:
            - '"close"'
          description: ''
        - id: listener
          type:
            - '(code: number, signal: NodeJS.Signals) => void'
          description: ''
      return:
        type:
          - this
        description: ''
    package: tslib
  - uid: tslib.child_process.ChildProcess.prependListener_2
    name: 'prependListener("disconnect", () => void)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function prependListener(event: "disconnect", listener: () => void)'
      parameters:
        - id: event
          type:
            - '"disconnect"'
          description: ''
        - id: listener
          type:
            - () => void
          description: ''
      return:
        type:
          - this
        description: ''
    package: tslib
  - uid: tslib.child_process.ChildProcess.prependListener_3
    name: 'prependListener("error", (err: Error) => void)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function prependListener(event: "error", listener: (err: Error) => void)'
      parameters:
        - id: event
          type:
            - '"error"'
          description: ''
        - id: listener
          type:
            - '(err: Error) => void'
          description: ''
      return:
        type:
          - this
        description: ''
    package: tslib
  - uid: tslib.child_process.ChildProcess.prependListener_4
    name: 'prependListener("exit", (code: number | null, signal: NodeJS) => void)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function prependListener(event: "exit", listener: (code: number | null,
        signal: NodeJS) => void)
      parameters:
        - id: event
          type:
            - '"exit"'
          description: ''
        - id: listener
          type:
            - '(code: number | null, signal: NodeJS) => void'
          description: ''
      return:
        type:
          - this
        description: ''
    package: tslib
  - uid: tslib.child_process.ChildProcess.prependListener_5
    name: >-
      prependListener("message", (message: Serializable, sendHandle: SendHandle)
      => void)
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function prependListener(event: "message", listener: (message:
        Serializable, sendHandle: SendHandle) => void)
      parameters:
        - id: event
          type:
            - '"message"'
          description: ''
        - id: listener
          type:
            - '(message: Serializable, sendHandle: SendHandle) => void'
          description: ''
      return:
        type:
          - this
        description: ''
    package: tslib
  - uid: tslib.child_process.ChildProcess.prependListener
    name: 'prependListener(string, (args: any[]) => void)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function prependListener(event: string, listener: (args: any[]) => void)'
      parameters:
        - id: event
          type:
            - string
          description: ''
        - id: listener
          type:
            - '(args: any[]) => void'
          description: ''
      return:
        type:
          - this
        description: ''
    package: tslib
  - uid: tslib.child_process.ChildProcess.prependOnceListener_1
    name: >-
      prependOnceListener("close", (code: number, signal: NodeJS.Signals) =>
      void)
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function prependOnceListener(event: "close", listener: (code: number,
        signal: NodeJS.Signals) => void)
      parameters:
        - id: event
          type:
            - '"close"'
          description: ''
        - id: listener
          type:
            - '(code: number, signal: NodeJS.Signals) => void'
          description: ''
      return:
        type:
          - this
        description: ''
    package: tslib
  - uid: tslib.child_process.ChildProcess.prependOnceListener_2
    name: 'prependOnceListener("disconnect", () => void)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function prependOnceListener(event: "disconnect", listener: () => void)'
      parameters:
        - id: event
          type:
            - '"disconnect"'
          description: ''
        - id: listener
          type:
            - () => void
          description: ''
      return:
        type:
          - this
        description: ''
    package: tslib
  - uid: tslib.child_process.ChildProcess.prependOnceListener_3
    name: 'prependOnceListener("error", (err: Error) => void)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function prependOnceListener(event: "error", listener: (err: Error) =>
        void)
      parameters:
        - id: event
          type:
            - '"error"'
          description: ''
        - id: listener
          type:
            - '(err: Error) => void'
          description: ''
      return:
        type:
          - this
        description: ''
    package: tslib
  - uid: tslib.child_process.ChildProcess.prependOnceListener_4
    name: 'prependOnceListener("exit", (code: number | null, signal: NodeJS) => void)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function prependOnceListener(event: "exit", listener: (code: number |
        null, signal: NodeJS) => void)
      parameters:
        - id: event
          type:
            - '"exit"'
          description: ''
        - id: listener
          type:
            - '(code: number | null, signal: NodeJS) => void'
          description: ''
      return:
        type:
          - this
        description: ''
    package: tslib
  - uid: tslib.child_process.ChildProcess.prependOnceListener_5
    name: >-
      prependOnceListener("message", (message: Serializable, sendHandle:
      SendHandle) => void)
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function prependOnceListener(event: "message", listener: (message:
        Serializable, sendHandle: SendHandle) => void)
      parameters:
        - id: event
          type:
            - '"message"'
          description: ''
        - id: listener
          type:
            - '(message: Serializable, sendHandle: SendHandle) => void'
          description: ''
      return:
        type:
          - this
        description: ''
    package: tslib
  - uid: tslib.child_process.ChildProcess.prependOnceListener
    name: 'prependOnceListener(string, (args: any[]) => void)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function prependOnceListener(event: string, listener: (args: any[]) =>
        void)
      parameters:
        - id: event
          type:
            - string
          description: ''
        - id: listener
          type:
            - '(args: any[]) => void'
          description: ''
      return:
        type:
          - this
        description: ''
    package: tslib
  - uid: tslib.child_process.ChildProcess.rawListeners
    name: rawListeners(string | symbol)
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function rawListeners(event: string | symbol)'
      parameters:
        - id: event
          type:
            - string | symbol
          description: ''
      return:
        type:
          - 'Function[]'
        description: ''
    package: tslib
  - uid: tslib.child_process.ChildProcess.ref
    name: ref()
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: function ref()
      parameters: []
    package: tslib
  - uid: tslib.child_process.ChildProcess.removeAllListeners
    name: removeAllListeners(string | symbol)
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function removeAllListeners(event?: string | symbol)'
      parameters:
        - id: event
          type:
            - string | symbol
          description: ''
          optional: true
      return:
        type:
          - this
        description: ''
    package: tslib
  - uid: tslib.child_process.ChildProcess.removeListener
    name: 'removeListener(string | symbol, (args: any[]) => void)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function removeListener(event: string | symbol, listener: (args: any[])
        => void)
      parameters:
        - id: event
          type:
            - string | symbol
          description: ''
        - id: listener
          type:
            - '(args: any[]) => void'
          description: ''
      return:
        type:
          - this
        description: ''
    package: tslib
  - uid: tslib.child_process.ChildProcess.send_2
    name: >-
      send(Serializable, SendHandle, MessageOptions, undefined | (error: Error |
      null) => void)
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function send(message: Serializable, sendHandle?: SendHandle, options?:
        MessageOptions, callback?: undefined | (error: Error | null) => void)
      parameters:
        - id: message
          type:
            - tslib.child_process.Serializable
          description: ''
        - id: sendHandle
          type:
            - tslib.child_process.SendHandle
          description: ''
          optional: true
        - id: options
          type:
            - tslib.child_process.MessageOptions
          description: ''
          optional: true
        - id: callback
          type:
            - 'undefined | (error: Error | null) => void'
          description: ''
          optional: true
      return:
        type:
          - boolean
        description: ''
    package: tslib
  - uid: tslib.child_process.ChildProcess.send_1
    name: 'send(Serializable, SendHandle, undefined | (error: Error | null) => void)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function send(message: Serializable, sendHandle?: SendHandle, callback?:
        undefined | (error: Error | null) => void)
      parameters:
        - id: message
          type:
            - tslib.child_process.Serializable
          description: ''
        - id: sendHandle
          type:
            - tslib.child_process.SendHandle
          description: ''
          optional: true
        - id: callback
          type:
            - 'undefined | (error: Error | null) => void'
          description: ''
          optional: true
      return:
        type:
          - boolean
        description: ''
    package: tslib
  - uid: tslib.child_process.ChildProcess.send
    name: 'send(Serializable, undefined | (error: Error | null) => void)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function send(message: Serializable, callback?: undefined | (error:
        Error | null) => void)
      parameters:
        - id: message
          type:
            - tslib.child_process.Serializable
          description: ''
        - id: callback
          type:
            - 'undefined | (error: Error | null) => void'
          description: ''
          optional: true
      return:
        type:
          - boolean
        description: ''
    package: tslib
  - uid: tslib.child_process.ChildProcess.setMaxListeners
    name: setMaxListeners(number)
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function setMaxListeners(n: number)'
      parameters:
        - id: 'n'
          type:
            - number
          description: ''
      return:
        type:
          - this
        description: ''
    package: tslib
  - uid: tslib.child_process.ChildProcess.stderr
    name: stderr
    fullName: stderr
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    syntax:
      content: 'stderr: Readable | null'
      return:
        type:
          - tslib.stream.internal.Readable | null
        description: ''
    package: tslib
  - uid: tslib.child_process.ChildProcess.stdin
    name: stdin
    fullName: stdin
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    syntax:
      content: 'stdin: Writable | null'
      return:
        type:
          - tslib.stream.internal.Writable | null
        description: ''
    package: tslib
  - uid: tslib.child_process.ChildProcess.stdio
    name: stdio
    fullName: stdio
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    syntax:
      content: 'stdio: Object'
      return:
        type:
          - Object
        description: ''
    package: tslib
  - uid: tslib.child_process.ChildProcess.stdout
    name: stdout
    fullName: stdout
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    syntax:
      content: 'stdout: Readable | null'
      return:
        type:
          - tslib.stream.internal.Readable | null
        description: ''
    package: tslib
  - uid: tslib.child_process.ChildProcess.unref
    name: unref()
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: function unref()
      parameters: []
    package: tslib
references:
  - uid: tslib.events.EventEmitter.EventEmitter
    name: EventEmitter
    spec.typeScript:
      - name: EventEmitter
        fullName: EventEmitter
        uid: tslib.events.EventEmitter.EventEmitter
  - uid: tslib.events.EventEmitterOptions
    name: EventEmitterOptions
    spec.typeScript:
      - name: EventEmitterOptions
        fullName: EventEmitterOptions
        uid: tslib.events.EventEmitterOptions
  - uid: tslib.stream.internal.Pipe | null
    name: Pipe | null
    spec.typeScript:
      - name: Pipe
        fullName: Pipe
        uid: tslib.stream.internal.Pipe
      - name: ' | null'
        fullName: ' | null'
  - uid: tslib.stream.internal.Readable | null
    name: Readable | null
    spec.typeScript:
      - name: Readable
        fullName: Readable
        uid: tslib.stream.internal.Readable
      - name: ' | null'
        fullName: ' | null'
  - uid: tslib.stream.internal.Writable | null
    name: Writable | null
    spec.typeScript:
      - name: Writable
        fullName: Writable
        uid: tslib.stream.internal.Writable
      - name: ' | null'
        fullName: ' | null'
  - uid: tslib.NodeJS.Signals
    name: Signals
    spec.typeScript:
      - name: Signals
        fullName: Signals
        uid: tslib.NodeJS.Signals
  - uid: tslib.child_process.Serializable
    name: Serializable
    spec.typeScript:
      - name: Serializable
        fullName: Serializable
        uid: tslib.child_process.Serializable
  - uid: tslib.child_process.SendHandle
    name: SendHandle
    spec.typeScript:
      - name: SendHandle
        fullName: SendHandle
        uid: tslib.child_process.SendHandle
  - uid: tslib.child_process.MessageOptions
    name: MessageOptions
    spec.typeScript:
      - name: MessageOptions
        fullName: MessageOptions
        uid: tslib.child_process.MessageOptions
  - uid: tslib.child_process.ChildProcess
    name: ChildProcess
    spec.typeScript:
      - name: ChildProcess
        fullName: ChildProcess
        uid: tslib.child_process.ChildProcess
  - uid: tslib.stream.internal.Readable
    name: Readable
    spec.typeScript:
      - name: Readable
        fullName: Readable
        uid: tslib.stream.internal.Readable
  - uid: tslib.stream.internal.Writable
    name: Writable
    spec.typeScript:
      - name: Writable
        fullName: Writable
        uid: tslib.stream.internal.Writable
  - uid: tslib.child_process.ProcessEnvOptions
    name: ProcessEnvOptions
    spec.typeScript:
      - name: ProcessEnvOptions
        fullName: ProcessEnvOptions
        uid: tslib.child_process.ProcessEnvOptions
  - uid: tslib.NodeJS.ProcessEnv
    name: ProcessEnv
    spec.typeScript:
      - name: ProcessEnv
        fullName: ProcessEnv
        uid: tslib.NodeJS.ProcessEnv
  - uid: tslib.child_process.CommonOptions
    name: CommonOptions
    spec.typeScript:
      - name: CommonOptions
        fullName: CommonOptions
        uid: tslib.child_process.CommonOptions
  - uid: tslib.child_process.SerializationType
    name: SerializationType
    spec.typeScript:
      - name: SerializationType
        fullName: SerializationType
        uid: tslib.child_process.SerializationType
  - uid: tslib.child_process.StdioOptions
    name: StdioOptions
    spec.typeScript:
      - name: StdioOptions
        fullName: StdioOptions
        uid: tslib.child_process.StdioOptions
  - uid: tslib.child_process.ExecFileOptions
    name: ExecFileOptions
    spec.typeScript:
      - name: ExecFileOptions
        fullName: ExecFileOptions
        uid: tslib.child_process.ExecFileOptions
  - uid: tslib.BufferEncoding
    name: BufferEncoding
    spec.typeScript:
      - name: BufferEncoding
        fullName: BufferEncoding
        uid: tslib.BufferEncoding
  - uid: string | tslib.NodeJS.ArrayBufferView
    name: ArrayBufferView
    spec.typeScript:
      - name: 'string | '
        fullName: 'string | '
      - name: ArrayBufferView
        fullName: ArrayBufferView
        uid: tslib.NodeJS.ArrayBufferView
  - uid: tslib.child_process.ExecFileSyncOptions
    name: ExecFileSyncOptions
    spec.typeScript:
      - name: ExecFileSyncOptions
        fullName: ExecFileSyncOptions
        uid: tslib.child_process.ExecFileSyncOptions
  - uid: tslib.child_process.ExecOptions
    name: ExecOptions
    spec.typeScript:
      - name: ExecOptions
        fullName: ExecOptions
        uid: tslib.child_process.ExecOptions
  - uid: tslib.child_process.ExecSyncOptions
    name: ExecSyncOptions
    spec.typeScript:
      - name: ExecSyncOptions
        fullName: ExecSyncOptions
        uid: tslib.child_process.ExecSyncOptions
  - uid: tslib.child_process.CommonSpawnOptions
    name: CommonSpawnOptions
    spec.typeScript:
      - name: CommonSpawnOptions
        fullName: CommonSpawnOptions
        uid: tslib.child_process.CommonSpawnOptions
  - uid: tslib.child_process.SpawnOptions
    name: SpawnOptions
    spec.typeScript:
      - name: SpawnOptions
        fullName: SpawnOptions
        uid: tslib.child_process.SpawnOptions
  - uid: tslib.child_process.SpawnSyncOptions
    name: SpawnSyncOptions
    spec.typeScript:
      - name: SpawnSyncOptions
        fullName: SpawnSyncOptions
        uid: tslib.child_process.SpawnSyncOptions
  - uid: tslib.AbortError.Error
    name: Error
    spec.typeScript:
      - name: Error
        fullName: Error
        uid: tslib.AbortError.Error
  - uid: tslib.child_process.ExecFileSyncOptionsWithStringEncoding
    name: ExecFileSyncOptionsWithStringEncoding
    spec.typeScript:
      - name: ExecFileSyncOptionsWithStringEncoding
        fullName: ExecFileSyncOptionsWithStringEncoding
        uid: tslib.child_process.ExecFileSyncOptionsWithStringEncoding
  - uid: tslib.child_process.ExecFileSyncOptionsWithBufferEncoding
    name: ExecFileSyncOptionsWithBufferEncoding
    spec.typeScript:
      - name: ExecFileSyncOptionsWithBufferEncoding
        fullName: ExecFileSyncOptionsWithBufferEncoding
        uid: tslib.child_process.ExecFileSyncOptionsWithBufferEncoding
  - uid: tslib.child_process.ExecSyncOptionsWithStringEncoding
    name: ExecSyncOptionsWithStringEncoding
    spec.typeScript:
      - name: ExecSyncOptionsWithStringEncoding
        fullName: ExecSyncOptionsWithStringEncoding
        uid: tslib.child_process.ExecSyncOptionsWithStringEncoding
  - uid: tslib.child_process.ExecSyncOptionsWithBufferEncoding
    name: ExecSyncOptionsWithBufferEncoding
    spec.typeScript:
      - name: ExecSyncOptionsWithBufferEncoding
        fullName: ExecSyncOptionsWithBufferEncoding
        uid: tslib.child_process.ExecSyncOptionsWithBufferEncoding
  - uid: tslib.child_process.ForkOptions
    name: ForkOptions
    spec.typeScript:
      - name: ForkOptions
        fullName: ForkOptions
        uid: tslib.child_process.ForkOptions
  - uid: tslib.child_process.SpawnOptionsWithoutStdio
    name: SpawnOptionsWithoutStdio
    spec.typeScript:
      - name: SpawnOptionsWithoutStdio
        fullName: SpawnOptionsWithoutStdio
        uid: tslib.child_process.SpawnOptionsWithoutStdio
  - uid: tslib.child_process.ChildProcessWithoutNullStreams
    name: ChildProcessWithoutNullStreams
    spec.typeScript:
      - name: ChildProcessWithoutNullStreams
        fullName: ChildProcessWithoutNullStreams
        uid: tslib.child_process.ChildProcessWithoutNullStreams
  - uid: >-
      tslib.child_process.SpawnOptionsWithStdioTuple<tslib.child_process.StdioPipe,
      tslib.child_process.StdioPipe, tslib.child_process.StdioPipe>
    name: StdioPipe>
    spec.typeScript:
      - name: SpawnOptionsWithStdioTuple
        fullName: SpawnOptionsWithStdioTuple
        uid: tslib.child_process.SpawnOptionsWithStdioTuple
      - name: <
        fullName: <
      - name: StdioPipe
        fullName: StdioPipe
        uid: tslib.child_process.StdioPipe
      - name: ', '
        fullName: ', '
      - name: StdioPipe
        fullName: StdioPipe
        uid: tslib.child_process.StdioPipe
      - name: ', '
        fullName: ', '
      - name: StdioPipe
        fullName: StdioPipe
        uid: tslib.child_process.StdioPipe
      - name: '>'
        fullName: '>'
  - uid: >-
      tslib.child_process.ChildProcessByStdio<tslib.stream.internal.Writable,
      tslib.stream.internal.Readable, tslib.stream.internal.Readable>
    name: Readable>
    spec.typeScript:
      - name: ChildProcessByStdio
        fullName: ChildProcessByStdio
        uid: tslib.child_process.ChildProcessByStdio
      - name: <
        fullName: <
      - name: Writable
        fullName: Writable
        uid: tslib.stream.internal.Writable
      - name: ', '
        fullName: ', '
      - name: Readable
        fullName: Readable
        uid: tslib.stream.internal.Readable
      - name: ', '
        fullName: ', '
      - name: Readable
        fullName: Readable
        uid: tslib.stream.internal.Readable
      - name: '>'
        fullName: '>'
  - uid: >-
      tslib.child_process.SpawnOptionsWithStdioTuple<tslib.child_process.StdioPipe,
      tslib.child_process.StdioPipe, tslib.child_process.StdioNull>
    name: StdioNull>
    spec.typeScript:
      - name: SpawnOptionsWithStdioTuple
        fullName: SpawnOptionsWithStdioTuple
        uid: tslib.child_process.SpawnOptionsWithStdioTuple
      - name: <
        fullName: <
      - name: StdioPipe
        fullName: StdioPipe
        uid: tslib.child_process.StdioPipe
      - name: ', '
        fullName: ', '
      - name: StdioPipe
        fullName: StdioPipe
        uid: tslib.child_process.StdioPipe
      - name: ', '
        fullName: ', '
      - name: StdioNull
        fullName: StdioNull
        uid: tslib.child_process.StdioNull
      - name: '>'
        fullName: '>'
  - uid: >-
      tslib.child_process.ChildProcessByStdio<tslib.stream.internal.Writable,
      tslib.stream.internal.Readable, null>
    name: 'Readable, null>'
    spec.typeScript:
      - name: ChildProcessByStdio
        fullName: ChildProcessByStdio
        uid: tslib.child_process.ChildProcessByStdio
      - name: <
        fullName: <
      - name: Writable
        fullName: Writable
        uid: tslib.stream.internal.Writable
      - name: ', '
        fullName: ', '
      - name: Readable
        fullName: Readable
        uid: tslib.stream.internal.Readable
      - name: ', null>'
        fullName: ', null>'
  - uid: >-
      tslib.child_process.SpawnOptionsWithStdioTuple<tslib.child_process.StdioPipe,
      tslib.child_process.StdioNull, tslib.child_process.StdioPipe>
    name: StdioPipe>
    spec.typeScript:
      - name: SpawnOptionsWithStdioTuple
        fullName: SpawnOptionsWithStdioTuple
        uid: tslib.child_process.SpawnOptionsWithStdioTuple
      - name: <
        fullName: <
      - name: StdioPipe
        fullName: StdioPipe
        uid: tslib.child_process.StdioPipe
      - name: ', '
        fullName: ', '
      - name: StdioNull
        fullName: StdioNull
        uid: tslib.child_process.StdioNull
      - name: ', '
        fullName: ', '
      - name: StdioPipe
        fullName: StdioPipe
        uid: tslib.child_process.StdioPipe
      - name: '>'
        fullName: '>'
  - uid: >-
      tslib.child_process.ChildProcessByStdio<tslib.stream.internal.Writable,
      null, tslib.stream.internal.Readable>
    name: Readable>
    spec.typeScript:
      - name: ChildProcessByStdio
        fullName: ChildProcessByStdio
        uid: tslib.child_process.ChildProcessByStdio
      - name: <
        fullName: <
      - name: Writable
        fullName: Writable
        uid: tslib.stream.internal.Writable
      - name: ', null, '
        fullName: ', null, '
      - name: Readable
        fullName: Readable
        uid: tslib.stream.internal.Readable
      - name: '>'
        fullName: '>'
  - uid: >-
      tslib.child_process.SpawnOptionsWithStdioTuple<tslib.child_process.StdioNull,
      tslib.child_process.StdioPipe, tslib.child_process.StdioPipe>
    name: StdioPipe>
    spec.typeScript:
      - name: SpawnOptionsWithStdioTuple
        fullName: SpawnOptionsWithStdioTuple
        uid: tslib.child_process.SpawnOptionsWithStdioTuple
      - name: <
        fullName: <
      - name: StdioNull
        fullName: StdioNull
        uid: tslib.child_process.StdioNull
      - name: ', '
        fullName: ', '
      - name: StdioPipe
        fullName: StdioPipe
        uid: tslib.child_process.StdioPipe
      - name: ', '
        fullName: ', '
      - name: StdioPipe
        fullName: StdioPipe
        uid: tslib.child_process.StdioPipe
      - name: '>'
        fullName: '>'
  - uid: >-
      tslib.child_process.ChildProcessByStdio<null,
      tslib.stream.internal.Readable, tslib.stream.internal.Readable>
    name: Readable>
    spec.typeScript:
      - name: ChildProcessByStdio
        fullName: ChildProcessByStdio
        uid: tslib.child_process.ChildProcessByStdio
      - name: '<null, '
        fullName: '<null, '
      - name: Readable
        fullName: Readable
        uid: tslib.stream.internal.Readable
      - name: ', '
        fullName: ', '
      - name: Readable
        fullName: Readable
        uid: tslib.stream.internal.Readable
      - name: '>'
        fullName: '>'
  - uid: >-
      tslib.child_process.SpawnOptionsWithStdioTuple<tslib.child_process.StdioPipe,
      tslib.child_process.StdioNull, tslib.child_process.StdioNull>
    name: StdioNull>
    spec.typeScript:
      - name: SpawnOptionsWithStdioTuple
        fullName: SpawnOptionsWithStdioTuple
        uid: tslib.child_process.SpawnOptionsWithStdioTuple
      - name: <
        fullName: <
      - name: StdioPipe
        fullName: StdioPipe
        uid: tslib.child_process.StdioPipe
      - name: ', '
        fullName: ', '
      - name: StdioNull
        fullName: StdioNull
        uid: tslib.child_process.StdioNull
      - name: ', '
        fullName: ', '
      - name: StdioNull
        fullName: StdioNull
        uid: tslib.child_process.StdioNull
      - name: '>'
        fullName: '>'
  - uid: >-
      tslib.child_process.ChildProcessByStdio<tslib.stream.internal.Writable,
      null, null>
    name: 'Writable, null, null>'
    spec.typeScript:
      - name: ChildProcessByStdio
        fullName: ChildProcessByStdio
        uid: tslib.child_process.ChildProcessByStdio
      - name: <
        fullName: <
      - name: Writable
        fullName: Writable
        uid: tslib.stream.internal.Writable
      - name: ', null, null>'
        fullName: ', null, null>'
  - uid: >-
      tslib.child_process.SpawnOptionsWithStdioTuple<tslib.child_process.StdioNull,
      tslib.child_process.StdioPipe, tslib.child_process.StdioNull>
    name: StdioNull>
    spec.typeScript:
      - name: SpawnOptionsWithStdioTuple
        fullName: SpawnOptionsWithStdioTuple
        uid: tslib.child_process.SpawnOptionsWithStdioTuple
      - name: <
        fullName: <
      - name: StdioNull
        fullName: StdioNull
        uid: tslib.child_process.StdioNull
      - name: ', '
        fullName: ', '
      - name: StdioPipe
        fullName: StdioPipe
        uid: tslib.child_process.StdioPipe
      - name: ', '
        fullName: ', '
      - name: StdioNull
        fullName: StdioNull
        uid: tslib.child_process.StdioNull
      - name: '>'
        fullName: '>'
  - uid: >-
      tslib.child_process.ChildProcessByStdio<null,
      tslib.stream.internal.Readable, null>
    name: 'Readable, null>'
    spec.typeScript:
      - name: ChildProcessByStdio
        fullName: ChildProcessByStdio
        uid: tslib.child_process.ChildProcessByStdio
      - name: '<null, '
        fullName: '<null, '
      - name: Readable
        fullName: Readable
        uid: tslib.stream.internal.Readable
      - name: ', null>'
        fullName: ', null>'
  - uid: >-
      tslib.child_process.SpawnOptionsWithStdioTuple<tslib.child_process.StdioNull,
      tslib.child_process.StdioNull, tslib.child_process.StdioPipe>
    name: StdioPipe>
    spec.typeScript:
      - name: SpawnOptionsWithStdioTuple
        fullName: SpawnOptionsWithStdioTuple
        uid: tslib.child_process.SpawnOptionsWithStdioTuple
      - name: <
        fullName: <
      - name: StdioNull
        fullName: StdioNull
        uid: tslib.child_process.StdioNull
      - name: ', '
        fullName: ', '
      - name: StdioNull
        fullName: StdioNull
        uid: tslib.child_process.StdioNull
      - name: ', '
        fullName: ', '
      - name: StdioPipe
        fullName: StdioPipe
        uid: tslib.child_process.StdioPipe
      - name: '>'
        fullName: '>'
  - uid: >-
      tslib.child_process.ChildProcessByStdio<null, null,
      tslib.stream.internal.Readable>
    name: Readable>
    spec.typeScript:
      - name: ChildProcessByStdio
        fullName: ChildProcessByStdio
        uid: tslib.child_process.ChildProcessByStdio
      - name: '<null, null, '
        fullName: '<null, null, '
      - name: Readable
        fullName: Readable
        uid: tslib.stream.internal.Readable
      - name: '>'
        fullName: '>'
  - uid: >-
      tslib.child_process.SpawnOptionsWithStdioTuple<tslib.child_process.StdioNull,
      tslib.child_process.StdioNull, tslib.child_process.StdioNull>
    name: StdioNull>
    spec.typeScript:
      - name: SpawnOptionsWithStdioTuple
        fullName: SpawnOptionsWithStdioTuple
        uid: tslib.child_process.SpawnOptionsWithStdioTuple
      - name: <
        fullName: <
      - name: StdioNull
        fullName: StdioNull
        uid: tslib.child_process.StdioNull
      - name: ', '
        fullName: ', '
      - name: StdioNull
        fullName: StdioNull
        uid: tslib.child_process.StdioNull
      - name: ', '
        fullName: ', '
      - name: StdioNull
        fullName: StdioNull
        uid: tslib.child_process.StdioNull
      - name: '>'
        fullName: '>'
  - uid: 'tslib.child_process.ChildProcessByStdio<null, null, null>'
    name: 'ChildProcessByStdio<null, null, null>'
    spec.typeScript:
      - name: ChildProcessByStdio
        fullName: ChildProcessByStdio
        uid: tslib.child_process.ChildProcessByStdio
      - name: '<null, null, null>'
        fullName: '<null, null, null>'
  - uid: tslib.child_process.SpawnSyncReturns<Buffer>
    name: SpawnSyncReturns<Buffer>
    spec.typeScript:
      - name: SpawnSyncReturns
        fullName: SpawnSyncReturns
        uid: tslib.child_process.SpawnSyncReturns
      - name: <Buffer>
        fullName: <Buffer>
  - uid: tslib.child_process.SpawnSyncOptionsWithStringEncoding
    name: SpawnSyncOptionsWithStringEncoding
    spec.typeScript:
      - name: SpawnSyncOptionsWithStringEncoding
        fullName: SpawnSyncOptionsWithStringEncoding
        uid: tslib.child_process.SpawnSyncOptionsWithStringEncoding
  - uid: tslib.child_process.SpawnSyncReturns<string>
    name: SpawnSyncReturns<string>
    spec.typeScript:
      - name: SpawnSyncReturns
        fullName: SpawnSyncReturns
        uid: tslib.child_process.SpawnSyncReturns
      - name: <string>
        fullName: <string>
  - uid: tslib.child_process.SpawnSyncOptionsWithBufferEncoding
    name: SpawnSyncOptionsWithBufferEncoding
    spec.typeScript:
      - name: SpawnSyncOptionsWithBufferEncoding
        fullName: SpawnSyncOptionsWithBufferEncoding
        uid: tslib.child_process.SpawnSyncOptionsWithBufferEncoding
