### YamlMime:UniversalReference
items:
  - uid: tslib.NodeModule
    name: NodeModule
    fullName: NodeModule
    children:
      - tslib.NodeModule.children
      - tslib.NodeModule.exports
      - tslib.NodeModule.filename
      - tslib.NodeModule.id
      - tslib.NodeModule.loaded
      - tslib.NodeModule.parent
      - tslib.NodeModule.paths
      - tslib.NodeModule.require
    langs:
      - typeScript
    type: interface
    summary: ''
    extends:
      name: tslib.NodeJS.Module
    package: tslib
  - uid: tslib.NodeModule.children
    name: children
    fullName: children
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    syntax:
      content: 'children: Module[]'
      return:
        type:
          - 'tslib.NodeJS.Module[]'
        description: ''
    package: tslib
  - uid: tslib.NodeModule.exports
    name: exports
    fullName: exports
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    syntax:
      content: 'exports: any'
      return:
        type:
          - any
        description: ''
    package: tslib
  - uid: tslib.NodeModule.filename
    name: filename
    fullName: filename
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    syntax:
      content: 'filename: string'
      return:
        type:
          - string
        description: ''
    package: tslib
  - uid: tslib.NodeModule.id
    name: id
    fullName: id
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    syntax:
      content: 'id: string'
      return:
        type:
          - string
        description: ''
    package: tslib
  - uid: tslib.NodeModule.loaded
    name: loaded
    fullName: loaded
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    syntax:
      content: 'loaded: boolean'
      return:
        type:
          - boolean
        description: ''
    package: tslib
  - uid: tslib.NodeModule.parent
    name: parent
    fullName: parent
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    syntax:
      content: 'parent: Module | null'
      return:
        type:
          - tslib.NodeJS.Module | null
        description: ''
    package: tslib
  - uid: tslib.NodeModule.paths
    name: paths
    fullName: paths
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    syntax:
      content: 'paths: string[]'
      return:
        type:
          - 'string[]'
        description: ''
    package: tslib
  - uid: tslib.NodeModule.require
    name: require
    fullName: require
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    syntax:
      content: 'require: Require'
      return:
        type:
          - tslib.NodeJS.Require
        description: ''
    package: tslib
references:
  - uid: tslib.NodeJS.Module
    name: Module
    spec.typeScript:
      - name: Module
        fullName: Module
        uid: tslib.NodeJS.Module
  - uid: 'tslib.NodeJS.Module[]'
    name: 'Module[]'
    spec.typeScript:
      - name: Module
        fullName: Module
        uid: tslib.NodeJS.Module
      - name: '[]'
        fullName: '[]'
  - uid: tslib.NodeJS.Module | null
    name: Module | null
    spec.typeScript:
      - name: Module
        fullName: Module
        uid: tslib.NodeJS.Module
      - name: ' | null'
        fullName: ' | null'
  - uid: tslib.NodeJS.Require
    name: Require
    spec.typeScript:
      - name: Require
        fullName: Require
        uid: tslib.NodeJS.Require
