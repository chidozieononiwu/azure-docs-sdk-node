### YamlMime:UniversalReference
items:
  - uid: '@azure/ms-rest-azure-env.NodeJS.ProcessReport'
    name: ProcessReport
    fullName: ProcessReport
    children:
      - '@azure/ms-rest-azure-env.NodeJS.ProcessReport.directory'
      - '@azure/ms-rest-azure-env.NodeJS.ProcessReport.filename'
      - '@azure/ms-rest-azure-env.NodeJS.ProcessReport.getReport'
      - '@azure/ms-rest-azure-env.NodeJS.ProcessReport.reportOnFatalError'
      - '@azure/ms-rest-azure-env.NodeJS.ProcessReport.reportOnSignal'
      - '@azure/ms-rest-azure-env.NodeJS.ProcessReport.reportOnUncaughtException'
      - '@azure/ms-rest-azure-env.NodeJS.ProcessReport.signal'
      - '@azure/ms-rest-azure-env.NodeJS.ProcessReport.writeReport_1'
      - '@azure/ms-rest-azure-env.NodeJS.ProcessReport.writeReport'
      - '@azure/ms-rest-azure-env.NodeJS.ProcessReport.writeReport_2'
    langs:
      - typeScript
    type: interface
    summary: ''
    package: '@azure/ms-rest-azure-env'
  - uid: '@azure/ms-rest-azure-env.NodeJS.ProcessReport.directory'
    name: directory
    fullName: directory
    children: []
    langs:
      - typeScript
    type: property
    summary: |-
      Directory where the report is written.
      working directory of the Node.js process.
    syntax:
      content: 'directory: string'
      return:
        type:
          - string
        description: ''
    package: '@azure/ms-rest-azure-env'
  - uid: '@azure/ms-rest-azure-env.NodeJS.ProcessReport.filename'
    name: filename
    fullName: filename
    children: []
    langs:
      - typeScript
    type: property
    summary: |-
      Filename where the report is written.
      The default value is the empty string.
    syntax:
      content: 'filename: string'
      return:
        type:
          - string
        description: ''
    package: '@azure/ms-rest-azure-env'
  - uid: '@azure/ms-rest-azure-env.NodeJS.ProcessReport.getReport'
    name: getReport(Error)
    children: []
    type: method
    langs:
      - typeScript
    summary: |-
      Returns a JSON-formatted diagnostic report for the running process.
      The report's JavaScript stack trace is taken from err, if present.
    syntax:
      content: 'function getReport(err?: Error)'
      parameters:
        - id: err
          type:
            - '@azure/ms-rest-azure-env.NodeJS.ErrnoException.Error'
          description: ''
          optional: true
      return:
        type:
          - string
        description: ''
    package: '@azure/ms-rest-azure-env'
  - uid: '@azure/ms-rest-azure-env.NodeJS.ProcessReport.reportOnFatalError'
    name: reportOnFatalError
    fullName: reportOnFatalError
    children: []
    langs:
      - typeScript
    type: property
    summary: |-
      If true, a diagnostic report is generated on fatal errors,
      such as out of memory errors or failed C++ assertions.
    syntax:
      content: 'reportOnFatalError: boolean'
      return:
        type:
          - boolean
        description: ''
    package: '@azure/ms-rest-azure-env'
  - uid: '@azure/ms-rest-azure-env.NodeJS.ProcessReport.reportOnSignal'
    name: reportOnSignal
    fullName: reportOnSignal
    children: []
    langs:
      - typeScript
    type: property
    summary: |-
      If true, a diagnostic report is generated when the process
      receives the signal specified by process.report.signal.
    syntax:
      content: 'reportOnSignal: boolean'
      return:
        type:
          - boolean
        description: ''
    package: '@azure/ms-rest-azure-env'
  - uid: '@azure/ms-rest-azure-env.NodeJS.ProcessReport.reportOnUncaughtException'
    name: reportOnUncaughtException
    fullName: reportOnUncaughtException
    children: []
    langs:
      - typeScript
    type: property
    summary: 'If true, a diagnostic report is generated on uncaught exception.'
    syntax:
      content: 'reportOnUncaughtException: boolean'
      return:
        type:
          - boolean
        description: ''
    package: '@azure/ms-rest-azure-env'
  - uid: '@azure/ms-rest-azure-env.NodeJS.ProcessReport.signal'
    name: signal
    fullName: signal
    children: []
    langs:
      - typeScript
    type: property
    summary: The signal used to trigger the creation of a diagnostic report.
    syntax:
      content: 'signal: Signals'
      return:
        type:
          - '@azure/ms-rest-azure-env.NodeJS.Signals'
        description: ''
    package: '@azure/ms-rest-azure-env'
  - uid: '@azure/ms-rest-azure-env.NodeJS.ProcessReport.writeReport_1'
    name: writeReport(Error)
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function writeReport(error?: Error)'
      parameters:
        - id: error
          type:
            - '@azure/ms-rest-azure-env.NodeJS.ErrnoException.Error'
          description: ''
          optional: true
      return:
        type:
          - string
        description: ''
    package: '@azure/ms-rest-azure-env'
  - uid: '@azure/ms-rest-azure-env.NodeJS.ProcessReport.writeReport'
    name: writeReport(undefined | string)
    children: []
    type: method
    langs:
      - typeScript
    summary: >-
      Writes a diagnostic report to a file. If filename is not provided, the
      default filename

      includes the date, time, PID, and a sequence number.

      The report's JavaScript stack trace is taken from err, if present.
    syntax:
      content: 'function writeReport(fileName?: undefined | string)'
      parameters:
        - id: fileName
          type:
            - undefined | string
          description: >-
            Name of the file where the report is written.

            This should be a relative path, that will be appended to the
            directory specified in

            `process.report.directory`, or the current working directory of the
            Node.js process,

            if unspecified.
          optional: true
      return:
        type:
          - string
        description: Filename of the generated report.
    package: '@azure/ms-rest-azure-env'
  - uid: '@azure/ms-rest-azure-env.NodeJS.ProcessReport.writeReport_2'
    name: 'writeReport(undefined | string, Error)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function writeReport(fileName?: undefined | string, err?: Error)'
      parameters:
        - id: fileName
          type:
            - undefined | string
          description: ''
          optional: true
        - id: err
          type:
            - '@azure/ms-rest-azure-env.NodeJS.ErrnoException.Error'
          description: ''
          optional: true
      return:
        type:
          - string
        description: ''
    package: '@azure/ms-rest-azure-env'
references:
  - uid: '@azure/ms-rest-azure-env.NodeJS.WritableStream'
    name: WritableStream
    spec.typeScript:
      - name: WritableStream
        fullName: WritableStream
        uid: '@azure/ms-rest-azure-env.NodeJS.WritableStream'
  - uid: '@azure/ms-rest-azure-env.NodeJS.ConsoleConstructorOptions'
    name: ConsoleConstructorOptions
    spec.typeScript:
      - name: ConsoleConstructorOptions
        fullName: ConsoleConstructorOptions
        uid: '@azure/ms-rest-azure-env.NodeJS.ConsoleConstructorOptions'
  - uid: '@azure/ms-rest-azure-env.NodeJS.InspectOptions'
    name: InspectOptions
    spec.typeScript:
      - name: InspectOptions
        fullName: InspectOptions
        uid: '@azure/ms-rest-azure-env.NodeJS.InspectOptions'
  - uid: '@azure/ms-rest-azure-env.queueMicrotask'
    name: queueMicrotask
    spec.typeScript:
      - name: queueMicrotask
        fullName: queueMicrotask
        uid: '@azure/ms-rest-azure-env.queueMicrotask'
  - uid: '@azure/ms-rest-azure-env.NodeJS.RefCounted'
    name: RefCounted
    spec.typeScript:
      - name: RefCounted
        fullName: RefCounted
        uid: '@azure/ms-rest-azure-env.NodeJS.RefCounted'
  - uid: '@azure/ms-rest-azure-env.NodeJS.Require'
    name: Require
    spec.typeScript:
      - name: Require
        fullName: Require
        uid: '@azure/ms-rest-azure-env.NodeJS.Require'
  - uid: '@azure/ms-rest-azure-env.NodeJS.Module'
    name: Module
    spec.typeScript:
      - name: Module
        fullName: Module
        uid: '@azure/ms-rest-azure-env.NodeJS.Module'
  - uid: '@azure/ms-rest-azure-env.NodeJS.Platform'
    name: Platform
    spec.typeScript:
      - name: Platform
        fullName: Platform
        uid: '@azure/ms-rest-azure-env.NodeJS.Platform'
  - uid: '@azure/ms-rest-azure-env.NodeJS.ProcessReport'
    name: ProcessReport
    spec.typeScript:
      - name: ProcessReport
        fullName: ProcessReport
        uid: '@azure/ms-rest-azure-env.NodeJS.ProcessReport'
  - uid: '@azure/ms-rest-azure-env.NodeJS.BeforeExitListener'
    name: BeforeExitListener
    spec.typeScript:
      - name: BeforeExitListener
        fullName: BeforeExitListener
        uid: '@azure/ms-rest-azure-env.NodeJS.BeforeExitListener'
  - uid: '@azure/ms-rest-azure-env.NodeJS.DisconnectListener'
    name: DisconnectListener
    spec.typeScript:
      - name: DisconnectListener
        fullName: DisconnectListener
        uid: '@azure/ms-rest-azure-env.NodeJS.DisconnectListener'
  - uid: '@azure/ms-rest-azure-env.NodeJS.ExitListener'
    name: ExitListener
    spec.typeScript:
      - name: ExitListener
        fullName: ExitListener
        uid: '@azure/ms-rest-azure-env.NodeJS.ExitListener'
  - uid: '@azure/ms-rest-azure-env.NodeJS.RejectionHandledListener'
    name: RejectionHandledListener
    spec.typeScript:
      - name: RejectionHandledListener
        fullName: RejectionHandledListener
        uid: '@azure/ms-rest-azure-env.NodeJS.RejectionHandledListener'
  - uid: '@azure/ms-rest-azure-env.NodeJS.UncaughtExceptionListener'
    name: UncaughtExceptionListener
    spec.typeScript:
      - name: UncaughtExceptionListener
        fullName: UncaughtExceptionListener
        uid: '@azure/ms-rest-azure-env.NodeJS.UncaughtExceptionListener'
  - uid: '@azure/ms-rest-azure-env.NodeJS.UnhandledRejectionListener'
    name: UnhandledRejectionListener
    spec.typeScript:
      - name: UnhandledRejectionListener
        fullName: UnhandledRejectionListener
        uid: '@azure/ms-rest-azure-env.NodeJS.UnhandledRejectionListener'
  - uid: '@azure/ms-rest-azure-env.NodeJS.WarningListener'
    name: WarningListener
    spec.typeScript:
      - name: WarningListener
        fullName: WarningListener
        uid: '@azure/ms-rest-azure-env.NodeJS.WarningListener'
  - uid: '@azure/ms-rest-azure-env.NodeJS.MessageListener'
    name: MessageListener
    spec.typeScript:
      - name: MessageListener
        fullName: MessageListener
        uid: '@azure/ms-rest-azure-env.NodeJS.MessageListener'
  - uid: '@azure/ms-rest-azure-env.NodeJS.Signals'
    name: Signals
    spec.typeScript:
      - name: Signals
        fullName: Signals
        uid: '@azure/ms-rest-azure-env.NodeJS.Signals'
  - uid: '@azure/ms-rest-azure-env.NodeJS.SignalsListener'
    name: SignalsListener
    spec.typeScript:
      - name: SignalsListener
        fullName: SignalsListener
        uid: '@azure/ms-rest-azure-env.NodeJS.SignalsListener'
  - uid: '@azure/ms-rest-azure-env.NodeJS.NewListenerListener'
    name: NewListenerListener
    spec.typeScript:
      - name: NewListenerListener
        fullName: NewListenerListener
        uid: '@azure/ms-rest-azure-env.NodeJS.NewListenerListener'
  - uid: '@azure/ms-rest-azure-env.NodeJS.RemoveListenerListener'
    name: RemoveListenerListener
    spec.typeScript:
      - name: RemoveListenerListener
        fullName: RemoveListenerListener
        uid: '@azure/ms-rest-azure-env.NodeJS.RemoveListenerListener'
  - uid: '@azure/ms-rest-azure-env.NodeJS.MultipleResolveListener'
    name: MultipleResolveListener
    spec.typeScript:
      - name: MultipleResolveListener
        fullName: MultipleResolveListener
        uid: '@azure/ms-rest-azure-env.NodeJS.MultipleResolveListener'
  - uid: '@azure/ms-rest-azure-env.NodeJS.CpuUsage'
    name: CpuUsage
    spec.typeScript:
      - name: CpuUsage
        fullName: CpuUsage
        uid: '@azure/ms-rest-azure-env.NodeJS.CpuUsage'
  - uid: '@azure/ms-rest-azure-env.NodeJS.Global.Function'
    name: Function
    spec.typeScript:
      - name: Function
        fullName: Function
        uid: '@azure/ms-rest-azure-env.NodeJS.Global.Function'
  - uid: '@azure/ms-rest-azure-env.NodeJS.BeforeExitListener[]'
    name: 'BeforeExitListener[]'
    spec.typeScript:
      - name: BeforeExitListener
        fullName: BeforeExitListener
        uid: '@azure/ms-rest-azure-env.NodeJS.BeforeExitListener'
      - name: '[]'
        fullName: '[]'
  - uid: '@azure/ms-rest-azure-env.NodeJS.DisconnectListener[]'
    name: 'DisconnectListener[]'
    spec.typeScript:
      - name: DisconnectListener
        fullName: DisconnectListener
        uid: '@azure/ms-rest-azure-env.NodeJS.DisconnectListener'
      - name: '[]'
        fullName: '[]'
  - uid: '@azure/ms-rest-azure-env.NodeJS.ExitListener[]'
    name: 'ExitListener[]'
    spec.typeScript:
      - name: ExitListener
        fullName: ExitListener
        uid: '@azure/ms-rest-azure-env.NodeJS.ExitListener'
      - name: '[]'
        fullName: '[]'
  - uid: '@azure/ms-rest-azure-env.NodeJS.RejectionHandledListener[]'
    name: 'RejectionHandledListener[]'
    spec.typeScript:
      - name: RejectionHandledListener
        fullName: RejectionHandledListener
        uid: '@azure/ms-rest-azure-env.NodeJS.RejectionHandledListener'
      - name: '[]'
        fullName: '[]'
  - uid: '@azure/ms-rest-azure-env.NodeJS.UncaughtExceptionListener[]'
    name: 'UncaughtExceptionListener[]'
    spec.typeScript:
      - name: UncaughtExceptionListener
        fullName: UncaughtExceptionListener
        uid: '@azure/ms-rest-azure-env.NodeJS.UncaughtExceptionListener'
      - name: '[]'
        fullName: '[]'
  - uid: '@azure/ms-rest-azure-env.NodeJS.UnhandledRejectionListener[]'
    name: 'UnhandledRejectionListener[]'
    spec.typeScript:
      - name: UnhandledRejectionListener
        fullName: UnhandledRejectionListener
        uid: '@azure/ms-rest-azure-env.NodeJS.UnhandledRejectionListener'
      - name: '[]'
        fullName: '[]'
  - uid: '@azure/ms-rest-azure-env.NodeJS.WarningListener[]'
    name: 'WarningListener[]'
    spec.typeScript:
      - name: WarningListener
        fullName: WarningListener
        uid: '@azure/ms-rest-azure-env.NodeJS.WarningListener'
      - name: '[]'
        fullName: '[]'
  - uid: '@azure/ms-rest-azure-env.NodeJS.MessageListener[]'
    name: 'MessageListener[]'
    spec.typeScript:
      - name: MessageListener
        fullName: MessageListener
        uid: '@azure/ms-rest-azure-env.NodeJS.MessageListener'
      - name: '[]'
        fullName: '[]'
  - uid: '@azure/ms-rest-azure-env.NodeJS.SignalsListener[]'
    name: 'SignalsListener[]'
    spec.typeScript:
      - name: SignalsListener
        fullName: SignalsListener
        uid: '@azure/ms-rest-azure-env.NodeJS.SignalsListener'
      - name: '[]'
        fullName: '[]'
  - uid: '@azure/ms-rest-azure-env.NodeJS.NewListenerListener[]'
    name: 'NewListenerListener[]'
    spec.typeScript:
      - name: NewListenerListener
        fullName: NewListenerListener
        uid: '@azure/ms-rest-azure-env.NodeJS.NewListenerListener'
      - name: '[]'
        fullName: '[]'
  - uid: '@azure/ms-rest-azure-env.NodeJS.RemoveListenerListener[]'
    name: 'RemoveListenerListener[]'
    spec.typeScript:
      - name: RemoveListenerListener
        fullName: RemoveListenerListener
        uid: '@azure/ms-rest-azure-env.NodeJS.RemoveListenerListener'
      - name: '[]'
        fullName: '[]'
  - uid: '@azure/ms-rest-azure-env.NodeJS.MultipleResolveListener[]'
    name: 'MultipleResolveListener[]'
    spec.typeScript:
      - name: MultipleResolveListener
        fullName: MultipleResolveListener
        uid: '@azure/ms-rest-azure-env.NodeJS.MultipleResolveListener'
      - name: '[]'
        fullName: '[]'
  - uid: '@azure/ms-rest-azure-env.NodeJS.ResourceUsage'
    name: ResourceUsage
    spec.typeScript:
      - name: ResourceUsage
        fullName: ResourceUsage
        uid: '@azure/ms-rest-azure-env.NodeJS.ResourceUsage'
  - uid: '@azure/ms-rest-azure-env.NodeJS.ErrnoException.Error'
    name: Error
    spec.typeScript:
      - name: Error
        fullName: Error
        uid: '@azure/ms-rest-azure-env.NodeJS.ErrnoException.Error'
  - uid: '@azure/ms-rest-azure-env.BufferEncoding'
    name: BufferEncoding
    spec.typeScript:
      - name: BufferEncoding
        fullName: BufferEncoding
        uid: '@azure/ms-rest-azure-env.BufferEncoding'
  - uid: '@azure/ms-rest-azure-env.NodeJS.NodeRequireCache'
    name: NodeRequireCache
    spec.typeScript:
      - name: NodeRequireCache
        fullName: NodeRequireCache
        uid: '@azure/ms-rest-azure-env.NodeJS.NodeRequireCache'
  - uid: '@azure/ms-rest-azure-env.NodeJS.RequireExtensions'
    name: RequireExtensions
    spec.typeScript:
      - name: RequireExtensions
        fullName: RequireExtensions
        uid: '@azure/ms-rest-azure-env.NodeJS.RequireExtensions'
  - uid: '@azure/ms-rest-azure-env.NodeJS.RequireResolve'
    name: RequireResolve
    spec.typeScript:
      - name: RequireResolve
        fullName: RequireResolve
        uid: '@azure/ms-rest-azure-env.NodeJS.RequireResolve'
