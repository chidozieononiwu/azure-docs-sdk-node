### YamlMime:UniversalReference
items:
  - uid: '@azure/ms-rest-azure-env.child_process.ChildProcess'
    name: ChildProcess
    fullName: ChildProcess
    children:
      - '@azure/ms-rest-azure-env.child_process.ChildProcess.addListener_1'
      - '@azure/ms-rest-azure-env.child_process.ChildProcess.addListener_2'
      - '@azure/ms-rest-azure-env.child_process.ChildProcess.addListener_3'
      - '@azure/ms-rest-azure-env.child_process.ChildProcess.addListener_4'
      - '@azure/ms-rest-azure-env.child_process.ChildProcess.addListener_5'
      - '@azure/ms-rest-azure-env.child_process.ChildProcess.addListener'
      - '@azure/ms-rest-azure-env.child_process.ChildProcess.channel'
      - '@azure/ms-rest-azure-env.child_process.ChildProcess.constructor'
      - '@azure/ms-rest-azure-env.child_process.ChildProcess.connected'
      - '@azure/ms-rest-azure-env.child_process.ChildProcess.defaultMaxListeners'
      - '@azure/ms-rest-azure-env.child_process.ChildProcess.disconnect'
      - '@azure/ms-rest-azure-env.child_process.ChildProcess.emit_1'
      - '@azure/ms-rest-azure-env.child_process.ChildProcess.emit_2'
      - '@azure/ms-rest-azure-env.child_process.ChildProcess.emit_3'
      - '@azure/ms-rest-azure-env.child_process.ChildProcess.emit_4'
      - '@azure/ms-rest-azure-env.child_process.ChildProcess.emit_5'
      - '@azure/ms-rest-azure-env.child_process.ChildProcess.emit'
      - '@azure/ms-rest-azure-env.child_process.ChildProcess.eventNames'
      - '@azure/ms-rest-azure-env.child_process.ChildProcess.getMaxListeners'
      - '@azure/ms-rest-azure-env.child_process.ChildProcess.kill'
      - '@azure/ms-rest-azure-env.child_process.ChildProcess.killed'
      - '@azure/ms-rest-azure-env.child_process.ChildProcess.listenerCount'
      - '@azure/ms-rest-azure-env.child_process.ChildProcess.listenerCount'
      - '@azure/ms-rest-azure-env.child_process.ChildProcess.listeners'
      - '@azure/ms-rest-azure-env.child_process.ChildProcess.off'
      - '@azure/ms-rest-azure-env.child_process.ChildProcess.on_1'
      - '@azure/ms-rest-azure-env.child_process.ChildProcess.on_2'
      - '@azure/ms-rest-azure-env.child_process.ChildProcess.on_3'
      - '@azure/ms-rest-azure-env.child_process.ChildProcess.on_4'
      - '@azure/ms-rest-azure-env.child_process.ChildProcess.on_5'
      - '@azure/ms-rest-azure-env.child_process.ChildProcess.on'
      - '@azure/ms-rest-azure-env.child_process.ChildProcess.once_1'
      - '@azure/ms-rest-azure-env.child_process.ChildProcess.once_2'
      - '@azure/ms-rest-azure-env.child_process.ChildProcess.once_3'
      - '@azure/ms-rest-azure-env.child_process.ChildProcess.once_4'
      - '@azure/ms-rest-azure-env.child_process.ChildProcess.once_5'
      - '@azure/ms-rest-azure-env.child_process.ChildProcess.once'
      - '@azure/ms-rest-azure-env.child_process.ChildProcess.pid'
      - '@azure/ms-rest-azure-env.child_process.ChildProcess.prependListener_1'
      - '@azure/ms-rest-azure-env.child_process.ChildProcess.prependListener_2'
      - '@azure/ms-rest-azure-env.child_process.ChildProcess.prependListener_3'
      - '@azure/ms-rest-azure-env.child_process.ChildProcess.prependListener_4'
      - '@azure/ms-rest-azure-env.child_process.ChildProcess.prependListener_5'
      - '@azure/ms-rest-azure-env.child_process.ChildProcess.prependListener'
      - >-
        @azure/ms-rest-azure-env.child_process.ChildProcess.prependOnceListener_1
      - >-
        @azure/ms-rest-azure-env.child_process.ChildProcess.prependOnceListener_2
      - >-
        @azure/ms-rest-azure-env.child_process.ChildProcess.prependOnceListener_3
      - >-
        @azure/ms-rest-azure-env.child_process.ChildProcess.prependOnceListener_4
      - >-
        @azure/ms-rest-azure-env.child_process.ChildProcess.prependOnceListener_5
      - '@azure/ms-rest-azure-env.child_process.ChildProcess.prependOnceListener'
      - '@azure/ms-rest-azure-env.child_process.ChildProcess.rawListeners'
      - '@azure/ms-rest-azure-env.child_process.ChildProcess.ref'
      - '@azure/ms-rest-azure-env.child_process.ChildProcess.removeAllListeners'
      - '@azure/ms-rest-azure-env.child_process.ChildProcess.removeListener'
      - '@azure/ms-rest-azure-env.child_process.ChildProcess.send_2'
      - '@azure/ms-rest-azure-env.child_process.ChildProcess.send_1'
      - '@azure/ms-rest-azure-env.child_process.ChildProcess.send'
      - '@azure/ms-rest-azure-env.child_process.ChildProcess.setMaxListeners'
      - '@azure/ms-rest-azure-env.child_process.ChildProcess.stderr'
      - '@azure/ms-rest-azure-env.child_process.ChildProcess.stdin'
      - '@azure/ms-rest-azure-env.child_process.ChildProcess.stdio'
      - '@azure/ms-rest-azure-env.child_process.ChildProcess.stdout'
      - '@azure/ms-rest-azure-env.child_process.ChildProcess.unref'
    langs:
      - typeScript
    type: interface
    summary: ''
    extends:
      name: '@azure/ms-rest-azure-env.events.EventEmitter.EventEmitter'
    package: '@azure/ms-rest-azure-env'
  - uid: '@azure/ms-rest-azure-env.child_process.ChildProcess.addListener_1'
    name: 'addListener("close", (code: number, signal: string) => void)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function addListener(event: "close", listener: (code: number, signal:
        string) => void)
      parameters:
        - id: event
          type:
            - '"close"'
          description: ''
        - id: listener
          type:
            - '(code: number, signal: string) => void'
          description: ''
      return:
        type:
          - this
        description: ''
    package: '@azure/ms-rest-azure-env'
  - uid: '@azure/ms-rest-azure-env.child_process.ChildProcess.addListener_2'
    name: 'addListener("disconnect", () => void)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function addListener(event: "disconnect", listener: () => void)'
      parameters:
        - id: event
          type:
            - '"disconnect"'
          description: ''
        - id: listener
          type:
            - () => void
          description: ''
      return:
        type:
          - this
        description: ''
    package: '@azure/ms-rest-azure-env'
  - uid: '@azure/ms-rest-azure-env.child_process.ChildProcess.addListener_3'
    name: 'addListener("error", (err: Error) => void)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function addListener(event: "error", listener: (err: Error) => void)'
      parameters:
        - id: event
          type:
            - '"error"'
          description: ''
        - id: listener
          type:
            - '(err: Error) => void'
          description: ''
      return:
        type:
          - this
        description: ''
    package: '@azure/ms-rest-azure-env'
  - uid: '@azure/ms-rest-azure-env.child_process.ChildProcess.addListener_4'
    name: 'addListener("exit", (code: number, signal: string) => void)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function addListener(event: "exit", listener: (code: number, signal:
        string) => void)
      parameters:
        - id: event
          type:
            - '"exit"'
          description: ''
        - id: listener
          type:
            - '(code: number, signal: string) => void'
          description: ''
      return:
        type:
          - this
        description: ''
    package: '@azure/ms-rest-azure-env'
  - uid: '@azure/ms-rest-azure-env.child_process.ChildProcess.addListener_5'
    name: >-
      addListener("message", (message: any, sendHandle: Socket | Server) =>
      void)
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function addListener(event: "message", listener: (message: any,
        sendHandle: Socket | Server) => void)
      parameters:
        - id: event
          type:
            - '"message"'
          description: ''
        - id: listener
          type:
            - '(message: any, sendHandle: Socket | Server) => void'
          description: ''
      return:
        type:
          - this
        description: ''
    package: '@azure/ms-rest-azure-env'
  - uid: '@azure/ms-rest-azure-env.child_process.ChildProcess.addListener'
    name: 'addListener(string, (args: any[]) => void)'
    children: []
    type: method
    langs:
      - typeScript
    summary: |-
      events.EventEmitter
      1. close
      2. disconnect
      3. error
      4. exit
      5. message
    syntax:
      content: 'function addListener(event: string, listener: (args: any[]) => void)'
      parameters:
        - id: event
          type:
            - string
          description: ''
        - id: listener
          type:
            - '(args: any[]) => void'
          description: ''
      return:
        type:
          - this
        description: ''
    package: '@azure/ms-rest-azure-env'
  - uid: '@azure/ms-rest-azure-env.child_process.ChildProcess.channel'
    name: channel
    fullName: channel
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    optional: true
    syntax:
      content: 'channel?: stream'
      return:
        type:
          - stream
        description: ''
    package: '@azure/ms-rest-azure-env'
  - uid: '@azure/ms-rest-azure-env.child_process.ChildProcess.constructor'
    name: ChildProcess(EventEmitterOptions)
    children: []
    type: constructor
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'new ChildProcess(options?: EventEmitterOptions)'
      parameters:
        - id: options
          type:
            - '@azure/ms-rest-azure-env.events.EventEmitterOptions'
          description: ''
          optional: true
    package: '@azure/ms-rest-azure-env'
  - uid: '@azure/ms-rest-azure-env.child_process.ChildProcess.connected'
    name: connected
    fullName: connected
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    syntax:
      content: 'connected: boolean'
      return:
        type:
          - boolean
        description: ''
    package: '@azure/ms-rest-azure-env'
  - uid: '@azure/ms-rest-azure-env.child_process.ChildProcess.defaultMaxListeners'
    name: defaultMaxListeners
    fullName: defaultMaxListeners
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    syntax:
      content: 'static defaultMaxListeners: number'
      return:
        type:
          - number
        description: ''
    package: '@azure/ms-rest-azure-env'
  - uid: '@azure/ms-rest-azure-env.child_process.ChildProcess.disconnect'
    name: disconnect()
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: function disconnect()
      parameters: []
    package: '@azure/ms-rest-azure-env'
  - uid: '@azure/ms-rest-azure-env.child_process.ChildProcess.emit_1'
    name: 'emit("close", number, string)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function emit(event: "close", code: number, signal: string)'
      parameters:
        - id: event
          type:
            - '"close"'
          description: ''
        - id: code
          type:
            - number
          description: ''
        - id: signal
          type:
            - string
          description: ''
      return:
        type:
          - boolean
        description: ''
    package: '@azure/ms-rest-azure-env'
  - uid: '@azure/ms-rest-azure-env.child_process.ChildProcess.emit_2'
    name: emit("disconnect")
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function emit(event: "disconnect")'
      parameters:
        - id: event
          type:
            - '"disconnect"'
          description: ''
      return:
        type:
          - boolean
        description: ''
    package: '@azure/ms-rest-azure-env'
  - uid: '@azure/ms-rest-azure-env.child_process.ChildProcess.emit_3'
    name: 'emit("error", Error)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function emit(event: "error", err: Error)'
      parameters:
        - id: event
          type:
            - '"error"'
          description: ''
        - id: err
          type:
            - Error
          description: ''
      return:
        type:
          - boolean
        description: ''
    package: '@azure/ms-rest-azure-env'
  - uid: '@azure/ms-rest-azure-env.child_process.ChildProcess.emit_4'
    name: 'emit("exit", number, string)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function emit(event: "exit", code: number, signal: string)'
      parameters:
        - id: event
          type:
            - '"exit"'
          description: ''
        - id: code
          type:
            - number
          description: ''
        - id: signal
          type:
            - string
          description: ''
      return:
        type:
          - boolean
        description: ''
    package: '@azure/ms-rest-azure-env'
  - uid: '@azure/ms-rest-azure-env.child_process.ChildProcess.emit_5'
    name: 'emit("message", any, Socket | Server)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function emit(event: "message", message: any, sendHandle: Socket |
        Server)
      parameters:
        - id: event
          type:
            - '"message"'
          description: ''
        - id: message
          type:
            - any
          description: ''
        - id: sendHandle
          type:
            - >-
              @azure/ms-rest-azure-env.net.Socket |
              @azure/ms-rest-azure-env.net.Server
          description: ''
      return:
        type:
          - boolean
        description: ''
    package: '@azure/ms-rest-azure-env'
  - uid: '@azure/ms-rest-azure-env.child_process.ChildProcess.emit'
    name: 'emit(string | symbol, any[])'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function emit(event: string | symbol, args: any[])'
      parameters:
        - id: event
          type:
            - string | symbol
          description: ''
        - id: args
          type:
            - 'any[]'
          description: ''
      return:
        type:
          - boolean
        description: ''
    package: '@azure/ms-rest-azure-env'
  - uid: '@azure/ms-rest-azure-env.child_process.ChildProcess.eventNames'
    name: eventNames()
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: function eventNames()
      parameters: []
      return:
        type:
          - Array<string | symbol>
        description: ''
    package: '@azure/ms-rest-azure-env'
  - uid: '@azure/ms-rest-azure-env.child_process.ChildProcess.getMaxListeners'
    name: getMaxListeners()
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: function getMaxListeners()
      parameters: []
      return:
        type:
          - number
        description: ''
    package: '@azure/ms-rest-azure-env'
  - uid: '@azure/ms-rest-azure-env.child_process.ChildProcess.kill'
    name: kill(undefined | string)
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function kill(signal?: undefined | string)'
      parameters:
        - id: signal
          type:
            - undefined | string
          description: ''
          optional: true
    package: '@azure/ms-rest-azure-env'
  - uid: '@azure/ms-rest-azure-env.child_process.ChildProcess.killed'
    name: killed
    fullName: killed
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    syntax:
      content: 'killed: boolean'
      return:
        type:
          - boolean
        description: ''
    package: '@azure/ms-rest-azure-env'
  - uid: '@azure/ms-rest-azure-env.child_process.ChildProcess.listenerCount'
    name: 'listenerCount(EventEmitter, string | symbol)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        static function listenerCount(emitter: EventEmitter, event: string |
        symbol)
      parameters:
        - id: emitter
          type:
            - '@azure/ms-rest-azure-env.events.EventEmitter.EventEmitter'
          description: ''
        - id: event
          type:
            - string | symbol
          description: ''
      return:
        type:
          - number
        description: ''
    package: '@azure/ms-rest-azure-env'
    deprecated:
      content: since v4.0.0
  - uid: '@azure/ms-rest-azure-env.child_process.ChildProcess.listenerCount'
    name: listenerCount(string | symbol)
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function listenerCount(type: string | symbol)'
      parameters:
        - id: type
          type:
            - string | symbol
          description: ''
      return:
        type:
          - number
        description: ''
    package: '@azure/ms-rest-azure-env'
  - uid: '@azure/ms-rest-azure-env.child_process.ChildProcess.listeners'
    name: listeners(string | symbol)
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function listeners(event: string | symbol)'
      parameters:
        - id: event
          type:
            - string | symbol
          description: ''
      return:
        type:
          - 'Function[]'
        description: ''
    package: '@azure/ms-rest-azure-env'
  - uid: '@azure/ms-rest-azure-env.child_process.ChildProcess.off'
    name: 'off(string | symbol, (args: any[]) => void)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function off(event: string | symbol, listener: (args: any[]) => void)'
      parameters:
        - id: event
          type:
            - string | symbol
          description: ''
        - id: listener
          type:
            - '(args: any[]) => void'
          description: ''
      return:
        type:
          - this
        description: ''
    package: '@azure/ms-rest-azure-env'
  - uid: '@azure/ms-rest-azure-env.child_process.ChildProcess.on_1'
    name: 'on("close", (code: number, signal: string) => void)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function on(event: "close", listener: (code: number, signal: string) =>
        void)
      parameters:
        - id: event
          type:
            - '"close"'
          description: ''
        - id: listener
          type:
            - '(code: number, signal: string) => void'
          description: ''
      return:
        type:
          - this
        description: ''
    package: '@azure/ms-rest-azure-env'
  - uid: '@azure/ms-rest-azure-env.child_process.ChildProcess.on_2'
    name: 'on("disconnect", () => void)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function on(event: "disconnect", listener: () => void)'
      parameters:
        - id: event
          type:
            - '"disconnect"'
          description: ''
        - id: listener
          type:
            - () => void
          description: ''
      return:
        type:
          - this
        description: ''
    package: '@azure/ms-rest-azure-env'
  - uid: '@azure/ms-rest-azure-env.child_process.ChildProcess.on_3'
    name: 'on("error", (err: Error) => void)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function on(event: "error", listener: (err: Error) => void)'
      parameters:
        - id: event
          type:
            - '"error"'
          description: ''
        - id: listener
          type:
            - '(err: Error) => void'
          description: ''
      return:
        type:
          - this
        description: ''
    package: '@azure/ms-rest-azure-env'
  - uid: '@azure/ms-rest-azure-env.child_process.ChildProcess.on_4'
    name: 'on("exit", (code: number, signal: string) => void)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function on(event: "exit", listener: (code: number, signal: string) =>
        void)
      parameters:
        - id: event
          type:
            - '"exit"'
          description: ''
        - id: listener
          type:
            - '(code: number, signal: string) => void'
          description: ''
      return:
        type:
          - this
        description: ''
    package: '@azure/ms-rest-azure-env'
  - uid: '@azure/ms-rest-azure-env.child_process.ChildProcess.on_5'
    name: 'on("message", (message: any, sendHandle: Socket | Server) => void)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function on(event: "message", listener: (message: any, sendHandle:
        Socket | Server) => void)
      parameters:
        - id: event
          type:
            - '"message"'
          description: ''
        - id: listener
          type:
            - '(message: any, sendHandle: Socket | Server) => void'
          description: ''
      return:
        type:
          - this
        description: ''
    package: '@azure/ms-rest-azure-env'
  - uid: '@azure/ms-rest-azure-env.child_process.ChildProcess.on'
    name: 'on(string, (args: any[]) => void)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function on(event: string, listener: (args: any[]) => void)'
      parameters:
        - id: event
          type:
            - string
          description: ''
        - id: listener
          type:
            - '(args: any[]) => void'
          description: ''
      return:
        type:
          - this
        description: ''
    package: '@azure/ms-rest-azure-env'
  - uid: '@azure/ms-rest-azure-env.child_process.ChildProcess.once_1'
    name: 'once("close", (code: number, signal: string) => void)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function once(event: "close", listener: (code: number, signal: string)
        => void)
      parameters:
        - id: event
          type:
            - '"close"'
          description: ''
        - id: listener
          type:
            - '(code: number, signal: string) => void'
          description: ''
      return:
        type:
          - this
        description: ''
    package: '@azure/ms-rest-azure-env'
  - uid: '@azure/ms-rest-azure-env.child_process.ChildProcess.once_2'
    name: 'once("disconnect", () => void)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function once(event: "disconnect", listener: () => void)'
      parameters:
        - id: event
          type:
            - '"disconnect"'
          description: ''
        - id: listener
          type:
            - () => void
          description: ''
      return:
        type:
          - this
        description: ''
    package: '@azure/ms-rest-azure-env'
  - uid: '@azure/ms-rest-azure-env.child_process.ChildProcess.once_3'
    name: 'once("error", (err: Error) => void)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function once(event: "error", listener: (err: Error) => void)'
      parameters:
        - id: event
          type:
            - '"error"'
          description: ''
        - id: listener
          type:
            - '(err: Error) => void'
          description: ''
      return:
        type:
          - this
        description: ''
    package: '@azure/ms-rest-azure-env'
  - uid: '@azure/ms-rest-azure-env.child_process.ChildProcess.once_4'
    name: 'once("exit", (code: number, signal: string) => void)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function once(event: "exit", listener: (code: number, signal: string) =>
        void)
      parameters:
        - id: event
          type:
            - '"exit"'
          description: ''
        - id: listener
          type:
            - '(code: number, signal: string) => void'
          description: ''
      return:
        type:
          - this
        description: ''
    package: '@azure/ms-rest-azure-env'
  - uid: '@azure/ms-rest-azure-env.child_process.ChildProcess.once_5'
    name: 'once("message", (message: any, sendHandle: Socket | Server) => void)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function once(event: "message", listener: (message: any, sendHandle:
        Socket | Server) => void)
      parameters:
        - id: event
          type:
            - '"message"'
          description: ''
        - id: listener
          type:
            - '(message: any, sendHandle: Socket | Server) => void'
          description: ''
      return:
        type:
          - this
        description: ''
    package: '@azure/ms-rest-azure-env'
  - uid: '@azure/ms-rest-azure-env.child_process.ChildProcess.once'
    name: 'once(string, (args: any[]) => void)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function once(event: string, listener: (args: any[]) => void)'
      parameters:
        - id: event
          type:
            - string
          description: ''
        - id: listener
          type:
            - '(args: any[]) => void'
          description: ''
      return:
        type:
          - this
        description: ''
    package: '@azure/ms-rest-azure-env'
  - uid: '@azure/ms-rest-azure-env.child_process.ChildProcess.pid'
    name: pid
    fullName: pid
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    syntax:
      content: 'pid: number'
      return:
        type:
          - number
        description: ''
    package: '@azure/ms-rest-azure-env'
  - uid: '@azure/ms-rest-azure-env.child_process.ChildProcess.prependListener_1'
    name: 'prependListener("close", (code: number, signal: string) => void)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function prependListener(event: "close", listener: (code: number,
        signal: string) => void)
      parameters:
        - id: event
          type:
            - '"close"'
          description: ''
        - id: listener
          type:
            - '(code: number, signal: string) => void'
          description: ''
      return:
        type:
          - this
        description: ''
    package: '@azure/ms-rest-azure-env'
  - uid: '@azure/ms-rest-azure-env.child_process.ChildProcess.prependListener_2'
    name: 'prependListener("disconnect", () => void)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function prependListener(event: "disconnect", listener: () => void)'
      parameters:
        - id: event
          type:
            - '"disconnect"'
          description: ''
        - id: listener
          type:
            - () => void
          description: ''
      return:
        type:
          - this
        description: ''
    package: '@azure/ms-rest-azure-env'
  - uid: '@azure/ms-rest-azure-env.child_process.ChildProcess.prependListener_3'
    name: 'prependListener("error", (err: Error) => void)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function prependListener(event: "error", listener: (err: Error) => void)'
      parameters:
        - id: event
          type:
            - '"error"'
          description: ''
        - id: listener
          type:
            - '(err: Error) => void'
          description: ''
      return:
        type:
          - this
        description: ''
    package: '@azure/ms-rest-azure-env'
  - uid: '@azure/ms-rest-azure-env.child_process.ChildProcess.prependListener_4'
    name: 'prependListener("exit", (code: number, signal: string) => void)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function prependListener(event: "exit", listener: (code: number, signal:
        string) => void)
      parameters:
        - id: event
          type:
            - '"exit"'
          description: ''
        - id: listener
          type:
            - '(code: number, signal: string) => void'
          description: ''
      return:
        type:
          - this
        description: ''
    package: '@azure/ms-rest-azure-env'
  - uid: '@azure/ms-rest-azure-env.child_process.ChildProcess.prependListener_5'
    name: >-
      prependListener("message", (message: any, sendHandle: Socket | Server) =>
      void)
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function prependListener(event: "message", listener: (message: any,
        sendHandle: Socket | Server) => void)
      parameters:
        - id: event
          type:
            - '"message"'
          description: ''
        - id: listener
          type:
            - '(message: any, sendHandle: Socket | Server) => void'
          description: ''
      return:
        type:
          - this
        description: ''
    package: '@azure/ms-rest-azure-env'
  - uid: '@azure/ms-rest-azure-env.child_process.ChildProcess.prependListener'
    name: 'prependListener(string, (args: any[]) => void)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function prependListener(event: string, listener: (args: any[]) => void)'
      parameters:
        - id: event
          type:
            - string
          description: ''
        - id: listener
          type:
            - '(args: any[]) => void'
          description: ''
      return:
        type:
          - this
        description: ''
    package: '@azure/ms-rest-azure-env'
  - uid: '@azure/ms-rest-azure-env.child_process.ChildProcess.prependOnceListener_1'
    name: 'prependOnceListener("close", (code: number, signal: string) => void)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function prependOnceListener(event: "close", listener: (code: number,
        signal: string) => void)
      parameters:
        - id: event
          type:
            - '"close"'
          description: ''
        - id: listener
          type:
            - '(code: number, signal: string) => void'
          description: ''
      return:
        type:
          - this
        description: ''
    package: '@azure/ms-rest-azure-env'
  - uid: '@azure/ms-rest-azure-env.child_process.ChildProcess.prependOnceListener_2'
    name: 'prependOnceListener("disconnect", () => void)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function prependOnceListener(event: "disconnect", listener: () => void)'
      parameters:
        - id: event
          type:
            - '"disconnect"'
          description: ''
        - id: listener
          type:
            - () => void
          description: ''
      return:
        type:
          - this
        description: ''
    package: '@azure/ms-rest-azure-env'
  - uid: '@azure/ms-rest-azure-env.child_process.ChildProcess.prependOnceListener_3'
    name: 'prependOnceListener("error", (err: Error) => void)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function prependOnceListener(event: "error", listener: (err: Error) =>
        void)
      parameters:
        - id: event
          type:
            - '"error"'
          description: ''
        - id: listener
          type:
            - '(err: Error) => void'
          description: ''
      return:
        type:
          - this
        description: ''
    package: '@azure/ms-rest-azure-env'
  - uid: '@azure/ms-rest-azure-env.child_process.ChildProcess.prependOnceListener_4'
    name: 'prependOnceListener("exit", (code: number, signal: string) => void)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function prependOnceListener(event: "exit", listener: (code: number,
        signal: string) => void)
      parameters:
        - id: event
          type:
            - '"exit"'
          description: ''
        - id: listener
          type:
            - '(code: number, signal: string) => void'
          description: ''
      return:
        type:
          - this
        description: ''
    package: '@azure/ms-rest-azure-env'
  - uid: '@azure/ms-rest-azure-env.child_process.ChildProcess.prependOnceListener_5'
    name: >-
      prependOnceListener("message", (message: any, sendHandle: Socket | Server)
      => void)
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function prependOnceListener(event: "message", listener: (message: any,
        sendHandle: Socket | Server) => void)
      parameters:
        - id: event
          type:
            - '"message"'
          description: ''
        - id: listener
          type:
            - '(message: any, sendHandle: Socket | Server) => void'
          description: ''
      return:
        type:
          - this
        description: ''
    package: '@azure/ms-rest-azure-env'
  - uid: '@azure/ms-rest-azure-env.child_process.ChildProcess.prependOnceListener'
    name: 'prependOnceListener(string, (args: any[]) => void)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function prependOnceListener(event: string, listener: (args: any[]) =>
        void)
      parameters:
        - id: event
          type:
            - string
          description: ''
        - id: listener
          type:
            - '(args: any[]) => void'
          description: ''
      return:
        type:
          - this
        description: ''
    package: '@azure/ms-rest-azure-env'
  - uid: '@azure/ms-rest-azure-env.child_process.ChildProcess.rawListeners'
    name: rawListeners(string | symbol)
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function rawListeners(event: string | symbol)'
      parameters:
        - id: event
          type:
            - string | symbol
          description: ''
      return:
        type:
          - 'Function[]'
        description: ''
    package: '@azure/ms-rest-azure-env'
  - uid: '@azure/ms-rest-azure-env.child_process.ChildProcess.ref'
    name: ref()
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: function ref()
      parameters: []
    package: '@azure/ms-rest-azure-env'
  - uid: '@azure/ms-rest-azure-env.child_process.ChildProcess.removeAllListeners'
    name: removeAllListeners(string | symbol)
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function removeAllListeners(event?: string | symbol)'
      parameters:
        - id: event
          type:
            - string | symbol
          description: ''
          optional: true
      return:
        type:
          - this
        description: ''
    package: '@azure/ms-rest-azure-env'
  - uid: '@azure/ms-rest-azure-env.child_process.ChildProcess.removeListener'
    name: 'removeListener(string | symbol, (args: any[]) => void)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function removeListener(event: string | symbol, listener: (args: any[])
        => void)
      parameters:
        - id: event
          type:
            - string | symbol
          description: ''
        - id: listener
          type:
            - '(args: any[]) => void'
          description: ''
      return:
        type:
          - this
        description: ''
    package: '@azure/ms-rest-azure-env'
  - uid: '@azure/ms-rest-azure-env.child_process.ChildProcess.send_2'
    name: >-
      send(any, Socket | Server, MessageOptions, undefined | (error: Error) =>
      void)
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function send(message: any, sendHandle?: Socket | Server, options?:
        MessageOptions, callback?: undefined | (error: Error) => void)
      parameters:
        - id: message
          type:
            - any
          description: ''
        - id: sendHandle
          type:
            - >-
              @azure/ms-rest-azure-env.net.Socket |
              @azure/ms-rest-azure-env.net.Server
          description: ''
          optional: true
        - id: options
          type:
            - '@azure/ms-rest-azure-env.child_process.MessageOptions'
          description: ''
          optional: true
        - id: callback
          type:
            - 'undefined | (error: Error) => void'
          description: ''
          optional: true
      return:
        type:
          - boolean
        description: ''
    package: '@azure/ms-rest-azure-env'
  - uid: '@azure/ms-rest-azure-env.child_process.ChildProcess.send_1'
    name: 'send(any, Socket | Server, undefined | (error: Error) => void)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function send(message: any, sendHandle?: Socket | Server, callback?:
        undefined | (error: Error) => void)
      parameters:
        - id: message
          type:
            - any
          description: ''
        - id: sendHandle
          type:
            - >-
              @azure/ms-rest-azure-env.net.Socket |
              @azure/ms-rest-azure-env.net.Server
          description: ''
          optional: true
        - id: callback
          type:
            - 'undefined | (error: Error) => void'
          description: ''
          optional: true
      return:
        type:
          - boolean
        description: ''
    package: '@azure/ms-rest-azure-env'
  - uid: '@azure/ms-rest-azure-env.child_process.ChildProcess.send'
    name: 'send(any, undefined | (error: Error) => void)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function send(message: any, callback?: undefined | (error: Error) =>
        void)
      parameters:
        - id: message
          type:
            - any
          description: ''
        - id: callback
          type:
            - 'undefined | (error: Error) => void'
          description: ''
          optional: true
      return:
        type:
          - boolean
        description: ''
    package: '@azure/ms-rest-azure-env'
  - uid: '@azure/ms-rest-azure-env.child_process.ChildProcess.setMaxListeners'
    name: setMaxListeners(number)
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function setMaxListeners(n: number)'
      parameters:
        - id: 'n'
          type:
            - number
          description: ''
      return:
        type:
          - this
        description: ''
    package: '@azure/ms-rest-azure-env'
  - uid: '@azure/ms-rest-azure-env.child_process.ChildProcess.stderr'
    name: stderr
    fullName: stderr
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    syntax:
      content: 'stderr: stream.Readable'
      return:
        type:
          - stream.Readable
        description: ''
    package: '@azure/ms-rest-azure-env'
  - uid: '@azure/ms-rest-azure-env.child_process.ChildProcess.stdin'
    name: stdin
    fullName: stdin
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    syntax:
      content: 'stdin: stream.Writable'
      return:
        type:
          - stream.Writable
        description: ''
    package: '@azure/ms-rest-azure-env'
  - uid: '@azure/ms-rest-azure-env.child_process.ChildProcess.stdio'
    name: stdio
    fullName: stdio
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    syntax:
      content: 'stdio: StdioStreams'
      return:
        type:
          - '@azure/ms-rest-azure-env.child_process.StdioStreams'
        description: ''
    package: '@azure/ms-rest-azure-env'
  - uid: '@azure/ms-rest-azure-env.child_process.ChildProcess.stdout'
    name: stdout
    fullName: stdout
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    syntax:
      content: 'stdout: stream.Readable'
      return:
        type:
          - stream.Readable
        description: ''
    package: '@azure/ms-rest-azure-env'
  - uid: '@azure/ms-rest-azure-env.child_process.ChildProcess.unref'
    name: unref()
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: function unref()
      parameters: []
    package: '@azure/ms-rest-azure-env'
references:
  - uid: '@azure/ms-rest-azure-env.events.EventEmitter.EventEmitter'
    name: EventEmitter
    spec.typeScript:
      - name: EventEmitter
        fullName: EventEmitter
        uid: '@azure/ms-rest-azure-env.events.EventEmitter.EventEmitter'
  - uid: '@azure/ms-rest-azure-env.events.EventEmitterOptions'
    name: EventEmitterOptions
    spec.typeScript:
      - name: EventEmitterOptions
        fullName: EventEmitterOptions
        uid: '@azure/ms-rest-azure-env.events.EventEmitterOptions'
  - uid: '@azure/ms-rest-azure-env.child_process.StdioStreams'
    name: StdioStreams
    spec.typeScript:
      - name: StdioStreams
        fullName: StdioStreams
        uid: '@azure/ms-rest-azure-env.child_process.StdioStreams'
  - uid: '@azure/ms-rest-azure-env.net.Socket | @azure/ms-rest-azure-env.net.Server'
    name: Server
    spec.typeScript:
      - name: Socket
        fullName: Socket
        uid: '@azure/ms-rest-azure-env.net.Socket'
      - name: ' | '
        fullName: ' | '
      - name: Server
        fullName: Server
        uid: '@azure/ms-rest-azure-env.net.Server'
  - uid: '@azure/ms-rest-azure-env.child_process.MessageOptions'
    name: MessageOptions
    spec.typeScript:
      - name: MessageOptions
        fullName: MessageOptions
        uid: '@azure/ms-rest-azure-env.child_process.MessageOptions'
  - uid: '@azure/ms-rest-azure-env.NodeJS.ProcessEnv'
    name: ProcessEnv
    spec.typeScript:
      - name: ProcessEnv
        fullName: ProcessEnv
        uid: '@azure/ms-rest-azure-env.NodeJS.ProcessEnv'
  - uid: '@azure/ms-rest-azure-env.BufferEncoding'
    name: BufferEncoding
    spec.typeScript:
      - name: BufferEncoding
        fullName: BufferEncoding
        uid: '@azure/ms-rest-azure-env.BufferEncoding'
  - uid: >-
      undefined | "pipe" | "ignore" | "inherit" | undefined | null | number |
      "pipe" | "ignore" | "inherit" | "ipc" |
      @azure/ms-rest-azure-env.stream.internal.Stream[]
    name: 'Stream[]'
    spec.typeScript:
      - name: >-
          undefined | "pipe" | "ignore" | "inherit" | undefined | null | number
          | "pipe" | "ignore" | "inherit" | "ipc" | 
        fullName: >-
          undefined | "pipe" | "ignore" | "inherit" | undefined | null | number
          | "pipe" | "ignore" | "inherit" | "ipc" | 
      - name: Stream
        fullName: Stream
        uid: '@azure/ms-rest-azure-env.stream.internal.Stream'
      - name: '[]'
        fullName: '[]'
  - uid: string | @azure/ms-rest-azure-env.NodeJS.ArrayBufferView
    name: ArrayBufferView
    spec.typeScript:
      - name: 'string | '
        fullName: 'string | '
      - name: ArrayBufferView
        fullName: ArrayBufferView
        uid: '@azure/ms-rest-azure-env.NodeJS.ArrayBufferView'
  - uid: '@azure/ms-rest-azure-env.child_process.StdioOptions'
    name: StdioOptions
    spec.typeScript:
      - name: StdioOptions
        fullName: StdioOptions
        uid: '@azure/ms-rest-azure-env.child_process.StdioOptions'
  - uid: '@azure/ms-rest-azure-env.child_process.SerializationType'
    name: SerializationType
    spec.typeScript:
      - name: SerializationType
        fullName: SerializationType
        uid: '@azure/ms-rest-azure-env.child_process.SerializationType'
  - uid: '@azure/ms-rest-azure-env.Error'
    name: Error
    spec.typeScript:
      - name: Error
        fullName: Error
        uid: '@azure/ms-rest-azure-env.Error'
  - uid: >-
      @azure/ms-rest-azure-env.child_process.ExecFileSyncOptionsWithStringEncoding
    name: ExecFileSyncOptionsWithStringEncoding
    spec.typeScript:
      - name: ExecFileSyncOptionsWithStringEncoding
        fullName: ExecFileSyncOptionsWithStringEncoding
        uid: >-
          @azure/ms-rest-azure-env.child_process.ExecFileSyncOptionsWithStringEncoding
  - uid: >-
      @azure/ms-rest-azure-env.child_process.ExecFileSyncOptionsWithBufferEncoding
    name: ExecFileSyncOptionsWithBufferEncoding
    spec.typeScript:
      - name: ExecFileSyncOptionsWithBufferEncoding
        fullName: ExecFileSyncOptionsWithBufferEncoding
        uid: >-
          @azure/ms-rest-azure-env.child_process.ExecFileSyncOptionsWithBufferEncoding
  - uid: '@azure/ms-rest-azure-env.child_process.ExecFileSyncOptions'
    name: ExecFileSyncOptions
    spec.typeScript:
      - name: ExecFileSyncOptions
        fullName: ExecFileSyncOptions
        uid: '@azure/ms-rest-azure-env.child_process.ExecFileSyncOptions'
  - uid: '@azure/ms-rest-azure-env.child_process.ExecSyncOptionsWithStringEncoding'
    name: ExecSyncOptionsWithStringEncoding
    spec.typeScript:
      - name: ExecSyncOptionsWithStringEncoding
        fullName: ExecSyncOptionsWithStringEncoding
        uid: >-
          @azure/ms-rest-azure-env.child_process.ExecSyncOptionsWithStringEncoding
  - uid: '@azure/ms-rest-azure-env.child_process.ExecSyncOptionsWithBufferEncoding'
    name: ExecSyncOptionsWithBufferEncoding
    spec.typeScript:
      - name: ExecSyncOptionsWithBufferEncoding
        fullName: ExecSyncOptionsWithBufferEncoding
        uid: >-
          @azure/ms-rest-azure-env.child_process.ExecSyncOptionsWithBufferEncoding
  - uid: '@azure/ms-rest-azure-env.child_process.ExecSyncOptions'
    name: ExecSyncOptions
    spec.typeScript:
      - name: ExecSyncOptions
        fullName: ExecSyncOptions
        uid: '@azure/ms-rest-azure-env.child_process.ExecSyncOptions'
  - uid: '@azure/ms-rest-azure-env.child_process.ForkOptions'
    name: ForkOptions
    spec.typeScript:
      - name: ForkOptions
        fullName: ForkOptions
        uid: '@azure/ms-rest-azure-env.child_process.ForkOptions'
  - uid: '@azure/ms-rest-azure-env.child_process.SpawnOptions'
    name: SpawnOptions
    spec.typeScript:
      - name: SpawnOptions
        fullName: SpawnOptions
        uid: '@azure/ms-rest-azure-env.child_process.SpawnOptions'
  - uid: '@azure/ms-rest-azure-env.child_process.SpawnSyncOptionsWithStringEncoding'
    name: SpawnSyncOptionsWithStringEncoding
    spec.typeScript:
      - name: SpawnSyncOptionsWithStringEncoding
        fullName: SpawnSyncOptionsWithStringEncoding
        uid: >-
          @azure/ms-rest-azure-env.child_process.SpawnSyncOptionsWithStringEncoding
  - uid: '@azure/ms-rest-azure-env.child_process.SpawnSyncOptionsWithBufferEncoding'
    name: SpawnSyncOptionsWithBufferEncoding
    spec.typeScript:
      - name: SpawnSyncOptionsWithBufferEncoding
        fullName: SpawnSyncOptionsWithBufferEncoding
        uid: >-
          @azure/ms-rest-azure-env.child_process.SpawnSyncOptionsWithBufferEncoding
  - uid: '@azure/ms-rest-azure-env.child_process.SpawnSyncOptions'
    name: SpawnSyncOptions
    spec.typeScript:
      - name: SpawnSyncOptions
        fullName: SpawnSyncOptions
        uid: '@azure/ms-rest-azure-env.child_process.SpawnSyncOptions'
