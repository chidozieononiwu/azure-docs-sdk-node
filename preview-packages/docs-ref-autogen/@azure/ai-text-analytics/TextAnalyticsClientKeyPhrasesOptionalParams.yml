### YamlMime:UniversalReference
items:
  - uid: '@azure/abort-controller.TextAnalyticsClientKeyPhrasesOptionalParams'
    name: TextAnalyticsClientKeyPhrasesOptionalParams
    fullName: TextAnalyticsClientKeyPhrasesOptionalParams
    children:
      - >-
        @azure/abort-controller.TextAnalyticsClientKeyPhrasesOptionalParams.abortSignal
      - >-
        @azure/abort-controller.TextAnalyticsClientKeyPhrasesOptionalParams.customHeaders
      - >-
        @azure/abort-controller.TextAnalyticsClientKeyPhrasesOptionalParams.includeStatistics
      - >-
        @azure/abort-controller.TextAnalyticsClientKeyPhrasesOptionalParams.modelVersion
      - >-
        @azure/abort-controller.TextAnalyticsClientKeyPhrasesOptionalParams.onDownloadProgress
      - >-
        @azure/abort-controller.TextAnalyticsClientKeyPhrasesOptionalParams.onUploadProgress
      - >-
        @azure/abort-controller.TextAnalyticsClientKeyPhrasesOptionalParams.spanOptions
      - >-
        @azure/abort-controller.TextAnalyticsClientKeyPhrasesOptionalParams.timeout
    langs:
      - typeScript
    type: interface
    summary: Optional Parameters.
    extends:
      name: '@azure/abort-controller.RequestOptionsBase'
    package: '@azure/abort-controller'
  - uid: >-
      @azure/abort-controller.TextAnalyticsClientKeyPhrasesOptionalParams.abortSignal
    name: abortSignal
    fullName: abortSignal
    children: []
    langs:
      - typeScript
    type: property
    summary: The signal which can be used to abort requests.
    optional: true
    syntax:
      content: 'abortSignal?: AbortSignalLike'
      return:
        type:
          - '@azure/abort-controller.AbortSignalLike'
        description: ''
    package: '@azure/abort-controller'
  - uid: >-
      @azure/abort-controller.TextAnalyticsClientKeyPhrasesOptionalParams.customHeaders
    name: customHeaders
    fullName: customHeaders
    children: []
    langs:
      - typeScript
    type: property
    summary: |-
      {object} [customHeaders] User defined custom request headers that
      will be applied before the request is sent.
    optional: true
    syntax:
      content: 'customHeaders?: [key: string]: string'
      return:
        type:
          - '[key: string]: string'
        description: ''
    package: '@azure/abort-controller'
  - uid: >-
      @azure/abort-controller.TextAnalyticsClientKeyPhrasesOptionalParams.includeStatistics
    name: includeStatistics
    fullName: includeStatistics
    children: []
    langs:
      - typeScript
    type: property
    summary: >-
      (Optional) if set to true, response will contain input and document level
      statistics.
    optional: true
    syntax:
      content: 'includeStatistics?: boolean'
      return:
        type:
          - boolean
        description: ''
    package: '@azure/abort-controller'
  - uid: >-
      @azure/abort-controller.TextAnalyticsClientKeyPhrasesOptionalParams.modelVersion
    name: modelVersion
    fullName: modelVersion
    children: []
    langs:
      - typeScript
    type: property
    summary: >-
      (Optional) This value indicates which model will be used for scoring. If a
      model-version is

      not specified, the API should default to the latest, non-preview version.
    optional: true
    syntax:
      content: 'modelVersion?: string'
      return:
        type:
          - string
        description: ''
    package: '@azure/abort-controller'
  - uid: >-
      @azure/abort-controller.TextAnalyticsClientKeyPhrasesOptionalParams.onDownloadProgress
    name: onDownloadProgress
    fullName: onDownloadProgress
    children: []
    langs:
      - typeScript
    type: property
    summary: Callback which fires upon download progress.
    optional: true
    syntax:
      content: 'onDownloadProgress?: (progress: TransferProgressEvent) => void'
      return:
        type:
          - '(progress: TransferProgressEvent) => void'
        description: ''
    package: '@azure/abort-controller'
  - uid: >-
      @azure/abort-controller.TextAnalyticsClientKeyPhrasesOptionalParams.onUploadProgress
    name: onUploadProgress
    fullName: onUploadProgress
    children: []
    langs:
      - typeScript
    type: property
    summary: Callback which fires upon upload progress.
    optional: true
    syntax:
      content: 'onUploadProgress?: (progress: TransferProgressEvent) => void'
      return:
        type:
          - '(progress: TransferProgressEvent) => void'
        description: ''
    package: '@azure/abort-controller'
  - uid: >-
      @azure/abort-controller.TextAnalyticsClientKeyPhrasesOptionalParams.spanOptions
    name: spanOptions
    fullName: spanOptions
    children: []
    langs:
      - typeScript
    type: property
    summary: Options used to create a span when tracing is enabled.
    optional: true
    syntax:
      content: 'spanOptions?: SpanOptions'
      return:
        type:
          - '@azure/abort-controller.SpanOptions'
        description: ''
    package: '@azure/abort-controller'
  - uid: >-
      @azure/abort-controller.TextAnalyticsClientKeyPhrasesOptionalParams.timeout
    name: timeout
    fullName: timeout
    children: []
    langs:
      - typeScript
    type: property
    summary: >-
      The number of milliseconds a request can take before automatically being
      terminated.
    optional: true
    syntax:
      content: 'timeout?: number'
      return:
        type:
          - number
        description: ''
    package: '@azure/abort-controller'
references:
  - uid: '@azure/abort-controller.RequestOptionsBase'
    name: RequestOptionsBase
    spec.typeScript:
      - name: RequestOptionsBase
        fullName: RequestOptionsBase
        uid: '@azure/abort-controller.RequestOptionsBase'
  - uid: '@azure/abort-controller.AbortSignalLike'
    name: AbortSignalLike
    spec.typeScript:
      - name: AbortSignalLike
        fullName: AbortSignalLike
        uid: '@azure/abort-controller.AbortSignalLike'
  - uid: '@azure/abort-controller.SpanOptions'
    name: SpanOptions
    spec.typeScript:
      - name: SpanOptions
        fullName: SpanOptions
        uid: '@azure/abort-controller.SpanOptions'
