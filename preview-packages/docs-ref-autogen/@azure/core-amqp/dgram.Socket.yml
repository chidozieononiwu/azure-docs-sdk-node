### YamlMime:UniversalReference
items:
  - uid: tslib.dgram.Socket
    name: Socket
    fullName: Socket
    children:
      - tslib.dgram.Socket.addListener_1
      - tslib.dgram.Socket.addListener_2
      - tslib.dgram.Socket.addListener_3
      - tslib.dgram.Socket.addListener_4
      - tslib.dgram.Socket.addListener_5
      - tslib.dgram.Socket.addListener
      - tslib.dgram.Socket.addMembership
      - tslib.dgram.Socket.address
      - tslib.dgram.Socket.addSourceSpecificMembership
      - tslib.dgram.Socket.bind_3
      - tslib.dgram.Socket.bind_2
      - tslib.dgram.Socket.bind_1
      - tslib.dgram.Socket.bind
      - tslib.dgram.Socket.close
      - tslib.dgram.Socket.connect_1
      - tslib.dgram.Socket.connect
      - tslib.dgram.Socket.defaultMaxListeners
      - tslib.dgram.Socket.disconnect
      - tslib.dgram.Socket.dropMembership
      - tslib.dgram.Socket.dropSourceSpecificMembership
      - tslib.dgram.Socket.emit_1
      - tslib.dgram.Socket.emit_2
      - tslib.dgram.Socket.emit_3
      - tslib.dgram.Socket.emit_4
      - tslib.dgram.Socket.emit_5
      - tslib.dgram.Socket.emit
      - tslib.dgram.Socket.eventNames
      - tslib.dgram.Socket.getMaxListeners
      - tslib.dgram.Socket.getRecvBufferSize
      - tslib.dgram.Socket.getSendBufferSize
      - tslib.dgram.Socket.listenerCount
      - tslib.dgram.Socket.listenerCount
      - tslib.dgram.Socket.listeners
      - tslib.dgram.Socket.off
      - tslib.dgram.Socket.on_1
      - tslib.dgram.Socket.on_2
      - tslib.dgram.Socket.on_3
      - tslib.dgram.Socket.on_4
      - tslib.dgram.Socket.on_5
      - tslib.dgram.Socket.on
      - tslib.dgram.Socket.once_1
      - tslib.dgram.Socket.once_2
      - tslib.dgram.Socket.once_3
      - tslib.dgram.Socket.once_4
      - tslib.dgram.Socket.once_5
      - tslib.dgram.Socket.once
      - tslib.dgram.Socket.prependListener_1
      - tslib.dgram.Socket.prependListener_2
      - tslib.dgram.Socket.prependListener_3
      - tslib.dgram.Socket.prependListener_4
      - tslib.dgram.Socket.prependListener_5
      - tslib.dgram.Socket.prependListener
      - tslib.dgram.Socket.prependOnceListener_1
      - tslib.dgram.Socket.prependOnceListener_2
      - tslib.dgram.Socket.prependOnceListener_3
      - tslib.dgram.Socket.prependOnceListener_4
      - tslib.dgram.Socket.prependOnceListener_5
      - tslib.dgram.Socket.prependOnceListener
      - tslib.dgram.Socket.rawListeners
      - tslib.dgram.Socket.ref
      - tslib.dgram.Socket.remoteAddress
      - tslib.dgram.Socket.removeAllListeners
      - tslib.dgram.Socket.removeListener
      - tslib.dgram.Socket.send_2
      - tslib.dgram.Socket.send_1
      - tslib.dgram.Socket.send
      - tslib.dgram.Socket.send_5
      - tslib.dgram.Socket.send_4
      - tslib.dgram.Socket.send_3
      - tslib.dgram.Socket.setBroadcast
      - tslib.dgram.Socket.setMaxListeners
      - tslib.dgram.Socket.setMulticastInterface
      - tslib.dgram.Socket.setMulticastLoopback
      - tslib.dgram.Socket.setMulticastTTL
      - tslib.dgram.Socket.setRecvBufferSize
      - tslib.dgram.Socket.setSendBufferSize
      - tslib.dgram.Socket.setTTL
      - tslib.dgram.Socket.constructor
      - tslib.dgram.Socket.unref
    langs:
      - typeScript
    type: class
    summary: ''
    extends:
      name: tslib.events.EventEmitter.EventEmitter
    package: tslib
  - uid: tslib.dgram.Socket.addListener_1
    name: 'addListener("close", () => void)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function addListener(event: "close", listener: () => void)'
      parameters:
        - id: event
          type:
            - '"close"'
          description: ''
        - id: listener
          type:
            - () => void
          description: ''
      return:
        type:
          - this
        description: ''
    package: tslib
  - uid: tslib.dgram.Socket.addListener_2
    name: 'addListener("connect", () => void)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function addListener(event: "connect", listener: () => void)'
      parameters:
        - id: event
          type:
            - '"connect"'
          description: ''
        - id: listener
          type:
            - () => void
          description: ''
      return:
        type:
          - this
        description: ''
    package: tslib
  - uid: tslib.dgram.Socket.addListener_3
    name: 'addListener("error", (err: Error) => void)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function addListener(event: "error", listener: (err: Error) => void)'
      parameters:
        - id: event
          type:
            - '"error"'
          description: ''
        - id: listener
          type:
            - '(err: Error) => void'
          description: ''
      return:
        type:
          - this
        description: ''
    package: tslib
  - uid: tslib.dgram.Socket.addListener_4
    name: 'addListener("listening", () => void)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function addListener(event: "listening", listener: () => void)'
      parameters:
        - id: event
          type:
            - '"listening"'
          description: ''
        - id: listener
          type:
            - () => void
          description: ''
      return:
        type:
          - this
        description: ''
    package: tslib
  - uid: tslib.dgram.Socket.addListener_5
    name: 'addListener("message", (msg: Buffer, rinfo: RemoteInfo) => void)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function addListener(event: "message", listener: (msg: Buffer, rinfo:
        RemoteInfo) => void)
      parameters:
        - id: event
          type:
            - '"message"'
          description: ''
        - id: listener
          type:
            - '(msg: Buffer, rinfo: RemoteInfo) => void'
          description: ''
      return:
        type:
          - this
        description: ''
    package: tslib
  - uid: tslib.dgram.Socket.addListener
    name: 'addListener(string, (args: any[]) => void)'
    children: []
    type: method
    langs:
      - typeScript
    summary: |-
      events.EventEmitter
      1. close
      2. connect
      3. error
      4. listening
      5. message
    syntax:
      content: 'function addListener(event: string, listener: (args: any[]) => void)'
      parameters:
        - id: event
          type:
            - string
          description: ''
        - id: listener
          type:
            - '(args: any[]) => void'
          description: ''
      return:
        type:
          - this
        description: ''
    package: tslib
  - uid: tslib.dgram.Socket.addMembership
    name: 'addMembership(string, undefined | string)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function addMembership(multicastAddress: string, multicastInterface?:
        undefined | string)
      parameters:
        - id: multicastAddress
          type:
            - string
          description: ''
        - id: multicastInterface
          type:
            - undefined | string
          description: ''
          optional: true
    package: tslib
  - uid: tslib.dgram.Socket.address
    name: address()
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: function address()
      parameters: []
      return:
        type:
          - tslib.net.AddressInfo
        description: ''
    package: tslib
  - uid: tslib.dgram.Socket.addSourceSpecificMembership
    name: 'addSourceSpecificMembership(string, string, undefined | string)'
    children: []
    type: method
    langs:
      - typeScript
    summary: >-
      Tells the kernel to join a source-specific multicast channel at the given

      `sourceAddress` and `groupAddress`, using the `multicastInterface` with
      the

      `IP_ADD_SOURCE_MEMBERSHIP` socket option.

      If the `multicastInterface` argument

      is not specified, the operating system will choose one interface and will
      add

      membership to it.

      To add membership to every available interface, call

      `socket.addSourceSpecificMembership()` multiple times, once per interface.
    syntax:
      content: >-
        function addSourceSpecificMembership(sourceAddress: string,
        groupAddress: string, multicastInterface?: undefined | string)
      parameters:
        - id: sourceAddress
          type:
            - string
          description: ''
        - id: groupAddress
          type:
            - string
          description: ''
        - id: multicastInterface
          type:
            - undefined | string
          description: ''
          optional: true
    package: tslib
  - uid: tslib.dgram.Socket.bind_3
    name: 'bind(BindOptions, undefined | () => void)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function bind(options: BindOptions, callback?: undefined | () => void)'
      parameters:
        - id: options
          type:
            - tslib.dgram.BindOptions
          description: ''
        - id: callback
          type:
            - undefined | () => void
          description: ''
          optional: true
    package: tslib
  - uid: tslib.dgram.Socket.bind_2
    name: bind(undefined | () => void)
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function bind(callback?: undefined | () => void)'
      parameters:
        - id: callback
          type:
            - undefined | () => void
          description: ''
          optional: true
    package: tslib
  - uid: tslib.dgram.Socket.bind_1
    name: 'bind(undefined | number, undefined | () => void)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function bind(port?: undefined | number, callback?: undefined | () =>
        void)
      parameters:
        - id: port
          type:
            - undefined | number
          description: ''
          optional: true
        - id: callback
          type:
            - undefined | () => void
          description: ''
          optional: true
    package: tslib
  - uid: tslib.dgram.Socket.bind
    name: 'bind(undefined | number, undefined | string, undefined | () => void)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function bind(port?: undefined | number, address?: undefined | string,
        callback?: undefined | () => void)
      parameters:
        - id: port
          type:
            - undefined | number
          description: ''
          optional: true
        - id: address
          type:
            - undefined | string
          description: ''
          optional: true
        - id: callback
          type:
            - undefined | () => void
          description: ''
          optional: true
    package: tslib
  - uid: tslib.dgram.Socket.close
    name: close(undefined | () => void)
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function close(callback?: undefined | () => void)'
      parameters:
        - id: callback
          type:
            - undefined | () => void
          description: ''
          optional: true
    package: tslib
  - uid: tslib.dgram.Socket.connect_1
    name: 'connect(number, () => void)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function connect(port: number, callback: () => void)'
      parameters:
        - id: port
          type:
            - number
          description: ''
        - id: callback
          type:
            - () => void
          description: ''
    package: tslib
  - uid: tslib.dgram.Socket.connect
    name: 'connect(number, undefined | string, undefined | () => void)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function connect(port: number, address?: undefined | string, callback?:
        undefined | () => void)
      parameters:
        - id: port
          type:
            - number
          description: ''
        - id: address
          type:
            - undefined | string
          description: ''
          optional: true
        - id: callback
          type:
            - undefined | () => void
          description: ''
          optional: true
    package: tslib
  - uid: tslib.dgram.Socket.defaultMaxListeners
    name: defaultMaxListeners
    fullName: defaultMaxListeners
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    syntax:
      content: 'static defaultMaxListeners: number'
      return:
        type:
          - number
        description: ''
    package: tslib
  - uid: tslib.dgram.Socket.disconnect
    name: disconnect()
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: function disconnect()
      parameters: []
    package: tslib
  - uid: tslib.dgram.Socket.dropMembership
    name: 'dropMembership(string, undefined | string)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function dropMembership(multicastAddress: string, multicastInterface?:
        undefined | string)
      parameters:
        - id: multicastAddress
          type:
            - string
          description: ''
        - id: multicastInterface
          type:
            - undefined | string
          description: ''
          optional: true
    package: tslib
  - uid: tslib.dgram.Socket.dropSourceSpecificMembership
    name: 'dropSourceSpecificMembership(string, string, undefined | string)'
    children: []
    type: method
    langs:
      - typeScript
    summary: >
      Instructs the kernel to leave a source-specific multicast channel at the
      given

      `sourceAddress` and `groupAddress` using the `IP_DROP_SOURCE_MEMBERSHIP`

      socket option. This method is automatically called by the kernel when the

      socket is closed or the process terminates, so most apps will never have

      reason to call this.

      If `multicastInterface` is not specified, the operating system will
      attempt to

      drop membership on all valid interfaces.
    syntax:
      content: >-
        function dropSourceSpecificMembership(sourceAddress: string,
        groupAddress: string, multicastInterface?: undefined | string)
      parameters:
        - id: sourceAddress
          type:
            - string
          description: ''
        - id: groupAddress
          type:
            - string
          description: ''
        - id: multicastInterface
          type:
            - undefined | string
          description: ''
          optional: true
    package: tslib
  - uid: tslib.dgram.Socket.emit_1
    name: emit("close")
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function emit(event: "close")'
      parameters:
        - id: event
          type:
            - '"close"'
          description: ''
      return:
        type:
          - boolean
        description: ''
    package: tslib
  - uid: tslib.dgram.Socket.emit_2
    name: emit("connect")
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function emit(event: "connect")'
      parameters:
        - id: event
          type:
            - '"connect"'
          description: ''
      return:
        type:
          - boolean
        description: ''
    package: tslib
  - uid: tslib.dgram.Socket.emit_3
    name: 'emit("error", Error)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function emit(event: "error", err: Error)'
      parameters:
        - id: event
          type:
            - '"error"'
          description: ''
        - id: err
          type:
            - Error
          description: ''
      return:
        type:
          - boolean
        description: ''
    package: tslib
  - uid: tslib.dgram.Socket.emit_4
    name: emit("listening")
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function emit(event: "listening")'
      parameters:
        - id: event
          type:
            - '"listening"'
          description: ''
      return:
        type:
          - boolean
        description: ''
    package: tslib
  - uid: tslib.dgram.Socket.emit_5
    name: 'emit("message", Buffer, RemoteInfo)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function emit(event: "message", msg: Buffer, rinfo: RemoteInfo)'
      parameters:
        - id: event
          type:
            - '"message"'
          description: ''
        - id: msg
          type:
            - Buffer
          description: ''
        - id: rinfo
          type:
            - tslib.dgram.RemoteInfo
          description: ''
      return:
        type:
          - boolean
        description: ''
    package: tslib
  - uid: tslib.dgram.Socket.emit
    name: 'emit(string | symbol, any[])'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function emit(event: string | symbol, args: any[])'
      parameters:
        - id: event
          type:
            - string | symbol
          description: ''
        - id: args
          type:
            - 'any[]'
          description: ''
      return:
        type:
          - boolean
        description: ''
    package: tslib
  - uid: tslib.dgram.Socket.eventNames
    name: eventNames()
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: function eventNames()
      parameters: []
      return:
        type:
          - Array<string | symbol>
        description: ''
    package: tslib
  - uid: tslib.dgram.Socket.getMaxListeners
    name: getMaxListeners()
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: function getMaxListeners()
      parameters: []
      return:
        type:
          - number
        description: ''
    package: tslib
  - uid: tslib.dgram.Socket.getRecvBufferSize
    name: getRecvBufferSize()
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: function getRecvBufferSize()
      parameters: []
      return:
        type:
          - number
        description: ''
    package: tslib
  - uid: tslib.dgram.Socket.getSendBufferSize
    name: getSendBufferSize()
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: function getSendBufferSize()
      parameters: []
      return:
        type:
          - number
        description: ''
    package: tslib
  - uid: tslib.dgram.Socket.listenerCount
    name: 'listenerCount(EventEmitter, string | symbol)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        static function listenerCount(emitter: EventEmitter, event: string |
        symbol)
      parameters:
        - id: emitter
          type:
            - tslib.events.EventEmitter.EventEmitter
          description: ''
        - id: event
          type:
            - string | symbol
          description: ''
      return:
        type:
          - number
        description: ''
    package: tslib
    deprecated:
      content: since v4.0.0
  - uid: tslib.dgram.Socket.listenerCount
    name: listenerCount(string | symbol)
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function listenerCount(type: string | symbol)'
      parameters:
        - id: type
          type:
            - string | symbol
          description: ''
      return:
        type:
          - number
        description: ''
    package: tslib
  - uid: tslib.dgram.Socket.listeners
    name: listeners(string | symbol)
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function listeners(event: string | symbol)'
      parameters:
        - id: event
          type:
            - string | symbol
          description: ''
      return:
        type:
          - 'Function[]'
        description: ''
    package: tslib
  - uid: tslib.dgram.Socket.off
    name: 'off(string | symbol, (args: any[]) => void)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function off(event: string | symbol, listener: (args: any[]) => void)'
      parameters:
        - id: event
          type:
            - string | symbol
          description: ''
        - id: listener
          type:
            - '(args: any[]) => void'
          description: ''
      return:
        type:
          - this
        description: ''
    package: tslib
  - uid: tslib.dgram.Socket.on_1
    name: 'on("close", () => void)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function on(event: "close", listener: () => void)'
      parameters:
        - id: event
          type:
            - '"close"'
          description: ''
        - id: listener
          type:
            - () => void
          description: ''
      return:
        type:
          - this
        description: ''
    package: tslib
  - uid: tslib.dgram.Socket.on_2
    name: 'on("connect", () => void)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function on(event: "connect", listener: () => void)'
      parameters:
        - id: event
          type:
            - '"connect"'
          description: ''
        - id: listener
          type:
            - () => void
          description: ''
      return:
        type:
          - this
        description: ''
    package: tslib
  - uid: tslib.dgram.Socket.on_3
    name: 'on("error", (err: Error) => void)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function on(event: "error", listener: (err: Error) => void)'
      parameters:
        - id: event
          type:
            - '"error"'
          description: ''
        - id: listener
          type:
            - '(err: Error) => void'
          description: ''
      return:
        type:
          - this
        description: ''
    package: tslib
  - uid: tslib.dgram.Socket.on_4
    name: 'on("listening", () => void)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function on(event: "listening", listener: () => void)'
      parameters:
        - id: event
          type:
            - '"listening"'
          description: ''
        - id: listener
          type:
            - () => void
          description: ''
      return:
        type:
          - this
        description: ''
    package: tslib
  - uid: tslib.dgram.Socket.on_5
    name: 'on("message", (msg: Buffer, rinfo: RemoteInfo) => void)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function on(event: "message", listener: (msg: Buffer, rinfo: RemoteInfo)
        => void)
      parameters:
        - id: event
          type:
            - '"message"'
          description: ''
        - id: listener
          type:
            - '(msg: Buffer, rinfo: RemoteInfo) => void'
          description: ''
      return:
        type:
          - this
        description: ''
    package: tslib
  - uid: tslib.dgram.Socket.on
    name: 'on(string, (args: any[]) => void)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function on(event: string, listener: (args: any[]) => void)'
      parameters:
        - id: event
          type:
            - string
          description: ''
        - id: listener
          type:
            - '(args: any[]) => void'
          description: ''
      return:
        type:
          - this
        description: ''
    package: tslib
  - uid: tslib.dgram.Socket.once_1
    name: 'once("close", () => void)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function once(event: "close", listener: () => void)'
      parameters:
        - id: event
          type:
            - '"close"'
          description: ''
        - id: listener
          type:
            - () => void
          description: ''
      return:
        type:
          - this
        description: ''
    package: tslib
  - uid: tslib.dgram.Socket.once_2
    name: 'once("connect", () => void)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function once(event: "connect", listener: () => void)'
      parameters:
        - id: event
          type:
            - '"connect"'
          description: ''
        - id: listener
          type:
            - () => void
          description: ''
      return:
        type:
          - this
        description: ''
    package: tslib
  - uid: tslib.dgram.Socket.once_3
    name: 'once("error", (err: Error) => void)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function once(event: "error", listener: (err: Error) => void)'
      parameters:
        - id: event
          type:
            - '"error"'
          description: ''
        - id: listener
          type:
            - '(err: Error) => void'
          description: ''
      return:
        type:
          - this
        description: ''
    package: tslib
  - uid: tslib.dgram.Socket.once_4
    name: 'once("listening", () => void)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function once(event: "listening", listener: () => void)'
      parameters:
        - id: event
          type:
            - '"listening"'
          description: ''
        - id: listener
          type:
            - () => void
          description: ''
      return:
        type:
          - this
        description: ''
    package: tslib
  - uid: tslib.dgram.Socket.once_5
    name: 'once("message", (msg: Buffer, rinfo: RemoteInfo) => void)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function once(event: "message", listener: (msg: Buffer, rinfo:
        RemoteInfo) => void)
      parameters:
        - id: event
          type:
            - '"message"'
          description: ''
        - id: listener
          type:
            - '(msg: Buffer, rinfo: RemoteInfo) => void'
          description: ''
      return:
        type:
          - this
        description: ''
    package: tslib
  - uid: tslib.dgram.Socket.once
    name: 'once(string, (args: any[]) => void)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function once(event: string, listener: (args: any[]) => void)'
      parameters:
        - id: event
          type:
            - string
          description: ''
        - id: listener
          type:
            - '(args: any[]) => void'
          description: ''
      return:
        type:
          - this
        description: ''
    package: tslib
  - uid: tslib.dgram.Socket.prependListener_1
    name: 'prependListener("close", () => void)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function prependListener(event: "close", listener: () => void)'
      parameters:
        - id: event
          type:
            - '"close"'
          description: ''
        - id: listener
          type:
            - () => void
          description: ''
      return:
        type:
          - this
        description: ''
    package: tslib
  - uid: tslib.dgram.Socket.prependListener_2
    name: 'prependListener("connect", () => void)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function prependListener(event: "connect", listener: () => void)'
      parameters:
        - id: event
          type:
            - '"connect"'
          description: ''
        - id: listener
          type:
            - () => void
          description: ''
      return:
        type:
          - this
        description: ''
    package: tslib
  - uid: tslib.dgram.Socket.prependListener_3
    name: 'prependListener("error", (err: Error) => void)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function prependListener(event: "error", listener: (err: Error) => void)'
      parameters:
        - id: event
          type:
            - '"error"'
          description: ''
        - id: listener
          type:
            - '(err: Error) => void'
          description: ''
      return:
        type:
          - this
        description: ''
    package: tslib
  - uid: tslib.dgram.Socket.prependListener_4
    name: 'prependListener("listening", () => void)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function prependListener(event: "listening", listener: () => void)'
      parameters:
        - id: event
          type:
            - '"listening"'
          description: ''
        - id: listener
          type:
            - () => void
          description: ''
      return:
        type:
          - this
        description: ''
    package: tslib
  - uid: tslib.dgram.Socket.prependListener_5
    name: 'prependListener("message", (msg: Buffer, rinfo: RemoteInfo) => void)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function prependListener(event: "message", listener: (msg: Buffer,
        rinfo: RemoteInfo) => void)
      parameters:
        - id: event
          type:
            - '"message"'
          description: ''
        - id: listener
          type:
            - '(msg: Buffer, rinfo: RemoteInfo) => void'
          description: ''
      return:
        type:
          - this
        description: ''
    package: tslib
  - uid: tslib.dgram.Socket.prependListener
    name: 'prependListener(string, (args: any[]) => void)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function prependListener(event: string, listener: (args: any[]) => void)'
      parameters:
        - id: event
          type:
            - string
          description: ''
        - id: listener
          type:
            - '(args: any[]) => void'
          description: ''
      return:
        type:
          - this
        description: ''
    package: tslib
  - uid: tslib.dgram.Socket.prependOnceListener_1
    name: 'prependOnceListener("close", () => void)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function prependOnceListener(event: "close", listener: () => void)'
      parameters:
        - id: event
          type:
            - '"close"'
          description: ''
        - id: listener
          type:
            - () => void
          description: ''
      return:
        type:
          - this
        description: ''
    package: tslib
  - uid: tslib.dgram.Socket.prependOnceListener_2
    name: 'prependOnceListener("connect", () => void)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function prependOnceListener(event: "connect", listener: () => void)'
      parameters:
        - id: event
          type:
            - '"connect"'
          description: ''
        - id: listener
          type:
            - () => void
          description: ''
      return:
        type:
          - this
        description: ''
    package: tslib
  - uid: tslib.dgram.Socket.prependOnceListener_3
    name: 'prependOnceListener("error", (err: Error) => void)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function prependOnceListener(event: "error", listener: (err: Error) =>
        void)
      parameters:
        - id: event
          type:
            - '"error"'
          description: ''
        - id: listener
          type:
            - '(err: Error) => void'
          description: ''
      return:
        type:
          - this
        description: ''
    package: tslib
  - uid: tslib.dgram.Socket.prependOnceListener_4
    name: 'prependOnceListener("listening", () => void)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function prependOnceListener(event: "listening", listener: () => void)'
      parameters:
        - id: event
          type:
            - '"listening"'
          description: ''
        - id: listener
          type:
            - () => void
          description: ''
      return:
        type:
          - this
        description: ''
    package: tslib
  - uid: tslib.dgram.Socket.prependOnceListener_5
    name: 'prependOnceListener("message", (msg: Buffer, rinfo: RemoteInfo) => void)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function prependOnceListener(event: "message", listener: (msg: Buffer,
        rinfo: RemoteInfo) => void)
      parameters:
        - id: event
          type:
            - '"message"'
          description: ''
        - id: listener
          type:
            - '(msg: Buffer, rinfo: RemoteInfo) => void'
          description: ''
      return:
        type:
          - this
        description: ''
    package: tslib
  - uid: tslib.dgram.Socket.prependOnceListener
    name: 'prependOnceListener(string, (args: any[]) => void)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function prependOnceListener(event: string, listener: (args: any[]) =>
        void)
      parameters:
        - id: event
          type:
            - string
          description: ''
        - id: listener
          type:
            - '(args: any[]) => void'
          description: ''
      return:
        type:
          - this
        description: ''
    package: tslib
  - uid: tslib.dgram.Socket.rawListeners
    name: rawListeners(string | symbol)
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function rawListeners(event: string | symbol)'
      parameters:
        - id: event
          type:
            - string | symbol
          description: ''
      return:
        type:
          - 'Function[]'
        description: ''
    package: tslib
  - uid: tslib.dgram.Socket.ref
    name: ref()
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: function ref()
      parameters: []
      return:
        type:
          - this
        description: ''
    package: tslib
  - uid: tslib.dgram.Socket.remoteAddress
    name: remoteAddress()
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: function remoteAddress()
      parameters: []
      return:
        type:
          - tslib.net.AddressInfo
        description: ''
    package: tslib
  - uid: tslib.dgram.Socket.removeAllListeners
    name: removeAllListeners(string | symbol)
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function removeAllListeners(event?: string | symbol)'
      parameters:
        - id: event
          type:
            - string | symbol
          description: ''
          optional: true
      return:
        type:
          - this
        description: ''
    package: tslib
  - uid: tslib.dgram.Socket.removeListener
    name: 'removeListener(string | symbol, (args: any[]) => void)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function removeListener(event: string | symbol, listener: (args: any[])
        => void)
      parameters:
        - id: event
          type:
            - string | symbol
          description: ''
        - id: listener
          type:
            - '(args: any[]) => void'
          description: ''
      return:
        type:
          - this
        description: ''
    package: tslib
  - uid: tslib.dgram.Socket.send_2
    name: >-
      send(string | Uint8Array | any[], undefined | (error: Error | null, bytes:
      number) => void)
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function send(msg: string | Uint8Array | any[], callback?: undefined |
        (error: Error | null, bytes: number) => void)
      parameters:
        - id: msg
          type:
            - 'string | Uint8Array | any[]'
          description: ''
        - id: callback
          type:
            - 'undefined | (error: Error | null, bytes: number) => void'
          description: ''
          optional: true
    package: tslib
  - uid: tslib.dgram.Socket.send_1
    name: >-
      send(string | Uint8Array | any[], undefined | number, undefined | (error:
      Error | null, bytes: number) => void)
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function send(msg: string | Uint8Array | any[], port?: undefined |
        number, callback?: undefined | (error: Error | null, bytes: number) =>
        void)
      parameters:
        - id: msg
          type:
            - 'string | Uint8Array | any[]'
          description: ''
        - id: port
          type:
            - undefined | number
          description: ''
          optional: true
        - id: callback
          type:
            - 'undefined | (error: Error | null, bytes: number) => void'
          description: ''
          optional: true
    package: tslib
  - uid: tslib.dgram.Socket.send
    name: >-
      send(string | Uint8Array | any[], undefined | number, undefined | string,
      undefined | (error: Error | null, bytes: number) => void)
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function send(msg: string | Uint8Array | any[], port?: undefined |
        number, address?: undefined | string, callback?: undefined | (error:
        Error | null, bytes: number) => void)
      parameters:
        - id: msg
          type:
            - 'string | Uint8Array | any[]'
          description: ''
        - id: port
          type:
            - undefined | number
          description: ''
          optional: true
        - id: address
          type:
            - undefined | string
          description: ''
          optional: true
        - id: callback
          type:
            - 'undefined | (error: Error | null, bytes: number) => void'
          description: ''
          optional: true
    package: tslib
  - uid: tslib.dgram.Socket.send_5
    name: >-
      send(string | Uint8Array, number, number, undefined | (error: Error |
      null, bytes: number) => void)
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function send(msg: string | Uint8Array, offset: number, length: number,
        callback?: undefined | (error: Error | null, bytes: number) => void)
      parameters:
        - id: msg
          type:
            - string | Uint8Array
          description: ''
        - id: offset
          type:
            - number
          description: ''
        - id: length
          type:
            - number
          description: ''
        - id: callback
          type:
            - 'undefined | (error: Error | null, bytes: number) => void'
          description: ''
          optional: true
    package: tslib
  - uid: tslib.dgram.Socket.send_4
    name: >-
      send(string | Uint8Array, number, number, undefined | number, undefined |
      (error: Error | null, bytes: number) => void)
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function send(msg: string | Uint8Array, offset: number, length: number,
        port?: undefined | number, callback?: undefined | (error: Error | null,
        bytes: number) => void)
      parameters:
        - id: msg
          type:
            - string | Uint8Array
          description: ''
        - id: offset
          type:
            - number
          description: ''
        - id: length
          type:
            - number
          description: ''
        - id: port
          type:
            - undefined | number
          description: ''
          optional: true
        - id: callback
          type:
            - 'undefined | (error: Error | null, bytes: number) => void'
          description: ''
          optional: true
    package: tslib
  - uid: tslib.dgram.Socket.send_3
    name: >-
      send(string | Uint8Array, number, number, undefined | number, undefined |
      string, undefined | (error: Error | null, bytes: number) => void)
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function send(msg: string | Uint8Array, offset: number, length: number,
        port?: undefined | number, address?: undefined | string, callback?:
        undefined | (error: Error | null, bytes: number) => void)
      parameters:
        - id: msg
          type:
            - string | Uint8Array
          description: ''
        - id: offset
          type:
            - number
          description: ''
        - id: length
          type:
            - number
          description: ''
        - id: port
          type:
            - undefined | number
          description: ''
          optional: true
        - id: address
          type:
            - undefined | string
          description: ''
          optional: true
        - id: callback
          type:
            - 'undefined | (error: Error | null, bytes: number) => void'
          description: ''
          optional: true
    package: tslib
  - uid: tslib.dgram.Socket.setBroadcast
    name: setBroadcast(boolean)
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function setBroadcast(flag: boolean)'
      parameters:
        - id: flag
          type:
            - boolean
          description: ''
    package: tslib
  - uid: tslib.dgram.Socket.setMaxListeners
    name: setMaxListeners(number)
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function setMaxListeners(n: number)'
      parameters:
        - id: 'n'
          type:
            - number
          description: ''
      return:
        type:
          - this
        description: ''
    package: tslib
  - uid: tslib.dgram.Socket.setMulticastInterface
    name: setMulticastInterface(string)
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function setMulticastInterface(multicastInterface: string)'
      parameters:
        - id: multicastInterface
          type:
            - string
          description: ''
    package: tslib
  - uid: tslib.dgram.Socket.setMulticastLoopback
    name: setMulticastLoopback(boolean)
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function setMulticastLoopback(flag: boolean)'
      parameters:
        - id: flag
          type:
            - boolean
          description: ''
    package: tslib
  - uid: tslib.dgram.Socket.setMulticastTTL
    name: setMulticastTTL(number)
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function setMulticastTTL(ttl: number)'
      parameters:
        - id: ttl
          type:
            - number
          description: ''
    package: tslib
  - uid: tslib.dgram.Socket.setRecvBufferSize
    name: setRecvBufferSize(number)
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function setRecvBufferSize(size: number)'
      parameters:
        - id: size
          type:
            - number
          description: ''
    package: tslib
  - uid: tslib.dgram.Socket.setSendBufferSize
    name: setSendBufferSize(number)
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function setSendBufferSize(size: number)'
      parameters:
        - id: size
          type:
            - number
          description: ''
    package: tslib
  - uid: tslib.dgram.Socket.setTTL
    name: setTTL(number)
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function setTTL(ttl: number)'
      parameters:
        - id: ttl
          type:
            - number
          description: ''
    package: tslib
  - uid: tslib.dgram.Socket.constructor
    name: Socket(EventEmitterOptions)
    children: []
    type: constructor
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'new Socket(options?: EventEmitterOptions)'
      parameters:
        - id: options
          type:
            - tslib.events.EventEmitterOptions
          description: ''
          optional: true
    package: tslib
  - uid: tslib.dgram.Socket.unref
    name: unref()
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: function unref()
      parameters: []
      return:
        type:
          - this
        description: ''
    package: tslib
references:
  - uid: tslib.events.EventEmitter.EventEmitter
    name: EventEmitter
    spec.typeScript:
      - name: EventEmitter
        fullName: EventEmitter
        uid: tslib.events.EventEmitter.EventEmitter
  - uid: tslib.events.EventEmitterOptions
    name: EventEmitterOptions
    spec.typeScript:
      - name: EventEmitterOptions
        fullName: EventEmitterOptions
        uid: tslib.events.EventEmitterOptions
  - uid: tslib.net.AddressInfo
    name: AddressInfo
    spec.typeScript:
      - name: AddressInfo
        fullName: AddressInfo
        uid: tslib.net.AddressInfo
  - uid: tslib.dgram.BindOptions
    name: BindOptions
    spec.typeScript:
      - name: BindOptions
        fullName: BindOptions
        uid: tslib.dgram.BindOptions
  - uid: tslib.dgram.RemoteInfo
    name: RemoteInfo
    spec.typeScript:
      - name: RemoteInfo
        fullName: RemoteInfo
        uid: tslib.dgram.RemoteInfo
  - uid: tslib.dgram.SocketType
    name: SocketType
    spec.typeScript:
      - name: SocketType
        fullName: SocketType
        uid: tslib.dgram.SocketType
  - uid: tslib.dgram.Socket
    name: Socket
    spec.typeScript:
      - name: Socket
        fullName: Socket
        uid: tslib.dgram.Socket
  - uid: tslib.dgram.SocketOptions
    name: SocketOptions
    spec.typeScript:
      - name: SocketOptions
        fullName: SocketOptions
        uid: tslib.dgram.SocketOptions
