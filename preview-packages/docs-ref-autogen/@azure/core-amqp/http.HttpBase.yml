### YamlMime:UniversalReference
items:
  - uid: tslib.http.HttpBase
    name: HttpBase
    fullName: HttpBase
    children:
      - tslib.http.HttpBase.headersTimeout
      - tslib.http.HttpBase.keepAliveTimeout
      - tslib.http.HttpBase.maxHeadersCount
      - tslib.http.HttpBase.setTimeout_1
      - tslib.http.HttpBase.setTimeout
      - tslib.http.HttpBase.timeout
    langs:
      - typeScript
    type: interface
    summary: ''
    package: tslib
  - uid: tslib.http.HttpBase.headersTimeout
    name: headersTimeout
    fullName: headersTimeout
    children: []
    langs:
      - typeScript
    type: property
    summary: >-
      Limit the amount of time the parser will wait to receive the complete HTTP
      headers.
    syntax:
      content: 'headersTimeout: number'
      return:
        type:
          - number
        description: ''
    package: tslib
  - uid: tslib.http.HttpBase.keepAliveTimeout
    name: keepAliveTimeout
    fullName: keepAliveTimeout
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    syntax:
      content: 'keepAliveTimeout: number'
      return:
        type:
          - number
        description: ''
    package: tslib
  - uid: tslib.http.HttpBase.maxHeadersCount
    name: maxHeadersCount
    fullName: maxHeadersCount
    children: []
    langs:
      - typeScript
    type: property
    summary: >-
      Limits maximum incoming headers count. If set to 0, no limit will be
      applied.
    syntax:
      content: 'maxHeadersCount: number | null'
      return:
        type:
          - number | null
        description: ''
    package: tslib
  - uid: tslib.http.HttpBase.setTimeout_1
    name: setTimeout(() => void)
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function setTimeout(callback: () => void)'
      parameters:
        - id: callback
          type:
            - () => void
          description: ''
      return:
        type:
          - this
        description: ''
    package: tslib
  - uid: tslib.http.HttpBase.setTimeout
    name: 'setTimeout(undefined | number, undefined | () => void)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function setTimeout(msecs?: undefined | number, callback?: undefined |
        () => void)
      parameters:
        - id: msecs
          type:
            - undefined | number
          description: ''
          optional: true
        - id: callback
          type:
            - undefined | () => void
          description: ''
          optional: true
      return:
        type:
          - this
        description: ''
    package: tslib
  - uid: tslib.http.HttpBase.timeout
    name: timeout
    fullName: timeout
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    syntax:
      content: 'timeout: number'
      return:
        type:
          - number
        description: ''
    package: tslib
references:
  - uid: tslib.http.AgentOptions
    name: AgentOptions
    spec.typeScript:
      - name: AgentOptions
        fullName: AgentOptions
        uid: tslib.http.AgentOptions
  - uid: tslib.http.OutgoingMessage
    name: OutgoingMessage
    spec.typeScript:
      - name: OutgoingMessage
        fullName: OutgoingMessage
        uid: tslib.http.OutgoingMessage
  - uid: string | tslib.url.URL | tslib.http.ClientRequestArgs
    name: ClientRequestArgs
    spec.typeScript:
      - name: 'string | '
        fullName: 'string | '
      - name: URL
        fullName: URL
        uid: tslib.url.URL
      - name: ' | '
        fullName: ' | '
      - name: ClientRequestArgs
        fullName: ClientRequestArgs
        uid: tslib.http.ClientRequestArgs
  - uid: tslib.net.Socket
    name: Socket
    spec.typeScript:
      - name: Socket
        fullName: Socket
        uid: tslib.net.Socket
  - uid: tslib.http.OutgoingHttpHeaders | Array<Object>
    name: OutgoingHttpHeaders | Array<Object>
    spec.typeScript:
      - name: OutgoingHttpHeaders
        fullName: OutgoingHttpHeaders
        uid: tslib.http.OutgoingHttpHeaders
      - name: ' | Array<Object>'
        fullName: ' | Array<Object>'
  - uid: tslib.AbortError.Error
    name: Error
    spec.typeScript:
      - name: Error
        fullName: Error
        uid: tslib.AbortError.Error
  - uid: tslib.stream.internal.Readable
    name: Readable
    spec.typeScript:
      - name: Readable
        fullName: Readable
        uid: tslib.stream.internal.Readable
  - uid: tslib.http.OutgoingHttpHeaders
    name: OutgoingHttpHeaders
    spec.typeScript:
      - name: OutgoingHttpHeaders
        fullName: OutgoingHttpHeaders
        uid: tslib.http.OutgoingHttpHeaders
  - uid: tslib.http.IncomingHttpHeaders
    name: IncomingHttpHeaders
    spec.typeScript:
      - name: IncomingHttpHeaders
        fullName: IncomingHttpHeaders
        uid: tslib.http.IncomingHttpHeaders
  - uid: tslib.NodeJS.WritableStream
    name: WritableStream
    spec.typeScript:
      - name: WritableStream
        fullName: WritableStream
        uid: tslib.NodeJS.WritableStream
  - uid: tslib.BufferEncoding
    name: BufferEncoding
    spec.typeScript:
      - name: BufferEncoding
        fullName: BufferEncoding
        uid: tslib.BufferEncoding
  - uid: tslib.NodeJS.ReadableStream
    name: ReadableStream
    spec.typeScript:
      - name: ReadableStream
        fullName: ReadableStream
        uid: tslib.NodeJS.ReadableStream
  - uid: tslib.stream.internal.ReadableOptions
    name: ReadableOptions
    spec.typeScript:
      - name: ReadableOptions
        fullName: ReadableOptions
        uid: tslib.stream.internal.ReadableOptions
  - uid: tslib.stream.internal.Writable
    name: Writable
    spec.typeScript:
      - name: Writable
        fullName: Writable
        uid: tslib.stream.internal.Writable
  - uid: tslib.http.HttpBase
    name: HttpBase
    spec.typeScript:
      - name: HttpBase
        fullName: HttpBase
        uid: tslib.http.HttpBase
  - uid: tslib.http.RequestListener
    name: RequestListener
    spec.typeScript:
      - name: RequestListener
        fullName: RequestListener
        uid: tslib.http.RequestListener
  - uid: tslib.http.ServerOptions
    name: ServerOptions
    spec.typeScript:
      - name: ServerOptions
        fullName: ServerOptions
        uid: tslib.http.ServerOptions
  - uid: tslib.net.AddressInfo | string | null
    name: AddressInfo | string | null
    spec.typeScript:
      - name: AddressInfo
        fullName: AddressInfo
        uid: tslib.net.AddressInfo
      - name: ' | string | null'
        fullName: ' | string | null'
  - uid: tslib.net.ListenOptions
    name: ListenOptions
    spec.typeScript:
      - name: ListenOptions
        fullName: ListenOptions
        uid: tslib.net.ListenOptions
  - uid: tslib.http.IncomingMessage
    name: IncomingMessage
    spec.typeScript:
      - name: IncomingMessage
        fullName: IncomingMessage
        uid: tslib.http.IncomingMessage
  - uid: tslib.http.Agent | boolean
    name: Agent | boolean
    spec.typeScript:
      - name: Agent
        fullName: Agent
        uid: tslib.http.Agent
      - name: ' | boolean'
        fullName: ' | boolean'
  - uid: tslib.http.ClientRequestArgs
    name: ClientRequestArgs
    spec.typeScript:
      - name: ClientRequestArgs
        fullName: ClientRequestArgs
        uid: tslib.http.ClientRequestArgs
  - uid: undefined | tslib.http.IncomingMessage
    name: IncomingMessage
    spec.typeScript:
      - name: 'undefined | '
        fullName: 'undefined | '
      - name: IncomingMessage
        fullName: IncomingMessage
        uid: tslib.http.IncomingMessage
  - uid: undefined | tslib.http.ServerResponse
    name: ServerResponse
    spec.typeScript:
      - name: 'undefined | '
        fullName: 'undefined | '
      - name: ServerResponse
        fullName: ServerResponse
        uid: tslib.http.ServerResponse
  - uid: tslib.http.Server
    name: Server
    spec.typeScript:
      - name: Server
        fullName: Server
        uid: tslib.http.Server
  - uid: tslib.http.RequestOptions | string | tslib.url.URL
    name: URL
    spec.typeScript:
      - name: RequestOptions
        fullName: RequestOptions
        uid: tslib.http.RequestOptions
      - name: ' | string | '
        fullName: ' | string | '
      - name: URL
        fullName: URL
        uid: tslib.url.URL
  - uid: tslib.http.ClientRequest
    name: ClientRequest
    spec.typeScript:
      - name: ClientRequest
        fullName: ClientRequest
        uid: tslib.http.ClientRequest
  - uid: string | tslib.url.URL
    name: URL
    spec.typeScript:
      - name: 'string | '
        fullName: 'string | '
      - name: URL
        fullName: URL
        uid: tslib.url.URL
  - uid: tslib.http.RequestOptions
    name: RequestOptions
    spec.typeScript:
      - name: RequestOptions
        fullName: RequestOptions
        uid: tslib.http.RequestOptions
