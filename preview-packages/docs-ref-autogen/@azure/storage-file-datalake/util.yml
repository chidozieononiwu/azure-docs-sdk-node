### YamlMime:UniversalReference
items:
  - uid: '@azure/abort-controller.util'
    name: util
    langs:
      - typeScript
    fullName: util
    children:
      - '@azure/abort-controller.util.callbackify_1'
      - '@azure/abort-controller.util.callbackify'
      - '@azure/abort-controller.util.callbackify_3'
      - '@azure/abort-controller.util.callbackify_2'
      - '@azure/abort-controller.util.callbackify_5'
      - '@azure/abort-controller.util.callbackify_4'
      - '@azure/abort-controller.util.callbackify_7'
      - '@azure/abort-controller.util.callbackify_6'
      - '@azure/abort-controller.util.callbackify_9'
      - '@azure/abort-controller.util.callbackify_8'
      - '@azure/abort-controller.util.callbackify_11'
      - '@azure/abort-controller.util.callbackify_10'
      - '@azure/abort-controller.util.callbackify_13'
      - '@azure/abort-controller.util.callbackify_12'
      - '@azure/abort-controller.util.CustomInspectFunction'
      - '@azure/abort-controller.util.CustomPromisify'
      - '@azure/abort-controller.util.debuglog'
      - '@azure/abort-controller.util.deprecate'
      - '@azure/abort-controller.util.EncodeIntoResult'
      - '@azure/abort-controller.util.format'
      - '@azure/abort-controller.util.formatWithOptions'
      - '@azure/abort-controller.util.inherits'
      - '@azure/abort-controller.util.InspectOptions'
      - '@azure/abort-controller.util.InspectOptionsStylized'
      - '@azure/abort-controller.util.isArray'
      - '@azure/abort-controller.util.isBoolean'
      - '@azure/abort-controller.util.isBuffer'
      - '@azure/abort-controller.util.isDate'
      - '@azure/abort-controller.util.isDeepStrictEqual'
      - '@azure/abort-controller.util.isError'
      - '@azure/abort-controller.util.isFunction'
      - '@azure/abort-controller.util.isNull'
      - '@azure/abort-controller.util.isNullOrUndefined'
      - '@azure/abort-controller.util.isNumber'
      - '@azure/abort-controller.util.isObject'
      - '@azure/abort-controller.util.isPrimitive'
      - '@azure/abort-controller.util.isRegExp'
      - '@azure/abort-controller.util.isString'
      - '@azure/abort-controller.util.isSymbol'
      - '@azure/abort-controller.util.isUndefined'
      - '@azure/abort-controller.util.log'
      - '@azure/abort-controller.util.Style'
      - '@azure/abort-controller.util.TextDecoder'
      - '@azure/abort-controller.util.TextEncoder'
    type: module
    summary: ''
    package: '@azure/abort-controller'
  - uid: '@azure/abort-controller.util.callbackify_1'
    name: callbackify(() => Promise<TResult>)
    children: []
    type: function
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function callbackify<TResult>(fn: () => Promise<TResult>)'
      parameters:
        - id: fn
          type:
            - () => Promise<TResult>
          description: ''
      return:
        type:
          - '(callback: (err: ErrnoException, result: TResult) => void) => void'
        description: ''
    package: '@azure/abort-controller'
  - uid: '@azure/abort-controller.util.callbackify'
    name: callbackify(() => Promise<void>)
    children: []
    type: function
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function callbackify(fn: () => Promise<void>)'
      parameters:
        - id: fn
          type:
            - () => Promise<void>
          description: ''
      return:
        type:
          - '(callback: (err: ErrnoException) => void) => void'
        description: ''
    package: '@azure/abort-controller'
  - uid: '@azure/abort-controller.util.callbackify_3'
    name: 'callbackify((arg1: T1) => Promise<TResult>)'
    children: []
    type: function
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function callbackify<T1>(fn: (arg1: T1) => Promise<TResult>)'
      parameters:
        - id: fn
          type:
            - '(arg1: T1) => Promise<TResult>'
          description: ''
      return:
        type:
          - >-
            (arg1: T1, callback: (err: ErrnoException, result: TResult) => void)
            => void
        description: ''
    package: '@azure/abort-controller'
  - uid: '@azure/abort-controller.util.callbackify_2'
    name: 'callbackify((arg1: T1) => Promise<void>)'
    children: []
    type: function
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function callbackify<T1>(fn: (arg1: T1) => Promise<void>)'
      parameters:
        - id: fn
          type:
            - '(arg1: T1) => Promise<void>'
          description: ''
      return:
        type:
          - '(arg1: T1, callback: (err: ErrnoException) => void) => void'
        description: ''
    package: '@azure/abort-controller'
  - uid: '@azure/abort-controller.util.callbackify_5'
    name: 'callbackify((arg1: T1, arg2: T2) => Promise<TResult>)'
    children: []
    type: function
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function callbackify<T1>(fn: (arg1: T1, arg2: T2) => Promise<TResult>)'
      parameters:
        - id: fn
          type:
            - '(arg1: T1, arg2: T2) => Promise<TResult>'
          description: ''
      return:
        type:
          - >-
            (arg1: T1, arg2: T2, callback: (err: ErrnoException | null, result:
            TResult) => void) => void
        description: ''
    package: '@azure/abort-controller'
  - uid: '@azure/abort-controller.util.callbackify_4'
    name: 'callbackify((arg1: T1, arg2: T2) => Promise<void>)'
    children: []
    type: function
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function callbackify<T1>(fn: (arg1: T1, arg2: T2) => Promise<void>)'
      parameters:
        - id: fn
          type:
            - '(arg1: T1, arg2: T2) => Promise<void>'
          description: ''
      return:
        type:
          - >-
            (arg1: T1, arg2: T2, callback: (err: ErrnoException) => void) =>
            void
        description: ''
    package: '@azure/abort-controller'
  - uid: '@azure/abort-controller.util.callbackify_7'
    name: 'callbackify((arg1: T1, arg2: T2, arg3: T3) => Promise<TResult>)'
    children: []
    type: function
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function callbackify<T1>(fn: (arg1: T1, arg2: T2, arg3: T3) =>
        Promise<TResult>)
      parameters:
        - id: fn
          type:
            - '(arg1: T1, arg2: T2, arg3: T3) => Promise<TResult>'
          description: ''
      return:
        type:
          - >-
            (arg1: T1, arg2: T2, arg3: T3, callback: (err: ErrnoException |
            null, result: TResult) => void) => void
        description: ''
    package: '@azure/abort-controller'
  - uid: '@azure/abort-controller.util.callbackify_6'
    name: 'callbackify((arg1: T1, arg2: T2, arg3: T3) => Promise<void>)'
    children: []
    type: function
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function callbackify<T1>(fn: (arg1: T1, arg2: T2, arg3: T3) =>
        Promise<void>)
      parameters:
        - id: fn
          type:
            - '(arg1: T1, arg2: T2, arg3: T3) => Promise<void>'
          description: ''
      return:
        type:
          - >-
            (arg1: T1, arg2: T2, arg3: T3, callback: (err: ErrnoException) =>
            void) => void
        description: ''
    package: '@azure/abort-controller'
  - uid: '@azure/abort-controller.util.callbackify_9'
    name: 'callbackify((arg1: T1, arg2: T2, arg3: T3, arg4: T4) => Promise<TResult>)'
    children: []
    type: function
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function callbackify<T1>(fn: (arg1: T1, arg2: T2, arg3: T3, arg4: T4) =>
        Promise<TResult>)
      parameters:
        - id: fn
          type:
            - '(arg1: T1, arg2: T2, arg3: T3, arg4: T4) => Promise<TResult>'
          description: ''
      return:
        type:
          - >-
            (arg1: T1, arg2: T2, arg3: T3, arg4: T4, callback: (err:
            ErrnoException | null, result: TResult) => void) => void
        description: ''
    package: '@azure/abort-controller'
  - uid: '@azure/abort-controller.util.callbackify_8'
    name: 'callbackify((arg1: T1, arg2: T2, arg3: T3, arg4: T4) => Promise<void>)'
    children: []
    type: function
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function callbackify<T1>(fn: (arg1: T1, arg2: T2, arg3: T3, arg4: T4) =>
        Promise<void>)
      parameters:
        - id: fn
          type:
            - '(arg1: T1, arg2: T2, arg3: T3, arg4: T4) => Promise<void>'
          description: ''
      return:
        type:
          - >-
            (arg1: T1, arg2: T2, arg3: T3, arg4: T4, callback: (err:
            ErrnoException) => void) => void
        description: ''
    package: '@azure/abort-controller'
  - uid: '@azure/abort-controller.util.callbackify_11'
    name: >-
      callbackify((arg1: T1, arg2: T2, arg3: T3, arg4: T4, arg5: T5) =>
      Promise<TResult>)
    children: []
    type: function
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function callbackify<T1>(fn: (arg1: T1, arg2: T2, arg3: T3, arg4: T4,
        arg5: T5) => Promise<TResult>)
      parameters:
        - id: fn
          type:
            - >-
              (arg1: T1, arg2: T2, arg3: T3, arg4: T4, arg5: T5) =>
              Promise<TResult>
          description: ''
      return:
        type:
          - >-
            (arg1: T1, arg2: T2, arg3: T3, arg4: T4, arg5: T5, callback: (err:
            ErrnoException | null, result: TResult) => void) => void
        description: ''
    package: '@azure/abort-controller'
  - uid: '@azure/abort-controller.util.callbackify_10'
    name: >-
      callbackify((arg1: T1, arg2: T2, arg3: T3, arg4: T4, arg5: T5) =>
      Promise<void>)
    children: []
    type: function
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function callbackify<T1>(fn: (arg1: T1, arg2: T2, arg3: T3, arg4: T4,
        arg5: T5) => Promise<void>)
      parameters:
        - id: fn
          type:
            - >-
              (arg1: T1, arg2: T2, arg3: T3, arg4: T4, arg5: T5) =>
              Promise<void>
          description: ''
      return:
        type:
          - >-
            (arg1: T1, arg2: T2, arg3: T3, arg4: T4, arg5: T5, callback: (err:
            ErrnoException) => void) => void
        description: ''
    package: '@azure/abort-controller'
  - uid: '@azure/abort-controller.util.callbackify_13'
    name: >-
      callbackify((arg1: T1, arg2: T2, arg3: T3, arg4: T4, arg5: T5, arg6: T6)
      => Promise<TResult>)
    children: []
    type: function
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function callbackify<T1>(fn: (arg1: T1, arg2: T2, arg3: T3, arg4: T4,
        arg5: T5, arg6: T6) => Promise<TResult>)
      parameters:
        - id: fn
          type:
            - >-
              (arg1: T1, arg2: T2, arg3: T3, arg4: T4, arg5: T5, arg6: T6) =>
              Promise<TResult>
          description: ''
      return:
        type:
          - >-
            (arg1: T1, arg2: T2, arg3: T3, arg4: T4, arg5: T5, arg6: T6,
            callback: (err: ErrnoException | null, result: TResult) => void) =>
            void
        description: ''
    package: '@azure/abort-controller'
  - uid: '@azure/abort-controller.util.callbackify_12'
    name: >-
      callbackify((arg1: T1, arg2: T2, arg3: T3, arg4: T4, arg5: T5, arg6: T6)
      => Promise<void>)
    children: []
    type: function
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function callbackify<T1>(fn: (arg1: T1, arg2: T2, arg3: T3, arg4: T4,
        arg5: T5, arg6: T6) => Promise<void>)
      parameters:
        - id: fn
          type:
            - >-
              (arg1: T1, arg2: T2, arg3: T3, arg4: T4, arg5: T5, arg6: T6) =>
              Promise<void>
          description: ''
      return:
        type:
          - >-
            (arg1: T1, arg2: T2, arg3: T3, arg4: T4, arg5: T5, arg6: T6,
            callback: (err: ErrnoException) => void) => void
        description: ''
    package: '@azure/abort-controller'
  - uid: '@azure/abort-controller.util.debuglog'
    name: debuglog(string)
    children: []
    type: function
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function debuglog(key: string)'
      parameters:
        - id: key
          type:
            - string
          description: ''
      return:
        type:
          - '(msg: string, param: any[]) => void'
        description: ''
    package: '@azure/abort-controller'
  - uid: '@azure/abort-controller.util.deprecate'
    name: 'deprecate(T, string, undefined | string)'
    children: []
    type: function
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function deprecate<T>(fn: T, message: string, code?: undefined | string)'
      parameters:
        - id: fn
          type:
            - T
          description: ''
        - id: message
          type:
            - string
          description: ''
        - id: code
          type:
            - undefined | string
          description: ''
          optional: true
      return:
        type:
          - T
        description: ''
    package: '@azure/abort-controller'
  - uid: '@azure/abort-controller.util.format'
    name: 'format(any, any[])'
    children: []
    type: function
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function format(format: any, param: any[])'
      parameters:
        - id: format
          type:
            - any
          description: ''
        - id: param
          type:
            - 'any[]'
          description: ''
      return:
        type:
          - string
        description: ''
    package: '@azure/abort-controller'
  - uid: '@azure/abort-controller.util.formatWithOptions'
    name: 'formatWithOptions(InspectOptions, string, any[])'
    children: []
    type: function
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function formatWithOptions(inspectOptions: InspectOptions, format:
        string, param: any[])
      parameters:
        - id: inspectOptions
          type:
            - '@azure/abort-controller.util.InspectOptions'
          description: ''
        - id: format
          type:
            - string
          description: ''
        - id: param
          type:
            - 'any[]'
          description: ''
      return:
        type:
          - string
        description: ''
    package: '@azure/abort-controller'
  - uid: '@azure/abort-controller.util.inherits'
    name: 'inherits(any, any)'
    children: []
    type: function
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function inherits(constructor: any, superConstructor: any)'
      parameters:
        - id: constructor
          type:
            - any
          description: ''
        - id: superConstructor
          type:
            - any
          description: ''
    package: '@azure/abort-controller'
  - uid: '@azure/abort-controller.util.isArray'
    name: isArray(any)
    children: []
    type: function
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function isArray(object: any)'
      parameters:
        - id: object
          type:
            - any
          description: ''
      return:
        type:
          - boolean
        description: ''
    package: '@azure/abort-controller'
    deprecated:
      content: since v4.0.0 - use `Array.isArray()` instead.
  - uid: '@azure/abort-controller.util.isBoolean'
    name: isBoolean(any)
    children: []
    type: function
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function isBoolean(object: any)'
      parameters:
        - id: object
          type:
            - any
          description: ''
      return:
        type:
          - boolean
        description: ''
    package: '@azure/abort-controller'
    deprecated:
      content: since v4.0.0 - use `typeof value === 'boolean'` instead.
  - uid: '@azure/abort-controller.util.isBuffer'
    name: isBuffer(any)
    children: []
    type: function
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function isBuffer(object: any)'
      parameters:
        - id: object
          type:
            - any
          description: ''
      return:
        type:
          - boolean
        description: ''
    package: '@azure/abort-controller'
    deprecated:
      content: since v4.0.0 - use `Buffer.isBuffer()` instead.
  - uid: '@azure/abort-controller.util.isDate'
    name: isDate(any)
    children: []
    type: function
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function isDate(object: any)'
      parameters:
        - id: object
          type:
            - any
          description: ''
      return:
        type:
          - boolean
        description: ''
    package: '@azure/abort-controller'
    deprecated:
      content: since v4.0.0 - use `util.types.isDate()` instead.
  - uid: '@azure/abort-controller.util.isDeepStrictEqual'
    name: 'isDeepStrictEqual(any, any)'
    children: []
    type: function
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function isDeepStrictEqual(val1: any, val2: any)'
      parameters:
        - id: val1
          type:
            - any
          description: ''
        - id: val2
          type:
            - any
          description: ''
      return:
        type:
          - boolean
        description: ''
    package: '@azure/abort-controller'
  - uid: '@azure/abort-controller.util.isError'
    name: isError(any)
    children: []
    type: function
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function isError(object: any)'
      parameters:
        - id: object
          type:
            - any
          description: ''
      return:
        type:
          - boolean
        description: ''
    package: '@azure/abort-controller'
    deprecated:
      content: since v4.0.0 - use `util.types.isNativeError()` instead.
  - uid: '@azure/abort-controller.util.isFunction'
    name: isFunction(any)
    children: []
    type: function
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function isFunction(object: any)'
      parameters:
        - id: object
          type:
            - any
          description: ''
      return:
        type:
          - boolean
        description: ''
    package: '@azure/abort-controller'
    deprecated:
      content: since v4.0.0 - use `typeof value === 'function'` instead.
  - uid: '@azure/abort-controller.util.isNull'
    name: isNull(any)
    children: []
    type: function
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function isNull(object: any)'
      parameters:
        - id: object
          type:
            - any
          description: ''
      return:
        type:
          - boolean
        description: ''
    package: '@azure/abort-controller'
    deprecated:
      content: since v4.0.0 - use `value === null` instead.
  - uid: '@azure/abort-controller.util.isNullOrUndefined'
    name: isNullOrUndefined(any)
    children: []
    type: function
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function isNullOrUndefined(object: any)'
      parameters:
        - id: object
          type:
            - any
          description: ''
      return:
        type:
          - boolean
        description: ''
    package: '@azure/abort-controller'
    deprecated:
      content: since v4.0.0 - use `value === null || value === undefined` instead.
  - uid: '@azure/abort-controller.util.isNumber'
    name: isNumber(any)
    children: []
    type: function
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function isNumber(object: any)'
      parameters:
        - id: object
          type:
            - any
          description: ''
      return:
        type:
          - boolean
        description: ''
    package: '@azure/abort-controller'
    deprecated:
      content: since v4.0.0 - use `typeof value === 'number'` instead.
  - uid: '@azure/abort-controller.util.isObject'
    name: isObject(any)
    children: []
    type: function
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function isObject(object: any)'
      parameters:
        - id: object
          type:
            - any
          description: ''
      return:
        type:
          - boolean
        description: ''
    package: '@azure/abort-controller'
    deprecated:
      content: >-
        since v4.0.0 - use `value !== null && typeof value === 'object'`
        instead.
  - uid: '@azure/abort-controller.util.isPrimitive'
    name: isPrimitive(any)
    children: []
    type: function
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function isPrimitive(object: any)'
      parameters:
        - id: object
          type:
            - any
          description: ''
      return:
        type:
          - boolean
        description: ''
    package: '@azure/abort-controller'
    deprecated:
      content: >-
        since v4.0.0 - use `(typeof value !== 'object' && typeof value !==
        'function') || value === null` instead.
  - uid: '@azure/abort-controller.util.isRegExp'
    name: isRegExp(any)
    children: []
    type: function
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function isRegExp(object: any)'
      parameters:
        - id: object
          type:
            - any
          description: ''
      return:
        type:
          - boolean
        description: ''
    package: '@azure/abort-controller'
    deprecated:
      content: since v4.0.0 - use `util.types.isRegExp()` instead.
  - uid: '@azure/abort-controller.util.isString'
    name: isString(any)
    children: []
    type: function
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function isString(object: any)'
      parameters:
        - id: object
          type:
            - any
          description: ''
      return:
        type:
          - boolean
        description: ''
    package: '@azure/abort-controller'
    deprecated:
      content: since v4.0.0 - use `typeof value === 'string'` instead.
  - uid: '@azure/abort-controller.util.isSymbol'
    name: isSymbol(any)
    children: []
    type: function
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function isSymbol(object: any)'
      parameters:
        - id: object
          type:
            - any
          description: ''
      return:
        type:
          - boolean
        description: ''
    package: '@azure/abort-controller'
    deprecated:
      content: since v4.0.0 - use `typeof value === 'symbol'` instead.
  - uid: '@azure/abort-controller.util.isUndefined'
    name: isUndefined(any)
    children: []
    type: function
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function isUndefined(object: any)'
      parameters:
        - id: object
          type:
            - any
          description: ''
      return:
        type:
          - boolean
        description: ''
    package: '@azure/abort-controller'
    deprecated:
      content: since v4.0.0 - use `value === undefined` instead.
  - uid: '@azure/abort-controller.util.log'
    name: log(string)
    children: []
    type: function
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function log(string: string)'
      parameters:
        - id: string
          type:
            - string
          description: ''
    package: '@azure/abort-controller'
    deprecated:
      content: since v0.11.3 - use a third party module instead.
references:
  - uid: '@azure/abort-controller.util.EncodeIntoResult'
    name: EncodeIntoResult
    spec.typeScript:
      - name: EncodeIntoResult
        fullName: EncodeIntoResult
        uid: '@azure/abort-controller.util.EncodeIntoResult'
  - uid: '@azure/abort-controller.NodeJS.InspectOptions'
    name: InspectOptions
    spec.typeScript:
      - name: InspectOptions
        fullName: InspectOptions
        uid: '@azure/abort-controller.NodeJS.InspectOptions'
  - uid: '@azure/abort-controller.util.InspectOptions'
    name: InspectOptions
    spec.typeScript:
      - name: InspectOptions
        fullName: InspectOptions
        uid: '@azure/abort-controller.util.InspectOptions'
  - uid: '@azure/abort-controller.util.Style'
    name: Style
    spec.typeScript:
      - name: Style
        fullName: Style
        uid: '@azure/abort-controller.util.Style'
  - uid: '@azure/abort-controller.util.callbackify_1'
    name: callbackify_1
  - uid: '@azure/abort-controller.util.callbackify'
    name: callbackify
  - uid: '@azure/abort-controller.util.callbackify_3'
    name: callbackify_3
  - uid: '@azure/abort-controller.util.callbackify_2'
    name: callbackify_2
  - uid: '@azure/abort-controller.util.callbackify_5'
    name: callbackify_5
  - uid: '@azure/abort-controller.util.callbackify_4'
    name: callbackify_4
  - uid: '@azure/abort-controller.util.callbackify_7'
    name: callbackify_7
  - uid: '@azure/abort-controller.util.callbackify_6'
    name: callbackify_6
  - uid: '@azure/abort-controller.util.callbackify_9'
    name: callbackify_9
  - uid: '@azure/abort-controller.util.callbackify_8'
    name: callbackify_8
  - uid: '@azure/abort-controller.util.callbackify_11'
    name: callbackify_11
  - uid: '@azure/abort-controller.util.callbackify_10'
    name: callbackify_10
  - uid: '@azure/abort-controller.util.callbackify_13'
    name: callbackify_13
  - uid: '@azure/abort-controller.util.callbackify_12'
    name: callbackify_12
  - uid: '@azure/abort-controller.util.CustomInspectFunction'
    name: CustomInspectFunction
  - uid: '@azure/abort-controller.util.CustomPromisify'
    name: CustomPromisify
  - uid: '@azure/abort-controller.util.debuglog'
    name: debuglog
  - uid: '@azure/abort-controller.util.deprecate'
    name: deprecate
  - uid: '@azure/abort-controller.util.format'
    name: format
  - uid: '@azure/abort-controller.util.formatWithOptions'
    name: formatWithOptions
  - uid: '@azure/abort-controller.util.inherits'
    name: inherits
  - uid: '@azure/abort-controller.util.InspectOptionsStylized'
    name: InspectOptionsStylized
  - uid: '@azure/abort-controller.util.isArray'
    name: isArray
  - uid: '@azure/abort-controller.util.isBoolean'
    name: isBoolean
  - uid: '@azure/abort-controller.util.isBuffer'
    name: isBuffer
  - uid: '@azure/abort-controller.util.isDate'
    name: isDate
  - uid: '@azure/abort-controller.util.isDeepStrictEqual'
    name: isDeepStrictEqual
  - uid: '@azure/abort-controller.util.isError'
    name: isError
  - uid: '@azure/abort-controller.util.isFunction'
    name: isFunction
  - uid: '@azure/abort-controller.util.isNull'
    name: isNull
  - uid: '@azure/abort-controller.util.isNullOrUndefined'
    name: isNullOrUndefined
  - uid: '@azure/abort-controller.util.isNumber'
    name: isNumber
  - uid: '@azure/abort-controller.util.isObject'
    name: isObject
  - uid: '@azure/abort-controller.util.isPrimitive'
    name: isPrimitive
  - uid: '@azure/abort-controller.util.isRegExp'
    name: isRegExp
  - uid: '@azure/abort-controller.util.isString'
    name: isString
  - uid: '@azure/abort-controller.util.isSymbol'
    name: isSymbol
  - uid: '@azure/abort-controller.util.isUndefined'
    name: isUndefined
  - uid: '@azure/abort-controller.util.log'
    name: log
  - uid: '@azure/abort-controller.util.TextDecoder'
    name: TextDecoder
  - uid: '@azure/abort-controller.util.TextEncoder'
    name: TextEncoder
