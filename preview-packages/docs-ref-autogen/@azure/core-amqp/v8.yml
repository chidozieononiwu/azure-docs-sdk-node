### YamlMime:UniversalReference
items:
  - uid: tslib.v8
    name: v8
    langs:
      - typeScript
    fullName: v8
    children:
      - tslib.v8.cachedDataVersionTag
      - tslib.v8.DefaultDeserializer
      - tslib.v8.DefaultSerializer
      - tslib.v8.deserialize
      - tslib.v8.Deserializer
      - tslib.v8.DoesZapCodeSpaceFlag
      - tslib.v8.getHeapCodeStatistics
      - tslib.v8.getHeapSnapshot
      - tslib.v8.getHeapSpaceStatistics
      - tslib.v8.getHeapStatistics
      - tslib.v8.HeapCodeStatistics
      - tslib.v8.HeapInfo
      - tslib.v8.HeapSpaceInfo
      - tslib.v8.serialize
      - tslib.v8.Serializer
      - tslib.v8.setFlagsFromString
      - tslib.v8.writeHeapSnapshot
    type: module
    summary: ''
    package: tslib
  - uid: tslib.v8.cachedDataVersionTag
    name: cachedDataVersionTag()
    children: []
    type: function
    langs:
      - typeScript
    summary: >-
      Returns an integer representing a "version tag" derived from the V8
      version, command line flags and detected CPU features.

      This is useful for determining whether a vm.Script cachedData buffer is
      compatible with this instance of V8.
    syntax:
      content: function cachedDataVersionTag()
      parameters: []
      return:
        type:
          - number
        description: ''
    package: tslib
  - uid: tslib.v8.deserialize
    name: deserialize(NodeJS.TypedArray)
    children: []
    type: function
    langs:
      - typeScript
    summary: >-
      Uses a `DefaultDeserializer` with default options to read a JS value from
      a buffer.
    syntax:
      content: 'function deserialize(data: NodeJS.TypedArray)'
      parameters:
        - id: data
          type:
            - tslib.NodeJS.TypedArray
          description: ''
      return:
        type:
          - any
        description: ''
    package: tslib
  - uid: tslib.v8.getHeapCodeStatistics
    name: getHeapCodeStatistics()
    children: []
    type: function
    langs:
      - typeScript
    summary: ''
    syntax:
      content: function getHeapCodeStatistics()
      parameters: []
      return:
        type:
          - tslib.v8.HeapCodeStatistics
        description: ''
    package: tslib
  - uid: tslib.v8.getHeapSnapshot
    name: getHeapSnapshot()
    children: []
    type: function
    langs:
      - typeScript
    summary: |-
      Generates a snapshot of the current V8 heap and returns a Readable
      Stream that may be used to read the JSON serialized representation.
      This conversation was marked as resolved by joyeecheung
      This JSON stream format is intended to be used with tools such as
      Chrome DevTools. The JSON schema is undocumented and specific to the
      V8 engine, and may change from one version of V8 to the next.
    syntax:
      content: function getHeapSnapshot()
      parameters: []
      return:
        type:
          - tslib.stream.internal.Readable
        description: ''
    package: tslib
  - uid: tslib.v8.getHeapSpaceStatistics
    name: getHeapSpaceStatistics()
    children: []
    type: function
    langs:
      - typeScript
    summary: ''
    syntax:
      content: function getHeapSpaceStatistics()
      parameters: []
      return:
        type:
          - 'tslib.v8.HeapSpaceInfo[]'
        description: ''
    package: tslib
  - uid: tslib.v8.getHeapStatistics
    name: getHeapStatistics()
    children: []
    type: function
    langs:
      - typeScript
    summary: ''
    syntax:
      content: function getHeapStatistics()
      parameters: []
      return:
        type:
          - tslib.v8.HeapInfo
        description: ''
    package: tslib
  - uid: tslib.v8.serialize
    name: serialize(any)
    children: []
    type: function
    langs:
      - typeScript
    summary: Uses a `DefaultSerializer` to serialize value into a buffer.
    syntax:
      content: 'function serialize(value: any)'
      parameters:
        - id: value
          type:
            - any
          description: ''
      return:
        type:
          - Buffer
        description: ''
    package: tslib
  - uid: tslib.v8.setFlagsFromString
    name: setFlagsFromString(string)
    children: []
    type: function
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function setFlagsFromString(flags: string)'
      parameters:
        - id: flags
          type:
            - string
          description: ''
    package: tslib
  - uid: tslib.v8.writeHeapSnapshot
    name: writeHeapSnapshot(undefined | string)
    children: []
    type: function
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function writeHeapSnapshot(fileName?: undefined | string)'
      parameters:
        - id: fileName
          type:
            - undefined | string
          description: >
            The file path where the V8 heap snapshot is to be

            saved. If not specified, a file name with the pattern

            `'Heap-${yyyymmdd}-${hhmmss}-${pid}-${thread_id}.heapsnapshot'` will
            be

            generated, where `{pid}` will be the PID of the Node.js process,

            `{thread_id}` will be `0` when `writeHeapSnapshot()` is called from

            the main Node.js thread or the id of a worker thread.
          optional: true
      return:
        type:
          - string
        description: ''
    package: tslib
references:
  - uid: tslib.v8.Deserializer
    name: Deserializer
    spec.typeScript:
      - name: Deserializer
        fullName: Deserializer
        uid: tslib.v8.Deserializer
  - uid: tslib.NodeJS.TypedArray
    name: TypedArray
    spec.typeScript:
      - name: TypedArray
        fullName: TypedArray
        uid: tslib.NodeJS.TypedArray
  - uid: tslib.v8.Serializer
    name: Serializer
    spec.typeScript:
      - name: Serializer
        fullName: Serializer
        uid: tslib.v8.Serializer
  - uid: tslib.v8.DoesZapCodeSpaceFlag
    name: DoesZapCodeSpaceFlag
    spec.typeScript:
      - name: DoesZapCodeSpaceFlag
        fullName: DoesZapCodeSpaceFlag
        uid: tslib.v8.DoesZapCodeSpaceFlag
  - uid: tslib.v8.HeapCodeStatistics
    name: HeapCodeStatistics
    spec.typeScript:
      - name: HeapCodeStatistics
        fullName: HeapCodeStatistics
        uid: tslib.v8.HeapCodeStatistics
  - uid: tslib.stream.internal.Readable
    name: Readable
    spec.typeScript:
      - name: Readable
        fullName: Readable
        uid: tslib.stream.internal.Readable
  - uid: 'tslib.v8.HeapSpaceInfo[]'
    name: 'HeapSpaceInfo[]'
    spec.typeScript:
      - name: HeapSpaceInfo
        fullName: HeapSpaceInfo
        uid: tslib.v8.HeapSpaceInfo
      - name: '[]'
        fullName: '[]'
  - uid: tslib.v8.HeapInfo
    name: HeapInfo
    spec.typeScript:
      - name: HeapInfo
        fullName: HeapInfo
        uid: tslib.v8.HeapInfo
  - uid: tslib.v8.cachedDataVersionTag
    name: cachedDataVersionTag
  - uid: tslib.v8.DefaultDeserializer
    name: DefaultDeserializer
  - uid: tslib.v8.DefaultSerializer
    name: DefaultSerializer
  - uid: tslib.v8.deserialize
    name: deserialize
  - uid: tslib.v8.getHeapCodeStatistics
    name: getHeapCodeStatistics
  - uid: tslib.v8.getHeapSnapshot
    name: getHeapSnapshot
  - uid: tslib.v8.getHeapSpaceStatistics
    name: getHeapSpaceStatistics
  - uid: tslib.v8.getHeapStatistics
    name: getHeapStatistics
  - uid: tslib.v8.HeapSpaceInfo
    name: HeapSpaceInfo
  - uid: tslib.v8.serialize
    name: serialize
  - uid: tslib.v8.setFlagsFromString
    name: setFlagsFromString
  - uid: tslib.v8.writeHeapSnapshot
    name: writeHeapSnapshot
