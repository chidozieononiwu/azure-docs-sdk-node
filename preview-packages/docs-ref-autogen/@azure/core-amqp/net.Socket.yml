### YamlMime:UniversalReference
items:
  - uid: tslib.net.Socket
    name: Socket
    fullName: Socket
    children:
      - tslib.net.Socket.addListener_1
      - tslib.net.Socket.addListener_2
      - tslib.net.Socket.addListener_3
      - tslib.net.Socket.addListener_4
      - tslib.net.Socket.addListener_5
      - tslib.net.Socket.addListener_6
      - tslib.net.Socket.addListener_7
      - tslib.net.Socket.addListener_8
      - tslib.net.Socket.addListener
      - tslib.net.Socket.address
      - tslib.net.Socket.bufferSize
      - tslib.net.Socket.bytesRead
      - tslib.net.Socket.bytesWritten
      - tslib.net.Socket.connect_1
      - tslib.net.Socket.connect_2
      - tslib.net.Socket.connect
      - tslib.net.Socket.connect_3
      - tslib.net.Socket.connecting
      - tslib.net.Socket.cork
      - tslib.net.Socket.destroy
      - tslib.net.Socket.destroyed
      - tslib.net.Socket.emit_1
      - tslib.net.Socket.emit_2
      - tslib.net.Socket.emit_3
      - tslib.net.Socket.emit_4
      - tslib.net.Socket.emit_5
      - tslib.net.Socket.emit_6
      - tslib.net.Socket.emit_7
      - tslib.net.Socket.emit_8
      - tslib.net.Socket.emit
      - tslib.net.Socket.end_1
      - tslib.net.Socket.end_2
      - tslib.net.Socket.end
      - tslib.net.Socket.eventNames
      - tslib.net.Socket.from
      - tslib.net.Socket.getMaxListeners
      - tslib.net.Socket.isPaused
      - tslib.net.Socket.listenerCount
      - tslib.net.Socket.listeners
      - tslib.net.Socket.localAddress
      - tslib.net.Socket.localPort
      - tslib.net.Socket.off
      - tslib.net.Socket.on_1
      - tslib.net.Socket.on_2
      - tslib.net.Socket.on_3
      - tslib.net.Socket.on_4
      - tslib.net.Socket.on_5
      - tslib.net.Socket.on_6
      - tslib.net.Socket.on_7
      - tslib.net.Socket.on_8
      - tslib.net.Socket.on
      - tslib.net.Socket.once_1
      - tslib.net.Socket.once_2
      - tslib.net.Socket.once_3
      - tslib.net.Socket.once_4
      - tslib.net.Socket.once_5
      - tslib.net.Socket.once_6
      - tslib.net.Socket.once_7
      - tslib.net.Socket.once_8
      - tslib.net.Socket.once
      - tslib.net.Socket.pause
      - tslib.net.Socket.pipe
      - tslib.net.Socket.prependListener_1
      - tslib.net.Socket.prependListener_2
      - tslib.net.Socket.prependListener_3
      - tslib.net.Socket.prependListener_4
      - tslib.net.Socket.prependListener_5
      - tslib.net.Socket.prependListener_6
      - tslib.net.Socket.prependListener_7
      - tslib.net.Socket.prependListener_8
      - tslib.net.Socket.prependListener
      - tslib.net.Socket.prependOnceListener_1
      - tslib.net.Socket.prependOnceListener_2
      - tslib.net.Socket.prependOnceListener_3
      - tslib.net.Socket.prependOnceListener_4
      - tslib.net.Socket.prependOnceListener_5
      - tslib.net.Socket.prependOnceListener_6
      - tslib.net.Socket.prependOnceListener_7
      - tslib.net.Socket.prependOnceListener_8
      - tslib.net.Socket.prependOnceListener
      - tslib.net.Socket.push
      - tslib.net.Socket.rawListeners
      - tslib.net.Socket.read
      - tslib.net.Socket.readable
      - tslib.net.Socket.readableHighWaterMark
      - tslib.net.Socket.readableLength
      - tslib.net.Socket.readableObjectMode
      - tslib.net.Socket.ref
      - tslib.net.Socket.remoteAddress
      - tslib.net.Socket.remoteFamily
      - tslib.net.Socket.remotePort
      - tslib.net.Socket.removeAllListeners
      - tslib.net.Socket.removeListener
      - tslib.net.Socket.removeListener_1
      - tslib.net.Socket.removeListener_2
      - tslib.net.Socket.removeListener_4
      - tslib.net.Socket.removeListener_3
      - tslib.net.Socket.removeListener_5
      - tslib.net.Socket.resume
      - tslib.net.Socket.setDefaultEncoding
      - tslib.net.Socket.setEncoding
      - tslib.net.Socket.setKeepAlive
      - tslib.net.Socket.setMaxListeners
      - tslib.net.Socket.setNoDelay
      - tslib.net.Socket.setTimeout
      - tslib.net.Socket.constructor
      - tslib.net.Socket.uncork
      - tslib.net.Socket.unpipe
      - tslib.net.Socket.unref
      - tslib.net.Socket.unshift
      - tslib.net.Socket.wrap
      - tslib.net.Socket.writable
      - tslib.net.Socket.writableCorked
      - tslib.net.Socket.writableEnded
      - tslib.net.Socket.writableFinished
      - tslib.net.Socket.writableHighWaterMark
      - tslib.net.Socket.writableLength
      - tslib.net.Socket.writableObjectMode
      - tslib.net.Socket.write
      - tslib.net.Socket.write_1
    langs:
      - typeScript
    type: class
    summary: ''
    extends:
      name: tslib.stream.internal.Duplex
    package: tslib
  - uid: tslib.net.Socket.addListener_1
    name: 'addListener("close", (had_error: boolean) => void)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function addListener(event: "close", listener: (had_error: boolean) =>
        void)
      parameters:
        - id: event
          type:
            - '"close"'
          description: ''
        - id: listener
          type:
            - '(had_error: boolean) => void'
          description: ''
      return:
        type:
          - this
        description: ''
    package: tslib
  - uid: tslib.net.Socket.addListener_2
    name: 'addListener("connect", () => void)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function addListener(event: "connect", listener: () => void)'
      parameters:
        - id: event
          type:
            - '"connect"'
          description: ''
        - id: listener
          type:
            - () => void
          description: ''
      return:
        type:
          - this
        description: ''
    package: tslib
  - uid: tslib.net.Socket.addListener_3
    name: 'addListener("data", (data: Buffer) => void)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function addListener(event: "data", listener: (data: Buffer) => void)'
      parameters:
        - id: event
          type:
            - '"data"'
          description: ''
        - id: listener
          type:
            - '(data: Buffer) => void'
          description: ''
      return:
        type:
          - this
        description: ''
    package: tslib
  - uid: tslib.net.Socket.addListener_4
    name: 'addListener("drain", () => void)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function addListener(event: "drain", listener: () => void)'
      parameters:
        - id: event
          type:
            - '"drain"'
          description: ''
        - id: listener
          type:
            - () => void
          description: ''
      return:
        type:
          - this
        description: ''
    package: tslib
  - uid: tslib.net.Socket.addListener_5
    name: 'addListener("end", () => void)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function addListener(event: "end", listener: () => void)'
      parameters:
        - id: event
          type:
            - '"end"'
          description: ''
        - id: listener
          type:
            - () => void
          description: ''
      return:
        type:
          - this
        description: ''
    package: tslib
  - uid: tslib.net.Socket.addListener_6
    name: 'addListener("error", (err: Error) => void)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function addListener(event: "error", listener: (err: Error) => void)'
      parameters:
        - id: event
          type:
            - '"error"'
          description: ''
        - id: listener
          type:
            - '(err: Error) => void'
          description: ''
      return:
        type:
          - this
        description: ''
    package: tslib
  - uid: tslib.net.Socket.addListener_7
    name: >-
      addListener("lookup", (err: Error, address: string, family: string |
      number, host: string) => void)
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function addListener(event: "lookup", listener: (err: Error, address:
        string, family: string | number, host: string) => void)
      parameters:
        - id: event
          type:
            - '"lookup"'
          description: ''
        - id: listener
          type:
            - >-
              (err: Error, address: string, family: string | number, host:
              string) => void
          description: ''
      return:
        type:
          - this
        description: ''
    package: tslib
  - uid: tslib.net.Socket.addListener_8
    name: 'addListener("timeout", () => void)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function addListener(event: "timeout", listener: () => void)'
      parameters:
        - id: event
          type:
            - '"timeout"'
          description: ''
        - id: listener
          type:
            - () => void
          description: ''
      return:
        type:
          - this
        description: ''
    package: tslib
  - uid: tslib.net.Socket.addListener
    name: 'addListener(string, (args: any[]) => void)'
    children: []
    type: method
    langs:
      - typeScript
    summary: |-
      events.EventEmitter
        1. close
        2. connect
        3. data
        4. drain
        5. end
        6. error
        7. lookup
        8. timeout
    syntax:
      content: 'function addListener(event: string, listener: (args: any[]) => void)'
      parameters:
        - id: event
          type:
            - string
          description: ''
        - id: listener
          type:
            - '(args: any[]) => void'
          description: ''
      return:
        type:
          - this
        description: ''
    package: tslib
  - uid: tslib.net.Socket.address
    name: address()
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: function address()
      parameters: []
      return:
        type:
          - tslib.net.AddressInfo | string
        description: ''
    package: tslib
  - uid: tslib.net.Socket.bufferSize
    name: bufferSize
    fullName: bufferSize
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    syntax:
      content: 'bufferSize: number'
      return:
        type:
          - number
        description: ''
    package: tslib
  - uid: tslib.net.Socket.bytesRead
    name: bytesRead
    fullName: bytesRead
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    syntax:
      content: 'bytesRead: number'
      return:
        type:
          - number
        description: ''
    package: tslib
  - uid: tslib.net.Socket.bytesWritten
    name: bytesWritten
    fullName: bytesWritten
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    syntax:
      content: 'bytesWritten: number'
      return:
        type:
          - number
        description: ''
    package: tslib
  - uid: tslib.net.Socket.connect_1
    name: 'connect(number, string, undefined | () => void)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function connect(port: number, host: string, connectionListener?:
        undefined | () => void)
      parameters:
        - id: port
          type:
            - number
          description: ''
        - id: host
          type:
            - string
          description: ''
        - id: connectionListener
          type:
            - undefined | () => void
          description: ''
          optional: true
      return:
        type:
          - this
        description: ''
    package: tslib
  - uid: tslib.net.Socket.connect_2
    name: 'connect(number, undefined | () => void)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function connect(port: number, connectionListener?: undefined | () =>
        void)
      parameters:
        - id: port
          type:
            - number
          description: ''
        - id: connectionListener
          type:
            - undefined | () => void
          description: ''
          optional: true
      return:
        type:
          - this
        description: ''
    package: tslib
  - uid: tslib.net.Socket.connect
    name: 'connect(SocketConnectOpts, undefined | () => void)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function connect(options: SocketConnectOpts, connectionListener?:
        undefined | () => void)
      parameters:
        - id: options
          type:
            - tslib.net.SocketConnectOpts
          description: ''
        - id: connectionListener
          type:
            - undefined | () => void
          description: ''
          optional: true
      return:
        type:
          - this
        description: ''
    package: tslib
  - uid: tslib.net.Socket.connect_3
    name: 'connect(string, undefined | () => void)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function connect(path: string, connectionListener?: undefined | () =>
        void)
      parameters:
        - id: path
          type:
            - string
          description: ''
        - id: connectionListener
          type:
            - undefined | () => void
          description: ''
          optional: true
      return:
        type:
          - this
        description: ''
    package: tslib
  - uid: tslib.net.Socket.connecting
    name: connecting
    fullName: connecting
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    syntax:
      content: 'connecting: boolean'
      return:
        type:
          - boolean
        description: ''
    package: tslib
  - uid: tslib.net.Socket.cork
    name: cork()
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: function cork()
      parameters: []
    package: tslib
  - uid: tslib.net.Socket.destroy
    name: destroy(Error)
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function destroy(error?: Error)'
      parameters:
        - id: error
          type:
            - tslib.AbortError.Error
          description: ''
          optional: true
    package: tslib
  - uid: tslib.net.Socket.destroyed
    name: destroyed
    fullName: destroyed
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    syntax:
      content: 'destroyed: boolean'
      return:
        type:
          - boolean
        description: ''
    package: tslib
  - uid: tslib.net.Socket.emit_1
    name: 'emit("close", boolean)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function emit(event: "close", had_error: boolean)'
      parameters:
        - id: event
          type:
            - '"close"'
          description: ''
        - id: had_error
          type:
            - boolean
          description: ''
      return:
        type:
          - boolean
        description: ''
    package: tslib
  - uid: tslib.net.Socket.emit_2
    name: emit("connect")
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function emit(event: "connect")'
      parameters:
        - id: event
          type:
            - '"connect"'
          description: ''
      return:
        type:
          - boolean
        description: ''
    package: tslib
  - uid: tslib.net.Socket.emit_3
    name: 'emit("data", Buffer)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function emit(event: "data", data: Buffer)'
      parameters:
        - id: event
          type:
            - '"data"'
          description: ''
        - id: data
          type:
            - Buffer
          description: ''
      return:
        type:
          - boolean
        description: ''
    package: tslib
  - uid: tslib.net.Socket.emit_4
    name: emit("drain")
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function emit(event: "drain")'
      parameters:
        - id: event
          type:
            - '"drain"'
          description: ''
      return:
        type:
          - boolean
        description: ''
    package: tslib
  - uid: tslib.net.Socket.emit_5
    name: emit("end")
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function emit(event: "end")'
      parameters:
        - id: event
          type:
            - '"end"'
          description: ''
      return:
        type:
          - boolean
        description: ''
    package: tslib
  - uid: tslib.net.Socket.emit_6
    name: 'emit("error", Error)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function emit(event: "error", err: Error)'
      parameters:
        - id: event
          type:
            - '"error"'
          description: ''
        - id: err
          type:
            - Error
          description: ''
      return:
        type:
          - boolean
        description: ''
    package: tslib
  - uid: tslib.net.Socket.emit_7
    name: 'emit("lookup", Error, string, string | number, string)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function emit(event: "lookup", err: Error, address: string, family:
        string | number, host: string)
      parameters:
        - id: event
          type:
            - '"lookup"'
          description: ''
        - id: err
          type:
            - Error
          description: ''
        - id: address
          type:
            - string
          description: ''
        - id: family
          type:
            - string | number
          description: ''
        - id: host
          type:
            - string
          description: ''
      return:
        type:
          - boolean
        description: ''
    package: tslib
  - uid: tslib.net.Socket.emit_8
    name: emit("timeout")
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function emit(event: "timeout")'
      parameters:
        - id: event
          type:
            - '"timeout"'
          description: ''
      return:
        type:
          - boolean
        description: ''
    package: tslib
  - uid: tslib.net.Socket.emit
    name: 'emit(string | symbol, any[])'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function emit(event: string | symbol, args: any[])'
      parameters:
        - id: event
          type:
            - string | symbol
          description: ''
        - id: args
          type:
            - 'any[]'
          description: ''
      return:
        type:
          - boolean
        description: ''
    package: tslib
  - uid: tslib.net.Socket.end_1
    name: 'end(Uint8Array | string, undefined | () => void)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function end(buffer: Uint8Array | string, cb?: undefined | () => void)'
      parameters:
        - id: buffer
          type:
            - Uint8Array | string
          description: ''
        - id: cb
          type:
            - undefined | () => void
          description: ''
          optional: true
    package: tslib
  - uid: tslib.net.Socket.end_2
    name: 'end(Uint8Array | string, undefined | string, undefined | () => void)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function end(str: Uint8Array | string, encoding?: undefined | string,
        cb?: undefined | () => void)
      parameters:
        - id: str
          type:
            - Uint8Array | string
          description: ''
        - id: encoding
          type:
            - undefined | string
          description: ''
          optional: true
        - id: cb
          type:
            - undefined | () => void
          description: ''
          optional: true
    package: tslib
  - uid: tslib.net.Socket.end
    name: end(undefined | () => void)
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function end(cb?: undefined | () => void)'
      parameters:
        - id: cb
          type:
            - undefined | () => void
          description: ''
          optional: true
    package: tslib
  - uid: tslib.net.Socket.eventNames
    name: eventNames()
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: function eventNames()
      parameters: []
      return:
        type:
          - Array<string | symbol>
        description: ''
    package: tslib
  - uid: tslib.net.Socket.from
    name: 'from(Iterable<any> | AsyncIterable<any>, ReadableOptions)'
    children: []
    type: method
    langs:
      - typeScript
    summary: A utility method for creating Readable Streams out of iterators.
    syntax:
      content: >-
        static function from(iterable: Iterable<any> | AsyncIterable<any>,
        options?: ReadableOptions)
      parameters:
        - id: iterable
          type:
            - Iterable<any> | AsyncIterable<any>
          description: ''
        - id: options
          type:
            - tslib.stream.internal.ReadableOptions
          description: ''
          optional: true
      return:
        type:
          - tslib.stream.internal.Readable
        description: ''
    package: tslib
  - uid: tslib.net.Socket.getMaxListeners
    name: getMaxListeners()
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: function getMaxListeners()
      parameters: []
      return:
        type:
          - number
        description: ''
    package: tslib
  - uid: tslib.net.Socket.isPaused
    name: isPaused()
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: function isPaused()
      parameters: []
      return:
        type:
          - boolean
        description: ''
    package: tslib
  - uid: tslib.net.Socket.listenerCount
    name: listenerCount(string | symbol)
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function listenerCount(type: string | symbol)'
      parameters:
        - id: type
          type:
            - string | symbol
          description: ''
      return:
        type:
          - number
        description: ''
    package: tslib
  - uid: tslib.net.Socket.listeners
    name: listeners(string | symbol)
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function listeners(event: string | symbol)'
      parameters:
        - id: event
          type:
            - string | symbol
          description: ''
      return:
        type:
          - 'Function[]'
        description: ''
    package: tslib
  - uid: tslib.net.Socket.localAddress
    name: localAddress
    fullName: localAddress
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    syntax:
      content: 'localAddress: string'
      return:
        type:
          - string
        description: ''
    package: tslib
  - uid: tslib.net.Socket.localPort
    name: localPort
    fullName: localPort
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    syntax:
      content: 'localPort: number'
      return:
        type:
          - number
        description: ''
    package: tslib
  - uid: tslib.net.Socket.off
    name: 'off(string | symbol, (args: any[]) => void)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function off(event: string | symbol, listener: (args: any[]) => void)'
      parameters:
        - id: event
          type:
            - string | symbol
          description: ''
        - id: listener
          type:
            - '(args: any[]) => void'
          description: ''
      return:
        type:
          - this
        description: ''
    package: tslib
  - uid: tslib.net.Socket.on_1
    name: 'on("close", (had_error: boolean) => void)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function on(event: "close", listener: (had_error: boolean) => void)'
      parameters:
        - id: event
          type:
            - '"close"'
          description: ''
        - id: listener
          type:
            - '(had_error: boolean) => void'
          description: ''
      return:
        type:
          - this
        description: ''
    package: tslib
  - uid: tslib.net.Socket.on_2
    name: 'on("connect", () => void)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function on(event: "connect", listener: () => void)'
      parameters:
        - id: event
          type:
            - '"connect"'
          description: ''
        - id: listener
          type:
            - () => void
          description: ''
      return:
        type:
          - this
        description: ''
    package: tslib
  - uid: tslib.net.Socket.on_3
    name: 'on("data", (data: Buffer) => void)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function on(event: "data", listener: (data: Buffer) => void)'
      parameters:
        - id: event
          type:
            - '"data"'
          description: ''
        - id: listener
          type:
            - '(data: Buffer) => void'
          description: ''
      return:
        type:
          - this
        description: ''
    package: tslib
  - uid: tslib.net.Socket.on_4
    name: 'on("drain", () => void)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function on(event: "drain", listener: () => void)'
      parameters:
        - id: event
          type:
            - '"drain"'
          description: ''
        - id: listener
          type:
            - () => void
          description: ''
      return:
        type:
          - this
        description: ''
    package: tslib
  - uid: tslib.net.Socket.on_5
    name: 'on("end", () => void)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function on(event: "end", listener: () => void)'
      parameters:
        - id: event
          type:
            - '"end"'
          description: ''
        - id: listener
          type:
            - () => void
          description: ''
      return:
        type:
          - this
        description: ''
    package: tslib
  - uid: tslib.net.Socket.on_6
    name: 'on("error", (err: Error) => void)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function on(event: "error", listener: (err: Error) => void)'
      parameters:
        - id: event
          type:
            - '"error"'
          description: ''
        - id: listener
          type:
            - '(err: Error) => void'
          description: ''
      return:
        type:
          - this
        description: ''
    package: tslib
  - uid: tslib.net.Socket.on_7
    name: >-
      on("lookup", (err: Error, address: string, family: string | number, host:
      string) => void)
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function on(event: "lookup", listener: (err: Error, address: string,
        family: string | number, host: string) => void)
      parameters:
        - id: event
          type:
            - '"lookup"'
          description: ''
        - id: listener
          type:
            - >-
              (err: Error, address: string, family: string | number, host:
              string) => void
          description: ''
      return:
        type:
          - this
        description: ''
    package: tslib
  - uid: tslib.net.Socket.on_8
    name: 'on("timeout", () => void)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function on(event: "timeout", listener: () => void)'
      parameters:
        - id: event
          type:
            - '"timeout"'
          description: ''
        - id: listener
          type:
            - () => void
          description: ''
      return:
        type:
          - this
        description: ''
    package: tslib
  - uid: tslib.net.Socket.on
    name: 'on(string, (args: any[]) => void)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function on(event: string, listener: (args: any[]) => void)'
      parameters:
        - id: event
          type:
            - string
          description: ''
        - id: listener
          type:
            - '(args: any[]) => void'
          description: ''
      return:
        type:
          - this
        description: ''
    package: tslib
  - uid: tslib.net.Socket.once_1
    name: 'once("close", (had_error: boolean) => void)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function once(event: "close", listener: (had_error: boolean) => void)'
      parameters:
        - id: event
          type:
            - '"close"'
          description: ''
        - id: listener
          type:
            - '(had_error: boolean) => void'
          description: ''
      return:
        type:
          - this
        description: ''
    package: tslib
  - uid: tslib.net.Socket.once_2
    name: 'once("connect", () => void)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function once(event: "connect", listener: () => void)'
      parameters:
        - id: event
          type:
            - '"connect"'
          description: ''
        - id: listener
          type:
            - () => void
          description: ''
      return:
        type:
          - this
        description: ''
    package: tslib
  - uid: tslib.net.Socket.once_3
    name: 'once("data", (data: Buffer) => void)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function once(event: "data", listener: (data: Buffer) => void)'
      parameters:
        - id: event
          type:
            - '"data"'
          description: ''
        - id: listener
          type:
            - '(data: Buffer) => void'
          description: ''
      return:
        type:
          - this
        description: ''
    package: tslib
  - uid: tslib.net.Socket.once_4
    name: 'once("drain", () => void)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function once(event: "drain", listener: () => void)'
      parameters:
        - id: event
          type:
            - '"drain"'
          description: ''
        - id: listener
          type:
            - () => void
          description: ''
      return:
        type:
          - this
        description: ''
    package: tslib
  - uid: tslib.net.Socket.once_5
    name: 'once("end", () => void)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function once(event: "end", listener: () => void)'
      parameters:
        - id: event
          type:
            - '"end"'
          description: ''
        - id: listener
          type:
            - () => void
          description: ''
      return:
        type:
          - this
        description: ''
    package: tslib
  - uid: tslib.net.Socket.once_6
    name: 'once("error", (err: Error) => void)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function once(event: "error", listener: (err: Error) => void)'
      parameters:
        - id: event
          type:
            - '"error"'
          description: ''
        - id: listener
          type:
            - '(err: Error) => void'
          description: ''
      return:
        type:
          - this
        description: ''
    package: tslib
  - uid: tslib.net.Socket.once_7
    name: >-
      once("lookup", (err: Error, address: string, family: string | number,
      host: string) => void)
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function once(event: "lookup", listener: (err: Error, address: string,
        family: string | number, host: string) => void)
      parameters:
        - id: event
          type:
            - '"lookup"'
          description: ''
        - id: listener
          type:
            - >-
              (err: Error, address: string, family: string | number, host:
              string) => void
          description: ''
      return:
        type:
          - this
        description: ''
    package: tslib
  - uid: tslib.net.Socket.once_8
    name: 'once("timeout", () => void)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function once(event: "timeout", listener: () => void)'
      parameters:
        - id: event
          type:
            - '"timeout"'
          description: ''
        - id: listener
          type:
            - () => void
          description: ''
      return:
        type:
          - this
        description: ''
    package: tslib
  - uid: tslib.net.Socket.once
    name: 'once(string, (args: any[]) => void)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function once(event: string, listener: (args: any[]) => void)'
      parameters:
        - id: event
          type:
            - string
          description: ''
        - id: listener
          type:
            - '(args: any[]) => void'
          description: ''
      return:
        type:
          - this
        description: ''
    package: tslib
  - uid: tslib.net.Socket.pause
    name: pause()
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: function pause()
      parameters: []
      return:
        type:
          - this
        description: ''
    package: tslib
  - uid: tslib.net.Socket.pipe
    name: 'pipe(T, undefined | Object)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function pipe<T>(destination: T, options?: undefined | Object)'
      parameters:
        - id: destination
          type:
            - T
          description: ''
        - id: options
          type:
            - undefined | Object
          description: ''
          optional: true
      return:
        type:
          - T
        description: ''
    package: tslib
  - uid: tslib.net.Socket.prependListener_1
    name: 'prependListener("close", (had_error: boolean) => void)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function prependListener(event: "close", listener: (had_error: boolean)
        => void)
      parameters:
        - id: event
          type:
            - '"close"'
          description: ''
        - id: listener
          type:
            - '(had_error: boolean) => void'
          description: ''
      return:
        type:
          - this
        description: ''
    package: tslib
  - uid: tslib.net.Socket.prependListener_2
    name: 'prependListener("connect", () => void)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function prependListener(event: "connect", listener: () => void)'
      parameters:
        - id: event
          type:
            - '"connect"'
          description: ''
        - id: listener
          type:
            - () => void
          description: ''
      return:
        type:
          - this
        description: ''
    package: tslib
  - uid: tslib.net.Socket.prependListener_3
    name: 'prependListener("data", (data: Buffer) => void)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function prependListener(event: "data", listener: (data: Buffer) =>
        void)
      parameters:
        - id: event
          type:
            - '"data"'
          description: ''
        - id: listener
          type:
            - '(data: Buffer) => void'
          description: ''
      return:
        type:
          - this
        description: ''
    package: tslib
  - uid: tslib.net.Socket.prependListener_4
    name: 'prependListener("drain", () => void)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function prependListener(event: "drain", listener: () => void)'
      parameters:
        - id: event
          type:
            - '"drain"'
          description: ''
        - id: listener
          type:
            - () => void
          description: ''
      return:
        type:
          - this
        description: ''
    package: tslib
  - uid: tslib.net.Socket.prependListener_5
    name: 'prependListener("end", () => void)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function prependListener(event: "end", listener: () => void)'
      parameters:
        - id: event
          type:
            - '"end"'
          description: ''
        - id: listener
          type:
            - () => void
          description: ''
      return:
        type:
          - this
        description: ''
    package: tslib
  - uid: tslib.net.Socket.prependListener_6
    name: 'prependListener("error", (err: Error) => void)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function prependListener(event: "error", listener: (err: Error) => void)'
      parameters:
        - id: event
          type:
            - '"error"'
          description: ''
        - id: listener
          type:
            - '(err: Error) => void'
          description: ''
      return:
        type:
          - this
        description: ''
    package: tslib
  - uid: tslib.net.Socket.prependListener_7
    name: >-
      prependListener("lookup", (err: Error, address: string, family: string |
      number, host: string) => void)
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function prependListener(event: "lookup", listener: (err: Error,
        address: string, family: string | number, host: string) => void)
      parameters:
        - id: event
          type:
            - '"lookup"'
          description: ''
        - id: listener
          type:
            - >-
              (err: Error, address: string, family: string | number, host:
              string) => void
          description: ''
      return:
        type:
          - this
        description: ''
    package: tslib
  - uid: tslib.net.Socket.prependListener_8
    name: 'prependListener("timeout", () => void)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function prependListener(event: "timeout", listener: () => void)'
      parameters:
        - id: event
          type:
            - '"timeout"'
          description: ''
        - id: listener
          type:
            - () => void
          description: ''
      return:
        type:
          - this
        description: ''
    package: tslib
  - uid: tslib.net.Socket.prependListener
    name: 'prependListener(string, (args: any[]) => void)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function prependListener(event: string, listener: (args: any[]) => void)'
      parameters:
        - id: event
          type:
            - string
          description: ''
        - id: listener
          type:
            - '(args: any[]) => void'
          description: ''
      return:
        type:
          - this
        description: ''
    package: tslib
  - uid: tslib.net.Socket.prependOnceListener_1
    name: 'prependOnceListener("close", (had_error: boolean) => void)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function prependOnceListener(event: "close", listener: (had_error:
        boolean) => void)
      parameters:
        - id: event
          type:
            - '"close"'
          description: ''
        - id: listener
          type:
            - '(had_error: boolean) => void'
          description: ''
      return:
        type:
          - this
        description: ''
    package: tslib
  - uid: tslib.net.Socket.prependOnceListener_2
    name: 'prependOnceListener("connect", () => void)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function prependOnceListener(event: "connect", listener: () => void)'
      parameters:
        - id: event
          type:
            - '"connect"'
          description: ''
        - id: listener
          type:
            - () => void
          description: ''
      return:
        type:
          - this
        description: ''
    package: tslib
  - uid: tslib.net.Socket.prependOnceListener_3
    name: 'prependOnceListener("data", (data: Buffer) => void)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function prependOnceListener(event: "data", listener: (data: Buffer) =>
        void)
      parameters:
        - id: event
          type:
            - '"data"'
          description: ''
        - id: listener
          type:
            - '(data: Buffer) => void'
          description: ''
      return:
        type:
          - this
        description: ''
    package: tslib
  - uid: tslib.net.Socket.prependOnceListener_4
    name: 'prependOnceListener("drain", () => void)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function prependOnceListener(event: "drain", listener: () => void)'
      parameters:
        - id: event
          type:
            - '"drain"'
          description: ''
        - id: listener
          type:
            - () => void
          description: ''
      return:
        type:
          - this
        description: ''
    package: tslib
  - uid: tslib.net.Socket.prependOnceListener_5
    name: 'prependOnceListener("end", () => void)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function prependOnceListener(event: "end", listener: () => void)'
      parameters:
        - id: event
          type:
            - '"end"'
          description: ''
        - id: listener
          type:
            - () => void
          description: ''
      return:
        type:
          - this
        description: ''
    package: tslib
  - uid: tslib.net.Socket.prependOnceListener_6
    name: 'prependOnceListener("error", (err: Error) => void)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function prependOnceListener(event: "error", listener: (err: Error) =>
        void)
      parameters:
        - id: event
          type:
            - '"error"'
          description: ''
        - id: listener
          type:
            - '(err: Error) => void'
          description: ''
      return:
        type:
          - this
        description: ''
    package: tslib
  - uid: tslib.net.Socket.prependOnceListener_7
    name: >-
      prependOnceListener("lookup", (err: Error, address: string, family: string
      | number, host: string) => void)
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function prependOnceListener(event: "lookup", listener: (err: Error,
        address: string, family: string | number, host: string) => void)
      parameters:
        - id: event
          type:
            - '"lookup"'
          description: ''
        - id: listener
          type:
            - >-
              (err: Error, address: string, family: string | number, host:
              string) => void
          description: ''
      return:
        type:
          - this
        description: ''
    package: tslib
  - uid: tslib.net.Socket.prependOnceListener_8
    name: 'prependOnceListener("timeout", () => void)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function prependOnceListener(event: "timeout", listener: () => void)'
      parameters:
        - id: event
          type:
            - '"timeout"'
          description: ''
        - id: listener
          type:
            - () => void
          description: ''
      return:
        type:
          - this
        description: ''
    package: tslib
  - uid: tslib.net.Socket.prependOnceListener
    name: 'prependOnceListener(string, (args: any[]) => void)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function prependOnceListener(event: string, listener: (args: any[]) =>
        void)
      parameters:
        - id: event
          type:
            - string
          description: ''
        - id: listener
          type:
            - '(args: any[]) => void'
          description: ''
      return:
        type:
          - this
        description: ''
    package: tslib
  - uid: tslib.net.Socket.push
    name: 'push(any, undefined | string)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function push(chunk: any, encoding?: undefined | string)'
      parameters:
        - id: chunk
          type:
            - any
          description: ''
        - id: encoding
          type:
            - undefined | string
          description: ''
          optional: true
      return:
        type:
          - boolean
        description: ''
    package: tslib
  - uid: tslib.net.Socket.rawListeners
    name: rawListeners(string | symbol)
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function rawListeners(event: string | symbol)'
      parameters:
        - id: event
          type:
            - string | symbol
          description: ''
      return:
        type:
          - 'Function[]'
        description: ''
    package: tslib
  - uid: tslib.net.Socket.read
    name: read(undefined | number)
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function read(size?: undefined | number)'
      parameters:
        - id: size
          type:
            - undefined | number
          description: ''
          optional: true
      return:
        type:
          - any
        description: ''
    package: tslib
  - uid: tslib.net.Socket.readable
    name: readable
    fullName: readable
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    syntax:
      content: 'readable: boolean'
      return:
        type:
          - boolean
        description: ''
    package: tslib
  - uid: tslib.net.Socket.readableHighWaterMark
    name: readableHighWaterMark
    fullName: readableHighWaterMark
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    syntax:
      content: 'readableHighWaterMark: number'
      return:
        type:
          - number
        description: ''
    package: tslib
  - uid: tslib.net.Socket.readableLength
    name: readableLength
    fullName: readableLength
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    syntax:
      content: 'readableLength: number'
      return:
        type:
          - number
        description: ''
    package: tslib
  - uid: tslib.net.Socket.readableObjectMode
    name: readableObjectMode
    fullName: readableObjectMode
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    syntax:
      content: 'readableObjectMode: boolean'
      return:
        type:
          - boolean
        description: ''
    package: tslib
  - uid: tslib.net.Socket.ref
    name: ref()
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: function ref()
      parameters: []
      return:
        type:
          - this
        description: ''
    package: tslib
  - uid: tslib.net.Socket.remoteAddress
    name: remoteAddress
    fullName: remoteAddress
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    optional: true
    syntax:
      content: 'remoteAddress?: undefined | string'
      return:
        type:
          - undefined | string
        description: ''
    package: tslib
  - uid: tslib.net.Socket.remoteFamily
    name: remoteFamily
    fullName: remoteFamily
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    optional: true
    syntax:
      content: 'remoteFamily?: undefined | string'
      return:
        type:
          - undefined | string
        description: ''
    package: tslib
  - uid: tslib.net.Socket.remotePort
    name: remotePort
    fullName: remotePort
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    optional: true
    syntax:
      content: 'remotePort?: undefined | number'
      return:
        type:
          - undefined | number
        description: ''
    package: tslib
  - uid: tslib.net.Socket.removeAllListeners
    name: removeAllListeners(string | symbol)
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function removeAllListeners(event?: string | symbol)'
      parameters:
        - id: event
          type:
            - string | symbol
          description: ''
          optional: true
      return:
        type:
          - this
        description: ''
    package: tslib
  - uid: tslib.net.Socket.removeListener
    name: 'removeListener("close", () => void)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function removeListener(event: "close", listener: () => void)'
      parameters:
        - id: event
          type:
            - '"close"'
          description: ''
        - id: listener
          type:
            - () => void
          description: ''
      return:
        type:
          - this
        description: ''
    package: tslib
  - uid: tslib.net.Socket.removeListener_1
    name: 'removeListener("data", (chunk: any) => void)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function removeListener(event: "data", listener: (chunk: any) => void)'
      parameters:
        - id: event
          type:
            - '"data"'
          description: ''
        - id: listener
          type:
            - '(chunk: any) => void'
          description: ''
      return:
        type:
          - this
        description: ''
    package: tslib
  - uid: tslib.net.Socket.removeListener_2
    name: 'removeListener("end", () => void)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function removeListener(event: "end", listener: () => void)'
      parameters:
        - id: event
          type:
            - '"end"'
          description: ''
        - id: listener
          type:
            - () => void
          description: ''
      return:
        type:
          - this
        description: ''
    package: tslib
  - uid: tslib.net.Socket.removeListener_4
    name: 'removeListener("error", (err: Error) => void)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function removeListener(event: "error", listener: (err: Error) => void)'
      parameters:
        - id: event
          type:
            - '"error"'
          description: ''
        - id: listener
          type:
            - '(err: Error) => void'
          description: ''
      return:
        type:
          - this
        description: ''
    package: tslib
  - uid: tslib.net.Socket.removeListener_3
    name: 'removeListener("readable", () => void)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function removeListener(event: "readable", listener: () => void)'
      parameters:
        - id: event
          type:
            - '"readable"'
          description: ''
        - id: listener
          type:
            - () => void
          description: ''
      return:
        type:
          - this
        description: ''
    package: tslib
  - uid: tslib.net.Socket.removeListener_5
    name: 'removeListener(string | symbol, (args: any[]) => void)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function removeListener(event: string | symbol, listener: (args: any[])
        => void)
      parameters:
        - id: event
          type:
            - string | symbol
          description: ''
        - id: listener
          type:
            - '(args: any[]) => void'
          description: ''
      return:
        type:
          - this
        description: ''
    package: tslib
  - uid: tslib.net.Socket.resume
    name: resume()
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: function resume()
      parameters: []
      return:
        type:
          - this
        description: ''
    package: tslib
  - uid: tslib.net.Socket.setDefaultEncoding
    name: setDefaultEncoding(string)
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function setDefaultEncoding(encoding: string)'
      parameters:
        - id: encoding
          type:
            - string
          description: ''
      return:
        type:
          - this
        description: ''
    package: tslib
  - uid: tslib.net.Socket.setEncoding
    name: setEncoding(undefined | string)
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function setEncoding(encoding?: undefined | string)'
      parameters:
        - id: encoding
          type:
            - undefined | string
          description: ''
          optional: true
      return:
        type:
          - this
        description: ''
    package: tslib
  - uid: tslib.net.Socket.setKeepAlive
    name: 'setKeepAlive(undefined | false | true, undefined | number)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function setKeepAlive(enable?: undefined | false | true, initialDelay?:
        undefined | number)
      parameters:
        - id: enable
          type:
            - undefined | false | true
          description: ''
          optional: true
        - id: initialDelay
          type:
            - undefined | number
          description: ''
          optional: true
      return:
        type:
          - this
        description: ''
    package: tslib
  - uid: tslib.net.Socket.setMaxListeners
    name: setMaxListeners(number)
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function setMaxListeners(n: number)'
      parameters:
        - id: 'n'
          type:
            - number
          description: ''
      return:
        type:
          - this
        description: ''
    package: tslib
  - uid: tslib.net.Socket.setNoDelay
    name: setNoDelay(undefined | false | true)
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function setNoDelay(noDelay?: undefined | false | true)'
      parameters:
        - id: noDelay
          type:
            - undefined | false | true
          description: ''
          optional: true
      return:
        type:
          - this
        description: ''
    package: tslib
  - uid: tslib.net.Socket.setTimeout
    name: 'setTimeout(number, undefined | () => void)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function setTimeout(timeout: number, callback?: undefined | () => void)'
      parameters:
        - id: timeout
          type:
            - number
          description: ''
        - id: callback
          type:
            - undefined | () => void
          description: ''
          optional: true
      return:
        type:
          - this
        description: ''
    package: tslib
  - uid: tslib.net.Socket.constructor
    name: Socket(SocketConstructorOpts)
    children: []
    type: constructor
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'new Socket(options?: SocketConstructorOpts)'
      parameters:
        - id: options
          type:
            - tslib.net.SocketConstructorOpts
          description: ''
          optional: true
    package: tslib
  - uid: tslib.net.Socket.uncork
    name: uncork()
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: function uncork()
      parameters: []
    package: tslib
  - uid: tslib.net.Socket.unpipe
    name: unpipe(NodeJS.WritableStream)
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function unpipe(destination?: NodeJS.WritableStream)'
      parameters:
        - id: destination
          type:
            - tslib.NodeJS.WritableStream
          description: ''
          optional: true
      return:
        type:
          - this
        description: ''
    package: tslib
  - uid: tslib.net.Socket.unref
    name: unref()
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: function unref()
      parameters: []
      return:
        type:
          - this
        description: ''
    package: tslib
  - uid: tslib.net.Socket.unshift
    name: 'unshift(any, BufferEncoding)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function unshift(chunk: any, encoding?: BufferEncoding)'
      parameters:
        - id: chunk
          type:
            - any
          description: ''
        - id: encoding
          type:
            - tslib.BufferEncoding
          description: ''
          optional: true
    package: tslib
  - uid: tslib.net.Socket.wrap
    name: wrap(ReadableStream)
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function wrap(oldStream: ReadableStream)'
      parameters:
        - id: oldStream
          type:
            - tslib.NodeJS.ReadableStream
          description: ''
      return:
        type:
          - this
        description: ''
    package: tslib
  - uid: tslib.net.Socket.writable
    name: writable
    fullName: writable
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    syntax:
      content: 'writable: boolean'
      return:
        type:
          - boolean
        description: ''
    package: tslib
  - uid: tslib.net.Socket.writableCorked
    name: writableCorked
    fullName: writableCorked
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    syntax:
      content: 'writableCorked: number'
      return:
        type:
          - number
        description: ''
    package: tslib
  - uid: tslib.net.Socket.writableEnded
    name: writableEnded
    fullName: writableEnded
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    syntax:
      content: 'writableEnded: boolean'
      return:
        type:
          - boolean
        description: ''
    package: tslib
  - uid: tslib.net.Socket.writableFinished
    name: writableFinished
    fullName: writableFinished
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    syntax:
      content: 'writableFinished: boolean'
      return:
        type:
          - boolean
        description: ''
    package: tslib
  - uid: tslib.net.Socket.writableHighWaterMark
    name: writableHighWaterMark
    fullName: writableHighWaterMark
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    syntax:
      content: 'writableHighWaterMark: number'
      return:
        type:
          - number
        description: ''
    package: tslib
  - uid: tslib.net.Socket.writableLength
    name: writableLength
    fullName: writableLength
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    syntax:
      content: 'writableLength: number'
      return:
        type:
          - number
        description: ''
    package: tslib
  - uid: tslib.net.Socket.writableObjectMode
    name: writableObjectMode
    fullName: writableObjectMode
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    syntax:
      content: 'writableObjectMode: boolean'
      return:
        type:
          - boolean
        description: ''
    package: tslib
  - uid: tslib.net.Socket.write
    name: 'write(Uint8Array | string, undefined | (err?: Error) => void)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function write(buffer: Uint8Array | string, cb?: undefined | (err?:
        Error) => void)
      parameters:
        - id: buffer
          type:
            - Uint8Array | string
          description: ''
        - id: cb
          type:
            - 'undefined | (err?: Error) => void'
          description: ''
          optional: true
      return:
        type:
          - boolean
        description: ''
    package: tslib
  - uid: tslib.net.Socket.write_1
    name: >-
      write(Uint8Array | string, undefined | string, undefined | (err?: Error)
      => void)
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function write(str: Uint8Array | string, encoding?: undefined | string,
        cb?: undefined | (err?: Error) => void)
      parameters:
        - id: str
          type:
            - Uint8Array | string
          description: ''
        - id: encoding
          type:
            - undefined | string
          description: ''
          optional: true
        - id: cb
          type:
            - 'undefined | (err?: Error) => void'
          description: ''
          optional: true
      return:
        type:
          - boolean
        description: ''
    package: tslib
references:
  - uid: tslib.events.EventEmitter.EventEmitter
    name: EventEmitter
    spec.typeScript:
      - name: EventEmitter
        fullName: EventEmitter
        uid: tslib.events.EventEmitter.EventEmitter
  - uid: tslib.net.AddressInfo | string | null
    name: AddressInfo | string | null
    spec.typeScript:
      - name: AddressInfo
        fullName: AddressInfo
        uid: tslib.net.AddressInfo
      - name: ' | string | null'
        fullName: ' | string | null'
  - uid: tslib.net.Socket
    name: Socket
    spec.typeScript:
      - name: Socket
        fullName: Socket
        uid: tslib.net.Socket
  - uid: tslib.net.ListenOptions
    name: ListenOptions
    spec.typeScript:
      - name: ListenOptions
        fullName: ListenOptions
        uid: tslib.net.ListenOptions
  - uid: tslib.stream.internal.Duplex
    name: Duplex
    spec.typeScript:
      - name: Duplex
        fullName: Duplex
        uid: tslib.stream.internal.Duplex
  - uid: tslib.net.SocketConstructorOpts
    name: SocketConstructorOpts
    spec.typeScript:
      - name: SocketConstructorOpts
        fullName: SocketConstructorOpts
        uid: tslib.net.SocketConstructorOpts
  - uid: tslib.net.AddressInfo | string
    name: AddressInfo | string
    spec.typeScript:
      - name: AddressInfo
        fullName: AddressInfo
        uid: tslib.net.AddressInfo
      - name: ' | string'
        fullName: ' | string'
  - uid: tslib.net.SocketConnectOpts
    name: SocketConnectOpts
    spec.typeScript:
      - name: SocketConnectOpts
        fullName: SocketConnectOpts
        uid: tslib.net.SocketConnectOpts
  - uid: tslib.AbortError.Error
    name: Error
    spec.typeScript:
      - name: Error
        fullName: Error
        uid: tslib.AbortError.Error
  - uid: tslib.NodeJS.WritableStream
    name: WritableStream
    spec.typeScript:
      - name: WritableStream
        fullName: WritableStream
        uid: tslib.NodeJS.WritableStream
  - uid: tslib.BufferEncoding
    name: BufferEncoding
    spec.typeScript:
      - name: BufferEncoding
        fullName: BufferEncoding
        uid: tslib.BufferEncoding
  - uid: tslib.NodeJS.ReadableStream
    name: ReadableStream
    spec.typeScript:
      - name: ReadableStream
        fullName: ReadableStream
        uid: tslib.NodeJS.ReadableStream
  - uid: tslib.stream.internal.ReadableOptions
    name: ReadableOptions
    spec.typeScript:
      - name: ReadableOptions
        fullName: ReadableOptions
        uid: tslib.stream.internal.ReadableOptions
  - uid: tslib.stream.internal.Readable
    name: Readable
    spec.typeScript:
      - name: Readable
        fullName: Readable
        uid: tslib.stream.internal.Readable
  - uid: tslib.net.OnReadOpts
    name: OnReadOpts
    spec.typeScript:
      - name: OnReadOpts
        fullName: OnReadOpts
        uid: tslib.net.OnReadOpts
  - uid: tslib.net.IpcSocketConnectOpts
    name: IpcSocketConnectOpts
    spec.typeScript:
      - name: IpcSocketConnectOpts
        fullName: IpcSocketConnectOpts
        uid: tslib.net.IpcSocketConnectOpts
  - uid: tslib.net.ConnectOpts
    name: ConnectOpts
    spec.typeScript:
      - name: ConnectOpts
        fullName: ConnectOpts
        uid: tslib.net.ConnectOpts
  - uid: tslib.net.TcpSocketConnectOpts
    name: TcpSocketConnectOpts
    spec.typeScript:
      - name: TcpSocketConnectOpts
        fullName: TcpSocketConnectOpts
        uid: tslib.net.TcpSocketConnectOpts
  - uid: tslib.net.LookupFunction
    name: LookupFunction
    spec.typeScript:
      - name: LookupFunction
        fullName: LookupFunction
        uid: tslib.net.LookupFunction
  - uid: tslib.net.NetConnectOpts
    name: NetConnectOpts
    spec.typeScript:
      - name: NetConnectOpts
        fullName: NetConnectOpts
        uid: tslib.net.NetConnectOpts
  - uid: tslib.net.Server
    name: Server
    spec.typeScript:
      - name: Server
        fullName: Server
        uid: tslib.net.Server
