### YamlMime:UniversalReference
items:
  - uid: '@azure/abort-controller.NodeJS.Global'
    name: Global
    fullName: Global
    children:
      - '@azure/abort-controller.NodeJS.Global.Array'
      - '@azure/abort-controller.NodeJS.Global.ArrayBuffer'
      - '@azure/abort-controller.NodeJS.Global.Boolean'
      - '@azure/abort-controller.NodeJS.Global.Buffer'
      - '@azure/abort-controller.NodeJS.Global.clearImmediate'
      - '@azure/abort-controller.NodeJS.Global.clearInterval'
      - '@azure/abort-controller.NodeJS.Global.clearTimeout'
      - '@azure/abort-controller.NodeJS.Global.console'
      - '@azure/abort-controller.NodeJS.Global.DataView'
      - '@azure/abort-controller.NodeJS.Global.Date'
      - '@azure/abort-controller.NodeJS.Global.decodeURI'
      - '@azure/abort-controller.NodeJS.Global.decodeURIComponent'
      - '@azure/abort-controller.NodeJS.Global.encodeURI'
      - '@azure/abort-controller.NodeJS.Global.encodeURIComponent'
      - '@azure/abort-controller.NodeJS.Global.Error'
      - '@azure/abort-controller.NodeJS.Global.escape'
      - '@azure/abort-controller.NodeJS.Global.eval'
      - '@azure/abort-controller.NodeJS.Global.EvalError'
      - '@azure/abort-controller.NodeJS.Global.Float32Array'
      - '@azure/abort-controller.NodeJS.Global.Float64Array'
      - '@azure/abort-controller.NodeJS.Global.Function'
      - '@azure/abort-controller.NodeJS.Global.gc'
      - '@azure/abort-controller.NodeJS.Global.global'
      - '@azure/abort-controller.NodeJS.Global.GLOBAL'
      - '@azure/abort-controller.NodeJS.Global.Infinity'
      - '@azure/abort-controller.NodeJS.Global.Int16Array'
      - '@azure/abort-controller.NodeJS.Global.Int32Array'
      - '@azure/abort-controller.NodeJS.Global.Int8Array'
      - '@azure/abort-controller.NodeJS.Global.Intl'
      - '@azure/abort-controller.NodeJS.Global.isFinite'
      - '@azure/abort-controller.NodeJS.Global.isNaN'
      - '@azure/abort-controller.NodeJS.Global.JSON'
      - '@azure/abort-controller.NodeJS.Global.Map'
      - '@azure/abort-controller.NodeJS.Global.Math'
      - '@azure/abort-controller.NodeJS.Global.NaN'
      - '@azure/abort-controller.NodeJS.Global.Number'
      - '@azure/abort-controller.NodeJS.Global.Object'
      - '@azure/abort-controller.NodeJS.Global.parseFloat'
      - '@azure/abort-controller.NodeJS.Global.parseInt'
      - '@azure/abort-controller.NodeJS.Global.process'
      - '@azure/abort-controller.NodeJS.Global.Promise'
      - '@azure/abort-controller.NodeJS.Global.queueMicrotask'
      - '@azure/abort-controller.NodeJS.Global.RangeError'
      - '@azure/abort-controller.NodeJS.Global.ReferenceError'
      - '@azure/abort-controller.NodeJS.Global.RegExp'
      - '@azure/abort-controller.NodeJS.Global.root'
      - '@azure/abort-controller.NodeJS.Global.Set'
      - '@azure/abort-controller.NodeJS.Global.setImmediate'
      - '@azure/abort-controller.NodeJS.Global.setInterval'
      - '@azure/abort-controller.NodeJS.Global.setTimeout'
      - '@azure/abort-controller.NodeJS.Global.String'
      - '@azure/abort-controller.NodeJS.Global.Symbol'
      - '@azure/abort-controller.NodeJS.Global.SyntaxError'
      - '@azure/abort-controller.NodeJS.Global.TypeError'
      - '@azure/abort-controller.NodeJS.Global.Uint16Array'
      - '@azure/abort-controller.NodeJS.Global.Uint32Array'
      - '@azure/abort-controller.NodeJS.Global.Uint8Array'
      - '@azure/abort-controller.NodeJS.Global.Uint8ClampedArray'
      - '@azure/abort-controller.NodeJS.Global.undefined'
      - '@azure/abort-controller.NodeJS.Global.unescape'
      - '@azure/abort-controller.NodeJS.Global.URIError'
      - '@azure/abort-controller.NodeJS.Global.v8debug'
      - '@azure/abort-controller.NodeJS.Global.WeakMap'
      - '@azure/abort-controller.NodeJS.Global.WeakSet'
    langs:
      - typeScript
    type: interface
    summary: ''
    package: '@azure/abort-controller'
  - uid: '@azure/abort-controller.NodeJS.Global.Array'
    name: Array
    fullName: Array
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    syntax:
      content: 'Array: ArrayConstructor'
      return:
        type:
          - ArrayConstructor
        description: ''
    package: '@azure/abort-controller'
  - uid: '@azure/abort-controller.NodeJS.Global.ArrayBuffer'
    name: ArrayBuffer
    fullName: ArrayBuffer
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    syntax:
      content: 'ArrayBuffer: ArrayBufferConstructor'
      return:
        type:
          - ArrayBufferConstructor
        description: ''
    package: '@azure/abort-controller'
  - uid: '@azure/abort-controller.NodeJS.Global.Boolean'
    name: Boolean
    fullName: Boolean
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    syntax:
      content: 'Boolean: BooleanConstructor'
      return:
        type:
          - BooleanConstructor
        description: ''
    package: '@azure/abort-controller'
  - uid: '@azure/abort-controller.NodeJS.Global.Buffer'
    name: Buffer
    fullName: Buffer
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    syntax:
      content: 'Buffer: Buffer'
      return:
        type:
          - Buffer
        description: ''
    package: '@azure/abort-controller'
  - uid: '@azure/abort-controller.NodeJS.Global.clearImmediate'
    name: clearImmediate
    fullName: clearImmediate
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    syntax:
      content: 'clearImmediate: (immediateId: Immediate) => void'
      return:
        type:
          - '(immediateId: Immediate) => void'
        description: ''
    package: '@azure/abort-controller'
  - uid: '@azure/abort-controller.NodeJS.Global.clearInterval'
    name: clearInterval
    fullName: clearInterval
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    syntax:
      content: 'clearInterval: (intervalId: Timeout) => void'
      return:
        type:
          - '(intervalId: Timeout) => void'
        description: ''
    package: '@azure/abort-controller'
  - uid: '@azure/abort-controller.NodeJS.Global.clearTimeout'
    name: clearTimeout
    fullName: clearTimeout
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    syntax:
      content: 'clearTimeout: (timeoutId: Timeout) => void'
      return:
        type:
          - '(timeoutId: Timeout) => void'
        description: ''
    package: '@azure/abort-controller'
  - uid: '@azure/abort-controller.NodeJS.Global.console'
    name: console
    fullName: console
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    syntax:
      content: 'console: Console'
      return:
        type:
          - Console
        description: ''
    package: '@azure/abort-controller'
  - uid: '@azure/abort-controller.NodeJS.Global.DataView'
    name: DataView
    fullName: DataView
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    syntax:
      content: 'DataView: DataViewConstructor'
      return:
        type:
          - DataViewConstructor
        description: ''
    package: '@azure/abort-controller'
  - uid: '@azure/abort-controller.NodeJS.Global.Date'
    name: Date
    fullName: Date
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    syntax:
      content: 'Date: DateConstructor'
      return:
        type:
          - DateConstructor
        description: ''
    package: '@azure/abort-controller'
  - uid: '@azure/abort-controller.NodeJS.Global.decodeURI'
    name: decodeURI
    fullName: decodeURI
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    syntax:
      content: 'decodeURI: decodeURI'
      return:
        type:
          - decodeURI
        description: ''
    package: '@azure/abort-controller'
  - uid: '@azure/abort-controller.NodeJS.Global.decodeURIComponent'
    name: decodeURIComponent
    fullName: decodeURIComponent
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    syntax:
      content: 'decodeURIComponent: decodeURIComponent'
      return:
        type:
          - decodeURIComponent
        description: ''
    package: '@azure/abort-controller'
  - uid: '@azure/abort-controller.NodeJS.Global.encodeURI'
    name: encodeURI
    fullName: encodeURI
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    syntax:
      content: 'encodeURI: encodeURI'
      return:
        type:
          - encodeURI
        description: ''
    package: '@azure/abort-controller'
  - uid: '@azure/abort-controller.NodeJS.Global.encodeURIComponent'
    name: encodeURIComponent
    fullName: encodeURIComponent
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    syntax:
      content: 'encodeURIComponent: encodeURIComponent'
      return:
        type:
          - encodeURIComponent
        description: ''
    package: '@azure/abort-controller'
  - uid: '@azure/abort-controller.NodeJS.Global.Error'
    name: Error
    fullName: Error
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    syntax:
      content: 'Error: ErrorConstructor'
      return:
        type:
          - ErrorConstructor
        description: ''
    package: '@azure/abort-controller'
  - uid: '@azure/abort-controller.NodeJS.Global.escape'
    name: escape
    fullName: escape
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    syntax:
      content: 'escape: (str: string) => string'
      return:
        type:
          - '(str: string) => string'
        description: ''
    package: '@azure/abort-controller'
  - uid: '@azure/abort-controller.NodeJS.Global.eval'
    name: eval
    fullName: eval
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    syntax:
      content: 'eval: eval'
      return:
        type:
          - eval
        description: ''
    package: '@azure/abort-controller'
  - uid: '@azure/abort-controller.NodeJS.Global.EvalError'
    name: EvalError
    fullName: EvalError
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    syntax:
      content: 'EvalError: EvalErrorConstructor'
      return:
        type:
          - EvalErrorConstructor
        description: ''
    package: '@azure/abort-controller'
  - uid: '@azure/abort-controller.NodeJS.Global.Float32Array'
    name: Float32Array
    fullName: Float32Array
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    syntax:
      content: 'Float32Array: Float32ArrayConstructor'
      return:
        type:
          - Float32ArrayConstructor
        description: ''
    package: '@azure/abort-controller'
  - uid: '@azure/abort-controller.NodeJS.Global.Float64Array'
    name: Float64Array
    fullName: Float64Array
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    syntax:
      content: 'Float64Array: Float64ArrayConstructor'
      return:
        type:
          - Float64ArrayConstructor
        description: ''
    package: '@azure/abort-controller'
  - uid: '@azure/abort-controller.NodeJS.Global.Function'
    name: Function
    fullName: Function
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    syntax:
      content: 'Function: FunctionConstructor'
      return:
        type:
          - FunctionConstructor
        description: ''
    package: '@azure/abort-controller'
  - uid: '@azure/abort-controller.NodeJS.Global.gc'
    name: gc
    fullName: gc
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    syntax:
      content: 'gc: () => void'
      return:
        type:
          - () => void
        description: ''
    package: '@azure/abort-controller'
  - uid: '@azure/abort-controller.NodeJS.Global.global'
    name: global
    fullName: global
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    syntax:
      content: 'global: Global'
      return:
        type:
          - '@azure/abort-controller.NodeJS.Global'
        description: ''
    package: '@azure/abort-controller'
  - uid: '@azure/abort-controller.NodeJS.Global.GLOBAL'
    name: GLOBAL
    fullName: GLOBAL
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    syntax:
      content: 'GLOBAL: Global'
      return:
        type:
          - '@azure/abort-controller.NodeJS.Global'
        description: ''
    package: '@azure/abort-controller'
  - uid: '@azure/abort-controller.NodeJS.Global.Infinity'
    name: Infinity
    fullName: Infinity
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    syntax:
      content: 'Infinity: number'
      return:
        type:
          - number
        description: ''
    package: '@azure/abort-controller'
  - uid: '@azure/abort-controller.NodeJS.Global.Int16Array'
    name: Int16Array
    fullName: Int16Array
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    syntax:
      content: 'Int16Array: Int16ArrayConstructor'
      return:
        type:
          - Int16ArrayConstructor
        description: ''
    package: '@azure/abort-controller'
  - uid: '@azure/abort-controller.NodeJS.Global.Int32Array'
    name: Int32Array
    fullName: Int32Array
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    syntax:
      content: 'Int32Array: Int32ArrayConstructor'
      return:
        type:
          - Int32ArrayConstructor
        description: ''
    package: '@azure/abort-controller'
  - uid: '@azure/abort-controller.NodeJS.Global.Int8Array'
    name: Int8Array
    fullName: Int8Array
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    syntax:
      content: 'Int8Array: Int8ArrayConstructor'
      return:
        type:
          - Int8ArrayConstructor
        description: ''
    package: '@azure/abort-controller'
  - uid: '@azure/abort-controller.NodeJS.Global.Intl'
    name: Intl
    fullName: Intl
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    syntax:
      content: 'Intl: Intl'
      return:
        type:
          - Intl
        description: ''
    package: '@azure/abort-controller'
  - uid: '@azure/abort-controller.NodeJS.Global.isFinite'
    name: isFinite
    fullName: isFinite
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    syntax:
      content: 'isFinite: isFinite'
      return:
        type:
          - isFinite
        description: ''
    package: '@azure/abort-controller'
  - uid: '@azure/abort-controller.NodeJS.Global.isNaN'
    name: isNaN
    fullName: isNaN
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    syntax:
      content: 'isNaN: isNaN'
      return:
        type:
          - isNaN
        description: ''
    package: '@azure/abort-controller'
  - uid: '@azure/abort-controller.NodeJS.Global.JSON'
    name: JSON
    fullName: JSON
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    syntax:
      content: 'JSON: JSON'
      return:
        type:
          - JSON
        description: ''
    package: '@azure/abort-controller'
  - uid: '@azure/abort-controller.NodeJS.Global.Map'
    name: Map
    fullName: Map
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    syntax:
      content: 'Map: MapConstructor'
      return:
        type:
          - MapConstructor
        description: ''
    package: '@azure/abort-controller'
  - uid: '@azure/abort-controller.NodeJS.Global.Math'
    name: Math
    fullName: Math
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    syntax:
      content: 'Math: Math'
      return:
        type:
          - Math
        description: ''
    package: '@azure/abort-controller'
  - uid: '@azure/abort-controller.NodeJS.Global.NaN'
    name: NaN
    fullName: NaN
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    syntax:
      content: 'NaN: number'
      return:
        type:
          - number
        description: ''
    package: '@azure/abort-controller'
  - uid: '@azure/abort-controller.NodeJS.Global.Number'
    name: Number
    fullName: Number
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    syntax:
      content: 'Number: NumberConstructor'
      return:
        type:
          - NumberConstructor
        description: ''
    package: '@azure/abort-controller'
  - uid: '@azure/abort-controller.NodeJS.Global.Object'
    name: Object
    fullName: Object
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    syntax:
      content: 'Object: ObjectConstructor'
      return:
        type:
          - ObjectConstructor
        description: ''
    package: '@azure/abort-controller'
  - uid: '@azure/abort-controller.NodeJS.Global.parseFloat'
    name: parseFloat
    fullName: parseFloat
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    syntax:
      content: 'parseFloat: parseFloat'
      return:
        type:
          - parseFloat
        description: ''
    package: '@azure/abort-controller'
  - uid: '@azure/abort-controller.NodeJS.Global.parseInt'
    name: parseInt
    fullName: parseInt
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    syntax:
      content: 'parseInt: parseInt'
      return:
        type:
          - parseInt
        description: ''
    package: '@azure/abort-controller'
  - uid: '@azure/abort-controller.NodeJS.Global.process'
    name: process
    fullName: process
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    syntax:
      content: 'process: Process'
      return:
        type:
          - '@azure/abort-controller.NodeJS.Process'
        description: ''
    package: '@azure/abort-controller'
  - uid: '@azure/abort-controller.NodeJS.Global.Promise'
    name: Promise
    fullName: Promise
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    syntax:
      content: 'Promise: PromiseConstructor'
      return:
        type:
          - PromiseConstructor
        description: ''
    package: '@azure/abort-controller'
  - uid: '@azure/abort-controller.NodeJS.Global.queueMicrotask'
    name: queueMicrotask
    fullName: queueMicrotask
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    syntax:
      content: 'queueMicrotask: queueMicrotask'
      return:
        type:
          - queueMicrotask
        description: ''
    package: '@azure/abort-controller'
  - uid: '@azure/abort-controller.NodeJS.Global.RangeError'
    name: RangeError
    fullName: RangeError
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    syntax:
      content: 'RangeError: RangeErrorConstructor'
      return:
        type:
          - RangeErrorConstructor
        description: ''
    package: '@azure/abort-controller'
  - uid: '@azure/abort-controller.NodeJS.Global.ReferenceError'
    name: ReferenceError
    fullName: ReferenceError
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    syntax:
      content: 'ReferenceError: ReferenceErrorConstructor'
      return:
        type:
          - ReferenceErrorConstructor
        description: ''
    package: '@azure/abort-controller'
  - uid: '@azure/abort-controller.NodeJS.Global.RegExp'
    name: RegExp
    fullName: RegExp
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    syntax:
      content: 'RegExp: RegExpConstructor'
      return:
        type:
          - RegExpConstructor
        description: ''
    package: '@azure/abort-controller'
  - uid: '@azure/abort-controller.NodeJS.Global.root'
    name: root
    fullName: root
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    syntax:
      content: 'root: Global'
      return:
        type:
          - '@azure/abort-controller.NodeJS.Global'
        description: ''
    package: '@azure/abort-controller'
    deprecated:
      content: Use `global`.
  - uid: '@azure/abort-controller.NodeJS.Global.Set'
    name: Set
    fullName: Set
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    syntax:
      content: 'Set: SetConstructor'
      return:
        type:
          - SetConstructor
        description: ''
    package: '@azure/abort-controller'
  - uid: '@azure/abort-controller.NodeJS.Global.setImmediate'
    name: setImmediate
    fullName: setImmediate
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    syntax:
      content: >-
        setImmediate: (callback: (args: any[]) => void, args: any[]) =>
        Immediate
      return:
        type:
          - '(callback: (args: any[]) => void, args: any[]) => Immediate'
        description: ''
    package: '@azure/abort-controller'
  - uid: '@azure/abort-controller.NodeJS.Global.setInterval'
    name: setInterval
    fullName: setInterval
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    syntax:
      content: >-
        setInterval: (callback: (args: any[]) => void, ms: number, args: any[])
        => Timeout
      return:
        type:
          - >-
            (callback: (args: any[]) => void, ms: number, args: any[]) =>
            Timeout
        description: ''
    package: '@azure/abort-controller'
  - uid: '@azure/abort-controller.NodeJS.Global.setTimeout'
    name: setTimeout
    fullName: setTimeout
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    syntax:
      content: >-
        setTimeout: (callback: (args: any[]) => void, ms: number, args: any[])
        => Timeout
      return:
        type:
          - >-
            (callback: (args: any[]) => void, ms: number, args: any[]) =>
            Timeout
        description: ''
    package: '@azure/abort-controller'
  - uid: '@azure/abort-controller.NodeJS.Global.String'
    name: String
    fullName: String
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    syntax:
      content: 'String: StringConstructor'
      return:
        type:
          - StringConstructor
        description: ''
    package: '@azure/abort-controller'
  - uid: '@azure/abort-controller.NodeJS.Global.Symbol'
    name: Symbol
    fullName: Symbol
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    syntax:
      content: 'Symbol: Function'
      return:
        type:
          - Function
        description: ''
    package: '@azure/abort-controller'
  - uid: '@azure/abort-controller.NodeJS.Global.SyntaxError'
    name: SyntaxError
    fullName: SyntaxError
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    syntax:
      content: 'SyntaxError: SyntaxErrorConstructor'
      return:
        type:
          - SyntaxErrorConstructor
        description: ''
    package: '@azure/abort-controller'
  - uid: '@azure/abort-controller.NodeJS.Global.TypeError'
    name: TypeError
    fullName: TypeError
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    syntax:
      content: 'TypeError: TypeErrorConstructor'
      return:
        type:
          - TypeErrorConstructor
        description: ''
    package: '@azure/abort-controller'
  - uid: '@azure/abort-controller.NodeJS.Global.Uint16Array'
    name: Uint16Array
    fullName: Uint16Array
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    syntax:
      content: 'Uint16Array: Uint16ArrayConstructor'
      return:
        type:
          - Uint16ArrayConstructor
        description: ''
    package: '@azure/abort-controller'
  - uid: '@azure/abort-controller.NodeJS.Global.Uint32Array'
    name: Uint32Array
    fullName: Uint32Array
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    syntax:
      content: 'Uint32Array: Uint32ArrayConstructor'
      return:
        type:
          - Uint32ArrayConstructor
        description: ''
    package: '@azure/abort-controller'
  - uid: '@azure/abort-controller.NodeJS.Global.Uint8Array'
    name: Uint8Array
    fullName: Uint8Array
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    syntax:
      content: 'Uint8Array: Uint8ArrayConstructor'
      return:
        type:
          - Uint8ArrayConstructor
        description: ''
    package: '@azure/abort-controller'
  - uid: '@azure/abort-controller.NodeJS.Global.Uint8ClampedArray'
    name: Uint8ClampedArray
    fullName: Uint8ClampedArray
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    syntax:
      content: 'Uint8ClampedArray: Uint8ClampedArrayConstructor'
      return:
        type:
          - Uint8ClampedArrayConstructor
        description: ''
    package: '@azure/abort-controller'
  - uid: '@azure/abort-controller.NodeJS.Global.undefined'
    name: undefined
    fullName: undefined
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    syntax:
      content: 'undefined: undefined'
      return:
        type:
          - undefined
        description: ''
    package: '@azure/abort-controller'
  - uid: '@azure/abort-controller.NodeJS.Global.unescape'
    name: unescape
    fullName: unescape
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    syntax:
      content: 'unescape: (str: string) => string'
      return:
        type:
          - '(str: string) => string'
        description: ''
    package: '@azure/abort-controller'
  - uid: '@azure/abort-controller.NodeJS.Global.URIError'
    name: URIError
    fullName: URIError
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    syntax:
      content: 'URIError: URIErrorConstructor'
      return:
        type:
          - URIErrorConstructor
        description: ''
    package: '@azure/abort-controller'
  - uid: '@azure/abort-controller.NodeJS.Global.v8debug'
    name: v8debug
    fullName: v8debug
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    optional: true
    syntax:
      content: 'v8debug?: any'
      return:
        type:
          - any
        description: ''
    package: '@azure/abort-controller'
  - uid: '@azure/abort-controller.NodeJS.Global.WeakMap'
    name: WeakMap
    fullName: WeakMap
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    syntax:
      content: 'WeakMap: WeakMapConstructor'
      return:
        type:
          - WeakMapConstructor
        description: ''
    package: '@azure/abort-controller'
  - uid: '@azure/abort-controller.NodeJS.Global.WeakSet'
    name: WeakSet
    fullName: WeakSet
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    syntax:
      content: 'WeakSet: WeakSetConstructor'
      return:
        type:
          - WeakSetConstructor
        description: ''
    package: '@azure/abort-controller'
references:
  - uid: '@azure/abort-controller.NodeJS.WritableStream'
    name: WritableStream
    spec.typeScript:
      - name: WritableStream
        fullName: WritableStream
        uid: '@azure/abort-controller.NodeJS.WritableStream'
  - uid: '@azure/abort-controller.NodeJS.ConsoleConstructorOptions'
    name: ConsoleConstructorOptions
    spec.typeScript:
      - name: ConsoleConstructorOptions
        fullName: ConsoleConstructorOptions
        uid: '@azure/abort-controller.NodeJS.ConsoleConstructorOptions'
  - uid: '@azure/abort-controller.NodeJS.InspectOptions'
    name: InspectOptions
    spec.typeScript:
      - name: InspectOptions
        fullName: InspectOptions
        uid: '@azure/abort-controller.NodeJS.InspectOptions'
  - uid: '@azure/abort-controller.NodeJS.EventEmitter'
    name: EventEmitter
    spec.typeScript:
      - name: EventEmitter
        fullName: EventEmitter
        uid: '@azure/abort-controller.NodeJS.EventEmitter'
  - uid: >-
      @azure/abort-controller.NodeJS.EventEmitter |
      @azure/abort-controller.NodeJS.Timer
    name: Timer
    spec.typeScript:
      - name: EventEmitter
        fullName: EventEmitter
        uid: '@azure/abort-controller.NodeJS.EventEmitter'
      - name: ' | '
        fullName: ' | '
      - name: Timer
        fullName: Timer
        uid: '@azure/abort-controller.NodeJS.Timer'
  - uid: '@azure/abort-controller.NodeJS.Global'
    name: Global
    spec.typeScript:
      - name: Global
        fullName: Global
        uid: '@azure/abort-controller.NodeJS.Global'
  - uid: '@azure/abort-controller.NodeJS.Process'
    name: Process
    spec.typeScript:
      - name: Process
        fullName: Process
        uid: '@azure/abort-controller.NodeJS.Process'
  - uid: '@azure/abort-controller.NodeJS.RefCounted'
    name: RefCounted
    spec.typeScript:
      - name: RefCounted
        fullName: RefCounted
        uid: '@azure/abort-controller.NodeJS.RefCounted'
  - uid: '@azure/abort-controller.NodeJS.Module[]'
    name: 'Module[]'
    spec.typeScript:
      - name: Module
        fullName: Module
        uid: '@azure/abort-controller.NodeJS.Module'
      - name: '[]'
        fullName: '[]'
  - uid: '@azure/abort-controller.NodeJS.Module | null'
    name: Module | null
    spec.typeScript:
      - name: Module
        fullName: Module
        uid: '@azure/abort-controller.NodeJS.Module'
      - name: ' | null'
        fullName: ' | null'
  - uid: '@azure/abort-controller.NodeJS.Require'
    name: Require
    spec.typeScript:
      - name: Require
        fullName: Require
        uid: '@azure/abort-controller.NodeJS.Require'
  - uid: '@azure/abort-controller.NodeJS.Domain'
    name: Domain
    spec.typeScript:
      - name: Domain
        fullName: Domain
        uid: '@azure/abort-controller.NodeJS.Domain'
  - uid: '@azure/abort-controller.NodeJS.ProcessEnv'
    name: ProcessEnv
    spec.typeScript:
      - name: ProcessEnv
        fullName: ProcessEnv
        uid: '@azure/abort-controller.NodeJS.ProcessEnv'
  - uid: '@azure/abort-controller.NodeJS.Module'
    name: Module
    spec.typeScript:
      - name: Module
        fullName: Module
        uid: '@azure/abort-controller.NodeJS.Module'
  - uid: '@azure/abort-controller.NodeJS.Platform'
    name: Platform
    spec.typeScript:
      - name: Platform
        fullName: Platform
        uid: '@azure/abort-controller.NodeJS.Platform'
  - uid: '@azure/abort-controller.NodeJS.ProcessRelease'
    name: ProcessRelease
    spec.typeScript:
      - name: ProcessRelease
        fullName: ProcessRelease
        uid: '@azure/abort-controller.NodeJS.ProcessRelease'
  - uid: '@azure/abort-controller.NodeJS.ProcessReport'
    name: ProcessReport
    spec.typeScript:
      - name: ProcessReport
        fullName: ProcessReport
        uid: '@azure/abort-controller.NodeJS.ProcessReport'
  - uid: '@azure/abort-controller.NodeJS.ProcessVersions'
    name: ProcessVersions
    spec.typeScript:
      - name: ProcessVersions
        fullName: ProcessVersions
        uid: '@azure/abort-controller.NodeJS.ProcessVersions'
  - uid: '@azure/abort-controller.NodeJS.BeforeExitListener'
    name: BeforeExitListener
    spec.typeScript:
      - name: BeforeExitListener
        fullName: BeforeExitListener
        uid: '@azure/abort-controller.NodeJS.BeforeExitListener'
  - uid: '@azure/abort-controller.NodeJS.DisconnectListener'
    name: DisconnectListener
    spec.typeScript:
      - name: DisconnectListener
        fullName: DisconnectListener
        uid: '@azure/abort-controller.NodeJS.DisconnectListener'
  - uid: '@azure/abort-controller.NodeJS.ExitListener'
    name: ExitListener
    spec.typeScript:
      - name: ExitListener
        fullName: ExitListener
        uid: '@azure/abort-controller.NodeJS.ExitListener'
  - uid: '@azure/abort-controller.NodeJS.RejectionHandledListener'
    name: RejectionHandledListener
    spec.typeScript:
      - name: RejectionHandledListener
        fullName: RejectionHandledListener
        uid: '@azure/abort-controller.NodeJS.RejectionHandledListener'
  - uid: '@azure/abort-controller.NodeJS.UncaughtExceptionListener'
    name: UncaughtExceptionListener
    spec.typeScript:
      - name: UncaughtExceptionListener
        fullName: UncaughtExceptionListener
        uid: '@azure/abort-controller.NodeJS.UncaughtExceptionListener'
  - uid: '@azure/abort-controller.NodeJS.UnhandledRejectionListener'
    name: UnhandledRejectionListener
    spec.typeScript:
      - name: UnhandledRejectionListener
        fullName: UnhandledRejectionListener
        uid: '@azure/abort-controller.NodeJS.UnhandledRejectionListener'
  - uid: '@azure/abort-controller.NodeJS.WarningListener'
    name: WarningListener
    spec.typeScript:
      - name: WarningListener
        fullName: WarningListener
        uid: '@azure/abort-controller.NodeJS.WarningListener'
  - uid: '@azure/abort-controller.NodeJS.MessageListener'
    name: MessageListener
    spec.typeScript:
      - name: MessageListener
        fullName: MessageListener
        uid: '@azure/abort-controller.NodeJS.MessageListener'
  - uid: '@azure/abort-controller.NodeJS.Signals'
    name: Signals
    spec.typeScript:
      - name: Signals
        fullName: Signals
        uid: '@azure/abort-controller.NodeJS.Signals'
  - uid: '@azure/abort-controller.NodeJS.SignalsListener'
    name: SignalsListener
    spec.typeScript:
      - name: SignalsListener
        fullName: SignalsListener
        uid: '@azure/abort-controller.NodeJS.SignalsListener'
  - uid: '@azure/abort-controller.NodeJS.NewListenerListener'
    name: NewListenerListener
    spec.typeScript:
      - name: NewListenerListener
        fullName: NewListenerListener
        uid: '@azure/abort-controller.NodeJS.NewListenerListener'
  - uid: '@azure/abort-controller.NodeJS.RemoveListenerListener'
    name: RemoveListenerListener
    spec.typeScript:
      - name: RemoveListenerListener
        fullName: RemoveListenerListener
        uid: '@azure/abort-controller.NodeJS.RemoveListenerListener'
  - uid: '@azure/abort-controller.NodeJS.MultipleResolveListener'
    name: MultipleResolveListener
    spec.typeScript:
      - name: MultipleResolveListener
        fullName: MultipleResolveListener
        uid: '@azure/abort-controller.NodeJS.MultipleResolveListener'
  - uid: '@azure/abort-controller.NodeJS.CpuUsage'
    name: CpuUsage
    spec.typeScript:
      - name: CpuUsage
        fullName: CpuUsage
        uid: '@azure/abort-controller.NodeJS.CpuUsage'
  - uid: '@azure/abort-controller.NodeJS.Global.Function'
    name: Function
    spec.typeScript:
      - name: Function
        fullName: Function
        uid: '@azure/abort-controller.NodeJS.Global.Function'
  - uid: '@azure/abort-controller.NodeJS.BeforeExitListener[]'
    name: 'BeforeExitListener[]'
    spec.typeScript:
      - name: BeforeExitListener
        fullName: BeforeExitListener
        uid: '@azure/abort-controller.NodeJS.BeforeExitListener'
      - name: '[]'
        fullName: '[]'
  - uid: '@azure/abort-controller.NodeJS.DisconnectListener[]'
    name: 'DisconnectListener[]'
    spec.typeScript:
      - name: DisconnectListener
        fullName: DisconnectListener
        uid: '@azure/abort-controller.NodeJS.DisconnectListener'
      - name: '[]'
        fullName: '[]'
  - uid: '@azure/abort-controller.NodeJS.ExitListener[]'
    name: 'ExitListener[]'
    spec.typeScript:
      - name: ExitListener
        fullName: ExitListener
        uid: '@azure/abort-controller.NodeJS.ExitListener'
      - name: '[]'
        fullName: '[]'
  - uid: '@azure/abort-controller.NodeJS.RejectionHandledListener[]'
    name: 'RejectionHandledListener[]'
    spec.typeScript:
      - name: RejectionHandledListener
        fullName: RejectionHandledListener
        uid: '@azure/abort-controller.NodeJS.RejectionHandledListener'
      - name: '[]'
        fullName: '[]'
  - uid: '@azure/abort-controller.NodeJS.UncaughtExceptionListener[]'
    name: 'UncaughtExceptionListener[]'
    spec.typeScript:
      - name: UncaughtExceptionListener
        fullName: UncaughtExceptionListener
        uid: '@azure/abort-controller.NodeJS.UncaughtExceptionListener'
      - name: '[]'
        fullName: '[]'
  - uid: '@azure/abort-controller.NodeJS.UnhandledRejectionListener[]'
    name: 'UnhandledRejectionListener[]'
    spec.typeScript:
      - name: UnhandledRejectionListener
        fullName: UnhandledRejectionListener
        uid: '@azure/abort-controller.NodeJS.UnhandledRejectionListener'
      - name: '[]'
        fullName: '[]'
  - uid: '@azure/abort-controller.NodeJS.WarningListener[]'
    name: 'WarningListener[]'
    spec.typeScript:
      - name: WarningListener
        fullName: WarningListener
        uid: '@azure/abort-controller.NodeJS.WarningListener'
      - name: '[]'
        fullName: '[]'
  - uid: '@azure/abort-controller.NodeJS.MessageListener[]'
    name: 'MessageListener[]'
    spec.typeScript:
      - name: MessageListener
        fullName: MessageListener
        uid: '@azure/abort-controller.NodeJS.MessageListener'
      - name: '[]'
        fullName: '[]'
  - uid: '@azure/abort-controller.NodeJS.SignalsListener[]'
    name: 'SignalsListener[]'
    spec.typeScript:
      - name: SignalsListener
        fullName: SignalsListener
        uid: '@azure/abort-controller.NodeJS.SignalsListener'
      - name: '[]'
        fullName: '[]'
  - uid: '@azure/abort-controller.NodeJS.NewListenerListener[]'
    name: 'NewListenerListener[]'
    spec.typeScript:
      - name: NewListenerListener
        fullName: NewListenerListener
        uid: '@azure/abort-controller.NodeJS.NewListenerListener'
      - name: '[]'
        fullName: '[]'
  - uid: '@azure/abort-controller.NodeJS.RemoveListenerListener[]'
    name: 'RemoveListenerListener[]'
    spec.typeScript:
      - name: RemoveListenerListener
        fullName: RemoveListenerListener
        uid: '@azure/abort-controller.NodeJS.RemoveListenerListener'
      - name: '[]'
        fullName: '[]'
  - uid: '@azure/abort-controller.NodeJS.MultipleResolveListener[]'
    name: 'MultipleResolveListener[]'
    spec.typeScript:
      - name: MultipleResolveListener
        fullName: MultipleResolveListener
        uid: '@azure/abort-controller.NodeJS.MultipleResolveListener'
      - name: '[]'
        fullName: '[]'
  - uid: '@azure/abort-controller.NodeJS.MemoryUsage'
    name: MemoryUsage
    spec.typeScript:
      - name: MemoryUsage
        fullName: MemoryUsage
        uid: '@azure/abort-controller.NodeJS.MemoryUsage'
  - uid: '@azure/abort-controller.NodeJS.Socket'
    name: Socket
    spec.typeScript:
      - name: Socket
        fullName: Socket
        uid: '@azure/abort-controller.NodeJS.Socket'
  - uid: '@azure/abort-controller.NodeJS.ResourceUsage'
    name: ResourceUsage
    spec.typeScript:
      - name: ResourceUsage
        fullName: ResourceUsage
        uid: '@azure/abort-controller.NodeJS.ResourceUsage'
  - uid: '@azure/abort-controller.AbortError.Error'
    name: Error
    spec.typeScript:
      - name: Error
        fullName: Error
        uid: '@azure/abort-controller.AbortError.Error'
  - uid: '@azure/abort-controller.NodeJS.ReadableStream'
    name: ReadableStream
    spec.typeScript:
      - name: ReadableStream
        fullName: ReadableStream
        uid: '@azure/abort-controller.NodeJS.ReadableStream'
  - uid: '@azure/abort-controller.BufferEncoding'
    name: BufferEncoding
    spec.typeScript:
      - name: BufferEncoding
        fullName: BufferEncoding
        uid: '@azure/abort-controller.BufferEncoding'
  - uid: '@azure/abort-controller.NodeJS.NodeRequireCache'
    name: NodeRequireCache
    spec.typeScript:
      - name: NodeRequireCache
        fullName: NodeRequireCache
        uid: '@azure/abort-controller.NodeJS.NodeRequireCache'
  - uid: '@azure/abort-controller.NodeJS.RequireExtensions'
    name: RequireExtensions
    spec.typeScript:
      - name: RequireExtensions
        fullName: RequireExtensions
        uid: '@azure/abort-controller.NodeJS.RequireExtensions'
  - uid: '@azure/abort-controller.NodeJS.Module | undefined'
    name: Module | undefined
    spec.typeScript:
      - name: Module
        fullName: Module
        uid: '@azure/abort-controller.NodeJS.Module'
      - name: ' | undefined'
        fullName: ' | undefined'
  - uid: '@azure/abort-controller.NodeJS.RequireResolve'
    name: RequireResolve
    spec.typeScript:
      - name: RequireResolve
        fullName: RequireResolve
        uid: '@azure/abort-controller.NodeJS.RequireResolve'
  - uid: '@azure/abort-controller.NodeJS.ReadWriteStream'
    name: ReadWriteStream
    spec.typeScript:
      - name: ReadWriteStream
        fullName: ReadWriteStream
        uid: '@azure/abort-controller.NodeJS.ReadWriteStream'
  - uid: '@azure/abort-controller.NodeJS.Timer'
    name: Timer
    spec.typeScript:
      - name: Timer
        fullName: Timer
        uid: '@azure/abort-controller.NodeJS.Timer'
