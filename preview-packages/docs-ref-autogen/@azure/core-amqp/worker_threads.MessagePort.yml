### YamlMime:UniversalReference
items:
  - uid: tslib.worker_threads.MessagePort
    name: MessagePort
    fullName: MessagePort
    children:
      - tslib.worker_threads.MessagePort.addListener
      - tslib.worker_threads.MessagePort.addListener_1
      - tslib.worker_threads.MessagePort.addListener_2
      - tslib.worker_threads.MessagePort.close
      - tslib.worker_threads.MessagePort.defaultMaxListeners
      - tslib.worker_threads.MessagePort.emit
      - tslib.worker_threads.MessagePort.emit_1
      - tslib.worker_threads.MessagePort.emit_2
      - tslib.worker_threads.MessagePort.eventNames
      - tslib.worker_threads.MessagePort.getMaxListeners
      - tslib.worker_threads.MessagePort.listenerCount
      - tslib.worker_threads.MessagePort.listenerCount
      - tslib.worker_threads.MessagePort.listeners
      - tslib.worker_threads.MessagePort.constructor
      - tslib.worker_threads.MessagePort.off
      - tslib.worker_threads.MessagePort.off_1
      - tslib.worker_threads.MessagePort.off_2
      - tslib.worker_threads.MessagePort.on
      - tslib.worker_threads.MessagePort.on_1
      - tslib.worker_threads.MessagePort.on_2
      - tslib.worker_threads.MessagePort.once
      - tslib.worker_threads.MessagePort.once_1
      - tslib.worker_threads.MessagePort.once_2
      - tslib.worker_threads.MessagePort.postMessage
      - tslib.worker_threads.MessagePort.prependListener
      - tslib.worker_threads.MessagePort.prependListener_1
      - tslib.worker_threads.MessagePort.prependListener_2
      - tslib.worker_threads.MessagePort.prependOnceListener
      - tslib.worker_threads.MessagePort.prependOnceListener_1
      - tslib.worker_threads.MessagePort.prependOnceListener_2
      - tslib.worker_threads.MessagePort.rawListeners
      - tslib.worker_threads.MessagePort.ref
      - tslib.worker_threads.MessagePort.removeAllListeners
      - tslib.worker_threads.MessagePort.removeListener
      - tslib.worker_threads.MessagePort.removeListener_1
      - tslib.worker_threads.MessagePort.removeListener_2
      - tslib.worker_threads.MessagePort.setMaxListeners
      - tslib.worker_threads.MessagePort.start
      - tslib.worker_threads.MessagePort.unref
    langs:
      - typeScript
    type: class
    summary: ''
    extends:
      name: tslib.events.EventEmitter.EventEmitter
    package: tslib
  - uid: tslib.worker_threads.MessagePort.addListener
    name: 'addListener("close", () => void)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function addListener(event: "close", listener: () => void)'
      parameters:
        - id: event
          type:
            - '"close"'
          description: ''
        - id: listener
          type:
            - () => void
          description: ''
      return:
        type:
          - this
        description: ''
    package: tslib
  - uid: tslib.worker_threads.MessagePort.addListener_1
    name: 'addListener("message", (value: any) => void)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function addListener(event: "message", listener: (value: any) => void)'
      parameters:
        - id: event
          type:
            - '"message"'
          description: ''
        - id: listener
          type:
            - '(value: any) => void'
          description: ''
      return:
        type:
          - this
        description: ''
    package: tslib
  - uid: tslib.worker_threads.MessagePort.addListener_2
    name: 'addListener(string | symbol, (args: any[]) => void)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function addListener(event: string | symbol, listener: (args: any[]) =>
        void)
      parameters:
        - id: event
          type:
            - string | symbol
          description: ''
        - id: listener
          type:
            - '(args: any[]) => void'
          description: ''
      return:
        type:
          - this
        description: ''
    package: tslib
  - uid: tslib.worker_threads.MessagePort.close
    name: close()
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: function close()
      parameters: []
    package: tslib
  - uid: tslib.worker_threads.MessagePort.defaultMaxListeners
    name: defaultMaxListeners
    fullName: defaultMaxListeners
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    syntax:
      content: 'static defaultMaxListeners: number'
      return:
        type:
          - number
        description: ''
    package: tslib
  - uid: tslib.worker_threads.MessagePort.emit
    name: emit("close")
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function emit(event: "close")'
      parameters:
        - id: event
          type:
            - '"close"'
          description: ''
      return:
        type:
          - boolean
        description: ''
    package: tslib
  - uid: tslib.worker_threads.MessagePort.emit_1
    name: 'emit("message", any)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function emit(event: "message", value: any)'
      parameters:
        - id: event
          type:
            - '"message"'
          description: ''
        - id: value
          type:
            - any
          description: ''
      return:
        type:
          - boolean
        description: ''
    package: tslib
  - uid: tslib.worker_threads.MessagePort.emit_2
    name: 'emit(string | symbol, any[])'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function emit(event: string | symbol, args: any[])'
      parameters:
        - id: event
          type:
            - string | symbol
          description: ''
        - id: args
          type:
            - 'any[]'
          description: ''
      return:
        type:
          - boolean
        description: ''
    package: tslib
  - uid: tslib.worker_threads.MessagePort.eventNames
    name: eventNames()
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: function eventNames()
      parameters: []
      return:
        type:
          - Array<string | symbol>
        description: ''
    package: tslib
  - uid: tslib.worker_threads.MessagePort.getMaxListeners
    name: getMaxListeners()
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: function getMaxListeners()
      parameters: []
      return:
        type:
          - number
        description: ''
    package: tslib
  - uid: tslib.worker_threads.MessagePort.listenerCount
    name: 'listenerCount(EventEmitter, string | symbol)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        static function listenerCount(emitter: EventEmitter, event: string |
        symbol)
      parameters:
        - id: emitter
          type:
            - tslib.events.EventEmitter.EventEmitter
          description: ''
        - id: event
          type:
            - string | symbol
          description: ''
      return:
        type:
          - number
        description: ''
    package: tslib
    deprecated:
      content: since v4.0.0
  - uid: tslib.worker_threads.MessagePort.listenerCount
    name: listenerCount(string | symbol)
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function listenerCount(type: string | symbol)'
      parameters:
        - id: type
          type:
            - string | symbol
          description: ''
      return:
        type:
          - number
        description: ''
    package: tslib
  - uid: tslib.worker_threads.MessagePort.listeners
    name: listeners(string | symbol)
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function listeners(event: string | symbol)'
      parameters:
        - id: event
          type:
            - string | symbol
          description: ''
      return:
        type:
          - 'Function[]'
        description: ''
    package: tslib
  - uid: tslib.worker_threads.MessagePort.constructor
    name: MessagePort(EventEmitterOptions)
    children: []
    type: constructor
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'new MessagePort(options?: EventEmitterOptions)'
      parameters:
        - id: options
          type:
            - tslib.events.EventEmitterOptions
          description: ''
          optional: true
    package: tslib
  - uid: tslib.worker_threads.MessagePort.off
    name: 'off("close", () => void)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function off(event: "close", listener: () => void)'
      parameters:
        - id: event
          type:
            - '"close"'
          description: ''
        - id: listener
          type:
            - () => void
          description: ''
      return:
        type:
          - this
        description: ''
    package: tslib
  - uid: tslib.worker_threads.MessagePort.off_1
    name: 'off("message", (value: any) => void)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function off(event: "message", listener: (value: any) => void)'
      parameters:
        - id: event
          type:
            - '"message"'
          description: ''
        - id: listener
          type:
            - '(value: any) => void'
          description: ''
      return:
        type:
          - this
        description: ''
    package: tslib
  - uid: tslib.worker_threads.MessagePort.off_2
    name: 'off(string | symbol, (args: any[]) => void)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function off(event: string | symbol, listener: (args: any[]) => void)'
      parameters:
        - id: event
          type:
            - string | symbol
          description: ''
        - id: listener
          type:
            - '(args: any[]) => void'
          description: ''
      return:
        type:
          - this
        description: ''
    package: tslib
  - uid: tslib.worker_threads.MessagePort.on
    name: 'on("close", () => void)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function on(event: "close", listener: () => void)'
      parameters:
        - id: event
          type:
            - '"close"'
          description: ''
        - id: listener
          type:
            - () => void
          description: ''
      return:
        type:
          - this
        description: ''
    package: tslib
  - uid: tslib.worker_threads.MessagePort.on_1
    name: 'on("message", (value: any) => void)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function on(event: "message", listener: (value: any) => void)'
      parameters:
        - id: event
          type:
            - '"message"'
          description: ''
        - id: listener
          type:
            - '(value: any) => void'
          description: ''
      return:
        type:
          - this
        description: ''
    package: tslib
  - uid: tslib.worker_threads.MessagePort.on_2
    name: 'on(string | symbol, (args: any[]) => void)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function on(event: string | symbol, listener: (args: any[]) => void)'
      parameters:
        - id: event
          type:
            - string | symbol
          description: ''
        - id: listener
          type:
            - '(args: any[]) => void'
          description: ''
      return:
        type:
          - this
        description: ''
    package: tslib
  - uid: tslib.worker_threads.MessagePort.once
    name: 'once("close", () => void)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function once(event: "close", listener: () => void)'
      parameters:
        - id: event
          type:
            - '"close"'
          description: ''
        - id: listener
          type:
            - () => void
          description: ''
      return:
        type:
          - this
        description: ''
    package: tslib
  - uid: tslib.worker_threads.MessagePort.once_1
    name: 'once("message", (value: any) => void)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function once(event: "message", listener: (value: any) => void)'
      parameters:
        - id: event
          type:
            - '"message"'
          description: ''
        - id: listener
          type:
            - '(value: any) => void'
          description: ''
      return:
        type:
          - this
        description: ''
    package: tslib
  - uid: tslib.worker_threads.MessagePort.once_2
    name: 'once(string | symbol, (args: any[]) => void)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function once(event: string | symbol, listener: (args: any[]) => void)'
      parameters:
        - id: event
          type:
            - string | symbol
          description: ''
        - id: listener
          type:
            - '(args: any[]) => void'
          description: ''
      return:
        type:
          - this
        description: ''
    package: tslib
  - uid: tslib.worker_threads.MessagePort.postMessage
    name: 'postMessage(any, Array<ArrayBuffer | MessagePort>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function postMessage(value: any, transferList?: Array<ArrayBuffer |
        MessagePort>)
      parameters:
        - id: value
          type:
            - any
          description: ''
        - id: transferList
          type:
            - >-
              tslib.NodeJS.Global.Array<ArrayBuffer |
              tslib.worker_threads.MessagePort>
          description: ''
          optional: true
    package: tslib
  - uid: tslib.worker_threads.MessagePort.prependListener
    name: 'prependListener("close", () => void)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function prependListener(event: "close", listener: () => void)'
      parameters:
        - id: event
          type:
            - '"close"'
          description: ''
        - id: listener
          type:
            - () => void
          description: ''
      return:
        type:
          - this
        description: ''
    package: tslib
  - uid: tslib.worker_threads.MessagePort.prependListener_1
    name: 'prependListener("message", (value: any) => void)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function prependListener(event: "message", listener: (value: any) =>
        void)
      parameters:
        - id: event
          type:
            - '"message"'
          description: ''
        - id: listener
          type:
            - '(value: any) => void'
          description: ''
      return:
        type:
          - this
        description: ''
    package: tslib
  - uid: tslib.worker_threads.MessagePort.prependListener_2
    name: 'prependListener(string | symbol, (args: any[]) => void)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function prependListener(event: string | symbol, listener: (args: any[])
        => void)
      parameters:
        - id: event
          type:
            - string | symbol
          description: ''
        - id: listener
          type:
            - '(args: any[]) => void'
          description: ''
      return:
        type:
          - this
        description: ''
    package: tslib
  - uid: tslib.worker_threads.MessagePort.prependOnceListener
    name: 'prependOnceListener("close", () => void)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function prependOnceListener(event: "close", listener: () => void)'
      parameters:
        - id: event
          type:
            - '"close"'
          description: ''
        - id: listener
          type:
            - () => void
          description: ''
      return:
        type:
          - this
        description: ''
    package: tslib
  - uid: tslib.worker_threads.MessagePort.prependOnceListener_1
    name: 'prependOnceListener("message", (value: any) => void)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function prependOnceListener(event: "message", listener: (value: any) =>
        void)
      parameters:
        - id: event
          type:
            - '"message"'
          description: ''
        - id: listener
          type:
            - '(value: any) => void'
          description: ''
      return:
        type:
          - this
        description: ''
    package: tslib
  - uid: tslib.worker_threads.MessagePort.prependOnceListener_2
    name: 'prependOnceListener(string | symbol, (args: any[]) => void)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function prependOnceListener(event: string | symbol, listener: (args:
        any[]) => void)
      parameters:
        - id: event
          type:
            - string | symbol
          description: ''
        - id: listener
          type:
            - '(args: any[]) => void'
          description: ''
      return:
        type:
          - this
        description: ''
    package: tslib
  - uid: tslib.worker_threads.MessagePort.rawListeners
    name: rawListeners(string | symbol)
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function rawListeners(event: string | symbol)'
      parameters:
        - id: event
          type:
            - string | symbol
          description: ''
      return:
        type:
          - 'Function[]'
        description: ''
    package: tslib
  - uid: tslib.worker_threads.MessagePort.ref
    name: ref()
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: function ref()
      parameters: []
    package: tslib
  - uid: tslib.worker_threads.MessagePort.removeAllListeners
    name: removeAllListeners(string | symbol)
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function removeAllListeners(event?: string | symbol)'
      parameters:
        - id: event
          type:
            - string | symbol
          description: ''
          optional: true
      return:
        type:
          - this
        description: ''
    package: tslib
  - uid: tslib.worker_threads.MessagePort.removeListener
    name: 'removeListener("close", () => void)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function removeListener(event: "close", listener: () => void)'
      parameters:
        - id: event
          type:
            - '"close"'
          description: ''
        - id: listener
          type:
            - () => void
          description: ''
      return:
        type:
          - this
        description: ''
    package: tslib
  - uid: tslib.worker_threads.MessagePort.removeListener_1
    name: 'removeListener("message", (value: any) => void)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function removeListener(event: "message", listener: (value: any) =>
        void)
      parameters:
        - id: event
          type:
            - '"message"'
          description: ''
        - id: listener
          type:
            - '(value: any) => void'
          description: ''
      return:
        type:
          - this
        description: ''
    package: tslib
  - uid: tslib.worker_threads.MessagePort.removeListener_2
    name: 'removeListener(string | symbol, (args: any[]) => void)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function removeListener(event: string | symbol, listener: (args: any[])
        => void)
      parameters:
        - id: event
          type:
            - string | symbol
          description: ''
        - id: listener
          type:
            - '(args: any[]) => void'
          description: ''
      return:
        type:
          - this
        description: ''
    package: tslib
  - uid: tslib.worker_threads.MessagePort.setMaxListeners
    name: setMaxListeners(number)
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function setMaxListeners(n: number)'
      parameters:
        - id: 'n'
          type:
            - number
          description: ''
      return:
        type:
          - this
        description: ''
    package: tslib
  - uid: tslib.worker_threads.MessagePort.start
    name: start()
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: function start()
      parameters: []
    package: tslib
  - uid: tslib.worker_threads.MessagePort.unref
    name: unref()
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: function unref()
      parameters: []
    package: tslib
references:
  - uid: tslib.worker_threads.MessagePort
    name: MessagePort
    spec.typeScript:
      - name: MessagePort
        fullName: MessagePort
        uid: tslib.worker_threads.MessagePort
  - uid: tslib.events.EventEmitter.EventEmitter
    name: EventEmitter
    spec.typeScript:
      - name: EventEmitter
        fullName: EventEmitter
        uid: tslib.events.EventEmitter.EventEmitter
  - uid: tslib.events.EventEmitterOptions
    name: EventEmitterOptions
    spec.typeScript:
      - name: EventEmitterOptions
        fullName: EventEmitterOptions
        uid: tslib.events.EventEmitterOptions
  - uid: tslib.NodeJS.Global.Array<ArrayBuffer | tslib.worker_threads.MessagePort>
    name: MessagePort>
    spec.typeScript:
      - name: Array
        fullName: Array
        uid: tslib.NodeJS.Global.Array
      - name: '<ArrayBuffer | '
        fullName: '<ArrayBuffer | '
      - name: MessagePort
        fullName: MessagePort
        uid: tslib.worker_threads.MessagePort
      - name: '>'
        fullName: '>'
  - uid: tslib.worker_threads.WorkerOptions
    name: WorkerOptions
    spec.typeScript:
      - name: WorkerOptions
        fullName: WorkerOptions
        uid: tslib.worker_threads.WorkerOptions
  - uid: tslib.worker_threads.ResourceLimits
    name: ResourceLimits
    spec.typeScript:
      - name: ResourceLimits
        fullName: ResourceLimits
        uid: tslib.worker_threads.ResourceLimits
  - uid: tslib.stream.internal.Readable
    name: Readable
    spec.typeScript:
      - name: Readable
        fullName: Readable
        uid: tslib.stream.internal.Readable
  - uid: tslib.stream.internal.Writable | null
    name: Writable | null
    spec.typeScript:
      - name: Writable
        fullName: Writable
        uid: tslib.stream.internal.Writable
      - name: ' | null'
        fullName: ' | null'
  - uid: tslib.vm.Context
    name: Context
    spec.typeScript:
      - name: Context
        fullName: Context
        uid: tslib.vm.Context
