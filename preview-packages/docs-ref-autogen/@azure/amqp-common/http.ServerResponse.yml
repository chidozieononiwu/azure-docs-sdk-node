### YamlMime:UniversalReference
items:
  - uid: '@azure/ms-rest-azure-env.http.ServerResponse'
    name: ServerResponse
    fullName: ServerResponse
    children:
      - '@azure/ms-rest-azure-env.http.ServerResponse.addListener'
      - '@azure/ms-rest-azure-env.http.ServerResponse.addListener_1'
      - '@azure/ms-rest-azure-env.http.ServerResponse.addListener_2'
      - '@azure/ms-rest-azure-env.http.ServerResponse.addListener_3'
      - '@azure/ms-rest-azure-env.http.ServerResponse.addListener_4'
      - '@azure/ms-rest-azure-env.http.ServerResponse.addListener_5'
      - '@azure/ms-rest-azure-env.http.ServerResponse.addListener_6'
      - '@azure/ms-rest-azure-env.http.ServerResponse.addTrailers'
      - '@azure/ms-rest-azure-env.http.ServerResponse.assignSocket'
      - '@azure/ms-rest-azure-env.http.ServerResponse.chunkedEncoding'
      - '@azure/ms-rest-azure-env.http.ServerResponse.connection'
      - '@azure/ms-rest-azure-env.http.ServerResponse.cork'
      - '@azure/ms-rest-azure-env.http.ServerResponse.destroy'
      - '@azure/ms-rest-azure-env.http.ServerResponse.destroyed'
      - '@azure/ms-rest-azure-env.http.ServerResponse.detachSocket'
      - '@azure/ms-rest-azure-env.http.ServerResponse.emit'
      - '@azure/ms-rest-azure-env.http.ServerResponse.emit_1'
      - '@azure/ms-rest-azure-env.http.ServerResponse.emit_2'
      - '@azure/ms-rest-azure-env.http.ServerResponse.emit_3'
      - '@azure/ms-rest-azure-env.http.ServerResponse.emit_4'
      - '@azure/ms-rest-azure-env.http.ServerResponse.emit_5'
      - '@azure/ms-rest-azure-env.http.ServerResponse.emit_6'
      - '@azure/ms-rest-azure-env.http.ServerResponse.end_2'
      - '@azure/ms-rest-azure-env.http.ServerResponse.end_1'
      - '@azure/ms-rest-azure-env.http.ServerResponse.end'
      - '@azure/ms-rest-azure-env.http.ServerResponse.eventNames'
      - '@azure/ms-rest-azure-env.http.ServerResponse.finished'
      - '@azure/ms-rest-azure-env.http.ServerResponse.flushHeaders'
      - '@azure/ms-rest-azure-env.http.ServerResponse.getHeader'
      - '@azure/ms-rest-azure-env.http.ServerResponse.getHeaderNames'
      - '@azure/ms-rest-azure-env.http.ServerResponse.getHeaders'
      - '@azure/ms-rest-azure-env.http.ServerResponse.getMaxListeners'
      - '@azure/ms-rest-azure-env.http.ServerResponse.hasHeader'
      - '@azure/ms-rest-azure-env.http.ServerResponse.headersSent'
      - '@azure/ms-rest-azure-env.http.ServerResponse.listenerCount'
      - '@azure/ms-rest-azure-env.http.ServerResponse.listeners'
      - '@azure/ms-rest-azure-env.http.ServerResponse.off'
      - '@azure/ms-rest-azure-env.http.ServerResponse.on'
      - '@azure/ms-rest-azure-env.http.ServerResponse.on_1'
      - '@azure/ms-rest-azure-env.http.ServerResponse.on_2'
      - '@azure/ms-rest-azure-env.http.ServerResponse.on_3'
      - '@azure/ms-rest-azure-env.http.ServerResponse.on_4'
      - '@azure/ms-rest-azure-env.http.ServerResponse.on_5'
      - '@azure/ms-rest-azure-env.http.ServerResponse.on_6'
      - '@azure/ms-rest-azure-env.http.ServerResponse.once'
      - '@azure/ms-rest-azure-env.http.ServerResponse.once_1'
      - '@azure/ms-rest-azure-env.http.ServerResponse.once_2'
      - '@azure/ms-rest-azure-env.http.ServerResponse.once_3'
      - '@azure/ms-rest-azure-env.http.ServerResponse.once_4'
      - '@azure/ms-rest-azure-env.http.ServerResponse.once_5'
      - '@azure/ms-rest-azure-env.http.ServerResponse.once_6'
      - '@azure/ms-rest-azure-env.http.ServerResponse.pipe'
      - '@azure/ms-rest-azure-env.http.ServerResponse.prependListener'
      - '@azure/ms-rest-azure-env.http.ServerResponse.prependListener_1'
      - '@azure/ms-rest-azure-env.http.ServerResponse.prependListener_2'
      - '@azure/ms-rest-azure-env.http.ServerResponse.prependListener_3'
      - '@azure/ms-rest-azure-env.http.ServerResponse.prependListener_4'
      - '@azure/ms-rest-azure-env.http.ServerResponse.prependListener_5'
      - '@azure/ms-rest-azure-env.http.ServerResponse.prependListener_6'
      - '@azure/ms-rest-azure-env.http.ServerResponse.prependOnceListener'
      - '@azure/ms-rest-azure-env.http.ServerResponse.prependOnceListener_1'
      - '@azure/ms-rest-azure-env.http.ServerResponse.prependOnceListener_2'
      - '@azure/ms-rest-azure-env.http.ServerResponse.prependOnceListener_3'
      - '@azure/ms-rest-azure-env.http.ServerResponse.prependOnceListener_4'
      - '@azure/ms-rest-azure-env.http.ServerResponse.prependOnceListener_5'
      - '@azure/ms-rest-azure-env.http.ServerResponse.prependOnceListener_6'
      - '@azure/ms-rest-azure-env.http.ServerResponse.rawListeners'
      - '@azure/ms-rest-azure-env.http.ServerResponse.removeAllListeners'
      - '@azure/ms-rest-azure-env.http.ServerResponse.removeHeader'
      - '@azure/ms-rest-azure-env.http.ServerResponse.removeListener'
      - '@azure/ms-rest-azure-env.http.ServerResponse.removeListener_1'
      - '@azure/ms-rest-azure-env.http.ServerResponse.removeListener_2'
      - '@azure/ms-rest-azure-env.http.ServerResponse.removeListener_3'
      - '@azure/ms-rest-azure-env.http.ServerResponse.removeListener_4'
      - '@azure/ms-rest-azure-env.http.ServerResponse.removeListener_5'
      - '@azure/ms-rest-azure-env.http.ServerResponse.removeListener_6'
      - '@azure/ms-rest-azure-env.http.ServerResponse.sendDate'
      - '@azure/ms-rest-azure-env.http.ServerResponse.constructor'
      - '@azure/ms-rest-azure-env.http.ServerResponse.setDefaultEncoding'
      - '@azure/ms-rest-azure-env.http.ServerResponse.setHeader'
      - '@azure/ms-rest-azure-env.http.ServerResponse.setMaxListeners'
      - '@azure/ms-rest-azure-env.http.ServerResponse.setTimeout'
      - '@azure/ms-rest-azure-env.http.ServerResponse.shouldKeepAlive'
      - '@azure/ms-rest-azure-env.http.ServerResponse.statusCode'
      - '@azure/ms-rest-azure-env.http.ServerResponse.statusMessage'
      - '@azure/ms-rest-azure-env.http.ServerResponse.uncork'
      - '@azure/ms-rest-azure-env.http.ServerResponse.upgrading'
      - '@azure/ms-rest-azure-env.http.ServerResponse.useChunkedEncodingByDefault'
      - '@azure/ms-rest-azure-env.http.ServerResponse.writable'
      - '@azure/ms-rest-azure-env.http.ServerResponse.writableCorked'
      - '@azure/ms-rest-azure-env.http.ServerResponse.writableEnded'
      - '@azure/ms-rest-azure-env.http.ServerResponse.writableFinished'
      - '@azure/ms-rest-azure-env.http.ServerResponse.writableHighWaterMark'
      - '@azure/ms-rest-azure-env.http.ServerResponse.writableLength'
      - '@azure/ms-rest-azure-env.http.ServerResponse.writableObjectMode'
      - '@azure/ms-rest-azure-env.http.ServerResponse.write_1'
      - '@azure/ms-rest-azure-env.http.ServerResponse.write'
      - '@azure/ms-rest-azure-env.http.ServerResponse.writeContinue'
      - '@azure/ms-rest-azure-env.http.ServerResponse.writeHead_1'
      - '@azure/ms-rest-azure-env.http.ServerResponse.writeHead'
    langs:
      - typeScript
    type: class
    summary: ''
    extends:
      name: '@azure/ms-rest-azure-env.http.OutgoingMessage'
    package: '@azure/ms-rest-azure-env'
  - uid: '@azure/ms-rest-azure-env.http.ServerResponse.addListener'
    name: 'addListener("close", () => void)'
    children: []
    type: method
    langs:
      - typeScript
    summary: |-
      Event emitter
      The defined events on documents including:
      1. close
      2. drain
      3. error
      4. finish
      5. pipe
      6. unpipe
    syntax:
      content: 'function addListener(event: "close", listener: () => void)'
      parameters:
        - id: event
          type:
            - '"close"'
          description: ''
        - id: listener
          type:
            - () => void
          description: ''
      return:
        type:
          - this
        description: ''
    package: '@azure/ms-rest-azure-env'
  - uid: '@azure/ms-rest-azure-env.http.ServerResponse.addListener_1'
    name: 'addListener("drain", () => void)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function addListener(event: "drain", listener: () => void)'
      parameters:
        - id: event
          type:
            - '"drain"'
          description: ''
        - id: listener
          type:
            - () => void
          description: ''
      return:
        type:
          - this
        description: ''
    package: '@azure/ms-rest-azure-env'
  - uid: '@azure/ms-rest-azure-env.http.ServerResponse.addListener_2'
    name: 'addListener("error", (err: Error) => void)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function addListener(event: "error", listener: (err: Error) => void)'
      parameters:
        - id: event
          type:
            - '"error"'
          description: ''
        - id: listener
          type:
            - '(err: Error) => void'
          description: ''
      return:
        type:
          - this
        description: ''
    package: '@azure/ms-rest-azure-env'
  - uid: '@azure/ms-rest-azure-env.http.ServerResponse.addListener_3'
    name: 'addListener("finish", () => void)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function addListener(event: "finish", listener: () => void)'
      parameters:
        - id: event
          type:
            - '"finish"'
          description: ''
        - id: listener
          type:
            - () => void
          description: ''
      return:
        type:
          - this
        description: ''
    package: '@azure/ms-rest-azure-env'
  - uid: '@azure/ms-rest-azure-env.http.ServerResponse.addListener_4'
    name: 'addListener("pipe", (src: Readable) => void)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function addListener(event: "pipe", listener: (src: Readable) => void)'
      parameters:
        - id: event
          type:
            - '"pipe"'
          description: ''
        - id: listener
          type:
            - '(src: Readable) => void'
          description: ''
      return:
        type:
          - this
        description: ''
    package: '@azure/ms-rest-azure-env'
  - uid: '@azure/ms-rest-azure-env.http.ServerResponse.addListener_5'
    name: 'addListener("unpipe", (src: Readable) => void)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function addListener(event: "unpipe", listener: (src: Readable) => void)'
      parameters:
        - id: event
          type:
            - '"unpipe"'
          description: ''
        - id: listener
          type:
            - '(src: Readable) => void'
          description: ''
      return:
        type:
          - this
        description: ''
    package: '@azure/ms-rest-azure-env'
  - uid: '@azure/ms-rest-azure-env.http.ServerResponse.addListener_6'
    name: 'addListener(string | symbol, (args: any[]) => void)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function addListener(event: string | symbol, listener: (args: any[]) =>
        void)
      parameters:
        - id: event
          type:
            - string | symbol
          description: ''
        - id: listener
          type:
            - '(args: any[]) => void'
          description: ''
      return:
        type:
          - this
        description: ''
    package: '@azure/ms-rest-azure-env'
  - uid: '@azure/ms-rest-azure-env.http.ServerResponse.addTrailers'
    name: addTrailers(OutgoingHttpHeaders | Array<Object>)
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function addTrailers(headers: OutgoingHttpHeaders | Array<Object>)'
      parameters:
        - id: headers
          type:
            - OutgoingHttpHeaders | Array<Object>
          description: ''
    package: '@azure/ms-rest-azure-env'
  - uid: '@azure/ms-rest-azure-env.http.ServerResponse.assignSocket'
    name: assignSocket(Socket)
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function assignSocket(socket: Socket)'
      parameters:
        - id: socket
          type:
            - '@azure/ms-rest-azure-env.net.Socket'
          description: ''
    package: '@azure/ms-rest-azure-env'
  - uid: '@azure/ms-rest-azure-env.http.ServerResponse.chunkedEncoding'
    name: chunkedEncoding
    fullName: chunkedEncoding
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    syntax:
      content: 'chunkedEncoding: boolean'
      return:
        type:
          - boolean
        description: ''
    package: '@azure/ms-rest-azure-env'
  - uid: '@azure/ms-rest-azure-env.http.ServerResponse.connection'
    name: connection
    fullName: connection
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    syntax:
      content: 'connection: Socket'
      return:
        type:
          - '@azure/ms-rest-azure-env.net.Socket'
        description: ''
    package: '@azure/ms-rest-azure-env'
  - uid: '@azure/ms-rest-azure-env.http.ServerResponse.cork'
    name: cork()
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: function cork()
      parameters: []
    package: '@azure/ms-rest-azure-env'
  - uid: '@azure/ms-rest-azure-env.http.ServerResponse.destroy'
    name: destroy(Error)
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function destroy(error: Error)'
      parameters:
        - id: error
          type:
            - Error
          description: ''
    package: '@azure/ms-rest-azure-env'
  - uid: '@azure/ms-rest-azure-env.http.ServerResponse.destroyed'
    name: destroyed
    fullName: destroyed
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    syntax:
      content: 'destroyed: boolean'
      return:
        type:
          - boolean
        description: ''
    package: '@azure/ms-rest-azure-env'
  - uid: '@azure/ms-rest-azure-env.http.ServerResponse.detachSocket'
    name: detachSocket(Socket)
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function detachSocket(socket: Socket)'
      parameters:
        - id: socket
          type:
            - '@azure/ms-rest-azure-env.net.Socket'
          description: ''
    package: '@azure/ms-rest-azure-env'
  - uid: '@azure/ms-rest-azure-env.http.ServerResponse.emit'
    name: emit("close")
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function emit(event: "close")'
      parameters:
        - id: event
          type:
            - '"close"'
          description: ''
      return:
        type:
          - boolean
        description: ''
    package: '@azure/ms-rest-azure-env'
  - uid: '@azure/ms-rest-azure-env.http.ServerResponse.emit_1'
    name: emit("drain")
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function emit(event: "drain")'
      parameters:
        - id: event
          type:
            - '"drain"'
          description: ''
      return:
        type:
          - boolean
        description: ''
    package: '@azure/ms-rest-azure-env'
  - uid: '@azure/ms-rest-azure-env.http.ServerResponse.emit_2'
    name: 'emit("error", Error)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function emit(event: "error", err: Error)'
      parameters:
        - id: event
          type:
            - '"error"'
          description: ''
        - id: err
          type:
            - Error
          description: ''
      return:
        type:
          - boolean
        description: ''
    package: '@azure/ms-rest-azure-env'
  - uid: '@azure/ms-rest-azure-env.http.ServerResponse.emit_3'
    name: emit("finish")
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function emit(event: "finish")'
      parameters:
        - id: event
          type:
            - '"finish"'
          description: ''
      return:
        type:
          - boolean
        description: ''
    package: '@azure/ms-rest-azure-env'
  - uid: '@azure/ms-rest-azure-env.http.ServerResponse.emit_4'
    name: 'emit("pipe", Readable)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function emit(event: "pipe", src: Readable)'
      parameters:
        - id: event
          type:
            - '"pipe"'
          description: ''
        - id: src
          type:
            - '@azure/ms-rest-azure-env.stream.internal.Readable'
          description: ''
      return:
        type:
          - boolean
        description: ''
    package: '@azure/ms-rest-azure-env'
  - uid: '@azure/ms-rest-azure-env.http.ServerResponse.emit_5'
    name: 'emit("unpipe", Readable)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function emit(event: "unpipe", src: Readable)'
      parameters:
        - id: event
          type:
            - '"unpipe"'
          description: ''
        - id: src
          type:
            - '@azure/ms-rest-azure-env.stream.internal.Readable'
          description: ''
      return:
        type:
          - boolean
        description: ''
    package: '@azure/ms-rest-azure-env'
  - uid: '@azure/ms-rest-azure-env.http.ServerResponse.emit_6'
    name: 'emit(string | symbol, any[])'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function emit(event: string | symbol, args: any[])'
      parameters:
        - id: event
          type:
            - string | symbol
          description: ''
        - id: args
          type:
            - 'any[]'
          description: ''
      return:
        type:
          - boolean
        description: ''
    package: '@azure/ms-rest-azure-env'
  - uid: '@azure/ms-rest-azure-env.http.ServerResponse.end_2'
    name: 'end(any, string, undefined | () => void)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function end(chunk: any, encoding: string, cb?: undefined | () => void)'
      parameters:
        - id: chunk
          type:
            - any
          description: ''
        - id: encoding
          type:
            - string
          description: ''
        - id: cb
          type:
            - undefined | () => void
          description: ''
          optional: true
    package: '@azure/ms-rest-azure-env'
  - uid: '@azure/ms-rest-azure-env.http.ServerResponse.end_1'
    name: 'end(any, undefined | () => void)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function end(chunk: any, cb?: undefined | () => void)'
      parameters:
        - id: chunk
          type:
            - any
          description: ''
        - id: cb
          type:
            - undefined | () => void
          description: ''
          optional: true
    package: '@azure/ms-rest-azure-env'
  - uid: '@azure/ms-rest-azure-env.http.ServerResponse.end'
    name: end(undefined | () => void)
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function end(cb?: undefined | () => void)'
      parameters:
        - id: cb
          type:
            - undefined | () => void
          description: ''
          optional: true
    package: '@azure/ms-rest-azure-env'
  - uid: '@azure/ms-rest-azure-env.http.ServerResponse.eventNames'
    name: eventNames()
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: function eventNames()
      parameters: []
      return:
        type:
          - Array<string | symbol>
        description: ''
    package: '@azure/ms-rest-azure-env'
  - uid: '@azure/ms-rest-azure-env.http.ServerResponse.finished'
    name: finished
    fullName: finished
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    syntax:
      content: 'finished: boolean'
      return:
        type:
          - boolean
        description: ''
    package: '@azure/ms-rest-azure-env'
  - uid: '@azure/ms-rest-azure-env.http.ServerResponse.flushHeaders'
    name: flushHeaders()
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: function flushHeaders()
      parameters: []
    package: '@azure/ms-rest-azure-env'
  - uid: '@azure/ms-rest-azure-env.http.ServerResponse.getHeader'
    name: getHeader(string)
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function getHeader(name: string)'
      parameters:
        - id: name
          type:
            - string
          description: ''
      return:
        type:
          - 'number | string | string[] | undefined'
        description: ''
    package: '@azure/ms-rest-azure-env'
  - uid: '@azure/ms-rest-azure-env.http.ServerResponse.getHeaderNames'
    name: getHeaderNames()
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: function getHeaderNames()
      parameters: []
      return:
        type:
          - 'string[]'
        description: ''
    package: '@azure/ms-rest-azure-env'
  - uid: '@azure/ms-rest-azure-env.http.ServerResponse.getHeaders'
    name: getHeaders()
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: function getHeaders()
      parameters: []
      return:
        type:
          - OutgoingHttpHeaders
        description: ''
    package: '@azure/ms-rest-azure-env'
  - uid: '@azure/ms-rest-azure-env.http.ServerResponse.getMaxListeners'
    name: getMaxListeners()
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: function getMaxListeners()
      parameters: []
      return:
        type:
          - number
        description: ''
    package: '@azure/ms-rest-azure-env'
  - uid: '@azure/ms-rest-azure-env.http.ServerResponse.hasHeader'
    name: hasHeader(string)
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function hasHeader(name: string)'
      parameters:
        - id: name
          type:
            - string
          description: ''
      return:
        type:
          - boolean
        description: ''
    package: '@azure/ms-rest-azure-env'
  - uid: '@azure/ms-rest-azure-env.http.ServerResponse.headersSent'
    name: headersSent
    fullName: headersSent
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    syntax:
      content: 'headersSent: boolean'
      return:
        type:
          - boolean
        description: ''
    package: '@azure/ms-rest-azure-env'
  - uid: '@azure/ms-rest-azure-env.http.ServerResponse.listenerCount'
    name: listenerCount(string | symbol)
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function listenerCount(type: string | symbol)'
      parameters:
        - id: type
          type:
            - string | symbol
          description: ''
      return:
        type:
          - number
        description: ''
    package: '@azure/ms-rest-azure-env'
  - uid: '@azure/ms-rest-azure-env.http.ServerResponse.listeners'
    name: listeners(string | symbol)
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function listeners(event: string | symbol)'
      parameters:
        - id: event
          type:
            - string | symbol
          description: ''
      return:
        type:
          - 'Function[]'
        description: ''
    package: '@azure/ms-rest-azure-env'
  - uid: '@azure/ms-rest-azure-env.http.ServerResponse.off'
    name: 'off(string | symbol, (args: any[]) => void)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function off(event: string | symbol, listener: (args: any[]) => void)'
      parameters:
        - id: event
          type:
            - string | symbol
          description: ''
        - id: listener
          type:
            - '(args: any[]) => void'
          description: ''
      return:
        type:
          - this
        description: ''
    package: '@azure/ms-rest-azure-env'
  - uid: '@azure/ms-rest-azure-env.http.ServerResponse.on'
    name: 'on("close", () => void)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function on(event: "close", listener: () => void)'
      parameters:
        - id: event
          type:
            - '"close"'
          description: ''
        - id: listener
          type:
            - () => void
          description: ''
      return:
        type:
          - this
        description: ''
    package: '@azure/ms-rest-azure-env'
  - uid: '@azure/ms-rest-azure-env.http.ServerResponse.on_1'
    name: 'on("drain", () => void)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function on(event: "drain", listener: () => void)'
      parameters:
        - id: event
          type:
            - '"drain"'
          description: ''
        - id: listener
          type:
            - () => void
          description: ''
      return:
        type:
          - this
        description: ''
    package: '@azure/ms-rest-azure-env'
  - uid: '@azure/ms-rest-azure-env.http.ServerResponse.on_2'
    name: 'on("error", (err: Error) => void)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function on(event: "error", listener: (err: Error) => void)'
      parameters:
        - id: event
          type:
            - '"error"'
          description: ''
        - id: listener
          type:
            - '(err: Error) => void'
          description: ''
      return:
        type:
          - this
        description: ''
    package: '@azure/ms-rest-azure-env'
  - uid: '@azure/ms-rest-azure-env.http.ServerResponse.on_3'
    name: 'on("finish", () => void)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function on(event: "finish", listener: () => void)'
      parameters:
        - id: event
          type:
            - '"finish"'
          description: ''
        - id: listener
          type:
            - () => void
          description: ''
      return:
        type:
          - this
        description: ''
    package: '@azure/ms-rest-azure-env'
  - uid: '@azure/ms-rest-azure-env.http.ServerResponse.on_4'
    name: 'on("pipe", (src: Readable) => void)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function on(event: "pipe", listener: (src: Readable) => void)'
      parameters:
        - id: event
          type:
            - '"pipe"'
          description: ''
        - id: listener
          type:
            - '(src: Readable) => void'
          description: ''
      return:
        type:
          - this
        description: ''
    package: '@azure/ms-rest-azure-env'
  - uid: '@azure/ms-rest-azure-env.http.ServerResponse.on_5'
    name: 'on("unpipe", (src: Readable) => void)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function on(event: "unpipe", listener: (src: Readable) => void)'
      parameters:
        - id: event
          type:
            - '"unpipe"'
          description: ''
        - id: listener
          type:
            - '(src: Readable) => void'
          description: ''
      return:
        type:
          - this
        description: ''
    package: '@azure/ms-rest-azure-env'
  - uid: '@azure/ms-rest-azure-env.http.ServerResponse.on_6'
    name: 'on(string | symbol, (args: any[]) => void)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function on(event: string | symbol, listener: (args: any[]) => void)'
      parameters:
        - id: event
          type:
            - string | symbol
          description: ''
        - id: listener
          type:
            - '(args: any[]) => void'
          description: ''
      return:
        type:
          - this
        description: ''
    package: '@azure/ms-rest-azure-env'
  - uid: '@azure/ms-rest-azure-env.http.ServerResponse.once'
    name: 'once("close", () => void)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function once(event: "close", listener: () => void)'
      parameters:
        - id: event
          type:
            - '"close"'
          description: ''
        - id: listener
          type:
            - () => void
          description: ''
      return:
        type:
          - this
        description: ''
    package: '@azure/ms-rest-azure-env'
  - uid: '@azure/ms-rest-azure-env.http.ServerResponse.once_1'
    name: 'once("drain", () => void)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function once(event: "drain", listener: () => void)'
      parameters:
        - id: event
          type:
            - '"drain"'
          description: ''
        - id: listener
          type:
            - () => void
          description: ''
      return:
        type:
          - this
        description: ''
    package: '@azure/ms-rest-azure-env'
  - uid: '@azure/ms-rest-azure-env.http.ServerResponse.once_2'
    name: 'once("error", (err: Error) => void)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function once(event: "error", listener: (err: Error) => void)'
      parameters:
        - id: event
          type:
            - '"error"'
          description: ''
        - id: listener
          type:
            - '(err: Error) => void'
          description: ''
      return:
        type:
          - this
        description: ''
    package: '@azure/ms-rest-azure-env'
  - uid: '@azure/ms-rest-azure-env.http.ServerResponse.once_3'
    name: 'once("finish", () => void)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function once(event: "finish", listener: () => void)'
      parameters:
        - id: event
          type:
            - '"finish"'
          description: ''
        - id: listener
          type:
            - () => void
          description: ''
      return:
        type:
          - this
        description: ''
    package: '@azure/ms-rest-azure-env'
  - uid: '@azure/ms-rest-azure-env.http.ServerResponse.once_4'
    name: 'once("pipe", (src: Readable) => void)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function once(event: "pipe", listener: (src: Readable) => void)'
      parameters:
        - id: event
          type:
            - '"pipe"'
          description: ''
        - id: listener
          type:
            - '(src: Readable) => void'
          description: ''
      return:
        type:
          - this
        description: ''
    package: '@azure/ms-rest-azure-env'
  - uid: '@azure/ms-rest-azure-env.http.ServerResponse.once_5'
    name: 'once("unpipe", (src: Readable) => void)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function once(event: "unpipe", listener: (src: Readable) => void)'
      parameters:
        - id: event
          type:
            - '"unpipe"'
          description: ''
        - id: listener
          type:
            - '(src: Readable) => void'
          description: ''
      return:
        type:
          - this
        description: ''
    package: '@azure/ms-rest-azure-env'
  - uid: '@azure/ms-rest-azure-env.http.ServerResponse.once_6'
    name: 'once(string | symbol, (args: any[]) => void)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function once(event: string | symbol, listener: (args: any[]) => void)'
      parameters:
        - id: event
          type:
            - string | symbol
          description: ''
        - id: listener
          type:
            - '(args: any[]) => void'
          description: ''
      return:
        type:
          - this
        description: ''
    package: '@azure/ms-rest-azure-env'
  - uid: '@azure/ms-rest-azure-env.http.ServerResponse.pipe'
    name: 'pipe(T, undefined | Object)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function pipe<T>(destination: T, options?: undefined | Object)'
      parameters:
        - id: destination
          type:
            - T
          description: ''
        - id: options
          type:
            - undefined | Object
          description: ''
          optional: true
      return:
        type:
          - T
        description: ''
    package: '@azure/ms-rest-azure-env'
  - uid: '@azure/ms-rest-azure-env.http.ServerResponse.prependListener'
    name: 'prependListener("close", () => void)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function prependListener(event: "close", listener: () => void)'
      parameters:
        - id: event
          type:
            - '"close"'
          description: ''
        - id: listener
          type:
            - () => void
          description: ''
      return:
        type:
          - this
        description: ''
    package: '@azure/ms-rest-azure-env'
  - uid: '@azure/ms-rest-azure-env.http.ServerResponse.prependListener_1'
    name: 'prependListener("drain", () => void)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function prependListener(event: "drain", listener: () => void)'
      parameters:
        - id: event
          type:
            - '"drain"'
          description: ''
        - id: listener
          type:
            - () => void
          description: ''
      return:
        type:
          - this
        description: ''
    package: '@azure/ms-rest-azure-env'
  - uid: '@azure/ms-rest-azure-env.http.ServerResponse.prependListener_2'
    name: 'prependListener("error", (err: Error) => void)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function prependListener(event: "error", listener: (err: Error) => void)'
      parameters:
        - id: event
          type:
            - '"error"'
          description: ''
        - id: listener
          type:
            - '(err: Error) => void'
          description: ''
      return:
        type:
          - this
        description: ''
    package: '@azure/ms-rest-azure-env'
  - uid: '@azure/ms-rest-azure-env.http.ServerResponse.prependListener_3'
    name: 'prependListener("finish", () => void)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function prependListener(event: "finish", listener: () => void)'
      parameters:
        - id: event
          type:
            - '"finish"'
          description: ''
        - id: listener
          type:
            - () => void
          description: ''
      return:
        type:
          - this
        description: ''
    package: '@azure/ms-rest-azure-env'
  - uid: '@azure/ms-rest-azure-env.http.ServerResponse.prependListener_4'
    name: 'prependListener("pipe", (src: Readable) => void)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function prependListener(event: "pipe", listener: (src: Readable) =>
        void)
      parameters:
        - id: event
          type:
            - '"pipe"'
          description: ''
        - id: listener
          type:
            - '(src: Readable) => void'
          description: ''
      return:
        type:
          - this
        description: ''
    package: '@azure/ms-rest-azure-env'
  - uid: '@azure/ms-rest-azure-env.http.ServerResponse.prependListener_5'
    name: 'prependListener("unpipe", (src: Readable) => void)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function prependListener(event: "unpipe", listener: (src: Readable) =>
        void)
      parameters:
        - id: event
          type:
            - '"unpipe"'
          description: ''
        - id: listener
          type:
            - '(src: Readable) => void'
          description: ''
      return:
        type:
          - this
        description: ''
    package: '@azure/ms-rest-azure-env'
  - uid: '@azure/ms-rest-azure-env.http.ServerResponse.prependListener_6'
    name: 'prependListener(string | symbol, (args: any[]) => void)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function prependListener(event: string | symbol, listener: (args: any[])
        => void)
      parameters:
        - id: event
          type:
            - string | symbol
          description: ''
        - id: listener
          type:
            - '(args: any[]) => void'
          description: ''
      return:
        type:
          - this
        description: ''
    package: '@azure/ms-rest-azure-env'
  - uid: '@azure/ms-rest-azure-env.http.ServerResponse.prependOnceListener'
    name: 'prependOnceListener("close", () => void)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function prependOnceListener(event: "close", listener: () => void)'
      parameters:
        - id: event
          type:
            - '"close"'
          description: ''
        - id: listener
          type:
            - () => void
          description: ''
      return:
        type:
          - this
        description: ''
    package: '@azure/ms-rest-azure-env'
  - uid: '@azure/ms-rest-azure-env.http.ServerResponse.prependOnceListener_1'
    name: 'prependOnceListener("drain", () => void)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function prependOnceListener(event: "drain", listener: () => void)'
      parameters:
        - id: event
          type:
            - '"drain"'
          description: ''
        - id: listener
          type:
            - () => void
          description: ''
      return:
        type:
          - this
        description: ''
    package: '@azure/ms-rest-azure-env'
  - uid: '@azure/ms-rest-azure-env.http.ServerResponse.prependOnceListener_2'
    name: 'prependOnceListener("error", (err: Error) => void)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function prependOnceListener(event: "error", listener: (err: Error) =>
        void)
      parameters:
        - id: event
          type:
            - '"error"'
          description: ''
        - id: listener
          type:
            - '(err: Error) => void'
          description: ''
      return:
        type:
          - this
        description: ''
    package: '@azure/ms-rest-azure-env'
  - uid: '@azure/ms-rest-azure-env.http.ServerResponse.prependOnceListener_3'
    name: 'prependOnceListener("finish", () => void)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function prependOnceListener(event: "finish", listener: () => void)'
      parameters:
        - id: event
          type:
            - '"finish"'
          description: ''
        - id: listener
          type:
            - () => void
          description: ''
      return:
        type:
          - this
        description: ''
    package: '@azure/ms-rest-azure-env'
  - uid: '@azure/ms-rest-azure-env.http.ServerResponse.prependOnceListener_4'
    name: 'prependOnceListener("pipe", (src: Readable) => void)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function prependOnceListener(event: "pipe", listener: (src: Readable) =>
        void)
      parameters:
        - id: event
          type:
            - '"pipe"'
          description: ''
        - id: listener
          type:
            - '(src: Readable) => void'
          description: ''
      return:
        type:
          - this
        description: ''
    package: '@azure/ms-rest-azure-env'
  - uid: '@azure/ms-rest-azure-env.http.ServerResponse.prependOnceListener_5'
    name: 'prependOnceListener("unpipe", (src: Readable) => void)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function prependOnceListener(event: "unpipe", listener: (src: Readable)
        => void)
      parameters:
        - id: event
          type:
            - '"unpipe"'
          description: ''
        - id: listener
          type:
            - '(src: Readable) => void'
          description: ''
      return:
        type:
          - this
        description: ''
    package: '@azure/ms-rest-azure-env'
  - uid: '@azure/ms-rest-azure-env.http.ServerResponse.prependOnceListener_6'
    name: 'prependOnceListener(string | symbol, (args: any[]) => void)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function prependOnceListener(event: string | symbol, listener: (args:
        any[]) => void)
      parameters:
        - id: event
          type:
            - string | symbol
          description: ''
        - id: listener
          type:
            - '(args: any[]) => void'
          description: ''
      return:
        type:
          - this
        description: ''
    package: '@azure/ms-rest-azure-env'
  - uid: '@azure/ms-rest-azure-env.http.ServerResponse.rawListeners'
    name: rawListeners(string | symbol)
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function rawListeners(event: string | symbol)'
      parameters:
        - id: event
          type:
            - string | symbol
          description: ''
      return:
        type:
          - 'Function[]'
        description: ''
    package: '@azure/ms-rest-azure-env'
  - uid: '@azure/ms-rest-azure-env.http.ServerResponse.removeAllListeners'
    name: removeAllListeners(string | symbol)
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function removeAllListeners(event?: string | symbol)'
      parameters:
        - id: event
          type:
            - string | symbol
          description: ''
          optional: true
      return:
        type:
          - this
        description: ''
    package: '@azure/ms-rest-azure-env'
  - uid: '@azure/ms-rest-azure-env.http.ServerResponse.removeHeader'
    name: removeHeader(string)
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function removeHeader(name: string)'
      parameters:
        - id: name
          type:
            - string
          description: ''
    package: '@azure/ms-rest-azure-env'
  - uid: '@azure/ms-rest-azure-env.http.ServerResponse.removeListener'
    name: 'removeListener("close", () => void)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function removeListener(event: "close", listener: () => void)'
      parameters:
        - id: event
          type:
            - '"close"'
          description: ''
        - id: listener
          type:
            - () => void
          description: ''
      return:
        type:
          - this
        description: ''
    package: '@azure/ms-rest-azure-env'
  - uid: '@azure/ms-rest-azure-env.http.ServerResponse.removeListener_1'
    name: 'removeListener("drain", () => void)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function removeListener(event: "drain", listener: () => void)'
      parameters:
        - id: event
          type:
            - '"drain"'
          description: ''
        - id: listener
          type:
            - () => void
          description: ''
      return:
        type:
          - this
        description: ''
    package: '@azure/ms-rest-azure-env'
  - uid: '@azure/ms-rest-azure-env.http.ServerResponse.removeListener_2'
    name: 'removeListener("error", (err: Error) => void)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function removeListener(event: "error", listener: (err: Error) => void)'
      parameters:
        - id: event
          type:
            - '"error"'
          description: ''
        - id: listener
          type:
            - '(err: Error) => void'
          description: ''
      return:
        type:
          - this
        description: ''
    package: '@azure/ms-rest-azure-env'
  - uid: '@azure/ms-rest-azure-env.http.ServerResponse.removeListener_3'
    name: 'removeListener("finish", () => void)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function removeListener(event: "finish", listener: () => void)'
      parameters:
        - id: event
          type:
            - '"finish"'
          description: ''
        - id: listener
          type:
            - () => void
          description: ''
      return:
        type:
          - this
        description: ''
    package: '@azure/ms-rest-azure-env'
  - uid: '@azure/ms-rest-azure-env.http.ServerResponse.removeListener_4'
    name: 'removeListener("pipe", (src: Readable) => void)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function removeListener(event: "pipe", listener: (src: Readable) =>
        void)
      parameters:
        - id: event
          type:
            - '"pipe"'
          description: ''
        - id: listener
          type:
            - '(src: Readable) => void'
          description: ''
      return:
        type:
          - this
        description: ''
    package: '@azure/ms-rest-azure-env'
  - uid: '@azure/ms-rest-azure-env.http.ServerResponse.removeListener_5'
    name: 'removeListener("unpipe", (src: Readable) => void)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function removeListener(event: "unpipe", listener: (src: Readable) =>
        void)
      parameters:
        - id: event
          type:
            - '"unpipe"'
          description: ''
        - id: listener
          type:
            - '(src: Readable) => void'
          description: ''
      return:
        type:
          - this
        description: ''
    package: '@azure/ms-rest-azure-env'
  - uid: '@azure/ms-rest-azure-env.http.ServerResponse.removeListener_6'
    name: 'removeListener(string | symbol, (args: any[]) => void)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function removeListener(event: string | symbol, listener: (args: any[])
        => void)
      parameters:
        - id: event
          type:
            - string | symbol
          description: ''
        - id: listener
          type:
            - '(args: any[]) => void'
          description: ''
      return:
        type:
          - this
        description: ''
    package: '@azure/ms-rest-azure-env'
  - uid: '@azure/ms-rest-azure-env.http.ServerResponse.sendDate'
    name: sendDate
    fullName: sendDate
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    syntax:
      content: 'sendDate: boolean'
      return:
        type:
          - boolean
        description: ''
    package: '@azure/ms-rest-azure-env'
  - uid: '@azure/ms-rest-azure-env.http.ServerResponse.constructor'
    name: ServerResponse(IncomingMessage)
    children: []
    type: constructor
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'new ServerResponse(req: IncomingMessage)'
      parameters:
        - id: req
          type:
            - '@azure/ms-rest-azure-env.http.IncomingMessage'
          description: ''
    package: '@azure/ms-rest-azure-env'
  - uid: '@azure/ms-rest-azure-env.http.ServerResponse.setDefaultEncoding'
    name: setDefaultEncoding(string)
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function setDefaultEncoding(encoding: string)'
      parameters:
        - id: encoding
          type:
            - string
          description: ''
      return:
        type:
          - this
        description: ''
    package: '@azure/ms-rest-azure-env'
  - uid: '@azure/ms-rest-azure-env.http.ServerResponse.setHeader'
    name: 'setHeader(string, number | string | string[])'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function setHeader(name: string, value: number | string | string[])'
      parameters:
        - id: name
          type:
            - string
          description: ''
        - id: value
          type:
            - 'number | string | string[]'
          description: ''
    package: '@azure/ms-rest-azure-env'
  - uid: '@azure/ms-rest-azure-env.http.ServerResponse.setMaxListeners'
    name: setMaxListeners(number)
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function setMaxListeners(n: number)'
      parameters:
        - id: 'n'
          type:
            - number
          description: ''
      return:
        type:
          - this
        description: ''
    package: '@azure/ms-rest-azure-env'
  - uid: '@azure/ms-rest-azure-env.http.ServerResponse.setTimeout'
    name: 'setTimeout(number, undefined | () => void)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function setTimeout(msecs: number, callback?: undefined | () => void)'
      parameters:
        - id: msecs
          type:
            - number
          description: ''
        - id: callback
          type:
            - undefined | () => void
          description: ''
          optional: true
      return:
        type:
          - this
        description: ''
    package: '@azure/ms-rest-azure-env'
  - uid: '@azure/ms-rest-azure-env.http.ServerResponse.shouldKeepAlive'
    name: shouldKeepAlive
    fullName: shouldKeepAlive
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    syntax:
      content: 'shouldKeepAlive: boolean'
      return:
        type:
          - boolean
        description: ''
    package: '@azure/ms-rest-azure-env'
  - uid: '@azure/ms-rest-azure-env.http.ServerResponse.statusCode'
    name: statusCode
    fullName: statusCode
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    syntax:
      content: 'statusCode: number'
      return:
        type:
          - number
        description: ''
    package: '@azure/ms-rest-azure-env'
  - uid: '@azure/ms-rest-azure-env.http.ServerResponse.statusMessage'
    name: statusMessage
    fullName: statusMessage
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    syntax:
      content: 'statusMessage: string'
      return:
        type:
          - string
        description: ''
    package: '@azure/ms-rest-azure-env'
  - uid: '@azure/ms-rest-azure-env.http.ServerResponse.uncork'
    name: uncork()
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: function uncork()
      parameters: []
    package: '@azure/ms-rest-azure-env'
  - uid: '@azure/ms-rest-azure-env.http.ServerResponse.upgrading'
    name: upgrading
    fullName: upgrading
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    syntax:
      content: 'upgrading: boolean'
      return:
        type:
          - boolean
        description: ''
    package: '@azure/ms-rest-azure-env'
  - uid: '@azure/ms-rest-azure-env.http.ServerResponse.useChunkedEncodingByDefault'
    name: useChunkedEncodingByDefault
    fullName: useChunkedEncodingByDefault
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    syntax:
      content: 'useChunkedEncodingByDefault: boolean'
      return:
        type:
          - boolean
        description: ''
    package: '@azure/ms-rest-azure-env'
  - uid: '@azure/ms-rest-azure-env.http.ServerResponse.writable'
    name: writable
    fullName: writable
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    syntax:
      content: 'writable: boolean'
      return:
        type:
          - boolean
        description: ''
    package: '@azure/ms-rest-azure-env'
  - uid: '@azure/ms-rest-azure-env.http.ServerResponse.writableCorked'
    name: writableCorked
    fullName: writableCorked
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    syntax:
      content: 'writableCorked: number'
      return:
        type:
          - number
        description: ''
    package: '@azure/ms-rest-azure-env'
  - uid: '@azure/ms-rest-azure-env.http.ServerResponse.writableEnded'
    name: writableEnded
    fullName: writableEnded
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    syntax:
      content: 'writableEnded: boolean'
      return:
        type:
          - boolean
        description: ''
    package: '@azure/ms-rest-azure-env'
  - uid: '@azure/ms-rest-azure-env.http.ServerResponse.writableFinished'
    name: writableFinished
    fullName: writableFinished
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    syntax:
      content: 'writableFinished: boolean'
      return:
        type:
          - boolean
        description: ''
    package: '@azure/ms-rest-azure-env'
  - uid: '@azure/ms-rest-azure-env.http.ServerResponse.writableHighWaterMark'
    name: writableHighWaterMark
    fullName: writableHighWaterMark
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    syntax:
      content: 'writableHighWaterMark: number'
      return:
        type:
          - number
        description: ''
    package: '@azure/ms-rest-azure-env'
  - uid: '@azure/ms-rest-azure-env.http.ServerResponse.writableLength'
    name: writableLength
    fullName: writableLength
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    syntax:
      content: 'writableLength: number'
      return:
        type:
          - number
        description: ''
    package: '@azure/ms-rest-azure-env'
  - uid: '@azure/ms-rest-azure-env.http.ServerResponse.writableObjectMode'
    name: writableObjectMode
    fullName: writableObjectMode
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    syntax:
      content: 'writableObjectMode: boolean'
      return:
        type:
          - boolean
        description: ''
    package: '@azure/ms-rest-azure-env'
  - uid: '@azure/ms-rest-azure-env.http.ServerResponse.write_1'
    name: 'write(any, string, undefined | (error: Error | null | undefined) => void)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function write(chunk: any, encoding: string, cb?: undefined | (error:
        Error | null | undefined) => void)
      parameters:
        - id: chunk
          type:
            - any
          description: ''
        - id: encoding
          type:
            - string
          description: ''
        - id: cb
          type:
            - 'undefined | (error: Error | null | undefined) => void'
          description: ''
          optional: true
      return:
        type:
          - boolean
        description: ''
    package: '@azure/ms-rest-azure-env'
  - uid: '@azure/ms-rest-azure-env.http.ServerResponse.write'
    name: 'write(any, undefined | (error: Error | null | undefined) => void)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function write(chunk: any, cb?: undefined | (error: Error | null |
        undefined) => void)
      parameters:
        - id: chunk
          type:
            - any
          description: ''
        - id: cb
          type:
            - 'undefined | (error: Error | null | undefined) => void'
          description: ''
          optional: true
      return:
        type:
          - boolean
        description: ''
    package: '@azure/ms-rest-azure-env'
  - uid: '@azure/ms-rest-azure-env.http.ServerResponse.writeContinue'
    name: writeContinue(undefined | () => void)
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function writeContinue(callback?: undefined | () => void)'
      parameters:
        - id: callback
          type:
            - undefined | () => void
          description: ''
          optional: true
    package: '@azure/ms-rest-azure-env'
  - uid: '@azure/ms-rest-azure-env.http.ServerResponse.writeHead_1'
    name: 'writeHead(number, OutgoingHttpHeaders)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function writeHead(statusCode: number, headers?: OutgoingHttpHeaders)'
      parameters:
        - id: statusCode
          type:
            - number
          description: ''
        - id: headers
          type:
            - '@azure/ms-rest-azure-env.http.OutgoingHttpHeaders'
          description: ''
          optional: true
    package: '@azure/ms-rest-azure-env'
  - uid: '@azure/ms-rest-azure-env.http.ServerResponse.writeHead'
    name: 'writeHead(number, undefined | string, OutgoingHttpHeaders)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function writeHead(statusCode: number, reasonPhrase?: undefined |
        string, headers?: OutgoingHttpHeaders)
      parameters:
        - id: statusCode
          type:
            - number
          description: ''
        - id: reasonPhrase
          type:
            - undefined | string
          description: ''
          optional: true
        - id: headers
          type:
            - '@azure/ms-rest-azure-env.http.OutgoingHttpHeaders'
          description: ''
          optional: true
    package: '@azure/ms-rest-azure-env'
references:
  - uid: '@azure/ms-rest-azure-env.http.AgentOptions'
    name: AgentOptions
    spec.typeScript:
      - name: AgentOptions
        fullName: AgentOptions
        uid: '@azure/ms-rest-azure-env.http.AgentOptions'
  - uid: '@azure/ms-rest-azure-env.http.OutgoingMessage'
    name: OutgoingMessage
    spec.typeScript:
      - name: OutgoingMessage
        fullName: OutgoingMessage
        uid: '@azure/ms-rest-azure-env.http.OutgoingMessage'
  - uid: string | @azure/ms-rest-azure-env.url.URL | ClientRequestArgs
    name: URL | ClientRequestArgs
    spec.typeScript:
      - name: 'string | '
        fullName: 'string | '
      - name: URL
        fullName: URL
        uid: '@azure/ms-rest-azure-env.url.URL'
      - name: ' | ClientRequestArgs'
        fullName: ' | ClientRequestArgs'
  - uid: '@azure/ms-rest-azure-env.net.Socket'
    name: Socket
    spec.typeScript:
      - name: Socket
        fullName: Socket
        uid: '@azure/ms-rest-azure-env.net.Socket'
  - uid: '@azure/ms-rest-azure-env.stream.internal.Readable'
    name: Readable
    spec.typeScript:
      - name: Readable
        fullName: Readable
        uid: '@azure/ms-rest-azure-env.stream.internal.Readable'
  - uid: '@azure/ms-rest-azure-env.http.IncomingMessage'
    name: IncomingMessage
    spec.typeScript:
      - name: IncomingMessage
        fullName: IncomingMessage
        uid: '@azure/ms-rest-azure-env.http.IncomingMessage'
  - uid: '@azure/ms-rest-azure-env.Error'
    name: Error
    spec.typeScript:
      - name: Error
        fullName: Error
        uid: '@azure/ms-rest-azure-env.Error'
  - uid: '@azure/ms-rest-azure-env.NodeJS.WritableStream'
    name: WritableStream
    spec.typeScript:
      - name: WritableStream
        fullName: WritableStream
        uid: '@azure/ms-rest-azure-env.NodeJS.WritableStream'
  - uid: '@azure/ms-rest-azure-env.BufferEncoding'
    name: BufferEncoding
    spec.typeScript:
      - name: BufferEncoding
        fullName: BufferEncoding
        uid: '@azure/ms-rest-azure-env.BufferEncoding'
  - uid: '@azure/ms-rest-azure-env.stream.internal.ReadableOptions'
    name: ReadableOptions
    spec.typeScript:
      - name: ReadableOptions
        fullName: ReadableOptions
        uid: '@azure/ms-rest-azure-env.stream.internal.ReadableOptions'
  - uid: '@azure/ms-rest-azure-env.stream.internal.Writable'
    name: Writable
    spec.typeScript:
      - name: Writable
        fullName: Writable
        uid: '@azure/ms-rest-azure-env.stream.internal.Writable'
  - uid: '@azure/ms-rest-azure-env.net.Server'
    name: Server
    spec.typeScript:
      - name: Server
        fullName: Server
        uid: '@azure/ms-rest-azure-env.net.Server'
  - uid: '@azure/ms-rest-azure-env.net.AddressInfo | string | null'
    name: AddressInfo | string | null
    spec.typeScript:
      - name: AddressInfo
        fullName: AddressInfo
        uid: '@azure/ms-rest-azure-env.net.AddressInfo'
      - name: ' | string | null'
        fullName: ' | string | null'
  - uid: '@azure/ms-rest-azure-env.http.OutgoingHttpHeaders'
    name: OutgoingHttpHeaders
    spec.typeScript:
      - name: OutgoingHttpHeaders
        fullName: OutgoingHttpHeaders
        uid: '@azure/ms-rest-azure-env.http.OutgoingHttpHeaders'
  - uid: '@azure/ms-rest-azure-env.http.Agent | boolean'
    name: Agent | boolean
    spec.typeScript:
      - name: Agent
        fullName: Agent
        uid: '@azure/ms-rest-azure-env.http.Agent'
      - name: ' | boolean'
        fullName: ' | boolean'
  - uid: '@azure/ms-rest-azure-env.http.Server'
    name: Server
    spec.typeScript:
      - name: Server
        fullName: Server
        uid: '@azure/ms-rest-azure-env.http.Server'
  - uid: RequestOptions | string | @azure/ms-rest-azure-env.url.URL
    name: URL
    spec.typeScript:
      - name: 'RequestOptions | string | '
        fullName: 'RequestOptions | string | '
      - name: URL
        fullName: URL
        uid: '@azure/ms-rest-azure-env.url.URL'
  - uid: '@azure/ms-rest-azure-env.http.ClientRequest'
    name: ClientRequest
    spec.typeScript:
      - name: ClientRequest
        fullName: ClientRequest
        uid: '@azure/ms-rest-azure-env.http.ClientRequest'
