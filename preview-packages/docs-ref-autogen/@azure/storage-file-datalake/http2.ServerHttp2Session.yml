### YamlMime:UniversalReference
items:
  - uid: '@azure/abort-controller.http2.ServerHttp2Session'
    name: ServerHttp2Session
    fullName: ServerHttp2Session
    children:
      - '@azure/abort-controller.http2.ServerHttp2Session.addListener'
      - '@azure/abort-controller.http2.ServerHttp2Session.addListener_1'
      - '@azure/abort-controller.http2.ServerHttp2Session.addListener_2'
      - '@azure/abort-controller.http2.ServerHttp2Session.alpnProtocol'
      - '@azure/abort-controller.http2.ServerHttp2Session.altsvc'
      - '@azure/abort-controller.http2.ServerHttp2Session.close'
      - '@azure/abort-controller.http2.ServerHttp2Session.closed'
      - '@azure/abort-controller.http2.ServerHttp2Session.connecting'
      - '@azure/abort-controller.http2.ServerHttp2Session.destroy'
      - '@azure/abort-controller.http2.ServerHttp2Session.destroyed'
      - '@azure/abort-controller.http2.ServerHttp2Session.emit'
      - '@azure/abort-controller.http2.ServerHttp2Session.emit_1'
      - '@azure/abort-controller.http2.ServerHttp2Session.emit_2'
      - '@azure/abort-controller.http2.ServerHttp2Session.encrypted'
      - '@azure/abort-controller.http2.ServerHttp2Session.eventNames'
      - '@azure/abort-controller.http2.ServerHttp2Session.getMaxListeners'
      - '@azure/abort-controller.http2.ServerHttp2Session.goaway'
      - '@azure/abort-controller.http2.ServerHttp2Session.listenerCount'
      - '@azure/abort-controller.http2.ServerHttp2Session.listeners'
      - '@azure/abort-controller.http2.ServerHttp2Session.localSettings'
      - '@azure/abort-controller.http2.ServerHttp2Session.off'
      - '@azure/abort-controller.http2.ServerHttp2Session.on'
      - '@azure/abort-controller.http2.ServerHttp2Session.on_1'
      - '@azure/abort-controller.http2.ServerHttp2Session.on_2'
      - '@azure/abort-controller.http2.ServerHttp2Session.once'
      - '@azure/abort-controller.http2.ServerHttp2Session.once_1'
      - '@azure/abort-controller.http2.ServerHttp2Session.once_2'
      - '@azure/abort-controller.http2.ServerHttp2Session.origin'
      - '@azure/abort-controller.http2.ServerHttp2Session.originSet'
      - '@azure/abort-controller.http2.ServerHttp2Session.pendingSettingsAck'
      - '@azure/abort-controller.http2.ServerHttp2Session.ping'
      - '@azure/abort-controller.http2.ServerHttp2Session.ping_1'
      - '@azure/abort-controller.http2.ServerHttp2Session.prependListener'
      - '@azure/abort-controller.http2.ServerHttp2Session.prependListener_1'
      - '@azure/abort-controller.http2.ServerHttp2Session.prependListener_2'
      - '@azure/abort-controller.http2.ServerHttp2Session.prependOnceListener'
      - '@azure/abort-controller.http2.ServerHttp2Session.prependOnceListener_1'
      - '@azure/abort-controller.http2.ServerHttp2Session.prependOnceListener_2'
      - '@azure/abort-controller.http2.ServerHttp2Session.rawListeners'
      - '@azure/abort-controller.http2.ServerHttp2Session.ref'
      - '@azure/abort-controller.http2.ServerHttp2Session.remoteSettings'
      - '@azure/abort-controller.http2.ServerHttp2Session.removeAllListeners'
      - '@azure/abort-controller.http2.ServerHttp2Session.removeListener'
      - '@azure/abort-controller.http2.ServerHttp2Session.server'
      - '@azure/abort-controller.http2.ServerHttp2Session.setMaxListeners'
      - '@azure/abort-controller.http2.ServerHttp2Session.setTimeout'
      - '@azure/abort-controller.http2.ServerHttp2Session.settings'
      - '@azure/abort-controller.http2.ServerHttp2Session.socket'
      - '@azure/abort-controller.http2.ServerHttp2Session.state'
      - '@azure/abort-controller.http2.ServerHttp2Session.type'
      - '@azure/abort-controller.http2.ServerHttp2Session.unref'
    langs:
      - typeScript
    type: interface
    summary: ''
    extends:
      name: '@azure/abort-controller.http2.Http2Session'
    package: '@azure/abort-controller'
  - uid: '@azure/abort-controller.http2.ServerHttp2Session.addListener'
    name: >-
      addListener("connect", (session: ServerHttp2Session, socket: Socket |
      TLSSocket) => void)
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function addListener(event: "connect", listener: (session:
        ServerHttp2Session, socket: Socket | TLSSocket) => void)
      parameters:
        - id: event
          type:
            - '"connect"'
          description: ''
        - id: listener
          type:
            - '(session: ServerHttp2Session, socket: Socket | TLSSocket) => void'
          description: ''
      return:
        type:
          - this
        description: ''
    package: '@azure/abort-controller'
  - uid: '@azure/abort-controller.http2.ServerHttp2Session.addListener_1'
    name: >-
      addListener("stream", (stream: ServerHttp2Stream, headers:
      IncomingHttpHeaders, flags: number) => void)
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function addListener(event: "stream", listener: (stream:
        ServerHttp2Stream, headers: IncomingHttpHeaders, flags: number) => void)
      parameters:
        - id: event
          type:
            - '"stream"'
          description: ''
        - id: listener
          type:
            - >-
              (stream: ServerHttp2Stream, headers: IncomingHttpHeaders, flags:
              number) => void
          description: ''
      return:
        type:
          - this
        description: ''
    package: '@azure/abort-controller'
  - uid: '@azure/abort-controller.http2.ServerHttp2Session.addListener_2'
    name: 'addListener(string | symbol, (args: any[]) => void)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function addListener(event: string | symbol, listener: (args: any[]) =>
        void)
      parameters:
        - id: event
          type:
            - string | symbol
          description: ''
        - id: listener
          type:
            - '(args: any[]) => void'
          description: ''
      return:
        type:
          - this
        description: ''
    package: '@azure/abort-controller'
  - uid: '@azure/abort-controller.http2.ServerHttp2Session.alpnProtocol'
    name: alpnProtocol
    fullName: alpnProtocol
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    optional: true
    syntax:
      content: 'alpnProtocol?: undefined | string'
      return:
        type:
          - undefined | string
        description: ''
    package: '@azure/abort-controller'
  - uid: '@azure/abort-controller.http2.ServerHttp2Session.altsvc'
    name: 'altsvc(string, number | string | URL | AlternativeServiceOptions)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function altsvc(alt: string, originOrStream: number | string | URL |
        AlternativeServiceOptions)
      parameters:
        - id: alt
          type:
            - string
          description: ''
        - id: originOrStream
          type:
            - >-
              number | string | @azure/abort-controller.url.URL |
              @azure/abort-controller.http2.AlternativeServiceOptions
          description: ''
    package: '@azure/abort-controller'
  - uid: '@azure/abort-controller.http2.ServerHttp2Session.close'
    name: close(undefined | () => void)
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function close(callback?: undefined | () => void)'
      parameters:
        - id: callback
          type:
            - undefined | () => void
          description: ''
          optional: true
    package: '@azure/abort-controller'
  - uid: '@azure/abort-controller.http2.ServerHttp2Session.closed'
    name: closed
    fullName: closed
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    syntax:
      content: 'closed: boolean'
      return:
        type:
          - boolean
        description: ''
    package: '@azure/abort-controller'
  - uid: '@azure/abort-controller.http2.ServerHttp2Session.connecting'
    name: connecting
    fullName: connecting
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    syntax:
      content: 'connecting: boolean'
      return:
        type:
          - boolean
        description: ''
    package: '@azure/abort-controller'
  - uid: '@azure/abort-controller.http2.ServerHttp2Session.destroy'
    name: 'destroy(Error, undefined | number)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function destroy(error?: Error, code?: undefined | number)'
      parameters:
        - id: error
          type:
            - '@azure/abort-controller.AbortError.Error'
          description: ''
          optional: true
        - id: code
          type:
            - undefined | number
          description: ''
          optional: true
    package: '@azure/abort-controller'
  - uid: '@azure/abort-controller.http2.ServerHttp2Session.destroyed'
    name: destroyed
    fullName: destroyed
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    syntax:
      content: 'destroyed: boolean'
      return:
        type:
          - boolean
        description: ''
    package: '@azure/abort-controller'
  - uid: '@azure/abort-controller.http2.ServerHttp2Session.emit'
    name: 'emit("connect", ServerHttp2Session, Socket | TLSSocket)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function emit(event: "connect", session: ServerHttp2Session, socket:
        Socket | TLSSocket)
      parameters:
        - id: event
          type:
            - '"connect"'
          description: ''
        - id: session
          type:
            - '@azure/abort-controller.http2.ServerHttp2Session'
          description: ''
        - id: socket
          type:
            - >-
              @azure/abort-controller.net.Socket |
              @azure/abort-controller.tls.TLSSocket
          description: ''
      return:
        type:
          - boolean
        description: ''
    package: '@azure/abort-controller'
  - uid: '@azure/abort-controller.http2.ServerHttp2Session.emit_1'
    name: 'emit("stream", ServerHttp2Stream, IncomingHttpHeaders, number)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function emit(event: "stream", stream: ServerHttp2Stream, headers:
        IncomingHttpHeaders, flags: number)
      parameters:
        - id: event
          type:
            - '"stream"'
          description: ''
        - id: stream
          type:
            - '@azure/abort-controller.http2.ServerHttp2Stream'
          description: ''
        - id: headers
          type:
            - '@azure/abort-controller.http2.IncomingHttpHeaders'
          description: ''
        - id: flags
          type:
            - number
          description: ''
      return:
        type:
          - boolean
        description: ''
    package: '@azure/abort-controller'
  - uid: '@azure/abort-controller.http2.ServerHttp2Session.emit_2'
    name: 'emit(string | symbol, any[])'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function emit(event: string | symbol, args: any[])'
      parameters:
        - id: event
          type:
            - string | symbol
          description: ''
        - id: args
          type:
            - 'any[]'
          description: ''
      return:
        type:
          - boolean
        description: ''
    package: '@azure/abort-controller'
  - uid: '@azure/abort-controller.http2.ServerHttp2Session.encrypted'
    name: encrypted
    fullName: encrypted
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    optional: true
    syntax:
      content: 'encrypted?: undefined | false | true'
      return:
        type:
          - undefined | false | true
        description: ''
    package: '@azure/abort-controller'
  - uid: '@azure/abort-controller.http2.ServerHttp2Session.eventNames'
    name: eventNames()
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: function eventNames()
      parameters: []
      return:
        type:
          - Array<string | symbol>
        description: ''
    package: '@azure/abort-controller'
  - uid: '@azure/abort-controller.http2.ServerHttp2Session.getMaxListeners'
    name: getMaxListeners()
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: function getMaxListeners()
      parameters: []
      return:
        type:
          - number
        description: ''
    package: '@azure/abort-controller'
  - uid: '@azure/abort-controller.http2.ServerHttp2Session.goaway'
    name: 'goaway(undefined | number, undefined | number, NodeJS.ArrayBufferView)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function goaway(code?: undefined | number, lastStreamID?: undefined |
        number, opaqueData?: NodeJS.ArrayBufferView)
      parameters:
        - id: code
          type:
            - undefined | number
          description: ''
          optional: true
        - id: lastStreamID
          type:
            - undefined | number
          description: ''
          optional: true
        - id: opaqueData
          type:
            - '@azure/abort-controller.NodeJS.ArrayBufferView'
          description: ''
          optional: true
    package: '@azure/abort-controller'
  - uid: '@azure/abort-controller.http2.ServerHttp2Session.listenerCount'
    name: listenerCount(string | symbol)
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function listenerCount(type: string | symbol)'
      parameters:
        - id: type
          type:
            - string | symbol
          description: ''
      return:
        type:
          - number
        description: ''
    package: '@azure/abort-controller'
  - uid: '@azure/abort-controller.http2.ServerHttp2Session.listeners'
    name: listeners(string | symbol)
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function listeners(event: string | symbol)'
      parameters:
        - id: event
          type:
            - string | symbol
          description: ''
      return:
        type:
          - 'Function[]'
        description: ''
    package: '@azure/abort-controller'
  - uid: '@azure/abort-controller.http2.ServerHttp2Session.localSettings'
    name: localSettings
    fullName: localSettings
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    syntax:
      content: 'localSettings: Settings'
      return:
        type:
          - '@azure/abort-controller.http2.Settings'
        description: ''
    package: '@azure/abort-controller'
  - uid: '@azure/abort-controller.http2.ServerHttp2Session.off'
    name: 'off(string | symbol, (args: any[]) => void)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function off(event: string | symbol, listener: (args: any[]) => void)'
      parameters:
        - id: event
          type:
            - string | symbol
          description: ''
        - id: listener
          type:
            - '(args: any[]) => void'
          description: ''
      return:
        type:
          - this
        description: ''
    package: '@azure/abort-controller'
  - uid: '@azure/abort-controller.http2.ServerHttp2Session.on'
    name: >-
      on("connect", (session: ServerHttp2Session, socket: Socket | TLSSocket) =>
      void)
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function on(event: "connect", listener: (session: ServerHttp2Session,
        socket: Socket | TLSSocket) => void)
      parameters:
        - id: event
          type:
            - '"connect"'
          description: ''
        - id: listener
          type:
            - '(session: ServerHttp2Session, socket: Socket | TLSSocket) => void'
          description: ''
      return:
        type:
          - this
        description: ''
    package: '@azure/abort-controller'
  - uid: '@azure/abort-controller.http2.ServerHttp2Session.on_1'
    name: >-
      on("stream", (stream: ServerHttp2Stream, headers: IncomingHttpHeaders,
      flags: number) => void)
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function on(event: "stream", listener: (stream: ServerHttp2Stream,
        headers: IncomingHttpHeaders, flags: number) => void)
      parameters:
        - id: event
          type:
            - '"stream"'
          description: ''
        - id: listener
          type:
            - >-
              (stream: ServerHttp2Stream, headers: IncomingHttpHeaders, flags:
              number) => void
          description: ''
      return:
        type:
          - this
        description: ''
    package: '@azure/abort-controller'
  - uid: '@azure/abort-controller.http2.ServerHttp2Session.on_2'
    name: 'on(string | symbol, (args: any[]) => void)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function on(event: string | symbol, listener: (args: any[]) => void)'
      parameters:
        - id: event
          type:
            - string | symbol
          description: ''
        - id: listener
          type:
            - '(args: any[]) => void'
          description: ''
      return:
        type:
          - this
        description: ''
    package: '@azure/abort-controller'
  - uid: '@azure/abort-controller.http2.ServerHttp2Session.once'
    name: >-
      once("connect", (session: ServerHttp2Session, socket: Socket | TLSSocket)
      => void)
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function once(event: "connect", listener: (session: ServerHttp2Session,
        socket: Socket | TLSSocket) => void)
      parameters:
        - id: event
          type:
            - '"connect"'
          description: ''
        - id: listener
          type:
            - '(session: ServerHttp2Session, socket: Socket | TLSSocket) => void'
          description: ''
      return:
        type:
          - this
        description: ''
    package: '@azure/abort-controller'
  - uid: '@azure/abort-controller.http2.ServerHttp2Session.once_1'
    name: >-
      once("stream", (stream: ServerHttp2Stream, headers: IncomingHttpHeaders,
      flags: number) => void)
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function once(event: "stream", listener: (stream: ServerHttp2Stream,
        headers: IncomingHttpHeaders, flags: number) => void)
      parameters:
        - id: event
          type:
            - '"stream"'
          description: ''
        - id: listener
          type:
            - >-
              (stream: ServerHttp2Stream, headers: IncomingHttpHeaders, flags:
              number) => void
          description: ''
      return:
        type:
          - this
        description: ''
    package: '@azure/abort-controller'
  - uid: '@azure/abort-controller.http2.ServerHttp2Session.once_2'
    name: 'once(string | symbol, (args: any[]) => void)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function once(event: string | symbol, listener: (args: any[]) => void)'
      parameters:
        - id: event
          type:
            - string | symbol
          description: ''
        - id: listener
          type:
            - '(args: any[]) => void'
          description: ''
      return:
        type:
          - this
        description: ''
    package: '@azure/abort-controller'
  - uid: '@azure/abort-controller.http2.ServerHttp2Session.origin'
    name: origin(Array<string | URL | Object>)
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function origin(args: Array<string | URL | Object>)'
      parameters:
        - id: args
          type:
            - Array<string | @azure/abort-controller.url.URL | Object>
          description: ''
    package: '@azure/abort-controller'
  - uid: '@azure/abort-controller.http2.ServerHttp2Session.originSet'
    name: originSet
    fullName: originSet
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    optional: true
    syntax:
      content: 'originSet?: string[]'
      return:
        type:
          - 'string[]'
        description: ''
    package: '@azure/abort-controller'
  - uid: '@azure/abort-controller.http2.ServerHttp2Session.pendingSettingsAck'
    name: pendingSettingsAck
    fullName: pendingSettingsAck
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    syntax:
      content: 'pendingSettingsAck: boolean'
      return:
        type:
          - boolean
        description: ''
    package: '@azure/abort-controller'
  - uid: '@azure/abort-controller.http2.ServerHttp2Session.ping'
    name: 'ping((err: Error | null, duration: number, payload: Buffer) => void)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function ping(callback: (err: Error | null, duration: number, payload:
        Buffer) => void)
      parameters:
        - id: callback
          type:
            - '(err: Error | null, duration: number, payload: Buffer) => void'
          description: ''
      return:
        type:
          - boolean
        description: ''
    package: '@azure/abort-controller'
  - uid: '@azure/abort-controller.http2.ServerHttp2Session.ping_1'
    name: >-
      ping(NodeJS.ArrayBufferView, (err: Error | null, duration: number,
      payload: Buffer) => void)
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function ping(payload: NodeJS.ArrayBufferView, callback: (err: Error |
        null, duration: number, payload: Buffer) => void)
      parameters:
        - id: payload
          type:
            - '@azure/abort-controller.NodeJS.ArrayBufferView'
          description: ''
        - id: callback
          type:
            - '(err: Error | null, duration: number, payload: Buffer) => void'
          description: ''
      return:
        type:
          - boolean
        description: ''
    package: '@azure/abort-controller'
  - uid: '@azure/abort-controller.http2.ServerHttp2Session.prependListener'
    name: >-
      prependListener("connect", (session: ServerHttp2Session, socket: Socket |
      TLSSocket) => void)
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function prependListener(event: "connect", listener: (session:
        ServerHttp2Session, socket: Socket | TLSSocket) => void)
      parameters:
        - id: event
          type:
            - '"connect"'
          description: ''
        - id: listener
          type:
            - '(session: ServerHttp2Session, socket: Socket | TLSSocket) => void'
          description: ''
      return:
        type:
          - this
        description: ''
    package: '@azure/abort-controller'
  - uid: '@azure/abort-controller.http2.ServerHttp2Session.prependListener_1'
    name: >-
      prependListener("stream", (stream: ServerHttp2Stream, headers:
      IncomingHttpHeaders, flags: number) => void)
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function prependListener(event: "stream", listener: (stream:
        ServerHttp2Stream, headers: IncomingHttpHeaders, flags: number) => void)
      parameters:
        - id: event
          type:
            - '"stream"'
          description: ''
        - id: listener
          type:
            - >-
              (stream: ServerHttp2Stream, headers: IncomingHttpHeaders, flags:
              number) => void
          description: ''
      return:
        type:
          - this
        description: ''
    package: '@azure/abort-controller'
  - uid: '@azure/abort-controller.http2.ServerHttp2Session.prependListener_2'
    name: 'prependListener(string | symbol, (args: any[]) => void)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function prependListener(event: string | symbol, listener: (args: any[])
        => void)
      parameters:
        - id: event
          type:
            - string | symbol
          description: ''
        - id: listener
          type:
            - '(args: any[]) => void'
          description: ''
      return:
        type:
          - this
        description: ''
    package: '@azure/abort-controller'
  - uid: '@azure/abort-controller.http2.ServerHttp2Session.prependOnceListener'
    name: >-
      prependOnceListener("connect", (session: ServerHttp2Session, socket:
      Socket | TLSSocket) => void)
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function prependOnceListener(event: "connect", listener: (session:
        ServerHttp2Session, socket: Socket | TLSSocket) => void)
      parameters:
        - id: event
          type:
            - '"connect"'
          description: ''
        - id: listener
          type:
            - '(session: ServerHttp2Session, socket: Socket | TLSSocket) => void'
          description: ''
      return:
        type:
          - this
        description: ''
    package: '@azure/abort-controller'
  - uid: '@azure/abort-controller.http2.ServerHttp2Session.prependOnceListener_1'
    name: >-
      prependOnceListener("stream", (stream: ServerHttp2Stream, headers:
      IncomingHttpHeaders, flags: number) => void)
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function prependOnceListener(event: "stream", listener: (stream:
        ServerHttp2Stream, headers: IncomingHttpHeaders, flags: number) => void)
      parameters:
        - id: event
          type:
            - '"stream"'
          description: ''
        - id: listener
          type:
            - >-
              (stream: ServerHttp2Stream, headers: IncomingHttpHeaders, flags:
              number) => void
          description: ''
      return:
        type:
          - this
        description: ''
    package: '@azure/abort-controller'
  - uid: '@azure/abort-controller.http2.ServerHttp2Session.prependOnceListener_2'
    name: 'prependOnceListener(string | symbol, (args: any[]) => void)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function prependOnceListener(event: string | symbol, listener: (args:
        any[]) => void)
      parameters:
        - id: event
          type:
            - string | symbol
          description: ''
        - id: listener
          type:
            - '(args: any[]) => void'
          description: ''
      return:
        type:
          - this
        description: ''
    package: '@azure/abort-controller'
  - uid: '@azure/abort-controller.http2.ServerHttp2Session.rawListeners'
    name: rawListeners(string | symbol)
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function rawListeners(event: string | symbol)'
      parameters:
        - id: event
          type:
            - string | symbol
          description: ''
      return:
        type:
          - 'Function[]'
        description: ''
    package: '@azure/abort-controller'
  - uid: '@azure/abort-controller.http2.ServerHttp2Session.ref'
    name: ref()
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: function ref()
      parameters: []
    package: '@azure/abort-controller'
  - uid: '@azure/abort-controller.http2.ServerHttp2Session.remoteSettings'
    name: remoteSettings
    fullName: remoteSettings
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    syntax:
      content: 'remoteSettings: Settings'
      return:
        type:
          - '@azure/abort-controller.http2.Settings'
        description: ''
    package: '@azure/abort-controller'
  - uid: '@azure/abort-controller.http2.ServerHttp2Session.removeAllListeners'
    name: removeAllListeners(string | symbol)
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function removeAllListeners(event?: string | symbol)'
      parameters:
        - id: event
          type:
            - string | symbol
          description: ''
          optional: true
      return:
        type:
          - this
        description: ''
    package: '@azure/abort-controller'
  - uid: '@azure/abort-controller.http2.ServerHttp2Session.removeListener'
    name: 'removeListener(string | symbol, (args: any[]) => void)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function removeListener(event: string | symbol, listener: (args: any[])
        => void)
      parameters:
        - id: event
          type:
            - string | symbol
          description: ''
        - id: listener
          type:
            - '(args: any[]) => void'
          description: ''
      return:
        type:
          - this
        description: ''
    package: '@azure/abort-controller'
  - uid: '@azure/abort-controller.http2.ServerHttp2Session.server'
    name: server
    fullName: server
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    syntax:
      content: 'server: Http2Server | Http2SecureServer'
      return:
        type:
          - >-
            @azure/abort-controller.http2.Http2Server |
            @azure/abort-controller.http2.Http2SecureServer
        description: ''
    package: '@azure/abort-controller'
  - uid: '@azure/abort-controller.http2.ServerHttp2Session.setMaxListeners'
    name: setMaxListeners(number)
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function setMaxListeners(n: number)'
      parameters:
        - id: 'n'
          type:
            - number
          description: ''
      return:
        type:
          - this
        description: ''
    package: '@azure/abort-controller'
  - uid: '@azure/abort-controller.http2.ServerHttp2Session.setTimeout'
    name: 'setTimeout(number, undefined | () => void)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function setTimeout(msecs: number, callback?: undefined | () => void)'
      parameters:
        - id: msecs
          type:
            - number
          description: ''
        - id: callback
          type:
            - undefined | () => void
          description: ''
          optional: true
    package: '@azure/abort-controller'
  - uid: '@azure/abort-controller.http2.ServerHttp2Session.settings'
    name: settings(Settings)
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function settings(settings: Settings)'
      parameters:
        - id: settings
          type:
            - '@azure/abort-controller.http2.Settings'
          description: ''
    package: '@azure/abort-controller'
  - uid: '@azure/abort-controller.http2.ServerHttp2Session.socket'
    name: socket
    fullName: socket
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    syntax:
      content: 'socket: Socket | TLSSocket'
      return:
        type:
          - >-
            @azure/abort-controller.net.Socket |
            @azure/abort-controller.tls.TLSSocket
        description: ''
    package: '@azure/abort-controller'
  - uid: '@azure/abort-controller.http2.ServerHttp2Session.state'
    name: state
    fullName: state
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    syntax:
      content: 'state: SessionState'
      return:
        type:
          - '@azure/abort-controller.http2.SessionState'
        description: ''
    package: '@azure/abort-controller'
  - uid: '@azure/abort-controller.http2.ServerHttp2Session.type'
    name: type
    fullName: type
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    syntax:
      content: 'type: number'
      return:
        type:
          - number
        description: ''
    package: '@azure/abort-controller'
  - uid: '@azure/abort-controller.http2.ServerHttp2Session.unref'
    name: unref()
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: function unref()
      parameters: []
    package: '@azure/abort-controller'
references:
  - uid: '@azure/abort-controller.stream.internal.Readable'
    name: Readable
    spec.typeScript:
      - name: Readable
        fullName: Readable
        uid: '@azure/abort-controller.stream.internal.Readable'
  - uid: '@azure/abort-controller.http2.ServerHttp2Stream'
    name: ServerHttp2Stream
    spec.typeScript:
      - name: ServerHttp2Stream
        fullName: ServerHttp2Stream
        uid: '@azure/abort-controller.http2.ServerHttp2Stream'
  - uid: '@azure/abort-controller.http2.IncomingHttpHeaders'
    name: IncomingHttpHeaders
    spec.typeScript:
      - name: IncomingHttpHeaders
        fullName: IncomingHttpHeaders
        uid: '@azure/abort-controller.http2.IncomingHttpHeaders'
  - uid: '@azure/abort-controller.net.Socket | @azure/abort-controller.tls.TLSSocket'
    name: TLSSocket
    spec.typeScript:
      - name: Socket
        fullName: Socket
        uid: '@azure/abort-controller.net.Socket'
      - name: ' | '
        fullName: ' | '
      - name: TLSSocket
        fullName: TLSSocket
        uid: '@azure/abort-controller.tls.TLSSocket'
  - uid: '@azure/abort-controller.AbortError.Error'
    name: Error
    spec.typeScript:
      - name: Error
        fullName: Error
        uid: '@azure/abort-controller.AbortError.Error'
  - uid: '@azure/abort-controller.NodeJS.WritableStream'
    name: WritableStream
    spec.typeScript:
      - name: WritableStream
        fullName: WritableStream
        uid: '@azure/abort-controller.NodeJS.WritableStream'
  - uid: '@azure/abort-controller.BufferEncoding'
    name: BufferEncoding
    spec.typeScript:
      - name: BufferEncoding
        fullName: BufferEncoding
        uid: '@azure/abort-controller.BufferEncoding'
  - uid: '@azure/abort-controller.NodeJS.ReadableStream'
    name: ReadableStream
    spec.typeScript:
      - name: ReadableStream
        fullName: ReadableStream
        uid: '@azure/abort-controller.NodeJS.ReadableStream'
  - uid: '@azure/abort-controller.stream.internal.ReadableOptions'
    name: ReadableOptions
    spec.typeScript:
      - name: ReadableOptions
        fullName: ReadableOptions
        uid: '@azure/abort-controller.stream.internal.ReadableOptions'
  - uid: '@azure/abort-controller.stream.internal.Stream'
    name: Stream
    spec.typeScript:
      - name: Stream
        fullName: Stream
        uid: '@azure/abort-controller.stream.internal.Stream'
  - uid: '@azure/abort-controller.http.OutgoingHttpHeaders'
    name: OutgoingHttpHeaders
    spec.typeScript:
      - name: OutgoingHttpHeaders
        fullName: OutgoingHttpHeaders
        uid: '@azure/abort-controller.http.OutgoingHttpHeaders'
  - uid: number | string | @azure/abort-controller.url.URL
    name: URL
    spec.typeScript:
      - name: 'number | string | '
        fullName: 'number | string | '
      - name: URL
        fullName: URL
        uid: '@azure/abort-controller.url.URL'
  - uid: '@azure/abort-controller.http2.Http2Session'
    name: Http2Session
    spec.typeScript:
      - name: Http2Session
        fullName: Http2Session
        uid: '@azure/abort-controller.http2.Http2Session'
  - uid: '@azure/abort-controller.http2.Settings'
    name: Settings
    spec.typeScript:
      - name: Settings
        fullName: Settings
        uid: '@azure/abort-controller.http2.Settings'
  - uid: '@azure/abort-controller.http2.SessionState'
    name: SessionState
    spec.typeScript:
      - name: SessionState
        fullName: SessionState
        uid: '@azure/abort-controller.http2.SessionState'
  - uid: '@azure/abort-controller.http2.ClientHttp2Session'
    name: ClientHttp2Session
    spec.typeScript:
      - name: ClientHttp2Session
        fullName: ClientHttp2Session
        uid: '@azure/abort-controller.http2.ClientHttp2Session'
  - uid: '@azure/abort-controller.http2.ClientHttp2Stream'
    name: ClientHttp2Stream
    spec.typeScript:
      - name: ClientHttp2Stream
        fullName: ClientHttp2Stream
        uid: '@azure/abort-controller.http2.ClientHttp2Stream'
  - uid: >-
      @azure/abort-controller.http2.IncomingHttpHeaders &
      @azure/abort-controller.http2.IncomingHttpStatusHeader
    name: IncomingHttpStatusHeader
    spec.typeScript:
      - name: IncomingHttpHeaders
        fullName: IncomingHttpHeaders
        uid: '@azure/abort-controller.http2.IncomingHttpHeaders'
      - name: ' & '
        fullName: ' & '
      - name: IncomingHttpStatusHeader
        fullName: IncomingHttpStatusHeader
        uid: '@azure/abort-controller.http2.IncomingHttpStatusHeader'
  - uid: '@azure/abort-controller.NodeJS.ArrayBufferView'
    name: ArrayBufferView
    spec.typeScript:
      - name: ArrayBufferView
        fullName: ArrayBufferView
        uid: '@azure/abort-controller.NodeJS.ArrayBufferView'
  - uid: '@azure/abort-controller.http2.ClientSessionRequestOptions'
    name: ClientSessionRequestOptions
    spec.typeScript:
      - name: ClientSessionRequestOptions
        fullName: ClientSessionRequestOptions
        uid: '@azure/abort-controller.http2.ClientSessionRequestOptions'
  - uid: '@azure/abort-controller.http2.Http2Stream'
    name: Http2Stream
    spec.typeScript:
      - name: Http2Stream
        fullName: Http2Stream
        uid: '@azure/abort-controller.http2.Http2Stream'
  - uid: '@azure/abort-controller.stream.internal.DuplexOptions'
    name: DuplexOptions
    spec.typeScript:
      - name: DuplexOptions
        fullName: DuplexOptions
        uid: '@azure/abort-controller.stream.internal.DuplexOptions'
  - uid: '@azure/abort-controller.http.OutgoingHttpHeaders[]'
    name: 'OutgoingHttpHeaders[]'
    spec.typeScript:
      - name: OutgoingHttpHeaders
        fullName: OutgoingHttpHeaders
        uid: '@azure/abort-controller.http.OutgoingHttpHeaders'
      - name: '[]'
        fullName: '[]'
  - uid: '@azure/abort-controller.http2.StreamState'
    name: StreamState
    spec.typeScript:
      - name: StreamState
        fullName: StreamState
        uid: '@azure/abort-controller.http2.StreamState'
  - uid: '@azure/abort-controller.http2.StreamPriorityOptions'
    name: StreamPriorityOptions
    spec.typeScript:
      - name: StreamPriorityOptions
        fullName: StreamPriorityOptions
        uid: '@azure/abort-controller.http2.StreamPriorityOptions'
  - uid: '@azure/abort-controller.http2.SessionOptions'
    name: SessionOptions
    spec.typeScript:
      - name: SessionOptions
        fullName: SessionOptions
        uid: '@azure/abort-controller.http2.SessionOptions'
  - uid: '@azure/abort-controller.tls.Server'
    name: Server
    spec.typeScript:
      - name: Server
        fullName: Server
        uid: '@azure/abort-controller.tls.Server'
  - uid: '@azure/abort-controller.tls.SecureContextOptions'
    name: SecureContextOptions
    spec.typeScript:
      - name: SecureContextOptions
        fullName: SecureContextOptions
        uid: '@azure/abort-controller.tls.SecureContextOptions'
  - uid: '@azure/abort-controller.net.AddressInfo | string | null'
    name: AddressInfo | string | null
    spec.typeScript:
      - name: AddressInfo
        fullName: AddressInfo
        uid: '@azure/abort-controller.net.AddressInfo'
      - name: ' | string | null'
        fullName: ' | string | null'
  - uid: '@azure/abort-controller.http2.Http2ServerRequest'
    name: Http2ServerRequest
    spec.typeScript:
      - name: Http2ServerRequest
        fullName: Http2ServerRequest
        uid: '@azure/abort-controller.http2.Http2ServerRequest'
  - uid: '@azure/abort-controller.http2.Http2ServerResponse'
    name: Http2ServerResponse
    spec.typeScript:
      - name: Http2ServerResponse
        fullName: Http2ServerResponse
        uid: '@azure/abort-controller.http2.Http2ServerResponse'
  - uid: '@azure/abort-controller.http2.ServerHttp2Session'
    name: ServerHttp2Session
    spec.typeScript:
      - name: ServerHttp2Session
        fullName: ServerHttp2Session
        uid: '@azure/abort-controller.http2.ServerHttp2Session'
  - uid: '@azure/abort-controller.tls.TLSSocket'
    name: TLSSocket
    spec.typeScript:
      - name: TLSSocket
        fullName: TLSSocket
        uid: '@azure/abort-controller.tls.TLSSocket'
  - uid: '@azure/abort-controller.net.ListenOptions'
    name: ListenOptions
    spec.typeScript:
      - name: ListenOptions
        fullName: ListenOptions
        uid: '@azure/abort-controller.net.ListenOptions'
  - uid: '@azure/abort-controller.net.Server'
    name: Server
    spec.typeScript:
      - name: Server
        fullName: Server
        uid: '@azure/abort-controller.net.Server'
  - uid: '@azure/abort-controller.events.EventEmitter.EventEmitter'
    name: EventEmitter
    spec.typeScript:
      - name: EventEmitter
        fullName: EventEmitter
        uid: '@azure/abort-controller.events.EventEmitter.EventEmitter'
  - uid: '@azure/abort-controller.events.EventEmitterOptions'
    name: EventEmitterOptions
    spec.typeScript:
      - name: EventEmitterOptions
        fullName: EventEmitterOptions
        uid: '@azure/abort-controller.events.EventEmitterOptions'
  - uid: '@azure/abort-controller.stream.internal.Duplex'
    name: Duplex
    spec.typeScript:
      - name: Duplex
        fullName: Duplex
        uid: '@azure/abort-controller.stream.internal.Duplex'
  - uid: '@azure/abort-controller.http.IncomingHttpHeaders'
    name: IncomingHttpHeaders
    spec.typeScript:
      - name: IncomingHttpHeaders
        fullName: IncomingHttpHeaders
        uid: '@azure/abort-controller.http.IncomingHttpHeaders'
  - uid: '@azure/abort-controller.http2.ClientSessionOptions'
    name: ClientSessionOptions
    spec.typeScript:
      - name: ClientSessionOptions
        fullName: ClientSessionOptions
        uid: '@azure/abort-controller.http2.ClientSessionOptions'
  - uid: undefined | @azure/abort-controller.tls.checkServerIdentity
    name: checkServerIdentity
    spec.typeScript:
      - name: 'undefined | '
        fullName: 'undefined | '
      - name: checkServerIdentity
        fullName: checkServerIdentity
        uid: '@azure/abort-controller.tls.checkServerIdentity'
  - uid: string | Buffer | Array<Buffer | @azure/abort-controller.tls.KeyObject>
    name: KeyObject>
    spec.typeScript:
      - name: 'string | Buffer | Array<Buffer | '
        fullName: 'string | Buffer | Array<Buffer | '
      - name: KeyObject
        fullName: KeyObject
        uid: '@azure/abort-controller.tls.KeyObject'
      - name: '>'
        fullName: '>'
  - uid: '@azure/abort-controller.tls.SecureVersion'
    name: SecureVersion
    spec.typeScript:
      - name: SecureVersion
        fullName: SecureVersion
        uid: '@azure/abort-controller.tls.SecureVersion'
  - uid: >-
      string | Buffer | Array<string | Buffer |
      @azure/abort-controller.tls.PxfObject>
    name: PxfObject>
    spec.typeScript:
      - name: 'string | Buffer | Array<string | Buffer | '
        fullName: 'string | Buffer | Array<string | Buffer | '
      - name: PxfObject
        fullName: PxfObject
        uid: '@azure/abort-controller.tls.PxfObject'
      - name: '>'
        fullName: '>'
  - uid: '@azure/abort-controller.tls.SecureContext'
    name: SecureContext
    spec.typeScript:
      - name: SecureContext
        fullName: SecureContext
        uid: '@azure/abort-controller.tls.SecureContext'
  - uid: '@azure/abort-controller.Buffer'
    name: Buffer
    spec.typeScript:
      - name: Buffer
        fullName: Buffer
        uid: '@azure/abort-controller.Buffer'
  - uid: '@azure/abort-controller.tls.PSKCallbackNegotation | null'
    name: PSKCallbackNegotation | null
    spec.typeScript:
      - name: PSKCallbackNegotation
        fullName: PSKCallbackNegotation
        uid: '@azure/abort-controller.tls.PSKCallbackNegotation'
      - name: ' | null'
        fullName: ' | null'
  - uid: '@azure/abort-controller.http2.SecureServerSessionOptions'
    name: SecureServerSessionOptions
    spec.typeScript:
      - name: SecureServerSessionOptions
        fullName: SecureServerSessionOptions
        uid: '@azure/abort-controller.http2.SecureServerSessionOptions'
  - uid: undefined | @azure/abort-controller.http.IncomingMessage
    name: IncomingMessage
    spec.typeScript:
      - name: 'undefined | '
        fullName: 'undefined | '
      - name: IncomingMessage
        fullName: IncomingMessage
        uid: '@azure/abort-controller.http.IncomingMessage'
  - uid: undefined | @azure/abort-controller.http.ServerResponse
    name: ServerResponse
    spec.typeScript:
      - name: 'undefined | '
        fullName: 'undefined | '
      - name: ServerResponse
        fullName: ServerResponse
        uid: '@azure/abort-controller.http.ServerResponse'
  - uid: undefined | @azure/abort-controller.http2.Http2ServerRequest
    name: Http2ServerRequest
    spec.typeScript:
      - name: 'undefined | '
        fullName: 'undefined | '
      - name: Http2ServerRequest
        fullName: Http2ServerRequest
        uid: '@azure/abort-controller.http2.Http2ServerRequest'
  - uid: undefined | @azure/abort-controller.http2.Http2ServerResponse
    name: Http2ServerResponse
    spec.typeScript:
      - name: 'undefined | '
        fullName: 'undefined | '
      - name: Http2ServerResponse
        fullName: Http2ServerResponse
        uid: '@azure/abort-controller.http2.Http2ServerResponse'
  - uid: '@azure/abort-controller.url.URL'
    name: URL
    spec.typeScript:
      - name: URL
        fullName: URL
        uid: '@azure/abort-controller.url.URL'
  - uid: DataView | @azure/abort-controller.NodeJS.TypedArray | null
    name: TypedArray | null
    spec.typeScript:
      - name: 'DataView | '
        fullName: 'DataView | '
      - name: TypedArray
        fullName: TypedArray
        uid: '@azure/abort-controller.NodeJS.TypedArray'
      - name: ' | null'
        fullName: ' | null'
  - uid: '@azure/abort-controller.http2.ServerSessionOptions'
    name: ServerSessionOptions
    spec.typeScript:
      - name: ServerSessionOptions
        fullName: ServerSessionOptions
        uid: '@azure/abort-controller.http2.ServerSessionOptions'
  - uid: >-
      @azure/abort-controller.http2.Http2Server |
      @azure/abort-controller.http2.Http2SecureServer
    name: Http2SecureServer
    spec.typeScript:
      - name: Http2Server
        fullName: Http2Server
        uid: '@azure/abort-controller.http2.Http2Server'
      - name: ' | '
        fullName: ' | '
      - name: Http2SecureServer
        fullName: Http2SecureServer
        uid: '@azure/abort-controller.http2.Http2SecureServer'
  - uid: >-
      number | string | @azure/abort-controller.url.URL |
      @azure/abort-controller.http2.AlternativeServiceOptions
    name: AlternativeServiceOptions
    spec.typeScript:
      - name: 'number | string | '
        fullName: 'number | string | '
      - name: URL
        fullName: URL
        uid: '@azure/abort-controller.url.URL'
      - name: ' | '
        fullName: ' | '
      - name: AlternativeServiceOptions
        fullName: AlternativeServiceOptions
        uid: '@azure/abort-controller.http2.AlternativeServiceOptions'
  - uid: Array<string | @azure/abort-controller.url.URL | Object>
    name: URL | Object>
    spec.typeScript:
      - name: 'Array<string | '
        fullName: 'Array<string | '
      - name: URL
        fullName: URL
        uid: '@azure/abort-controller.url.URL'
      - name: ' | Object>'
        fullName: ' | Object>'
  - uid: '@azure/abort-controller.http2.ServerStreamResponseOptions'
    name: ServerStreamResponseOptions
    spec.typeScript:
      - name: ServerStreamResponseOptions
        fullName: ServerStreamResponseOptions
        uid: '@azure/abort-controller.http2.ServerStreamResponseOptions'
  - uid: number | @azure/abort-controller.fs.promises.FileHandle
    name: FileHandle
    spec.typeScript:
      - name: 'number | '
        fullName: 'number | '
      - name: FileHandle
        fullName: FileHandle
        uid: '@azure/abort-controller.fs.promises.FileHandle'
  - uid: '@azure/abort-controller.http2.ServerStreamFileResponseOptions'
    name: ServerStreamFileResponseOptions
    spec.typeScript:
      - name: ServerStreamFileResponseOptions
        fullName: ServerStreamFileResponseOptions
        uid: '@azure/abort-controller.http2.ServerStreamFileResponseOptions'
  - uid: '@azure/abort-controller.http2.ServerStreamFileResponseOptionsWithError'
    name: ServerStreamFileResponseOptionsWithError
    spec.typeScript:
      - name: ServerStreamFileResponseOptionsWithError
        fullName: ServerStreamFileResponseOptionsWithError
        uid: '@azure/abort-controller.http2.ServerStreamFileResponseOptionsWithError'
  - uid: '@azure/abort-controller.fs.Stats'
    name: Stats
    spec.typeScript:
      - name: Stats
        fullName: Stats
        uid: '@azure/abort-controller.fs.Stats'
  - uid: '@azure/abort-controller.http2.StatOptions'
    name: StatOptions
    spec.typeScript:
      - name: StatOptions
        fullName: StatOptions
        uid: '@azure/abort-controller.http2.StatOptions'
  - uid: '@azure/abort-controller.NodeJS.ErrnoException'
    name: ErrnoException
    spec.typeScript:
      - name: ErrnoException
        fullName: ErrnoException
        uid: '@azure/abort-controller.NodeJS.ErrnoException'
  - uid: string | @azure/abort-controller.url.URL
    name: URL
    spec.typeScript:
      - name: 'string | '
        fullName: 'string | '
      - name: URL
        fullName: URL
        uid: '@azure/abort-controller.url.URL'
  - uid: >-
      @azure/abort-controller.http2.ClientSessionOptions |
      @azure/abort-controller.http2.SecureClientSessionOptions
    name: SecureClientSessionOptions
    spec.typeScript:
      - name: ClientSessionOptions
        fullName: ClientSessionOptions
        uid: '@azure/abort-controller.http2.ClientSessionOptions'
      - name: ' | '
        fullName: ' | '
      - name: SecureClientSessionOptions
        fullName: SecureClientSessionOptions
        uid: '@azure/abort-controller.http2.SecureClientSessionOptions'
  - uid: '@azure/abort-controller.http2.Http2SecureServer'
    name: Http2SecureServer
    spec.typeScript:
      - name: Http2SecureServer
        fullName: Http2SecureServer
        uid: '@azure/abort-controller.http2.Http2SecureServer'
  - uid: '@azure/abort-controller.http2.SecureServerOptions'
    name: SecureServerOptions
    spec.typeScript:
      - name: SecureServerOptions
        fullName: SecureServerOptions
        uid: '@azure/abort-controller.http2.SecureServerOptions'
  - uid: '@azure/abort-controller.http2.Http2Server'
    name: Http2Server
    spec.typeScript:
      - name: Http2Server
        fullName: Http2Server
        uid: '@azure/abort-controller.http2.Http2Server'
  - uid: '@azure/abort-controller.http2.ServerOptions'
    name: ServerOptions
    spec.typeScript:
      - name: ServerOptions
        fullName: ServerOptions
        uid: '@azure/abort-controller.http2.ServerOptions'
