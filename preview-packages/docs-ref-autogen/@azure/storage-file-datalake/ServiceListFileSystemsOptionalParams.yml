### YamlMime:UniversalReference
items:
  - uid: '@azure/storage-file-datalake.ServiceListFileSystemsOptionalParams'
    name: ServiceListFileSystemsOptionalParams
    fullName: ServiceListFileSystemsOptionalParams
    children:
      - >-
        @azure/storage-file-datalake.ServiceListFileSystemsOptionalParams.abortSignal
      - >-
        @azure/storage-file-datalake.ServiceListFileSystemsOptionalParams.continuation
      - >-
        @azure/storage-file-datalake.ServiceListFileSystemsOptionalParams.customHeaders
      - >-
        @azure/storage-file-datalake.ServiceListFileSystemsOptionalParams.maxResults
      - >-
        @azure/storage-file-datalake.ServiceListFileSystemsOptionalParams.onDownloadProgress
      - >-
        @azure/storage-file-datalake.ServiceListFileSystemsOptionalParams.onUploadProgress
      - '@azure/storage-file-datalake.ServiceListFileSystemsOptionalParams.prefix'
      - >-
        @azure/storage-file-datalake.ServiceListFileSystemsOptionalParams.requestId
      - >-
        @azure/storage-file-datalake.ServiceListFileSystemsOptionalParams.spanOptions
      - >-
        @azure/storage-file-datalake.ServiceListFileSystemsOptionalParams.timeout
      - >-
        @azure/storage-file-datalake.ServiceListFileSystemsOptionalParams.timeoutParameter
    langs:
      - typeScript
    type: interface
    summary: Optional Parameters.
    extends:
      name: RequestOptionsBase
    package: '@azure/storage-file-datalake'
  - uid: >-
      @azure/storage-file-datalake.ServiceListFileSystemsOptionalParams.abortSignal
    name: abortSignal
    fullName: abortSignal
    children: []
    langs:
      - typeScript
    type: property
    summary: The signal which can be used to abort requests.
    optional: true
    syntax:
      content: 'abortSignal?: AbortSignalLike'
      return:
        type:
          - AbortSignalLike
        description: ''
    package: '@azure/storage-file-datalake'
  - uid: >-
      @azure/storage-file-datalake.ServiceListFileSystemsOptionalParams.continuation
    name: continuation
    fullName: continuation
    children: []
    langs:
      - typeScript
    type: property
    summary: >-
      Optional.  When deleting a directory, the number of paths that are deleted
      with each

      invocation is limited.  If the number of paths to be deleted exceeds this
      limit, a

      continuation token is returned in this response header.  When a
      continuation token is returned

      in the response, it must be specified in a subsequent invocation of the
      delete operation to

      continue deleting the directory.
    optional: true
    syntax:
      content: 'continuation?: undefined | string'
      return:
        type:
          - undefined | string
        description: ''
    package: '@azure/storage-file-datalake'
  - uid: >-
      @azure/storage-file-datalake.ServiceListFileSystemsOptionalParams.customHeaders
    name: customHeaders
    fullName: customHeaders
    children: []
    langs:
      - typeScript
    type: property
    summary: |-
      {object} [customHeaders] User defined custom request headers that
      will be applied before the request is sent.
    optional: true
    syntax:
      content: 'customHeaders?: undefined | [key: string]: string'
      return:
        type:
          - 'undefined | [key: string]: string'
        description: ''
    package: '@azure/storage-file-datalake'
  - uid: >-
      @azure/storage-file-datalake.ServiceListFileSystemsOptionalParams.maxResults
    name: maxResults
    fullName: maxResults
    children: []
    langs:
      - typeScript
    type: property
    summary: >-
      An optional value that specifies the maximum number of items to return. If
      omitted or greater

      than 5,000, the response will include up to 5,000 items.
    optional: true
    syntax:
      content: 'maxResults?: undefined | number'
      return:
        type:
          - undefined | number
        description: ''
    package: '@azure/storage-file-datalake'
  - uid: >-
      @azure/storage-file-datalake.ServiceListFileSystemsOptionalParams.onDownloadProgress
    name: onDownloadProgress
    fullName: onDownloadProgress
    children: []
    langs:
      - typeScript
    type: property
    summary: Callback which fires upon download progress.
    optional: true
    syntax:
      content: >-
        onDownloadProgress?: undefined | (progress: TransferProgressEvent) =>
        void
      return:
        type:
          - 'undefined | (progress: TransferProgressEvent) => void'
        description: ''
    package: '@azure/storage-file-datalake'
  - uid: >-
      @azure/storage-file-datalake.ServiceListFileSystemsOptionalParams.onUploadProgress
    name: onUploadProgress
    fullName: onUploadProgress
    children: []
    langs:
      - typeScript
    type: property
    summary: Callback which fires upon upload progress.
    optional: true
    syntax:
      content: 'onUploadProgress?: undefined | (progress: TransferProgressEvent) => void'
      return:
        type:
          - 'undefined | (progress: TransferProgressEvent) => void'
        description: ''
    package: '@azure/storage-file-datalake'
  - uid: '@azure/storage-file-datalake.ServiceListFileSystemsOptionalParams.prefix'
    name: prefix
    fullName: prefix
    children: []
    langs:
      - typeScript
    type: property
    summary: Filters results to filesystems within the specified prefix.
    optional: true
    syntax:
      content: 'prefix?: undefined | string'
      return:
        type:
          - undefined | string
        description: ''
    package: '@azure/storage-file-datalake'
  - uid: >-
      @azure/storage-file-datalake.ServiceListFileSystemsOptionalParams.requestId
    name: requestId
    fullName: requestId
    children: []
    langs:
      - typeScript
    type: property
    summary: >-
      Provides a client-generated, opaque value with a 1 KB character limit that
      is recorded in the

      analytics logs when storage analytics logging is enabled.
    optional: true
    syntax:
      content: 'requestId?: undefined | string'
      return:
        type:
          - undefined | string
        description: ''
    package: '@azure/storage-file-datalake'
  - uid: >-
      @azure/storage-file-datalake.ServiceListFileSystemsOptionalParams.spanOptions
    name: spanOptions
    fullName: spanOptions
    children: []
    langs:
      - typeScript
    type: property
    summary: Options used to create a span when tracing is enabled.
    optional: true
    syntax:
      content: 'spanOptions?: SpanOptions'
      return:
        type:
          - SpanOptions
        description: ''
    package: '@azure/storage-file-datalake'
  - uid: '@azure/storage-file-datalake.ServiceListFileSystemsOptionalParams.timeout'
    name: timeout
    fullName: timeout
    children: []
    langs:
      - typeScript
    type: property
    summary: >-
      The number of milliseconds a request can take before automatically being
      terminated.
    optional: true
    syntax:
      content: 'timeout?: undefined | number'
      return:
        type:
          - undefined | number
        description: ''
    package: '@azure/storage-file-datalake'
  - uid: >-
      @azure/storage-file-datalake.ServiceListFileSystemsOptionalParams.timeoutParameter
    name: timeoutParameter
    fullName: timeoutParameter
    children: []
    langs:
      - typeScript
    type: property
    summary: >-
      The timeout parameter is expressed in seconds. For more information, see
      <a

      href="https://docs.microsoft.com/en-us/rest/api/storageservices/fileservices/setting-timeouts-for-blob-service-operations">Setting

      Timeouts for Blob Service Operations.</a>
    optional: true
    syntax:
      content: 'timeoutParameter?: undefined | number'
      return:
        type:
          - undefined | number
        description: ''
    package: '@azure/storage-file-datalake'
