### YamlMime:UniversalReference
items:
  - uid: '@azure/ms-rest-azure-env.NodeBuffer'
    name: NodeBuffer
    fullName: NodeBuffer
    children:
      - '@azure/ms-rest-azure-env.NodeBuffer.buffer'
      - '@azure/ms-rest-azure-env.NodeBuffer.byteLength'
      - '@azure/ms-rest-azure-env.NodeBuffer.byteOffset'
      - '@azure/ms-rest-azure-env.NodeBuffer.BYTES_PER_ELEMENT'
      - '@azure/ms-rest-azure-env.NodeBuffer.compare'
      - '@azure/ms-rest-azure-env.NodeBuffer.copy'
      - '@azure/ms-rest-azure-env.NodeBuffer.copyWithin'
      - '@azure/ms-rest-azure-env.NodeBuffer.entries'
      - '@azure/ms-rest-azure-env.NodeBuffer.equals'
      - '@azure/ms-rest-azure-env.NodeBuffer.every'
      - '@azure/ms-rest-azure-env.NodeBuffer.fill'
      - '@azure/ms-rest-azure-env.NodeBuffer.filter'
      - '@azure/ms-rest-azure-env.NodeBuffer.find'
      - '@azure/ms-rest-azure-env.NodeBuffer.findIndex'
      - '@azure/ms-rest-azure-env.NodeBuffer.forEach'
      - '@azure/ms-rest-azure-env.NodeBuffer.includes'
      - '@azure/ms-rest-azure-env.NodeBuffer.indexOf'
      - '@azure/ms-rest-azure-env.NodeBuffer.join'
      - '@azure/ms-rest-azure-env.NodeBuffer.keys'
      - '@azure/ms-rest-azure-env.NodeBuffer.lastIndexOf'
      - '@azure/ms-rest-azure-env.NodeBuffer.length'
      - '@azure/ms-rest-azure-env.NodeBuffer.map'
      - '@azure/ms-rest-azure-env.NodeBuffer.readDoubleBE'
      - '@azure/ms-rest-azure-env.NodeBuffer.readDoubleLE'
      - '@azure/ms-rest-azure-env.NodeBuffer.readFloatBE'
      - '@azure/ms-rest-azure-env.NodeBuffer.readFloatLE'
      - '@azure/ms-rest-azure-env.NodeBuffer.readInt16BE'
      - '@azure/ms-rest-azure-env.NodeBuffer.readInt16LE'
      - '@azure/ms-rest-azure-env.NodeBuffer.readInt32BE'
      - '@azure/ms-rest-azure-env.NodeBuffer.readInt32LE'
      - '@azure/ms-rest-azure-env.NodeBuffer.readInt8'
      - '@azure/ms-rest-azure-env.NodeBuffer.readIntBE'
      - '@azure/ms-rest-azure-env.NodeBuffer.readIntLE'
      - '@azure/ms-rest-azure-env.NodeBuffer.readUInt16BE'
      - '@azure/ms-rest-azure-env.NodeBuffer.readUInt16LE'
      - '@azure/ms-rest-azure-env.NodeBuffer.readUInt32BE'
      - '@azure/ms-rest-azure-env.NodeBuffer.readUInt32LE'
      - '@azure/ms-rest-azure-env.NodeBuffer.readUInt8'
      - '@azure/ms-rest-azure-env.NodeBuffer.readUIntBE'
      - '@azure/ms-rest-azure-env.NodeBuffer.readUIntLE'
      - '@azure/ms-rest-azure-env.NodeBuffer.reduce'
      - '@azure/ms-rest-azure-env.NodeBuffer.reduce_1'
      - '@azure/ms-rest-azure-env.NodeBuffer.reduce_2'
      - '@azure/ms-rest-azure-env.NodeBuffer.reduceRight'
      - '@azure/ms-rest-azure-env.NodeBuffer.reduceRight_1'
      - '@azure/ms-rest-azure-env.NodeBuffer.reduceRight_2'
      - '@azure/ms-rest-azure-env.NodeBuffer.reverse'
      - '@azure/ms-rest-azure-env.NodeBuffer.set'
      - '@azure/ms-rest-azure-env.NodeBuffer.slice'
      - '@azure/ms-rest-azure-env.NodeBuffer.some'
      - '@azure/ms-rest-azure-env.NodeBuffer.sort'
      - '@azure/ms-rest-azure-env.NodeBuffer.subarray'
      - '@azure/ms-rest-azure-env.NodeBuffer.swap16'
      - '@azure/ms-rest-azure-env.NodeBuffer.swap32'
      - '@azure/ms-rest-azure-env.NodeBuffer.swap64'
      - '@azure/ms-rest-azure-env.NodeBuffer.toJSON'
      - '@azure/ms-rest-azure-env.NodeBuffer.toLocaleString'
      - '@azure/ms-rest-azure-env.NodeBuffer.toString'
      - '@azure/ms-rest-azure-env.NodeBuffer.Uint8Array'
      - '@azure/ms-rest-azure-env.NodeBuffer.values'
      - '@azure/ms-rest-azure-env.NodeBuffer.write'
      - '@azure/ms-rest-azure-env.NodeBuffer.writeDoubleBE'
      - '@azure/ms-rest-azure-env.NodeBuffer.writeDoubleLE'
      - '@azure/ms-rest-azure-env.NodeBuffer.writeFloatBE'
      - '@azure/ms-rest-azure-env.NodeBuffer.writeFloatLE'
      - '@azure/ms-rest-azure-env.NodeBuffer.writeInt16BE'
      - '@azure/ms-rest-azure-env.NodeBuffer.writeInt16LE'
      - '@azure/ms-rest-azure-env.NodeBuffer.writeInt32BE'
      - '@azure/ms-rest-azure-env.NodeBuffer.writeInt32LE'
      - '@azure/ms-rest-azure-env.NodeBuffer.writeInt8'
      - '@azure/ms-rest-azure-env.NodeBuffer.writeIntBE'
      - '@azure/ms-rest-azure-env.NodeBuffer.writeIntLE'
      - '@azure/ms-rest-azure-env.NodeBuffer.writeUInt16BE'
      - '@azure/ms-rest-azure-env.NodeBuffer.writeUInt16LE'
      - '@azure/ms-rest-azure-env.NodeBuffer.writeUInt32BE'
      - '@azure/ms-rest-azure-env.NodeBuffer.writeUInt32LE'
      - '@azure/ms-rest-azure-env.NodeBuffer.writeUInt8'
      - '@azure/ms-rest-azure-env.NodeBuffer.writeUIntBE'
      - '@azure/ms-rest-azure-env.NodeBuffer.writeUIntLE'
    langs:
      - typeScript
    type: interface
    summary: ''
    extends:
      name: Uint8Array
    package: '@azure/ms-rest-azure-env'
    deprecated:
      content: ''
  - uid: '@azure/ms-rest-azure-env.NodeBuffer.buffer'
    name: buffer
    fullName: buffer
    children: []
    langs:
      - typeScript
    type: property
    summary: The ArrayBuffer instance referenced by the array.
    syntax:
      content: 'buffer: ArrayBufferLike'
      return:
        type:
          - ArrayBufferLike
        description: ''
    package: '@azure/ms-rest-azure-env'
  - uid: '@azure/ms-rest-azure-env.NodeBuffer.byteLength'
    name: byteLength
    fullName: byteLength
    children: []
    langs:
      - typeScript
    type: property
    summary: The length in bytes of the array.
    syntax:
      content: 'byteLength: number'
      return:
        type:
          - number
        description: ''
    package: '@azure/ms-rest-azure-env'
  - uid: '@azure/ms-rest-azure-env.NodeBuffer.byteOffset'
    name: byteOffset
    fullName: byteOffset
    children: []
    langs:
      - typeScript
    type: property
    summary: The offset in bytes of the array.
    syntax:
      content: 'byteOffset: number'
      return:
        type:
          - number
        description: ''
    package: '@azure/ms-rest-azure-env'
  - uid: '@azure/ms-rest-azure-env.NodeBuffer.BYTES_PER_ELEMENT'
    name: BYTES_PER_ELEMENT
    fullName: BYTES_PER_ELEMENT
    children: []
    langs:
      - typeScript
    type: property
    summary: The size in bytes of each element in the array.
    syntax:
      content: 'BYTES_PER_ELEMENT: number'
      return:
        type:
          - number
        description: ''
    package: '@azure/ms-rest-azure-env'
  - uid: '@azure/ms-rest-azure-env.NodeBuffer.compare'
    name: >-
      compare(Buffer, undefined | number, undefined | number, undefined |
      number, undefined | number)
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function compare(otherBuffer: Buffer, targetStart?: undefined | number,
        targetEnd?: undefined | number, sourceStart?: undefined | number,
        sourceEnd?: undefined | number)
      parameters:
        - id: otherBuffer
          type:
            - Buffer
          description: ''
        - id: targetStart
          type:
            - undefined | number
          description: ''
          optional: true
        - id: targetEnd
          type:
            - undefined | number
          description: ''
          optional: true
        - id: sourceStart
          type:
            - undefined | number
          description: ''
          optional: true
        - id: sourceEnd
          type:
            - undefined | number
          description: ''
          optional: true
      return:
        type:
          - number
        description: ''
    package: '@azure/ms-rest-azure-env'
  - uid: '@azure/ms-rest-azure-env.NodeBuffer.copy'
    name: 'copy(Buffer, undefined | number, undefined | number, undefined | number)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function copy(targetBuffer: Buffer, targetStart?: undefined | number,
        sourceStart?: undefined | number, sourceEnd?: undefined | number)
      parameters:
        - id: targetBuffer
          type:
            - Buffer
          description: ''
        - id: targetStart
          type:
            - undefined | number
          description: ''
          optional: true
        - id: sourceStart
          type:
            - undefined | number
          description: ''
          optional: true
        - id: sourceEnd
          type:
            - undefined | number
          description: ''
          optional: true
      return:
        type:
          - number
        description: ''
    package: '@azure/ms-rest-azure-env'
  - uid: '@azure/ms-rest-azure-env.NodeBuffer.copyWithin'
    name: 'copyWithin(number, number, undefined | number)'
    children: []
    type: method
    langs:
      - typeScript
    summary: >-
      Returns the this object after copying a section of the array identified by
      start and end

      to the same array starting at position target
    syntax:
      content: >-
        function copyWithin(target: number, start: number, end?: undefined |
        number)
      parameters:
        - id: target
          type:
            - number
          description: >-
            If target is negative, it is treated as length+target where length
            is the

            length of the array.
        - id: start
          type:
            - number
          description: >-
            If start is negative, it is treated as length+start. If end is
            negative, it

            is treated as length+end.
        - id: end
          type:
            - undefined | number
          description: >
            If not specified, length of the this object is used as its default
            value.
          optional: true
      return:
        type:
          - this
        description: ''
    package: '@azure/ms-rest-azure-env'
  - uid: '@azure/ms-rest-azure-env.NodeBuffer.entries'
    name: entries()
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: function entries()
      parameters: []
      return:
        type:
          - IterableIterator<Object>
        description: ''
    package: '@azure/ms-rest-azure-env'
  - uid: '@azure/ms-rest-azure-env.NodeBuffer.equals'
    name: equals(Buffer)
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function equals(otherBuffer: Buffer)'
      parameters:
        - id: otherBuffer
          type:
            - Buffer
          description: ''
      return:
        type:
          - boolean
        description: ''
    package: '@azure/ms-rest-azure-env'
  - uid: '@azure/ms-rest-azure-env.NodeBuffer.every'
    name: 'every((value: number, index: number, array: Uint8Array) => boolean, any)'
    children: []
    type: method
    langs:
      - typeScript
    summary: Determines whether all the members of an array satisfy the specified test.
    syntax:
      content: >-
        function every(callbackfn: (value: number, index: number, array:
        Uint8Array) => boolean, thisArg?: any)
      parameters:
        - id: callbackfn
          type:
            - '(value: number, index: number, array: Uint8Array) => boolean'
          description: >-
            A function that accepts up to three arguments. The every method
            calls

            the callbackfn function for each element in array1 until the
            callbackfn returns false,

            or until the end of the array.
        - id: thisArg
          type:
            - any
          description: >
            An object to which the this keyword can refer in the callbackfn
            function.

            If thisArg is omitted, undefined is used as the this value.
          optional: true
      return:
        type:
          - boolean
        description: ''
    package: '@azure/ms-rest-azure-env'
  - uid: '@azure/ms-rest-azure-env.NodeBuffer.fill'
    name: 'fill(any, undefined | number, undefined | number)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function fill(value: any, offset?: undefined | number, end?: undefined |
        number)
      parameters:
        - id: value
          type:
            - any
          description: ''
        - id: offset
          type:
            - undefined | number
          description: ''
          optional: true
        - id: end
          type:
            - undefined | number
          description: ''
          optional: true
      return:
        type:
          - this
        description: ''
    package: '@azure/ms-rest-azure-env'
  - uid: '@azure/ms-rest-azure-env.NodeBuffer.filter'
    name: 'filter((value: number, index: number, array: Uint8Array) => any, any)'
    children: []
    type: method
    langs:
      - typeScript
    summary: >-
      Returns the elements of an array that meet the condition specified in a
      callback function.
    syntax:
      content: >-
        function filter(callbackfn: (value: number, index: number, array:
        Uint8Array) => any, thisArg?: any)
      parameters:
        - id: callbackfn
          type:
            - '(value: number, index: number, array: Uint8Array) => any'
          description: >-
            A function that accepts up to three arguments. The filter method
            calls

            the callbackfn function one time for each element in the array.
        - id: thisArg
          type:
            - any
          description: >
            An object to which the this keyword can refer in the callbackfn
            function.

            If thisArg is omitted, undefined is used as the this value.
          optional: true
      return:
        type:
          - Uint8Array
        description: ''
    package: '@azure/ms-rest-azure-env'
  - uid: '@azure/ms-rest-azure-env.NodeBuffer.find'
    name: 'find((value: number, index: number, obj: Uint8Array) => boolean, any)'
    children: []
    type: method
    langs:
      - typeScript
    summary: >-
      Returns the value of the first element in the array where predicate is
      true, and undefined

      otherwise.
    syntax:
      content: >-
        function find(predicate: (value: number, index: number, obj: Uint8Array)
        => boolean, thisArg?: any)
      parameters:
        - id: predicate
          type:
            - '(value: number, index: number, obj: Uint8Array) => boolean'
          description: >-
            find calls predicate once for each element of the array, in
            ascending

            order, until it finds one where predicate returns true. If such an
            element is found, find

            immediately returns that element value. Otherwise, find returns
            undefined.
        - id: thisArg
          type:
            - any
          description: >
            If provided, it will be used as the this value for each invocation
            of

            predicate. If it is not provided, undefined is used instead.
          optional: true
      return:
        type:
          - number | undefined
        description: ''
    package: '@azure/ms-rest-azure-env'
  - uid: '@azure/ms-rest-azure-env.NodeBuffer.findIndex'
    name: 'findIndex((value: number, index: number, obj: Uint8Array) => boolean, any)'
    children: []
    type: method
    langs:
      - typeScript
    summary: >-
      Returns the index of the first element in the array where predicate is
      true, and -1

      otherwise.
    syntax:
      content: >-
        function findIndex(predicate: (value: number, index: number, obj:
        Uint8Array) => boolean, thisArg?: any)
      parameters:
        - id: predicate
          type:
            - '(value: number, index: number, obj: Uint8Array) => boolean'
          description: >-
            find calls predicate once for each element of the array, in
            ascending

            order, until it finds one where predicate returns true. If such an
            element is found,

            findIndex immediately returns that element index. Otherwise,
            findIndex returns -1.
        - id: thisArg
          type:
            - any
          description: >
            If provided, it will be used as the this value for each invocation
            of

            predicate. If it is not provided, undefined is used instead.
          optional: true
      return:
        type:
          - number
        description: ''
    package: '@azure/ms-rest-azure-env'
  - uid: '@azure/ms-rest-azure-env.NodeBuffer.forEach'
    name: 'forEach((value: number, index: number, array: Uint8Array) => void, any)'
    children: []
    type: method
    langs:
      - typeScript
    summary: Performs the specified action for each element in an array.
    syntax:
      content: >-
        function forEach(callbackfn: (value: number, index: number, array:
        Uint8Array) => void, thisArg?: any)
      parameters:
        - id: callbackfn
          type:
            - '(value: number, index: number, array: Uint8Array) => void'
          description: |-
            A function that accepts up to three arguments. forEach calls the
            callbackfn function one time for each element in the array.
        - id: thisArg
          type:
            - any
          description: >
            An object to which the this keyword can refer in the callbackfn
            function.

            If thisArg is omitted, undefined is used as the this value.
          optional: true
    package: '@azure/ms-rest-azure-env'
  - uid: '@azure/ms-rest-azure-env.NodeBuffer.includes'
    name: 'includes(string | number | Buffer, undefined | number, undefined | string)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function includes(value: string | number | Buffer, byteOffset?:
        undefined | number, encoding?: undefined | string)
      parameters:
        - id: value
          type:
            - string | number | Buffer
          description: ''
        - id: byteOffset
          type:
            - undefined | number
          description: ''
          optional: true
        - id: encoding
          type:
            - undefined | string
          description: ''
          optional: true
      return:
        type:
          - boolean
        description: ''
    package: '@azure/ms-rest-azure-env'
  - uid: '@azure/ms-rest-azure-env.NodeBuffer.indexOf'
    name: 'indexOf(string | number | Buffer, undefined | number, undefined | string)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function indexOf(value: string | number | Buffer, byteOffset?: undefined
        | number, encoding?: undefined | string)
      parameters:
        - id: value
          type:
            - string | number | Buffer
          description: ''
        - id: byteOffset
          type:
            - undefined | number
          description: ''
          optional: true
        - id: encoding
          type:
            - undefined | string
          description: ''
          optional: true
      return:
        type:
          - number
        description: ''
    package: '@azure/ms-rest-azure-env'
  - uid: '@azure/ms-rest-azure-env.NodeBuffer.join'
    name: join(undefined | string)
    children: []
    type: method
    langs:
      - typeScript
    summary: >-
      Adds all the elements of an array separated by the specified separator
      string.
    syntax:
      content: 'function join(separator?: undefined | string)'
      parameters:
        - id: separator
          type:
            - undefined | string
          description: >
            A string used to separate one element of an array from the next in
            the

            resulting String. If omitted, the array elements are separated with
            a comma.
          optional: true
      return:
        type:
          - string
        description: ''
    package: '@azure/ms-rest-azure-env'
  - uid: '@azure/ms-rest-azure-env.NodeBuffer.keys'
    name: keys()
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: function keys()
      parameters: []
      return:
        type:
          - IterableIterator<number>
        description: ''
    package: '@azure/ms-rest-azure-env'
  - uid: '@azure/ms-rest-azure-env.NodeBuffer.lastIndexOf'
    name: >-
      lastIndexOf(string | number | Buffer, undefined | number, undefined |
      string)
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function lastIndexOf(value: string | number | Buffer, byteOffset?:
        undefined | number, encoding?: undefined | string)
      parameters:
        - id: value
          type:
            - string | number | Buffer
          description: ''
        - id: byteOffset
          type:
            - undefined | number
          description: ''
          optional: true
        - id: encoding
          type:
            - undefined | string
          description: ''
          optional: true
      return:
        type:
          - number
        description: ''
    package: '@azure/ms-rest-azure-env'
  - uid: '@azure/ms-rest-azure-env.NodeBuffer.length'
    name: length
    fullName: length
    children: []
    langs:
      - typeScript
    type: property
    summary: The length of the array.
    syntax:
      content: 'length: number'
      return:
        type:
          - number
        description: ''
    package: '@azure/ms-rest-azure-env'
  - uid: '@azure/ms-rest-azure-env.NodeBuffer.map'
    name: 'map((value: number, index: number, array: Uint8Array) => number, any)'
    children: []
    type: method
    langs:
      - typeScript
    summary: >-
      Calls a defined callback function on each element of an array, and returns
      an array that

      contains the results.
    syntax:
      content: >-
        function map(callbackfn: (value: number, index: number, array:
        Uint8Array) => number, thisArg?: any)
      parameters:
        - id: callbackfn
          type:
            - '(value: number, index: number, array: Uint8Array) => number'
          description: >-
            A function that accepts up to three arguments. The map method calls
            the

            callbackfn function one time for each element in the array.
        - id: thisArg
          type:
            - any
          description: >
            An object to which the this keyword can refer in the callbackfn
            function.

            If thisArg is omitted, undefined is used as the this value.
          optional: true
      return:
        type:
          - Uint8Array
        description: ''
    package: '@azure/ms-rest-azure-env'
  - uid: '@azure/ms-rest-azure-env.NodeBuffer.readDoubleBE'
    name: 'readDoubleBE(number, undefined | false | true)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function readDoubleBE(offset: number, noAssert?: undefined | false |
        true)
      parameters:
        - id: offset
          type:
            - number
          description: ''
        - id: noAssert
          type:
            - undefined | false | true
          description: ''
          optional: true
      return:
        type:
          - number
        description: ''
    package: '@azure/ms-rest-azure-env'
  - uid: '@azure/ms-rest-azure-env.NodeBuffer.readDoubleLE'
    name: 'readDoubleLE(number, undefined | false | true)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function readDoubleLE(offset: number, noAssert?: undefined | false |
        true)
      parameters:
        - id: offset
          type:
            - number
          description: ''
        - id: noAssert
          type:
            - undefined | false | true
          description: ''
          optional: true
      return:
        type:
          - number
        description: ''
    package: '@azure/ms-rest-azure-env'
  - uid: '@azure/ms-rest-azure-env.NodeBuffer.readFloatBE'
    name: 'readFloatBE(number, undefined | false | true)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function readFloatBE(offset: number, noAssert?: undefined | false |
        true)
      parameters:
        - id: offset
          type:
            - number
          description: ''
        - id: noAssert
          type:
            - undefined | false | true
          description: ''
          optional: true
      return:
        type:
          - number
        description: ''
    package: '@azure/ms-rest-azure-env'
  - uid: '@azure/ms-rest-azure-env.NodeBuffer.readFloatLE'
    name: 'readFloatLE(number, undefined | false | true)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function readFloatLE(offset: number, noAssert?: undefined | false |
        true)
      parameters:
        - id: offset
          type:
            - number
          description: ''
        - id: noAssert
          type:
            - undefined | false | true
          description: ''
          optional: true
      return:
        type:
          - number
        description: ''
    package: '@azure/ms-rest-azure-env'
  - uid: '@azure/ms-rest-azure-env.NodeBuffer.readInt16BE'
    name: 'readInt16BE(number, undefined | false | true)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function readInt16BE(offset: number, noAssert?: undefined | false |
        true)
      parameters:
        - id: offset
          type:
            - number
          description: ''
        - id: noAssert
          type:
            - undefined | false | true
          description: ''
          optional: true
      return:
        type:
          - number
        description: ''
    package: '@azure/ms-rest-azure-env'
  - uid: '@azure/ms-rest-azure-env.NodeBuffer.readInt16LE'
    name: 'readInt16LE(number, undefined | false | true)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function readInt16LE(offset: number, noAssert?: undefined | false |
        true)
      parameters:
        - id: offset
          type:
            - number
          description: ''
        - id: noAssert
          type:
            - undefined | false | true
          description: ''
          optional: true
      return:
        type:
          - number
        description: ''
    package: '@azure/ms-rest-azure-env'
  - uid: '@azure/ms-rest-azure-env.NodeBuffer.readInt32BE'
    name: 'readInt32BE(number, undefined | false | true)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function readInt32BE(offset: number, noAssert?: undefined | false |
        true)
      parameters:
        - id: offset
          type:
            - number
          description: ''
        - id: noAssert
          type:
            - undefined | false | true
          description: ''
          optional: true
      return:
        type:
          - number
        description: ''
    package: '@azure/ms-rest-azure-env'
  - uid: '@azure/ms-rest-azure-env.NodeBuffer.readInt32LE'
    name: 'readInt32LE(number, undefined | false | true)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function readInt32LE(offset: number, noAssert?: undefined | false |
        true)
      parameters:
        - id: offset
          type:
            - number
          description: ''
        - id: noAssert
          type:
            - undefined | false | true
          description: ''
          optional: true
      return:
        type:
          - number
        description: ''
    package: '@azure/ms-rest-azure-env'
  - uid: '@azure/ms-rest-azure-env.NodeBuffer.readInt8'
    name: 'readInt8(number, undefined | false | true)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function readInt8(offset: number, noAssert?: undefined | false | true)'
      parameters:
        - id: offset
          type:
            - number
          description: ''
        - id: noAssert
          type:
            - undefined | false | true
          description: ''
          optional: true
      return:
        type:
          - number
        description: ''
    package: '@azure/ms-rest-azure-env'
  - uid: '@azure/ms-rest-azure-env.NodeBuffer.readIntBE'
    name: 'readIntBE(number, number, undefined | false | true)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function readIntBE(offset: number, byteLength: number, noAssert?:
        undefined | false | true)
      parameters:
        - id: offset
          type:
            - number
          description: ''
        - id: byteLength
          type:
            - number
          description: ''
        - id: noAssert
          type:
            - undefined | false | true
          description: ''
          optional: true
      return:
        type:
          - number
        description: ''
    package: '@azure/ms-rest-azure-env'
  - uid: '@azure/ms-rest-azure-env.NodeBuffer.readIntLE'
    name: 'readIntLE(number, number, undefined | false | true)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function readIntLE(offset: number, byteLength: number, noAssert?:
        undefined | false | true)
      parameters:
        - id: offset
          type:
            - number
          description: ''
        - id: byteLength
          type:
            - number
          description: ''
        - id: noAssert
          type:
            - undefined | false | true
          description: ''
          optional: true
      return:
        type:
          - number
        description: ''
    package: '@azure/ms-rest-azure-env'
  - uid: '@azure/ms-rest-azure-env.NodeBuffer.readUInt16BE'
    name: 'readUInt16BE(number, undefined | false | true)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function readUInt16BE(offset: number, noAssert?: undefined | false |
        true)
      parameters:
        - id: offset
          type:
            - number
          description: ''
        - id: noAssert
          type:
            - undefined | false | true
          description: ''
          optional: true
      return:
        type:
          - number
        description: ''
    package: '@azure/ms-rest-azure-env'
  - uid: '@azure/ms-rest-azure-env.NodeBuffer.readUInt16LE'
    name: 'readUInt16LE(number, undefined | false | true)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function readUInt16LE(offset: number, noAssert?: undefined | false |
        true)
      parameters:
        - id: offset
          type:
            - number
          description: ''
        - id: noAssert
          type:
            - undefined | false | true
          description: ''
          optional: true
      return:
        type:
          - number
        description: ''
    package: '@azure/ms-rest-azure-env'
  - uid: '@azure/ms-rest-azure-env.NodeBuffer.readUInt32BE'
    name: 'readUInt32BE(number, undefined | false | true)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function readUInt32BE(offset: number, noAssert?: undefined | false |
        true)
      parameters:
        - id: offset
          type:
            - number
          description: ''
        - id: noAssert
          type:
            - undefined | false | true
          description: ''
          optional: true
      return:
        type:
          - number
        description: ''
    package: '@azure/ms-rest-azure-env'
  - uid: '@azure/ms-rest-azure-env.NodeBuffer.readUInt32LE'
    name: 'readUInt32LE(number, undefined | false | true)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function readUInt32LE(offset: number, noAssert?: undefined | false |
        true)
      parameters:
        - id: offset
          type:
            - number
          description: ''
        - id: noAssert
          type:
            - undefined | false | true
          description: ''
          optional: true
      return:
        type:
          - number
        description: ''
    package: '@azure/ms-rest-azure-env'
  - uid: '@azure/ms-rest-azure-env.NodeBuffer.readUInt8'
    name: 'readUInt8(number, undefined | false | true)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function readUInt8(offset: number, noAssert?: undefined | false | true)'
      parameters:
        - id: offset
          type:
            - number
          description: ''
        - id: noAssert
          type:
            - undefined | false | true
          description: ''
          optional: true
      return:
        type:
          - number
        description: ''
    package: '@azure/ms-rest-azure-env'
  - uid: '@azure/ms-rest-azure-env.NodeBuffer.readUIntBE'
    name: 'readUIntBE(number, number, undefined | false | true)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function readUIntBE(offset: number, byteLength: number, noAssert?:
        undefined | false | true)
      parameters:
        - id: offset
          type:
            - number
          description: ''
        - id: byteLength
          type:
            - number
          description: ''
        - id: noAssert
          type:
            - undefined | false | true
          description: ''
          optional: true
      return:
        type:
          - number
        description: ''
    package: '@azure/ms-rest-azure-env'
  - uid: '@azure/ms-rest-azure-env.NodeBuffer.readUIntLE'
    name: 'readUIntLE(number, number, undefined | false | true)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function readUIntLE(offset: number, byteLength: number, noAssert?:
        undefined | false | true)
      parameters:
        - id: offset
          type:
            - number
          description: ''
        - id: byteLength
          type:
            - number
          description: ''
        - id: noAssert
          type:
            - undefined | false | true
          description: ''
          optional: true
      return:
        type:
          - number
        description: ''
    package: '@azure/ms-rest-azure-env'
  - uid: '@azure/ms-rest-azure-env.NodeBuffer.reduce'
    name: >-
      reduce((previousValue: number, currentValue: number, currentIndex: number,
      array: Uint8Array) => number)
    children: []
    type: method
    langs:
      - typeScript
    summary: >-
      Calls the specified callback function for all the elements in an array.
      The return value of

      the callback function is the accumulated result, and is provided as an
      argument in the next

      call to the callback function.
    syntax:
      content: >-
        function reduce(callbackfn: (previousValue: number, currentValue:
        number, currentIndex: number, array: Uint8Array) => number)
      parameters:
        - id: callbackfn
          type:
            - >-
              (previousValue: number, currentValue: number, currentIndex:
              number, array: Uint8Array) => number
          description: >-
            A function that accepts up to four arguments. The reduce method
            calls the

            callbackfn function one time for each element in the array.
      return:
        type:
          - number
        description: ''
    package: '@azure/ms-rest-azure-env'
  - uid: '@azure/ms-rest-azure-env.NodeBuffer.reduce_1'
    name: >-
      reduce((previousValue: number, currentValue: number, currentIndex: number,
      array: Uint8Array) => number, number)
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function reduce(callbackfn: (previousValue: number, currentValue:
        number, currentIndex: number, array: Uint8Array) => number,
        initialValue: number)
      parameters:
        - id: callbackfn
          type:
            - >-
              (previousValue: number, currentValue: number, currentIndex:
              number, array: Uint8Array) => number
          description: ''
        - id: initialValue
          type:
            - number
          description: ''
      return:
        type:
          - number
        description: ''
    package: '@azure/ms-rest-azure-env'
  - uid: '@azure/ms-rest-azure-env.NodeBuffer.reduce_2'
    name: >-
      reduce((previousValue: U, currentValue: number, currentIndex: number,
      array: Uint8Array) => U, U)
    children: []
    type: method
    langs:
      - typeScript
    summary: >-
      Calls the specified callback function for all the elements in an array.
      The return value of

      the callback function is the accumulated result, and is provided as an
      argument in the next

      call to the callback function.
    syntax:
      content: >-
        function reduce<U>(callbackfn: (previousValue: U, currentValue: number,
        currentIndex: number, array: Uint8Array) => U, initialValue: U)
      parameters:
        - id: callbackfn
          type:
            - >-
              (previousValue: U, currentValue: number, currentIndex: number,
              array: Uint8Array) => U
          description: >-
            A function that accepts up to four arguments. The reduce method
            calls the

            callbackfn function one time for each element in the array.
        - id: initialValue
          type:
            - U
          description: >
            If initialValue is specified, it is used as the initial value to
            start

            the accumulation. The first call to the callbackfn function provides
            this value as an argument

            instead of an array value.
      return:
        type:
          - U
        description: ''
    package: '@azure/ms-rest-azure-env'
  - uid: '@azure/ms-rest-azure-env.NodeBuffer.reduceRight'
    name: >-
      reduceRight((previousValue: number, currentValue: number, currentIndex:
      number, array: Uint8Array) => number)
    children: []
    type: method
    langs:
      - typeScript
    summary: >-
      Calls the specified callback function for all the elements in an array, in
      descending order.

      The return value of the callback function is the accumulated result, and
      is provided as an

      argument in the next call to the callback function.
    syntax:
      content: >-
        function reduceRight(callbackfn: (previousValue: number, currentValue:
        number, currentIndex: number, array: Uint8Array) => number)
      parameters:
        - id: callbackfn
          type:
            - >-
              (previousValue: number, currentValue: number, currentIndex:
              number, array: Uint8Array) => number
          description: >-
            A function that accepts up to four arguments. The reduceRight method
            calls

            the callbackfn function one time for each element in the array.
      return:
        type:
          - number
        description: ''
    package: '@azure/ms-rest-azure-env'
  - uid: '@azure/ms-rest-azure-env.NodeBuffer.reduceRight_1'
    name: >-
      reduceRight((previousValue: number, currentValue: number, currentIndex:
      number, array: Uint8Array) => number, number)
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function reduceRight(callbackfn: (previousValue: number, currentValue:
        number, currentIndex: number, array: Uint8Array) => number,
        initialValue: number)
      parameters:
        - id: callbackfn
          type:
            - >-
              (previousValue: number, currentValue: number, currentIndex:
              number, array: Uint8Array) => number
          description: ''
        - id: initialValue
          type:
            - number
          description: ''
      return:
        type:
          - number
        description: ''
    package: '@azure/ms-rest-azure-env'
  - uid: '@azure/ms-rest-azure-env.NodeBuffer.reduceRight_2'
    name: >-
      reduceRight((previousValue: U, currentValue: number, currentIndex: number,
      array: Uint8Array) => U, U)
    children: []
    type: method
    langs:
      - typeScript
    summary: >-
      Calls the specified callback function for all the elements in an array, in
      descending order.

      The return value of the callback function is the accumulated result, and
      is provided as an

      argument in the next call to the callback function.
    syntax:
      content: >-
        function reduceRight<U>(callbackfn: (previousValue: U, currentValue:
        number, currentIndex: number, array: Uint8Array) => U, initialValue: U)
      parameters:
        - id: callbackfn
          type:
            - >-
              (previousValue: U, currentValue: number, currentIndex: number,
              array: Uint8Array) => U
          description: >-
            A function that accepts up to four arguments. The reduceRight method
            calls

            the callbackfn function one time for each element in the array.
        - id: initialValue
          type:
            - U
          description: >
            If initialValue is specified, it is used as the initial value to
            start

            the accumulation. The first call to the callbackfn function provides
            this value as an argument

            instead of an array value.
      return:
        type:
          - U
        description: ''
    package: '@azure/ms-rest-azure-env'
  - uid: '@azure/ms-rest-azure-env.NodeBuffer.reverse'
    name: reverse()
    children: []
    type: method
    langs:
      - typeScript
    summary: Reverses the elements in an Array.
    syntax:
      content: function reverse()
      parameters: []
      return:
        type:
          - Uint8Array
        description: ''
    package: '@azure/ms-rest-azure-env'
  - uid: '@azure/ms-rest-azure-env.NodeBuffer.set'
    name: 'set(ArrayLike<number>, undefined | number)'
    children: []
    type: method
    langs:
      - typeScript
    summary: Sets a value or an array of values.
    syntax:
      content: 'function set(array: ArrayLike<number>, offset?: undefined | number)'
      parameters:
        - id: array
          type:
            - ArrayLike<number>
          description: A typed or untyped array of values to set.
        - id: offset
          type:
            - undefined | number
          description: >
            The index in the current array at which the values are to be
            written.
          optional: true
    package: '@azure/ms-rest-azure-env'
  - uid: '@azure/ms-rest-azure-env.NodeBuffer.slice'
    name: 'slice(undefined | number, undefined | number)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function slice(start?: undefined | number, end?: undefined | number)'
      parameters:
        - id: start
          type:
            - undefined | number
          description: ''
          optional: true
        - id: end
          type:
            - undefined | number
          description: ''
          optional: true
      return:
        type:
          - Buffer
        description: ''
    package: '@azure/ms-rest-azure-env'
  - uid: '@azure/ms-rest-azure-env.NodeBuffer.some'
    name: 'some((value: number, index: number, array: Uint8Array) => boolean, any)'
    children: []
    type: method
    langs:
      - typeScript
    summary: >-
      Determines whether the specified callback function returns true for any
      element of an array.
    syntax:
      content: >-
        function some(callbackfn: (value: number, index: number, array:
        Uint8Array) => boolean, thisArg?: any)
      parameters:
        - id: callbackfn
          type:
            - '(value: number, index: number, array: Uint8Array) => boolean'
          description: >-
            A function that accepts up to three arguments. The some method calls
            the

            callbackfn function for each element in array1 until the callbackfn
            returns true, or until

            the end of the array.
        - id: thisArg
          type:
            - any
          description: >
            An object to which the this keyword can refer in the callbackfn
            function.

            If thisArg is omitted, undefined is used as the this value.
          optional: true
      return:
        type:
          - boolean
        description: ''
    package: '@azure/ms-rest-azure-env'
  - uid: '@azure/ms-rest-azure-env.NodeBuffer.sort'
    name: 'sort(undefined | (a: number, b: number) => number)'
    children: []
    type: method
    langs:
      - typeScript
    summary: Sorts an array.
    syntax:
      content: 'function sort(compareFn?: undefined | (a: number, b: number) => number)'
      parameters:
        - id: compareFn
          type:
            - 'undefined | (a: number, b: number) => number'
          description: >
            The name of the function used to determine the order of the
            elements. If

            omitted, the elements are sorted in ascending, ASCII character
            order.
          optional: true
      return:
        type:
          - this
        description: ''
    package: '@azure/ms-rest-azure-env'
  - uid: '@azure/ms-rest-azure-env.NodeBuffer.subarray'
    name: 'subarray(number, undefined | number)'
    children: []
    type: method
    langs:
      - typeScript
    summary: >-
      Gets a new Uint8Array view of the ArrayBuffer store for this array,
      referencing the elements

      at begin, inclusive, up to end, exclusive.
    syntax:
      content: 'function subarray(begin: number, end?: undefined | number)'
      parameters:
        - id: begin
          type:
            - number
          description: The index of the beginning of the array.
        - id: end
          type:
            - undefined | number
          description: |
            The index of the end of the array.
          optional: true
      return:
        type:
          - Uint8Array
        description: ''
    package: '@azure/ms-rest-azure-env'
  - uid: '@azure/ms-rest-azure-env.NodeBuffer.swap16'
    name: swap16()
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: function swap16()
      parameters: []
      return:
        type:
          - Buffer
        description: ''
    package: '@azure/ms-rest-azure-env'
  - uid: '@azure/ms-rest-azure-env.NodeBuffer.swap32'
    name: swap32()
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: function swap32()
      parameters: []
      return:
        type:
          - Buffer
        description: ''
    package: '@azure/ms-rest-azure-env'
  - uid: '@azure/ms-rest-azure-env.NodeBuffer.swap64'
    name: swap64()
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: function swap64()
      parameters: []
      return:
        type:
          - Buffer
        description: ''
    package: '@azure/ms-rest-azure-env'
  - uid: '@azure/ms-rest-azure-env.NodeBuffer.toJSON'
    name: toJSON()
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: function toJSON()
      parameters: []
      return:
        type:
          - Object
        description: ''
    package: '@azure/ms-rest-azure-env'
  - uid: '@azure/ms-rest-azure-env.NodeBuffer.toLocaleString'
    name: toLocaleString()
    children: []
    type: method
    langs:
      - typeScript
    summary: Converts a number to a string by using the current locale.
    syntax:
      content: function toLocaleString()
      parameters: []
      return:
        type:
          - string
        description: ''
    package: '@azure/ms-rest-azure-env'
  - uid: '@azure/ms-rest-azure-env.NodeBuffer.toString'
    name: 'toString(undefined | string, undefined | number, undefined | number)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function toString(encoding?: undefined | string, start?: undefined |
        number, end?: undefined | number)
      parameters:
        - id: encoding
          type:
            - undefined | string
          description: ''
          optional: true
        - id: start
          type:
            - undefined | number
          description: ''
          optional: true
        - id: end
          type:
            - undefined | number
          description: ''
          optional: true
      return:
        type:
          - string
        description: ''
    package: '@azure/ms-rest-azure-env'
  - uid: '@azure/ms-rest-azure-env.NodeBuffer.Uint8Array'
    name: Uint8Array
    fullName: Uint8Array
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    syntax:
      content: 'Uint8Array: Uint8ArrayConstructor'
      return:
        type:
          - Uint8ArrayConstructor
        description: ''
    package: '@azure/ms-rest-azure-env'
  - uid: '@azure/ms-rest-azure-env.NodeBuffer.values'
    name: values()
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: function values()
      parameters: []
      return:
        type:
          - IterableIterator<number>
        description: ''
    package: '@azure/ms-rest-azure-env'
  - uid: '@azure/ms-rest-azure-env.NodeBuffer.write'
    name: 'write(string, undefined | number, undefined | number, undefined | string)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function write(string: string, offset?: undefined | number, length?:
        undefined | number, encoding?: undefined | string)
      parameters:
        - id: string
          type:
            - string
          description: ''
        - id: offset
          type:
            - undefined | number
          description: ''
          optional: true
        - id: length
          type:
            - undefined | number
          description: ''
          optional: true
        - id: encoding
          type:
            - undefined | string
          description: ''
          optional: true
      return:
        type:
          - number
        description: ''
    package: '@azure/ms-rest-azure-env'
  - uid: '@azure/ms-rest-azure-env.NodeBuffer.writeDoubleBE'
    name: 'writeDoubleBE(number, number, undefined | false | true)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function writeDoubleBE(value: number, offset: number, noAssert?:
        undefined | false | true)
      parameters:
        - id: value
          type:
            - number
          description: ''
        - id: offset
          type:
            - number
          description: ''
        - id: noAssert
          type:
            - undefined | false | true
          description: ''
          optional: true
      return:
        type:
          - number
        description: ''
    package: '@azure/ms-rest-azure-env'
  - uid: '@azure/ms-rest-azure-env.NodeBuffer.writeDoubleLE'
    name: 'writeDoubleLE(number, number, undefined | false | true)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function writeDoubleLE(value: number, offset: number, noAssert?:
        undefined | false | true)
      parameters:
        - id: value
          type:
            - number
          description: ''
        - id: offset
          type:
            - number
          description: ''
        - id: noAssert
          type:
            - undefined | false | true
          description: ''
          optional: true
      return:
        type:
          - number
        description: ''
    package: '@azure/ms-rest-azure-env'
  - uid: '@azure/ms-rest-azure-env.NodeBuffer.writeFloatBE'
    name: 'writeFloatBE(number, number, undefined | false | true)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function writeFloatBE(value: number, offset: number, noAssert?:
        undefined | false | true)
      parameters:
        - id: value
          type:
            - number
          description: ''
        - id: offset
          type:
            - number
          description: ''
        - id: noAssert
          type:
            - undefined | false | true
          description: ''
          optional: true
      return:
        type:
          - number
        description: ''
    package: '@azure/ms-rest-azure-env'
  - uid: '@azure/ms-rest-azure-env.NodeBuffer.writeFloatLE'
    name: 'writeFloatLE(number, number, undefined | false | true)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function writeFloatLE(value: number, offset: number, noAssert?:
        undefined | false | true)
      parameters:
        - id: value
          type:
            - number
          description: ''
        - id: offset
          type:
            - number
          description: ''
        - id: noAssert
          type:
            - undefined | false | true
          description: ''
          optional: true
      return:
        type:
          - number
        description: ''
    package: '@azure/ms-rest-azure-env'
  - uid: '@azure/ms-rest-azure-env.NodeBuffer.writeInt16BE'
    name: 'writeInt16BE(number, number, undefined | false | true)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function writeInt16BE(value: number, offset: number, noAssert?:
        undefined | false | true)
      parameters:
        - id: value
          type:
            - number
          description: ''
        - id: offset
          type:
            - number
          description: ''
        - id: noAssert
          type:
            - undefined | false | true
          description: ''
          optional: true
      return:
        type:
          - number
        description: ''
    package: '@azure/ms-rest-azure-env'
  - uid: '@azure/ms-rest-azure-env.NodeBuffer.writeInt16LE'
    name: 'writeInt16LE(number, number, undefined | false | true)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function writeInt16LE(value: number, offset: number, noAssert?:
        undefined | false | true)
      parameters:
        - id: value
          type:
            - number
          description: ''
        - id: offset
          type:
            - number
          description: ''
        - id: noAssert
          type:
            - undefined | false | true
          description: ''
          optional: true
      return:
        type:
          - number
        description: ''
    package: '@azure/ms-rest-azure-env'
  - uid: '@azure/ms-rest-azure-env.NodeBuffer.writeInt32BE'
    name: 'writeInt32BE(number, number, undefined | false | true)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function writeInt32BE(value: number, offset: number, noAssert?:
        undefined | false | true)
      parameters:
        - id: value
          type:
            - number
          description: ''
        - id: offset
          type:
            - number
          description: ''
        - id: noAssert
          type:
            - undefined | false | true
          description: ''
          optional: true
      return:
        type:
          - number
        description: ''
    package: '@azure/ms-rest-azure-env'
  - uid: '@azure/ms-rest-azure-env.NodeBuffer.writeInt32LE'
    name: 'writeInt32LE(number, number, undefined | false | true)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function writeInt32LE(value: number, offset: number, noAssert?:
        undefined | false | true)
      parameters:
        - id: value
          type:
            - number
          description: ''
        - id: offset
          type:
            - number
          description: ''
        - id: noAssert
          type:
            - undefined | false | true
          description: ''
          optional: true
      return:
        type:
          - number
        description: ''
    package: '@azure/ms-rest-azure-env'
  - uid: '@azure/ms-rest-azure-env.NodeBuffer.writeInt8'
    name: 'writeInt8(number, number, undefined | false | true)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function writeInt8(value: number, offset: number, noAssert?: undefined |
        false | true)
      parameters:
        - id: value
          type:
            - number
          description: ''
        - id: offset
          type:
            - number
          description: ''
        - id: noAssert
          type:
            - undefined | false | true
          description: ''
          optional: true
      return:
        type:
          - number
        description: ''
    package: '@azure/ms-rest-azure-env'
  - uid: '@azure/ms-rest-azure-env.NodeBuffer.writeIntBE'
    name: 'writeIntBE(number, number, number, undefined | false | true)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function writeIntBE(value: number, offset: number, byteLength: number,
        noAssert?: undefined | false | true)
      parameters:
        - id: value
          type:
            - number
          description: ''
        - id: offset
          type:
            - number
          description: ''
        - id: byteLength
          type:
            - number
          description: ''
        - id: noAssert
          type:
            - undefined | false | true
          description: ''
          optional: true
      return:
        type:
          - number
        description: ''
    package: '@azure/ms-rest-azure-env'
  - uid: '@azure/ms-rest-azure-env.NodeBuffer.writeIntLE'
    name: 'writeIntLE(number, number, number, undefined | false | true)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function writeIntLE(value: number, offset: number, byteLength: number,
        noAssert?: undefined | false | true)
      parameters:
        - id: value
          type:
            - number
          description: ''
        - id: offset
          type:
            - number
          description: ''
        - id: byteLength
          type:
            - number
          description: ''
        - id: noAssert
          type:
            - undefined | false | true
          description: ''
          optional: true
      return:
        type:
          - number
        description: ''
    package: '@azure/ms-rest-azure-env'
  - uid: '@azure/ms-rest-azure-env.NodeBuffer.writeUInt16BE'
    name: 'writeUInt16BE(number, number, undefined | false | true)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function writeUInt16BE(value: number, offset: number, noAssert?:
        undefined | false | true)
      parameters:
        - id: value
          type:
            - number
          description: ''
        - id: offset
          type:
            - number
          description: ''
        - id: noAssert
          type:
            - undefined | false | true
          description: ''
          optional: true
      return:
        type:
          - number
        description: ''
    package: '@azure/ms-rest-azure-env'
  - uid: '@azure/ms-rest-azure-env.NodeBuffer.writeUInt16LE'
    name: 'writeUInt16LE(number, number, undefined | false | true)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function writeUInt16LE(value: number, offset: number, noAssert?:
        undefined | false | true)
      parameters:
        - id: value
          type:
            - number
          description: ''
        - id: offset
          type:
            - number
          description: ''
        - id: noAssert
          type:
            - undefined | false | true
          description: ''
          optional: true
      return:
        type:
          - number
        description: ''
    package: '@azure/ms-rest-azure-env'
  - uid: '@azure/ms-rest-azure-env.NodeBuffer.writeUInt32BE'
    name: 'writeUInt32BE(number, number, undefined | false | true)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function writeUInt32BE(value: number, offset: number, noAssert?:
        undefined | false | true)
      parameters:
        - id: value
          type:
            - number
          description: ''
        - id: offset
          type:
            - number
          description: ''
        - id: noAssert
          type:
            - undefined | false | true
          description: ''
          optional: true
      return:
        type:
          - number
        description: ''
    package: '@azure/ms-rest-azure-env'
  - uid: '@azure/ms-rest-azure-env.NodeBuffer.writeUInt32LE'
    name: 'writeUInt32LE(number, number, undefined | false | true)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function writeUInt32LE(value: number, offset: number, noAssert?:
        undefined | false | true)
      parameters:
        - id: value
          type:
            - number
          description: ''
        - id: offset
          type:
            - number
          description: ''
        - id: noAssert
          type:
            - undefined | false | true
          description: ''
          optional: true
      return:
        type:
          - number
        description: ''
    package: '@azure/ms-rest-azure-env'
  - uid: '@azure/ms-rest-azure-env.NodeBuffer.writeUInt8'
    name: 'writeUInt8(number, number, undefined | false | true)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function writeUInt8(value: number, offset: number, noAssert?: undefined
        | false | true)
      parameters:
        - id: value
          type:
            - number
          description: ''
        - id: offset
          type:
            - number
          description: ''
        - id: noAssert
          type:
            - undefined | false | true
          description: ''
          optional: true
      return:
        type:
          - number
        description: ''
    package: '@azure/ms-rest-azure-env'
  - uid: '@azure/ms-rest-azure-env.NodeBuffer.writeUIntBE'
    name: 'writeUIntBE(number, number, number, undefined | false | true)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function writeUIntBE(value: number, offset: number, byteLength: number,
        noAssert?: undefined | false | true)
      parameters:
        - id: value
          type:
            - number
          description: ''
        - id: offset
          type:
            - number
          description: ''
        - id: byteLength
          type:
            - number
          description: ''
        - id: noAssert
          type:
            - undefined | false | true
          description: ''
          optional: true
      return:
        type:
          - number
        description: ''
    package: '@azure/ms-rest-azure-env'
  - uid: '@azure/ms-rest-azure-env.NodeBuffer.writeUIntLE'
    name: 'writeUIntLE(number, number, number, undefined | false | true)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function writeUIntLE(value: number, offset: number, byteLength: number,
        noAssert?: undefined | false | true)
      parameters:
        - id: value
          type:
            - number
          description: ''
        - id: offset
          type:
            - number
          description: ''
        - id: byteLength
          type:
            - number
          description: ''
        - id: noAssert
          type:
            - undefined | false | true
          description: ''
          optional: true
      return:
        type:
          - number
        description: ''
    package: '@azure/ms-rest-azure-env'
