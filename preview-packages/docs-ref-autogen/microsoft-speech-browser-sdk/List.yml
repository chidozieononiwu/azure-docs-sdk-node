### YamlMime:UniversalReference
items:
  - uid: microsoft-speech-browser-sdk.List
    name: List
    fullName: List<TItem>
    children:
      - microsoft-speech-browser-sdk.List.Add
      - microsoft-speech-browser-sdk.List.All
      - microsoft-speech-browser-sdk.List.Any
      - microsoft-speech-browser-sdk.List.Clear
      - microsoft-speech-browser-sdk.List.Clone
      - microsoft-speech-browser-sdk.List.Concat
      - microsoft-speech-browser-sdk.List.ConcatArray
      - microsoft-speech-browser-sdk.List.Dispose
      - microsoft-speech-browser-sdk.List.First
      - microsoft-speech-browser-sdk.List.ForEach
      - microsoft-speech-browser-sdk.List.Get
      - microsoft-speech-browser-sdk.List.InsertAt
      - microsoft-speech-browser-sdk.List.IsDisposed
      - microsoft-speech-browser-sdk.List.Join
      - microsoft-speech-browser-sdk.List.Last
      - microsoft-speech-browser-sdk.List.Length
      - microsoft-speech-browser-sdk.List.constructor
      - microsoft-speech-browser-sdk.List.OnAdded
      - microsoft-speech-browser-sdk.List.OnDisposed
      - microsoft-speech-browser-sdk.List.OnRemoved
      - microsoft-speech-browser-sdk.List.OrderBy
      - microsoft-speech-browser-sdk.List.OrderByDesc
      - microsoft-speech-browser-sdk.List.Remove
      - microsoft-speech-browser-sdk.List.RemoveAt
      - microsoft-speech-browser-sdk.List.RemoveFirst
      - microsoft-speech-browser-sdk.List.RemoveLast
      - microsoft-speech-browser-sdk.List.Select
      - microsoft-speech-browser-sdk.List.ToArray
      - microsoft-speech-browser-sdk.List.Where
    langs:
      - typeScript
    type: class
    summary: ''
    package: microsoft-speech-browser-sdk
  - uid: microsoft-speech-browser-sdk.List.Add
    name: Add
    fullName: Add
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    syntax:
      content: 'Add: (item: TItem) => void'
      return:
        type:
          - '(item: TItem) => void'
        description: ''
    package: microsoft-speech-browser-sdk
  - uid: microsoft-speech-browser-sdk.List.All
    name: All
    fullName: All
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    syntax:
      content: 'All: (callback: (item: TItem) => boolean) => boolean'
      return:
        type:
          - '(callback: (item: TItem) => boolean) => boolean'
        description: ''
    package: microsoft-speech-browser-sdk
  - uid: microsoft-speech-browser-sdk.List.Any
    name: Any
    fullName: Any
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    syntax:
      content: 'Any: (callback?: (item: TItem, index: number) => boolean) => boolean'
      return:
        type:
          - '(callback?: (item: TItem, index: number) => boolean) => boolean'
        description: ''
    package: microsoft-speech-browser-sdk
  - uid: microsoft-speech-browser-sdk.List.Clear
    name: Clear
    fullName: Clear
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    syntax:
      content: 'Clear: () => void'
      return:
        type:
          - () => void
        description: ''
    package: microsoft-speech-browser-sdk
  - uid: microsoft-speech-browser-sdk.List.Clone
    name: Clone
    fullName: Clone
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    syntax:
      content: 'Clone: () => List<TItem>'
      return:
        type:
          - () => List<TItem>
        description: ''
    package: microsoft-speech-browser-sdk
  - uid: microsoft-speech-browser-sdk.List.Concat
    name: Concat
    fullName: Concat
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    syntax:
      content: 'Concat: (list: List<TItem>) => List<TItem>'
      return:
        type:
          - '(list: List<TItem>) => List<TItem>'
        description: ''
    package: microsoft-speech-browser-sdk
  - uid: microsoft-speech-browser-sdk.List.ConcatArray
    name: ConcatArray
    fullName: ConcatArray
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    syntax:
      content: 'ConcatArray: (array: TItem[]) => List<TItem>'
      return:
        type:
          - '(array: TItem[]) => List<TItem>'
        description: ''
    package: microsoft-speech-browser-sdk
  - uid: microsoft-speech-browser-sdk.List.Dispose
    name: Dispose
    fullName: Dispose
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    syntax:
      content: 'Dispose: (reason?: string) => void'
      return:
        type:
          - '(reason?: string) => void'
        description: ''
    package: microsoft-speech-browser-sdk
  - uid: microsoft-speech-browser-sdk.List.First
    name: First
    fullName: First
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    syntax:
      content: 'First: () => TItem'
      return:
        type:
          - () => TItem
        description: ''
    package: microsoft-speech-browser-sdk
  - uid: microsoft-speech-browser-sdk.List.ForEach
    name: ForEach
    fullName: ForEach
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    syntax:
      content: 'ForEach: (callback: (item: TItem, index: number) => void) => void'
      return:
        type:
          - '(callback: (item: TItem, index: number) => void) => void'
        description: ''
    package: microsoft-speech-browser-sdk
  - uid: microsoft-speech-browser-sdk.List.Get
    name: Get
    fullName: Get
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    syntax:
      content: 'Get: (itemIndex: number) => TItem'
      return:
        type:
          - '(itemIndex: number) => TItem'
        description: ''
    package: microsoft-speech-browser-sdk
  - uid: microsoft-speech-browser-sdk.List.InsertAt
    name: InsertAt
    fullName: InsertAt
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    syntax:
      content: 'InsertAt: (index: number, item: TItem) => void'
      return:
        type:
          - '(index: number, item: TItem) => void'
        description: ''
    package: microsoft-speech-browser-sdk
  - uid: microsoft-speech-browser-sdk.List.IsDisposed
    name: IsDisposed
    fullName: IsDisposed
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    syntax:
      content: 'IsDisposed: () => boolean'
      return:
        type:
          - () => boolean
        description: ''
    package: microsoft-speech-browser-sdk
  - uid: microsoft-speech-browser-sdk.List.Join
    name: Join
    fullName: Join
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    syntax:
      content: 'Join: (seperator?: string) => string'
      return:
        type:
          - '(seperator?: string) => string'
        description: ''
    package: microsoft-speech-browser-sdk
  - uid: microsoft-speech-browser-sdk.List.Last
    name: Last
    fullName: Last
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    syntax:
      content: 'Last: () => TItem'
      return:
        type:
          - () => TItem
        description: ''
    package: microsoft-speech-browser-sdk
  - uid: microsoft-speech-browser-sdk.List.Length
    name: Length
    fullName: Length
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    syntax:
      content: 'Length: () => number'
      return:
        type:
          - () => number
        description: ''
    package: microsoft-speech-browser-sdk
  - uid: microsoft-speech-browser-sdk.List.constructor
    name: 'List(TItem[])'
    children: []
    type: constructor
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'new List(list?: TItem[])'
      parameters:
        - id: list
          type:
            - 'TItem[]'
          description: ''
          optional: true
    package: microsoft-speech-browser-sdk
  - uid: microsoft-speech-browser-sdk.List.OnAdded
    name: OnAdded
    fullName: OnAdded
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    syntax:
      content: 'OnAdded: (addedCallback: () => void) => IDetachable'
      return:
        type:
          - '(addedCallback: () => void) => IDetachable'
        description: ''
    package: microsoft-speech-browser-sdk
  - uid: microsoft-speech-browser-sdk.List.OnDisposed
    name: OnDisposed
    fullName: OnDisposed
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    syntax:
      content: 'OnDisposed: (disposedCallback: () => void) => IDetachable'
      return:
        type:
          - '(disposedCallback: () => void) => IDetachable'
        description: ''
    package: microsoft-speech-browser-sdk
  - uid: microsoft-speech-browser-sdk.List.OnRemoved
    name: OnRemoved
    fullName: OnRemoved
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    syntax:
      content: 'OnRemoved: (removedCallback: () => void) => IDetachable'
      return:
        type:
          - '(removedCallback: () => void) => IDetachable'
        description: ''
    package: microsoft-speech-browser-sdk
  - uid: microsoft-speech-browser-sdk.List.OrderBy
    name: OrderBy
    fullName: OrderBy
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    syntax:
      content: 'OrderBy: (compareFn: (a: TItem, b: TItem) => number) => List<TItem>'
      return:
        type:
          - '(compareFn: (a: TItem, b: TItem) => number) => List<TItem>'
        description: ''
    package: microsoft-speech-browser-sdk
  - uid: microsoft-speech-browser-sdk.List.OrderByDesc
    name: OrderByDesc
    fullName: OrderByDesc
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    syntax:
      content: 'OrderByDesc: (compareFn: (a: TItem, b: TItem) => number) => List<TItem>'
      return:
        type:
          - '(compareFn: (a: TItem, b: TItem) => number) => List<TItem>'
        description: ''
    package: microsoft-speech-browser-sdk
  - uid: microsoft-speech-browser-sdk.List.Remove
    name: Remove
    fullName: Remove
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    syntax:
      content: 'Remove: (index: number, count: number) => TItem[]'
      return:
        type:
          - '(index: number, count: number) => TItem[]'
        description: ''
    package: microsoft-speech-browser-sdk
  - uid: microsoft-speech-browser-sdk.List.RemoveAt
    name: RemoveAt
    fullName: RemoveAt
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    syntax:
      content: 'RemoveAt: (index: number) => TItem'
      return:
        type:
          - '(index: number) => TItem'
        description: ''
    package: microsoft-speech-browser-sdk
  - uid: microsoft-speech-browser-sdk.List.RemoveFirst
    name: RemoveFirst
    fullName: RemoveFirst
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    syntax:
      content: 'RemoveFirst: () => TItem'
      return:
        type:
          - () => TItem
        description: ''
    package: microsoft-speech-browser-sdk
  - uid: microsoft-speech-browser-sdk.List.RemoveLast
    name: RemoveLast
    fullName: RemoveLast
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    syntax:
      content: 'RemoveLast: () => TItem'
      return:
        type:
          - () => TItem
        description: ''
    package: microsoft-speech-browser-sdk
  - uid: microsoft-speech-browser-sdk.List.Select
    name: Select
    fullName: Select
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    syntax:
      content: 'Select: (callback: (item: TItem, index: number) => T2) => List<T2>'
      return:
        type:
          - '(callback: (item: TItem, index: number) => T2) => List<T2>'
        description: ''
    package: microsoft-speech-browser-sdk
  - uid: microsoft-speech-browser-sdk.List.ToArray
    name: ToArray
    fullName: ToArray
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    syntax:
      content: 'ToArray: () => TItem[]'
      return:
        type:
          - '() => TItem[]'
        description: ''
    package: microsoft-speech-browser-sdk
  - uid: microsoft-speech-browser-sdk.List.Where
    name: Where
    fullName: Where
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    syntax:
      content: >-
        Where: (callback: (item: TItem, index: number) => boolean) =>
        List<TItem>
      return:
        type:
          - '(callback: (item: TItem, index: number) => boolean) => List<TItem>'
        description: ''
    package: microsoft-speech-browser-sdk
