### YamlMime:UniversalReference
items:
  - uid: '@azure/storage-file-share.Directory'
    name: Directory
    fullName: Directory
    children:
      - '@azure/storage-file-share.Directory.create_2'
      - '@azure/storage-file-share.Directory.create'
      - '@azure/storage-file-share.Directory.create_1'
      - '@azure/storage-file-share.Directory.deleteMethod_2'
      - '@azure/storage-file-share.Directory.deleteMethod'
      - '@azure/storage-file-share.Directory.deleteMethod_1'
      - '@azure/storage-file-share.Directory.constructor'
      - '@azure/storage-file-share.Directory.forceCloseHandles_2'
      - '@azure/storage-file-share.Directory.forceCloseHandles'
      - '@azure/storage-file-share.Directory.forceCloseHandles_1'
      - '@azure/storage-file-share.Directory.getProperties_2'
      - '@azure/storage-file-share.Directory.getProperties'
      - '@azure/storage-file-share.Directory.getProperties_1'
      - '@azure/storage-file-share.Directory.listFilesAndDirectoriesSegment_2'
      - '@azure/storage-file-share.Directory.listFilesAndDirectoriesSegment'
      - '@azure/storage-file-share.Directory.listFilesAndDirectoriesSegment_1'
      - '@azure/storage-file-share.Directory.listHandles_2'
      - '@azure/storage-file-share.Directory.listHandles'
      - '@azure/storage-file-share.Directory.listHandles_1'
      - '@azure/storage-file-share.Directory.setMetadata_2'
      - '@azure/storage-file-share.Directory.setMetadata'
      - '@azure/storage-file-share.Directory.setMetadata_1'
      - '@azure/storage-file-share.Directory.setProperties_2'
      - '@azure/storage-file-share.Directory.setProperties'
      - '@azure/storage-file-share.Directory.setProperties_1'
    langs:
      - typeScript
    type: class
    summary: Class representing a Directory.
    package: '@azure/storage-file-share'
  - uid: '@azure/storage-file-share.Directory.create_2'
    name: >-
      create(string, string, string, DirectoryCreateOptionalParams,
      ServiceCallback<void>)
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function create(fileAttributes: string, fileCreatedOn: string,
        fileLastWriteOn: string, options: DirectoryCreateOptionalParams,
        callback: ServiceCallback<void>)
      parameters:
        - id: fileAttributes
          type:
            - string
          description: >-
            If specified, the provided file attributes shall be set. Default
            value:

            ‘Archive’ for file and ‘Directory’ for directory. ‘None’ can also be
            specified as default.
        - id: fileCreatedOn
          type:
            - string
          description: Creation time for the file/directory.
        - id: fileLastWriteOn
          type:
            - string
          description: Last write time for the file/directory.
        - id: options
          type:
            - '@azure/storage-file-share.DirectoryCreateOptionalParams'
          description: The optional parameters
        - id: callback
          type:
            - ServiceCallback<void>
          description: |
            The callback
    package: '@azure/storage-file-share'
  - uid: '@azure/storage-file-share.Directory.create'
    name: 'create(string, string, string, Models.DirectoryCreateOptionalParams)'
    children: []
    type: method
    langs:
      - typeScript
    summary: Creates a new directory under the specified share or parent directory.
    syntax:
      content: >-
        function create(fileAttributes: string, fileCreatedOn: string,
        fileLastWriteOn: string, options?: Models.DirectoryCreateOptionalParams)
      parameters:
        - id: fileAttributes
          type:
            - string
          description: >-
            If specified, the provided file attributes shall be set. Default
            value:

            ‘Archive’ for file and ‘Directory’ for directory. ‘None’ can also be
            specified as default.
        - id: fileCreatedOn
          type:
            - string
          description: Creation time for the file/directory.
        - id: fileLastWriteOn
          type:
            - string
          description: Last write time for the file/directory.
        - id: options
          type:
            - Models.DirectoryCreateOptionalParams
          description: ''
          optional: true
      return:
        type:
          - Promise<Models.DirectoryCreateResponse>
        description: Promise<Models.DirectoryCreateResponse>
    package: '@azure/storage-file-share'
  - uid: '@azure/storage-file-share.Directory.create_1'
    name: 'create(string, string, string, ServiceCallback<void>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function create(fileAttributes: string, fileCreatedOn: string,
        fileLastWriteOn: string, callback: ServiceCallback<void>)
      parameters:
        - id: fileAttributes
          type:
            - string
          description: >-
            If specified, the provided file attributes shall be set. Default
            value:

            ‘Archive’ for file and ‘Directory’ for directory. ‘None’ can also be
            specified as default.
        - id: fileCreatedOn
          type:
            - string
          description: Creation time for the file/directory.
        - id: fileLastWriteOn
          type:
            - string
          description: Last write time for the file/directory.
        - id: callback
          type:
            - ServiceCallback<void>
          description: |
            The callback
    package: '@azure/storage-file-share'
  - uid: '@azure/storage-file-share.Directory.deleteMethod_2'
    name: 'deleteMethod(DirectoryDeleteMethodOptionalParams, ServiceCallback<void>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function deleteMethod(options: DirectoryDeleteMethodOptionalParams,
        callback: ServiceCallback<void>)
      parameters:
        - id: options
          type:
            - '@azure/storage-file-share.DirectoryDeleteMethodOptionalParams'
          description: The optional parameters
        - id: callback
          type:
            - ServiceCallback<void>
          description: |
            The callback
    package: '@azure/storage-file-share'
  - uid: '@azure/storage-file-share.Directory.deleteMethod'
    name: deleteMethod(Models.DirectoryDeleteMethodOptionalParams)
    children: []
    type: method
    langs:
      - typeScript
    summary: >-
      Removes the specified empty directory. Note that the directory must be
      empty before it can be

      deleted.
    syntax:
      content: >-
        function deleteMethod(options?:
        Models.DirectoryDeleteMethodOptionalParams)
      parameters:
        - id: options
          type:
            - Models.DirectoryDeleteMethodOptionalParams
          description: ''
          optional: true
      return:
        type:
          - Promise<Models.DirectoryDeleteResponse>
        description: Promise<Models.DirectoryDeleteResponse>
    package: '@azure/storage-file-share'
  - uid: '@azure/storage-file-share.Directory.deleteMethod_1'
    name: deleteMethod(ServiceCallback<void>)
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function deleteMethod(callback: ServiceCallback<void>)'
      parameters:
        - id: callback
          type:
            - ServiceCallback<void>
          description: |
            The callback
    package: '@azure/storage-file-share'
  - uid: '@azure/storage-file-share.Directory.constructor'
    name: Directory(StorageClientContext)
    children: []
    type: constructor
    langs:
      - typeScript
    summary: Create a Directory.
    syntax:
      content: 'new Directory(client: StorageClientContext)'
      parameters:
        - id: client
          type:
            - '@azure/storage-file-share.StorageClientContext'
          description: |
            Reference to the service client.
    package: '@azure/storage-file-share'
  - uid: '@azure/storage-file-share.Directory.forceCloseHandles_2'
    name: >-
      forceCloseHandles(string, DirectoryForceCloseHandlesOptionalParams,
      ServiceCallback<void>)
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function forceCloseHandles(handleId: string, options:
        DirectoryForceCloseHandlesOptionalParams, callback:
        ServiceCallback<void>)
      parameters:
        - id: handleId
          type:
            - string
          description: >-
            Specifies handle ID opened on the file or directory to be closed.
            Asterix (‘*’)

            is a wildcard that specifies all handles.
        - id: options
          type:
            - '@azure/storage-file-share.DirectoryForceCloseHandlesOptionalParams'
          description: The optional parameters
        - id: callback
          type:
            - ServiceCallback<void>
          description: |
            The callback
    package: '@azure/storage-file-share'
  - uid: '@azure/storage-file-share.Directory.forceCloseHandles'
    name: 'forceCloseHandles(string, Models.DirectoryForceCloseHandlesOptionalParams)'
    children: []
    type: method
    langs:
      - typeScript
    summary: Closes all handles open for given directory.
    syntax:
      content: >-
        function forceCloseHandles(handleId: string, options?:
        Models.DirectoryForceCloseHandlesOptionalParams)
      parameters:
        - id: handleId
          type:
            - string
          description: >-
            Specifies handle ID opened on the file or directory to be closed.
            Asterix (‘*’)

            is a wildcard that specifies all handles.
        - id: options
          type:
            - Models.DirectoryForceCloseHandlesOptionalParams
          description: ''
          optional: true
      return:
        type:
          - Promise<Models.DirectoryForceCloseHandlesResponse>
        description: Promise<Models.DirectoryForceCloseHandlesResponse>
    package: '@azure/storage-file-share'
  - uid: '@azure/storage-file-share.Directory.forceCloseHandles_1'
    name: 'forceCloseHandles(string, ServiceCallback<void>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function forceCloseHandles(handleId: string, callback:
        ServiceCallback<void>)
      parameters:
        - id: handleId
          type:
            - string
          description: >-
            Specifies handle ID opened on the file or directory to be closed.
            Asterix (‘*’)

            is a wildcard that specifies all handles.
        - id: callback
          type:
            - ServiceCallback<void>
          description: |
            The callback
    package: '@azure/storage-file-share'
  - uid: '@azure/storage-file-share.Directory.getProperties_2'
    name: 'getProperties(DirectoryGetPropertiesOptionalParams, ServiceCallback<void>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function getProperties(options: DirectoryGetPropertiesOptionalParams,
        callback: ServiceCallback<void>)
      parameters:
        - id: options
          type:
            - '@azure/storage-file-share.DirectoryGetPropertiesOptionalParams'
          description: The optional parameters
        - id: callback
          type:
            - ServiceCallback<void>
          description: |
            The callback
    package: '@azure/storage-file-share'
  - uid: '@azure/storage-file-share.Directory.getProperties'
    name: getProperties(Models.DirectoryGetPropertiesOptionalParams)
    children: []
    type: method
    langs:
      - typeScript
    summary: >-
      Returns all system properties for the specified directory, and can also be
      used to check the

      existence of a directory. The data returned does not include the files in
      the directory or any

      subdirectories.
    syntax:
      content: >-
        function getProperties(options?:
        Models.DirectoryGetPropertiesOptionalParams)
      parameters:
        - id: options
          type:
            - Models.DirectoryGetPropertiesOptionalParams
          description: ''
          optional: true
      return:
        type:
          - Promise<Models.DirectoryGetPropertiesResponse>
        description: Promise<Models.DirectoryGetPropertiesResponse>
    package: '@azure/storage-file-share'
  - uid: '@azure/storage-file-share.Directory.getProperties_1'
    name: getProperties(ServiceCallback<void>)
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function getProperties(callback: ServiceCallback<void>)'
      parameters:
        - id: callback
          type:
            - ServiceCallback<void>
          description: |
            The callback
    package: '@azure/storage-file-share'
  - uid: '@azure/storage-file-share.Directory.listFilesAndDirectoriesSegment_2'
    name: >-
      listFilesAndDirectoriesSegment(DirectoryListFilesAndDirectoriesSegmentOptionalParams,
      ServiceCallback<ListFilesAndDirectoriesSegmentResponse>)
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function listFilesAndDirectoriesSegment(options:
        DirectoryListFilesAndDirectoriesSegmentOptionalParams, callback:
        ServiceCallback<ListFilesAndDirectoriesSegmentResponse>)
      parameters:
        - id: options
          type:
            - >-
              @azure/storage-file-share.DirectoryListFilesAndDirectoriesSegmentOptionalParams
          description: The optional parameters
        - id: callback
          type:
            - >-
              ServiceCallback<@azure/storage-file-share.ListFilesAndDirectoriesSegmentResponse>
          description: |
            The callback
    package: '@azure/storage-file-share'
  - uid: '@azure/storage-file-share.Directory.listFilesAndDirectoriesSegment'
    name: >-
      listFilesAndDirectoriesSegment(Models.DirectoryListFilesAndDirectoriesSegmentOptionalParams)
    children: []
    type: method
    langs:
      - typeScript
    summary: >-
      Returns a list of files or directories under the specified share or
      directory. It lists the

      contents only for a single level of the directory hierarchy.
    syntax:
      content: >-
        function listFilesAndDirectoriesSegment(options?:
        Models.DirectoryListFilesAndDirectoriesSegmentOptionalParams)
      parameters:
        - id: options
          type:
            - Models.DirectoryListFilesAndDirectoriesSegmentOptionalParams
          description: ''
          optional: true
      return:
        type:
          - Promise<Models.DirectoryListFilesAndDirectoriesSegmentResponse>
        description: Promise<Models.DirectoryListFilesAndDirectoriesSegmentResponse>
    package: '@azure/storage-file-share'
  - uid: '@azure/storage-file-share.Directory.listFilesAndDirectoriesSegment_1'
    name: >-
      listFilesAndDirectoriesSegment(ServiceCallback<ListFilesAndDirectoriesSegmentResponse>)
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function listFilesAndDirectoriesSegment(callback:
        ServiceCallback<ListFilesAndDirectoriesSegmentResponse>)
      parameters:
        - id: callback
          type:
            - >-
              ServiceCallback<@azure/storage-file-share.ListFilesAndDirectoriesSegmentResponse>
          description: |
            The callback
    package: '@azure/storage-file-share'
  - uid: '@azure/storage-file-share.Directory.listHandles_2'
    name: >-
      listHandles(DirectoryListHandlesOptionalParams,
      ServiceCallback<ListHandlesResponse>)
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function listHandles(options: DirectoryListHandlesOptionalParams,
        callback: ServiceCallback<ListHandlesResponse>)
      parameters:
        - id: options
          type:
            - '@azure/storage-file-share.DirectoryListHandlesOptionalParams'
          description: The optional parameters
        - id: callback
          type:
            - ServiceCallback<@azure/storage-file-share.ListHandlesResponse>
          description: |
            The callback
    package: '@azure/storage-file-share'
  - uid: '@azure/storage-file-share.Directory.listHandles'
    name: listHandles(Models.DirectoryListHandlesOptionalParams)
    children: []
    type: method
    langs:
      - typeScript
    summary: Lists handles for directory.
    syntax:
      content: >-
        function listHandles(options?:
        Models.DirectoryListHandlesOptionalParams)
      parameters:
        - id: options
          type:
            - Models.DirectoryListHandlesOptionalParams
          description: ''
          optional: true
      return:
        type:
          - Promise<Models.DirectoryListHandlesResponse>
        description: Promise<Models.DirectoryListHandlesResponse>
    package: '@azure/storage-file-share'
  - uid: '@azure/storage-file-share.Directory.listHandles_1'
    name: listHandles(ServiceCallback<ListHandlesResponse>)
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function listHandles(callback: ServiceCallback<ListHandlesResponse>)'
      parameters:
        - id: callback
          type:
            - ServiceCallback<@azure/storage-file-share.ListHandlesResponse>
          description: |
            The callback
    package: '@azure/storage-file-share'
  - uid: '@azure/storage-file-share.Directory.setMetadata_2'
    name: 'setMetadata(DirectorySetMetadataOptionalParams, ServiceCallback<void>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function setMetadata(options: DirectorySetMetadataOptionalParams,
        callback: ServiceCallback<void>)
      parameters:
        - id: options
          type:
            - '@azure/storage-file-share.DirectorySetMetadataOptionalParams'
          description: The optional parameters
        - id: callback
          type:
            - ServiceCallback<void>
          description: |
            The callback
    package: '@azure/storage-file-share'
  - uid: '@azure/storage-file-share.Directory.setMetadata'
    name: setMetadata(Models.DirectorySetMetadataOptionalParams)
    children: []
    type: method
    langs:
      - typeScript
    summary: Updates user defined metadata for the specified directory.
    syntax:
      content: >-
        function setMetadata(options?:
        Models.DirectorySetMetadataOptionalParams)
      parameters:
        - id: options
          type:
            - Models.DirectorySetMetadataOptionalParams
          description: ''
          optional: true
      return:
        type:
          - Promise<Models.DirectorySetMetadataResponse>
        description: Promise<Models.DirectorySetMetadataResponse>
    package: '@azure/storage-file-share'
  - uid: '@azure/storage-file-share.Directory.setMetadata_1'
    name: setMetadata(ServiceCallback<void>)
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function setMetadata(callback: ServiceCallback<void>)'
      parameters:
        - id: callback
          type:
            - ServiceCallback<void>
          description: |
            The callback
    package: '@azure/storage-file-share'
  - uid: '@azure/storage-file-share.Directory.setProperties_2'
    name: >-
      setProperties(string, string, string,
      DirectorySetPropertiesOptionalParams, ServiceCallback<void>)
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function setProperties(fileAttributes: string, fileCreatedOn: string,
        fileLastWriteOn: string, options: DirectorySetPropertiesOptionalParams,
        callback: ServiceCallback<void>)
      parameters:
        - id: fileAttributes
          type:
            - string
          description: >-
            If specified, the provided file attributes shall be set. Default
            value:

            ‘Archive’ for file and ‘Directory’ for directory. ‘None’ can also be
            specified as default.
        - id: fileCreatedOn
          type:
            - string
          description: Creation time for the file/directory.
        - id: fileLastWriteOn
          type:
            - string
          description: Last write time for the file/directory.
        - id: options
          type:
            - '@azure/storage-file-share.DirectorySetPropertiesOptionalParams'
          description: The optional parameters
        - id: callback
          type:
            - ServiceCallback<void>
          description: |
            The callback
    package: '@azure/storage-file-share'
  - uid: '@azure/storage-file-share.Directory.setProperties'
    name: >-
      setProperties(string, string, string,
      Models.DirectorySetPropertiesOptionalParams)
    children: []
    type: method
    langs:
      - typeScript
    summary: Sets properties on the directory.
    syntax:
      content: >-
        function setProperties(fileAttributes: string, fileCreatedOn: string,
        fileLastWriteOn: string, options?:
        Models.DirectorySetPropertiesOptionalParams)
      parameters:
        - id: fileAttributes
          type:
            - string
          description: >-
            If specified, the provided file attributes shall be set. Default
            value:

            ‘Archive’ for file and ‘Directory’ for directory. ‘None’ can also be
            specified as default.
        - id: fileCreatedOn
          type:
            - string
          description: Creation time for the file/directory.
        - id: fileLastWriteOn
          type:
            - string
          description: Last write time for the file/directory.
        - id: options
          type:
            - Models.DirectorySetPropertiesOptionalParams
          description: ''
          optional: true
      return:
        type:
          - Promise<Models.DirectorySetPropertiesResponse>
        description: Promise<Models.DirectorySetPropertiesResponse>
    package: '@azure/storage-file-share'
  - uid: '@azure/storage-file-share.Directory.setProperties_1'
    name: 'setProperties(string, string, string, ServiceCallback<void>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function setProperties(fileAttributes: string, fileCreatedOn: string,
        fileLastWriteOn: string, callback: ServiceCallback<void>)
      parameters:
        - id: fileAttributes
          type:
            - string
          description: >-
            If specified, the provided file attributes shall be set. Default
            value:

            ‘Archive’ for file and ‘Directory’ for directory. ‘None’ can also be
            specified as default.
        - id: fileCreatedOn
          type:
            - string
          description: Creation time for the file/directory.
        - id: fileLastWriteOn
          type:
            - string
          description: Last write time for the file/directory.
        - id: callback
          type:
            - ServiceCallback<void>
          description: |
            The callback
    package: '@azure/storage-file-share'
references:
  - uid: '@azure/storage-file-share.StorageClientContext'
    name: StorageClientContext
    spec.typeScript:
      - name: StorageClientContext
        fullName: StorageClientContext
        uid: '@azure/storage-file-share.StorageClientContext'
  - uid: '@azure/storage-file-share.DirectoryCreateOptionalParams'
    name: DirectoryCreateOptionalParams
    spec.typeScript:
      - name: DirectoryCreateOptionalParams
        fullName: DirectoryCreateOptionalParams
        uid: '@azure/storage-file-share.DirectoryCreateOptionalParams'
  - uid: '@azure/storage-file-share.DirectoryDeleteMethodOptionalParams'
    name: DirectoryDeleteMethodOptionalParams
    spec.typeScript:
      - name: DirectoryDeleteMethodOptionalParams
        fullName: DirectoryDeleteMethodOptionalParams
        uid: '@azure/storage-file-share.DirectoryDeleteMethodOptionalParams'
  - uid: '@azure/storage-file-share.DirectoryForceCloseHandlesOptionalParams'
    name: DirectoryForceCloseHandlesOptionalParams
    spec.typeScript:
      - name: DirectoryForceCloseHandlesOptionalParams
        fullName: DirectoryForceCloseHandlesOptionalParams
        uid: '@azure/storage-file-share.DirectoryForceCloseHandlesOptionalParams'
  - uid: '@azure/storage-file-share.DirectoryGetPropertiesOptionalParams'
    name: DirectoryGetPropertiesOptionalParams
    spec.typeScript:
      - name: DirectoryGetPropertiesOptionalParams
        fullName: DirectoryGetPropertiesOptionalParams
        uid: '@azure/storage-file-share.DirectoryGetPropertiesOptionalParams'
  - uid: >-
      ServiceCallback<@azure/storage-file-share.ListFilesAndDirectoriesSegmentResponse>
    name: ListFilesAndDirectoriesSegmentResponse>
    spec.typeScript:
      - name: ServiceCallback<
        fullName: ServiceCallback<
      - name: ListFilesAndDirectoriesSegmentResponse
        fullName: ListFilesAndDirectoriesSegmentResponse
        uid: '@azure/storage-file-share.ListFilesAndDirectoriesSegmentResponse'
      - name: '>'
        fullName: '>'
  - uid: >-
      @azure/storage-file-share.DirectoryListFilesAndDirectoriesSegmentOptionalParams
    name: DirectoryListFilesAndDirectoriesSegmentOptionalParams
    spec.typeScript:
      - name: DirectoryListFilesAndDirectoriesSegmentOptionalParams
        fullName: DirectoryListFilesAndDirectoriesSegmentOptionalParams
        uid: >-
          @azure/storage-file-share.DirectoryListFilesAndDirectoriesSegmentOptionalParams
  - uid: ServiceCallback<@azure/storage-file-share.ListHandlesResponse>
    name: ListHandlesResponse>
    spec.typeScript:
      - name: ServiceCallback<
        fullName: ServiceCallback<
      - name: ListHandlesResponse
        fullName: ListHandlesResponse
        uid: '@azure/storage-file-share.ListHandlesResponse'
      - name: '>'
        fullName: '>'
  - uid: '@azure/storage-file-share.DirectoryListHandlesOptionalParams'
    name: DirectoryListHandlesOptionalParams
    spec.typeScript:
      - name: DirectoryListHandlesOptionalParams
        fullName: DirectoryListHandlesOptionalParams
        uid: '@azure/storage-file-share.DirectoryListHandlesOptionalParams'
  - uid: '@azure/storage-file-share.DirectorySetMetadataOptionalParams'
    name: DirectorySetMetadataOptionalParams
    spec.typeScript:
      - name: DirectorySetMetadataOptionalParams
        fullName: DirectorySetMetadataOptionalParams
        uid: '@azure/storage-file-share.DirectorySetMetadataOptionalParams'
  - uid: '@azure/storage-file-share.DirectorySetPropertiesOptionalParams'
    name: DirectorySetPropertiesOptionalParams
    spec.typeScript:
      - name: DirectorySetPropertiesOptionalParams
        fullName: DirectorySetPropertiesOptionalParams
        uid: '@azure/storage-file-share.DirectorySetPropertiesOptionalParams'
