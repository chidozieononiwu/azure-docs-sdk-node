### YamlMime:UniversalReference
items:
  - uid: '@azure/abort-controller.DataLakeDirectoryClient'
    name: DataLakeDirectoryClient
    fullName: DataLakeDirectoryClient
    children:
      - '@azure/abort-controller.DataLakeDirectoryClient.accountName'
      - '@azure/abort-controller.DataLakeDirectoryClient.create_1'
      - '@azure/abort-controller.DataLakeDirectoryClient.create'
      - '@azure/abort-controller.DataLakeDirectoryClient.credential'
      - '@azure/abort-controller.DataLakeDirectoryClient.constructor_1'
      - '@azure/abort-controller.DataLakeDirectoryClient.constructor'
      - '@azure/abort-controller.DataLakeDirectoryClient.delete'
      - '@azure/abort-controller.DataLakeDirectoryClient.fileSystemName'
      - '@azure/abort-controller.DataLakeDirectoryClient.getAccessControl'
      - '@azure/abort-controller.DataLakeDirectoryClient.getDataLakeLeaseClient'
      - '@azure/abort-controller.DataLakeDirectoryClient.getFileClient'
      - '@azure/abort-controller.DataLakeDirectoryClient.getProperties'
      - '@azure/abort-controller.DataLakeDirectoryClient.getSubdirectoryClient'
      - '@azure/abort-controller.DataLakeDirectoryClient.move'
      - '@azure/abort-controller.DataLakeDirectoryClient.move_1'
      - '@azure/abort-controller.DataLakeDirectoryClient.name'
      - '@azure/abort-controller.DataLakeDirectoryClient.setAccessControl'
      - '@azure/abort-controller.DataLakeDirectoryClient.setHttpHeaders'
      - '@azure/abort-controller.DataLakeDirectoryClient.setMetadata'
      - '@azure/abort-controller.DataLakeDirectoryClient.setPermissions'
      - '@azure/abort-controller.DataLakeDirectoryClient.toDirectoryClient'
      - '@azure/abort-controller.DataLakeDirectoryClient.toFileClient'
      - '@azure/abort-controller.DataLakeDirectoryClient.url'
    langs:
      - typeScript
    type: class
    summary: A DataLakeDirectoryClient represents a URL to the Azure Storage directory.
    extends:
      name: '@azure/abort-controller.DataLakePathClient'
    package: '@azure/abort-controller'
  - uid: '@azure/abort-controller.DataLakeDirectoryClient.accountName'
    name: accountName
    fullName: accountName
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    syntax:
      content: 'accountName: string'
      return:
        type:
          - string
        description: ''
    package: '@azure/abort-controller'
  - uid: '@azure/abort-controller.DataLakeDirectoryClient.create_1'
    name: create(DirectoryCreateOptions)
    children: []
    type: method
    langs:
      - typeScript
    summary: Create a directory.
    syntax:
      content: 'function create(options?: DirectoryCreateOptions)'
      parameters:
        - id: options
          type:
            - '@azure/abort-controller.DirectoryCreateOptions'
          description: ''
          optional: true
      return:
        type:
          - Promise<@azure/abort-controller.DirectoryCreateResponse>
        description: ''
    package: '@azure/abort-controller'
  - uid: '@azure/abort-controller.DataLakeDirectoryClient.create'
    name: 'create(PathResourceType, PathCreateOptions)'
    children: []
    type: method
    langs:
      - typeScript
    summary: Create a directory.
    syntax:
      content: >-
        function create(resourceType: PathResourceType, options?:
        PathCreateOptions)
      parameters:
        - id: resourceType
          type:
            - '@azure/abort-controller.PathResourceType'
          description: 'Resource type, must be "directory" for DataLakeDirectoryClient.'
        - id: options
          type:
            - '@azure/abort-controller.PathCreateOptions'
          description: ''
          optional: true
      return:
        type:
          - Promise<@azure/abort-controller.PathCreateResponse>
        description: ''
    package: '@azure/abort-controller'
  - uid: '@azure/abort-controller.DataLakeDirectoryClient.credential'
    name: credential
    fullName: credential
    children: []
    langs:
      - typeScript
    type: property
    summary: >-
      Such as AnonymousCredential, StorageSharedKeyCredential or any credential
      from the @azure/identity package to authenticate requests to the service.
      You can also provide an object that implements the TokenCredential
      interface. If not specified, AnonymousCredential is used.
    syntax:
      content: >-
        credential: StorageSharedKeyCredential | AnonymousCredential |
        TokenCredential
      return:
        type:
          - >-
            @azure/abort-controller.StorageSharedKeyCredential |
            @azure/abort-controller.AnonymousCredential |
            @azure/abort-controller.TokenCredential
        description: ''
    package: '@azure/abort-controller'
  - uid: '@azure/abort-controller.DataLakeDirectoryClient.constructor_1'
    name: 'DataLakeDirectoryClient(string, Pipeline)'
    children: []
    type: constructor
    langs:
      - typeScript
    summary: Creates an instance of DataLakePathClient from url and pipeline.
    syntax:
      content: 'new DataLakeDirectoryClient(url: string, pipeline: Pipeline)'
      parameters:
        - id: url
          type:
            - string
          description: >-
            A Client string pointing to Azure Storage data lake path (directory
            or file), such as
                                "https://myaccount.dfs.core.windows.net/filesystem/directory" or "https://myaccount.dfs.core.windows.net/filesystem/file".
                                You can append a SAS if using AnonymousCredential, such as "https://myaccount.dfs.core.windows.net/filesystem/directory?sasString".
        - id: pipeline
          type:
            - '@azure/abort-controller.Pipeline'
          description: |-
            Call newPipeline() to create a default
                                       pipeline, or provide a customized pipeline.
    package: '@azure/abort-controller'
  - uid: '@azure/abort-controller.DataLakeDirectoryClient.constructor'
    name: >-
      DataLakeDirectoryClient(string, StorageSharedKeyCredential |
      AnonymousCredential | TokenCredential, StoragePipelineOptions)
    children: []
    type: constructor
    langs:
      - typeScript
    summary: Creates an instance of DataLakePathClient from url and credential.
    syntax:
      content: >-
        new DataLakeDirectoryClient(url: string, credential?:
        StorageSharedKeyCredential | AnonymousCredential | TokenCredential,
        options?: StoragePipelineOptions)
      parameters:
        - id: url
          type:
            - string
          description: >-
            A Client string pointing to Azure Storage data lake path (directory
            or file), such as
                                "https://myaccount.dfs.core.windows.net/filesystem/directory" or "https://myaccount.dfs.core.windows.net/filesystem/file".
                                You can append a SAS if using AnonymousCredential, such as "https://myaccount.dfs.core.windows.net/filesystem/directory?sasString".
        - id: credential
          type:
            - >-
              @azure/abort-controller.StorageSharedKeyCredential |
              @azure/abort-controller.AnonymousCredential |
              @azure/abort-controller.TokenCredential
          description: ''
          optional: true
        - id: options
          type:
            - '@azure/abort-controller.StoragePipelineOptions'
          description: ''
          optional: true
    package: '@azure/abort-controller'
  - uid: '@azure/abort-controller.DataLakeDirectoryClient.delete'
    name: 'delete(undefined | false | true, PathDeleteOptions)'
    children: []
    type: method
    langs:
      - typeScript
    summary: Delete current path (directory or file).
    syntax:
      content: >-
        function delete(recursive?: undefined | false | true, options?:
        PathDeleteOptions)
      parameters:
        - id: recursive
          type:
            - undefined | false | true
          description: ''
          optional: true
        - id: options
          type:
            - '@azure/abort-controller.PathDeleteOptions'
          description: ''
          optional: true
      return:
        type:
          - Promise<@azure/abort-controller.PathDeleteResponse>
        description: ''
    package: '@azure/abort-controller'
  - uid: '@azure/abort-controller.DataLakeDirectoryClient.fileSystemName'
    name: fileSystemName
    fullName: fileSystemName
    children: []
    langs:
      - typeScript
    type: property
    summary: Name of current file system.
    syntax:
      content: 'fileSystemName: string'
      return:
        type:
          - string
        description: ''
    package: '@azure/abort-controller'
  - uid: '@azure/abort-controller.DataLakeDirectoryClient.getAccessControl'
    name: getAccessControl(PathGetAccessControlOptions)
    children: []
    type: method
    langs:
      - typeScript
    summary: Returns the access control data for a path (directory of file).
    syntax:
      content: 'function getAccessControl(options?: PathGetAccessControlOptions)'
      parameters:
        - id: options
          type:
            - '@azure/abort-controller.PathGetAccessControlOptions'
          description: ''
          optional: true
      return:
        type:
          - Promise<@azure/abort-controller.PathGetAccessControlResponse>
        description: ''
    package: '@azure/abort-controller'
  - uid: '@azure/abort-controller.DataLakeDirectoryClient.getDataLakeLeaseClient'
    name: getDataLakeLeaseClient(undefined | string)
    children: []
    type: method
    langs:
      - typeScript
    summary: >-
      Get a <xref:DataLakeLeaseClient> that manages leases on the path
      (directory or file).
    syntax:
      content: 'function getDataLakeLeaseClient(proposeLeaseId?: undefined | string)'
      parameters:
        - id: proposeLeaseId
          type:
            - undefined | string
          description: ''
          optional: true
      return:
        type:
          - '@azure/abort-controller.DataLakeLeaseClient'
        description: ''
    package: '@azure/abort-controller'
  - uid: '@azure/abort-controller.DataLakeDirectoryClient.getFileClient'
    name: getFileClient(string)
    children: []
    type: method
    langs:
      - typeScript
    summary: 'Creates a <xref:DataLakeFileClient> object under current directory.'
    syntax:
      content: 'function getFileClient(fileName: string)'
      parameters:
        - id: fileName
          type:
            - string
          description: ''
      return:
        type:
          - '@azure/abort-controller.DataLakeFileClient'
        description: ''
    package: '@azure/abort-controller'
  - uid: '@azure/abort-controller.DataLakeDirectoryClient.getProperties'
    name: getProperties(PathGetPropertiesOptions)
    children: []
    type: method
    langs:
      - typeScript
    summary: >
      Returns all user-defined metadata, standard HTTP properties, and system
      properties

      for the path (directory or file).

      WARNING: The `metadata` object returned in the response will have its keys
      in lowercase, even if

      they originally contained uppercase characters. This differs from the
      metadata keys returned by

      the methods of <xref:DataLakeFileSystemClient> that list paths using the
      `includeMetadata` option, which

      will retain their original casing.
    syntax:
      content: 'function getProperties(options?: PathGetPropertiesOptions)'
      parameters:
        - id: options
          type:
            - '@azure/abort-controller.PathGetPropertiesOptions'
          description: ''
          optional: true
      return:
        type:
          - Promise<@azure/abort-controller.PathGetPropertiesResponse>
        description: ''
    package: '@azure/abort-controller'
  - uid: '@azure/abort-controller.DataLakeDirectoryClient.getSubdirectoryClient'
    name: getSubdirectoryClient(string)
    children: []
    type: method
    langs:
      - typeScript
    summary: 'Creates a <xref:DataLakeDirectoryClient> object under current directory.'
    syntax:
      content: 'function getSubdirectoryClient(subdirectoryName: string)'
      parameters:
        - id: subdirectoryName
          type:
            - string
          description: Subdirectory name.
      return:
        type:
          - '@azure/abort-controller.DataLakeDirectoryClient'
        description: ''
    package: '@azure/abort-controller'
  - uid: '@azure/abort-controller.DataLakeDirectoryClient.move'
    name: 'move(string, PathMoveOptions)'
    children: []
    type: method
    langs:
      - typeScript
    summary: Move directory or file within same file system.
    syntax:
      content: 'function move(destinationPath: string, options?: PathMoveOptions)'
      parameters:
        - id: destinationPath
          type:
            - string
          description: >-
            Destination directory path like "directory" or file path
            "directory/file"
        - id: options
          type:
            - '@azure/abort-controller.PathMoveOptions'
          description: ''
          optional: true
      return:
        type:
          - Promise<@azure/abort-controller.PathMoveResponse>
        description: ''
    package: '@azure/abort-controller'
  - uid: '@azure/abort-controller.DataLakeDirectoryClient.move_1'
    name: 'move(string, string, PathMoveOptions)'
    children: []
    type: method
    langs:
      - typeScript
    summary: Move directory or file to another file system.
    syntax:
      content: >-
        function move(destinationFileSystem: string, destinationPath: string,
        options?: PathMoveOptions)
      parameters:
        - id: destinationFileSystem
          type:
            - string
          description: Destination file system like "filesystem".
        - id: destinationPath
          type:
            - string
          description: >-
            Destination directory path like "directory" or file path
            "directory/file"
        - id: options
          type:
            - '@azure/abort-controller.PathMoveOptions'
          description: ''
          optional: true
      return:
        type:
          - Promise<@azure/abort-controller.PathMoveResponse>
        description: ''
    package: '@azure/abort-controller'
  - uid: '@azure/abort-controller.DataLakeDirectoryClient.name'
    name: name
    fullName: name
    children: []
    langs:
      - typeScript
    type: property
    summary: Name of current path (directory or file).
    syntax:
      content: 'name: string'
      return:
        type:
          - string
        description: ''
    package: '@azure/abort-controller'
  - uid: '@azure/abort-controller.DataLakeDirectoryClient.setAccessControl'
    name: 'setAccessControl(PathAccessControlItem[], PathSetAccessControlOptions)'
    children: []
    type: method
    langs:
      - typeScript
    summary: Set the access control data for a path (directory of file).
    syntax:
      content: >-
        function setAccessControl(acl: PathAccessControlItem[], options?:
        PathSetAccessControlOptions)
      parameters:
        - id: acl
          type:
            - '@azure/abort-controller.PathAccessControlItem[]'
          description: The POSIX access control list for the file or directory.
        - id: options
          type:
            - '@azure/abort-controller.PathSetAccessControlOptions'
          description: ''
          optional: true
      return:
        type:
          - Promise<@azure/abort-controller.PathSetAccessControlResponse>
        description: ''
    package: '@azure/abort-controller'
  - uid: '@azure/abort-controller.DataLakeDirectoryClient.setHttpHeaders'
    name: 'setHttpHeaders(PathHttpHeaders, PathSetHttpHeadersOptions)'
    children: []
    type: method
    langs:
      - typeScript
    summary: >-
      Sets system properties on the path (directory or file).

      If no value provided, or no value provided for the specified blob HTTP
      headers,

      these blob HTTP headers without a value will be cleared.
    syntax:
      content: >-
        function setHttpHeaders(httpHeaders: PathHttpHeaders, options?:
        PathSetHttpHeadersOptions)
      parameters:
        - id: httpHeaders
          type:
            - '@azure/abort-controller.PathHttpHeaders'
          description: ''
        - id: options
          type:
            - '@azure/abort-controller.PathSetHttpHeadersOptions'
          description: ''
          optional: true
      return:
        type:
          - Promise<@azure/abort-controller.PathSetHttpHeadersResponse>
        description: ''
    package: '@azure/abort-controller'
  - uid: '@azure/abort-controller.DataLakeDirectoryClient.setMetadata'
    name: 'setMetadata(Metadata, PathSetMetadataOptions)'
    children: []
    type: method
    langs:
      - typeScript
    summary: >
      Sets user-defined metadata for the specified path (directory of file) as
      one or more name-value pairs.

      If no option provided, or no metadata defined in the parameter, the path

      metadata will be removed.
    syntax:
      content: >-
        function setMetadata(metadata?: Metadata, options?:
        PathSetMetadataOptions)
      parameters:
        - id: metadata
          type:
            - '@azure/abort-controller.Metadata'
          description: ''
          optional: true
        - id: options
          type:
            - '@azure/abort-controller.PathSetMetadataOptions'
          description: ''
          optional: true
      return:
        type:
          - Promise<@azure/abort-controller.PathSetMetadataResponse>
        description: ''
    package: '@azure/abort-controller'
  - uid: '@azure/abort-controller.DataLakeDirectoryClient.setPermissions'
    name: 'setPermissions(PathPermissions, PathSetPermissionsOptions)'
    children: []
    type: method
    langs:
      - typeScript
    summary: Sets the file permissions on a path.
    syntax:
      content: >-
        function setPermissions(permissions: PathPermissions, options?:
        PathSetPermissionsOptions)
      parameters:
        - id: permissions
          type:
            - '@azure/abort-controller.PathPermissions'
          description: >-
            The POSIX access permissions for the file owner, the file owning
            group, and others.
        - id: options
          type:
            - '@azure/abort-controller.PathSetPermissionsOptions'
          description: ''
          optional: true
      return:
        type:
          - Promise<PathSetPermissionsResponse>
        description: ''
    package: '@azure/abort-controller'
  - uid: '@azure/abort-controller.DataLakeDirectoryClient.toDirectoryClient'
    name: toDirectoryClient()
    children: []
    type: method
    langs:
      - typeScript
    summary: >-
      Convert current DataLakePathClient to DataLakeDirectoryClient if current
      path is a directory.
    syntax:
      content: function toDirectoryClient()
      parameters: []
      return:
        type:
          - '@azure/abort-controller.DataLakeDirectoryClient'
        description: ''
    package: '@azure/abort-controller'
  - uid: '@azure/abort-controller.DataLakeDirectoryClient.toFileClient'
    name: toFileClient()
    children: []
    type: method
    langs:
      - typeScript
    summary: >-
      Convert current DataLakePathClient to DataLakeFileClient if current path
      is a file.
    syntax:
      content: function toFileClient()
      parameters: []
      return:
        type:
          - '@azure/abort-controller.DataLakeFileClient'
        description: ''
    package: '@azure/abort-controller'
  - uid: '@azure/abort-controller.DataLakeDirectoryClient.url'
    name: url
    fullName: url
    children: []
    langs:
      - typeScript
    type: property
    summary: Encoded URL string value.
    syntax:
      content: 'url: string'
      return:
        type:
          - string
        description: ''
    package: '@azure/abort-controller'
references:
  - uid: '@azure/abort-controller.DataLakePathClient'
    name: DataLakePathClient
    spec.typeScript:
      - name: DataLakePathClient
        fullName: DataLakePathClient
        uid: '@azure/abort-controller.DataLakePathClient'
  - uid: >-
      @azure/abort-controller.StorageSharedKeyCredential |
      @azure/abort-controller.AnonymousCredential |
      @azure/abort-controller.TokenCredential
    name: TokenCredential
    spec.typeScript:
      - name: StorageSharedKeyCredential
        fullName: StorageSharedKeyCredential
        uid: '@azure/abort-controller.StorageSharedKeyCredential'
      - name: ' | '
        fullName: ' | '
      - name: AnonymousCredential
        fullName: AnonymousCredential
        uid: '@azure/abort-controller.AnonymousCredential'
      - name: ' | '
        fullName: ' | '
      - name: TokenCredential
        fullName: TokenCredential
        uid: '@azure/abort-controller.TokenCredential'
  - uid: '@azure/abort-controller.StoragePipelineOptions'
    name: StoragePipelineOptions
    spec.typeScript:
      - name: StoragePipelineOptions
        fullName: StoragePipelineOptions
        uid: '@azure/abort-controller.StoragePipelineOptions'
  - uid: '@azure/abort-controller.Pipeline'
    name: Pipeline
    spec.typeScript:
      - name: Pipeline
        fullName: Pipeline
        uid: '@azure/abort-controller.Pipeline'
  - uid: '@azure/abort-controller.PathResourceType'
    name: PathResourceType
    spec.typeScript:
      - name: PathResourceType
        fullName: PathResourceType
        uid: '@azure/abort-controller.PathResourceType'
  - uid: '@azure/abort-controller.PathCreateOptions'
    name: PathCreateOptions
    spec.typeScript:
      - name: PathCreateOptions
        fullName: PathCreateOptions
        uid: '@azure/abort-controller.PathCreateOptions'
  - uid: Promise<@azure/abort-controller.PathCreateResponse>
    name: PathCreateResponse>
    spec.typeScript:
      - name: Promise<
        fullName: Promise<
      - name: PathCreateResponse
        fullName: PathCreateResponse
        uid: '@azure/abort-controller.PathCreateResponse'
      - name: '>'
        fullName: '>'
  - uid: '@azure/abort-controller.DirectoryCreateOptions'
    name: DirectoryCreateOptions
    spec.typeScript:
      - name: DirectoryCreateOptions
        fullName: DirectoryCreateOptions
        uid: '@azure/abort-controller.DirectoryCreateOptions'
  - uid: Promise<@azure/abort-controller.DirectoryCreateResponse>
    name: DirectoryCreateResponse>
    spec.typeScript:
      - name: Promise<
        fullName: Promise<
      - name: DirectoryCreateResponse
        fullName: DirectoryCreateResponse
        uid: '@azure/abort-controller.DirectoryCreateResponse'
      - name: '>'
        fullName: '>'
  - uid: '@azure/abort-controller.PathDeleteOptions'
    name: PathDeleteOptions
    spec.typeScript:
      - name: PathDeleteOptions
        fullName: PathDeleteOptions
        uid: '@azure/abort-controller.PathDeleteOptions'
  - uid: Promise<@azure/abort-controller.PathDeleteResponse>
    name: PathDeleteResponse>
    spec.typeScript:
      - name: Promise<
        fullName: Promise<
      - name: PathDeleteResponse
        fullName: PathDeleteResponse
        uid: '@azure/abort-controller.PathDeleteResponse'
      - name: '>'
        fullName: '>'
  - uid: '@azure/abort-controller.PathGetAccessControlOptions'
    name: PathGetAccessControlOptions
    spec.typeScript:
      - name: PathGetAccessControlOptions
        fullName: PathGetAccessControlOptions
        uid: '@azure/abort-controller.PathGetAccessControlOptions'
  - uid: Promise<@azure/abort-controller.PathGetAccessControlResponse>
    name: PathGetAccessControlResponse>
    spec.typeScript:
      - name: Promise<
        fullName: Promise<
      - name: PathGetAccessControlResponse
        fullName: PathGetAccessControlResponse
        uid: '@azure/abort-controller.PathGetAccessControlResponse'
      - name: '>'
        fullName: '>'
  - uid: '@azure/abort-controller.DataLakeLeaseClient'
    name: DataLakeLeaseClient
    spec.typeScript:
      - name: DataLakeLeaseClient
        fullName: DataLakeLeaseClient
        uid: '@azure/abort-controller.DataLakeLeaseClient'
  - uid: '@azure/abort-controller.DataLakeFileClient'
    name: DataLakeFileClient
    spec.typeScript:
      - name: DataLakeFileClient
        fullName: DataLakeFileClient
        uid: '@azure/abort-controller.DataLakeFileClient'
  - uid: '@azure/abort-controller.PathGetPropertiesOptions'
    name: PathGetPropertiesOptions
    spec.typeScript:
      - name: PathGetPropertiesOptions
        fullName: PathGetPropertiesOptions
        uid: '@azure/abort-controller.PathGetPropertiesOptions'
  - uid: Promise<@azure/abort-controller.PathGetPropertiesResponse>
    name: PathGetPropertiesResponse>
    spec.typeScript:
      - name: Promise<
        fullName: Promise<
      - name: PathGetPropertiesResponse
        fullName: PathGetPropertiesResponse
        uid: '@azure/abort-controller.PathGetPropertiesResponse'
      - name: '>'
        fullName: '>'
  - uid: '@azure/abort-controller.DataLakeDirectoryClient'
    name: DataLakeDirectoryClient
    spec.typeScript:
      - name: DataLakeDirectoryClient
        fullName: DataLakeDirectoryClient
        uid: '@azure/abort-controller.DataLakeDirectoryClient'
  - uid: '@azure/abort-controller.PathMoveOptions'
    name: PathMoveOptions
    spec.typeScript:
      - name: PathMoveOptions
        fullName: PathMoveOptions
        uid: '@azure/abort-controller.PathMoveOptions'
  - uid: Promise<@azure/abort-controller.PathMoveResponse>
    name: PathMoveResponse>
    spec.typeScript:
      - name: Promise<
        fullName: Promise<
      - name: PathMoveResponse
        fullName: PathMoveResponse
        uid: '@azure/abort-controller.PathMoveResponse'
      - name: '>'
        fullName: '>'
  - uid: '@azure/abort-controller.PathAccessControlItem[]'
    name: 'PathAccessControlItem[]'
    spec.typeScript:
      - name: PathAccessControlItem
        fullName: PathAccessControlItem
        uid: '@azure/abort-controller.PathAccessControlItem'
      - name: '[]'
        fullName: '[]'
  - uid: '@azure/abort-controller.PathSetAccessControlOptions'
    name: PathSetAccessControlOptions
    spec.typeScript:
      - name: PathSetAccessControlOptions
        fullName: PathSetAccessControlOptions
        uid: '@azure/abort-controller.PathSetAccessControlOptions'
  - uid: Promise<@azure/abort-controller.PathSetAccessControlResponse>
    name: PathSetAccessControlResponse>
    spec.typeScript:
      - name: Promise<
        fullName: Promise<
      - name: PathSetAccessControlResponse
        fullName: PathSetAccessControlResponse
        uid: '@azure/abort-controller.PathSetAccessControlResponse'
      - name: '>'
        fullName: '>'
  - uid: '@azure/abort-controller.PathHttpHeaders'
    name: PathHttpHeaders
    spec.typeScript:
      - name: PathHttpHeaders
        fullName: PathHttpHeaders
        uid: '@azure/abort-controller.PathHttpHeaders'
  - uid: '@azure/abort-controller.PathSetHttpHeadersOptions'
    name: PathSetHttpHeadersOptions
    spec.typeScript:
      - name: PathSetHttpHeadersOptions
        fullName: PathSetHttpHeadersOptions
        uid: '@azure/abort-controller.PathSetHttpHeadersOptions'
  - uid: Promise<@azure/abort-controller.PathSetHttpHeadersResponse>
    name: PathSetHttpHeadersResponse>
    spec.typeScript:
      - name: Promise<
        fullName: Promise<
      - name: PathSetHttpHeadersResponse
        fullName: PathSetHttpHeadersResponse
        uid: '@azure/abort-controller.PathSetHttpHeadersResponse'
      - name: '>'
        fullName: '>'
  - uid: '@azure/abort-controller.Metadata'
    name: Metadata
    spec.typeScript:
      - name: Metadata
        fullName: Metadata
        uid: '@azure/abort-controller.Metadata'
  - uid: '@azure/abort-controller.PathSetMetadataOptions'
    name: PathSetMetadataOptions
    spec.typeScript:
      - name: PathSetMetadataOptions
        fullName: PathSetMetadataOptions
        uid: '@azure/abort-controller.PathSetMetadataOptions'
  - uid: Promise<@azure/abort-controller.PathSetMetadataResponse>
    name: PathSetMetadataResponse>
    spec.typeScript:
      - name: Promise<
        fullName: Promise<
      - name: PathSetMetadataResponse
        fullName: PathSetMetadataResponse
        uid: '@azure/abort-controller.PathSetMetadataResponse'
      - name: '>'
        fullName: '>'
  - uid: '@azure/abort-controller.PathPermissions'
    name: PathPermissions
    spec.typeScript:
      - name: PathPermissions
        fullName: PathPermissions
        uid: '@azure/abort-controller.PathPermissions'
  - uid: '@azure/abort-controller.PathSetPermissionsOptions'
    name: PathSetPermissionsOptions
    spec.typeScript:
      - name: PathSetPermissionsOptions
        fullName: PathSetPermissionsOptions
        uid: '@azure/abort-controller.PathSetPermissionsOptions'
