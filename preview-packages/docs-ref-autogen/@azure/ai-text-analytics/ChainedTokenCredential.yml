### YamlMime:UniversalReference
items:
  - uid: '@azure/abort-controller.ChainedTokenCredential'
    name: ChainedTokenCredential
    fullName: ChainedTokenCredential
    children:
      - '@azure/abort-controller.ChainedTokenCredential.constructor'
      - '@azure/abort-controller.ChainedTokenCredential.getToken'
    langs:
      - typeScript
    type: class
    summary: |-
      Enables multiple `TokenCredential` implementations to be tried in order
      until one of the getToken methods returns an access token.
    package: '@azure/abort-controller'
  - uid: '@azure/abort-controller.ChainedTokenCredential.constructor'
    name: 'ChainedTokenCredential(TokenCredential[])'
    children: []
    type: constructor
    langs:
      - typeScript
    summary: Creates an instance of ChainedTokenCredential using the given credentials.
    syntax:
      content: 'new ChainedTokenCredential(sources: TokenCredential[])'
      parameters:
        - id: sources
          type:
            - '@azure/abort-controller.TokenCredential[]'
          description: >
            `TokenCredential` implementations to be tried in order.


            Example usage:

            ```javascript

            const firstCredential = new ClientSecretCredential(tenantId,
            clientId, clientSecret);

            const secondCredential = new ClientSecretCredential(tenantId,
            anotherClientId, anotherSecret);

            const credentialChain = new ChainedTokenCredential(firstCredential,
            secondCredential);

            ```
    package: '@azure/abort-controller'
  - uid: '@azure/abort-controller.ChainedTokenCredential.getToken'
    name: 'getToken(string | string[], GetTokenOptions)'
    children: []
    type: method
    langs:
      - typeScript
    summary: >-
      Returns the first access token returned by one of the chained

      `TokenCredential` implementations.  Throws an
      <xref:AggregateAuthenticationError>

      when one or more credentials throws an <xref:AuthenticationError> and

      no credentials have returned an access token.
    syntax:
      content: 'function getToken(scopes: string | string[], options?: GetTokenOptions)'
      parameters:
        - id: scopes
          type:
            - 'string | string[]'
          description: The list of scopes for which the token will have access.
        - id: options
          type:
            - '@azure/abort-controller.GetTokenOptions'
          description: |
            The options used to configure any requests this
                           `TokenCredential` implementation might make.
          optional: true
      return:
        type:
          - Promise<@azure/abort-controller.AccessToken | null>
        description: ''
    package: '@azure/abort-controller'
references:
  - uid: '@azure/abort-controller.TokenCredential[]'
    name: 'TokenCredential[]'
    spec.typeScript:
      - name: TokenCredential
        fullName: TokenCredential
        uid: '@azure/abort-controller.TokenCredential'
      - name: '[]'
        fullName: '[]'
  - uid: '@azure/abort-controller.GetTokenOptions'
    name: GetTokenOptions
    spec.typeScript:
      - name: GetTokenOptions
        fullName: GetTokenOptions
        uid: '@azure/abort-controller.GetTokenOptions'
  - uid: Promise<@azure/abort-controller.AccessToken | null>
    name: AccessToken | null>
    spec.typeScript:
      - name: Promise<
        fullName: Promise<
      - name: AccessToken
        fullName: AccessToken
        uid: '@azure/abort-controller.AccessToken'
      - name: ' | null>'
        fullName: ' | null>'
