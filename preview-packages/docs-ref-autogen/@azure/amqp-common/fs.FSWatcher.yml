### YamlMime:UniversalReference
items:
  - uid: '@azure/ms-rest-azure-env.fs.FSWatcher'
    name: FSWatcher
    fullName: FSWatcher
    children:
      - '@azure/ms-rest-azure-env.fs.FSWatcher.addListener_1'
      - '@azure/ms-rest-azure-env.fs.FSWatcher.addListener_2'
      - '@azure/ms-rest-azure-env.fs.FSWatcher.addListener'
      - '@azure/ms-rest-azure-env.fs.FSWatcher.close'
      - '@azure/ms-rest-azure-env.fs.FSWatcher.defaultMaxListeners'
      - '@azure/ms-rest-azure-env.fs.FSWatcher.emit'
      - '@azure/ms-rest-azure-env.fs.FSWatcher.eventNames'
      - '@azure/ms-rest-azure-env.fs.FSWatcher.constructor'
      - '@azure/ms-rest-azure-env.fs.FSWatcher.getMaxListeners'
      - '@azure/ms-rest-azure-env.fs.FSWatcher.listenerCount'
      - '@azure/ms-rest-azure-env.fs.FSWatcher.listenerCount'
      - '@azure/ms-rest-azure-env.fs.FSWatcher.listeners'
      - '@azure/ms-rest-azure-env.fs.FSWatcher.off'
      - '@azure/ms-rest-azure-env.fs.FSWatcher.on_1'
      - '@azure/ms-rest-azure-env.fs.FSWatcher.on_2'
      - '@azure/ms-rest-azure-env.fs.FSWatcher.on'
      - '@azure/ms-rest-azure-env.fs.FSWatcher.once_1'
      - '@azure/ms-rest-azure-env.fs.FSWatcher.once_2'
      - '@azure/ms-rest-azure-env.fs.FSWatcher.once'
      - '@azure/ms-rest-azure-env.fs.FSWatcher.prependListener_1'
      - '@azure/ms-rest-azure-env.fs.FSWatcher.prependListener_2'
      - '@azure/ms-rest-azure-env.fs.FSWatcher.prependListener'
      - '@azure/ms-rest-azure-env.fs.FSWatcher.prependOnceListener_1'
      - '@azure/ms-rest-azure-env.fs.FSWatcher.prependOnceListener_2'
      - '@azure/ms-rest-azure-env.fs.FSWatcher.prependOnceListener'
      - '@azure/ms-rest-azure-env.fs.FSWatcher.rawListeners'
      - '@azure/ms-rest-azure-env.fs.FSWatcher.removeAllListeners'
      - '@azure/ms-rest-azure-env.fs.FSWatcher.removeListener'
      - '@azure/ms-rest-azure-env.fs.FSWatcher.setMaxListeners'
    langs:
      - typeScript
    type: interface
    summary: ''
    extends:
      name: '@azure/ms-rest-azure-env.events.EventEmitter.EventEmitter'
    package: '@azure/ms-rest-azure-env'
  - uid: '@azure/ms-rest-azure-env.fs.FSWatcher.addListener_1'
    name: >-
      addListener("change", (eventType: string, filename: string | Buffer) =>
      void)
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function addListener(event: "change", listener: (eventType: string,
        filename: string | Buffer) => void)
      parameters:
        - id: event
          type:
            - '"change"'
          description: ''
        - id: listener
          type:
            - '(eventType: string, filename: string | Buffer) => void'
          description: ''
      return:
        type:
          - this
        description: ''
    package: '@azure/ms-rest-azure-env'
  - uid: '@azure/ms-rest-azure-env.fs.FSWatcher.addListener_2'
    name: 'addListener("error", (error: Error) => void)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function addListener(event: "error", listener: (error: Error) => void)'
      parameters:
        - id: event
          type:
            - '"error"'
          description: ''
        - id: listener
          type:
            - '(error: Error) => void'
          description: ''
      return:
        type:
          - this
        description: ''
    package: '@azure/ms-rest-azure-env'
  - uid: '@azure/ms-rest-azure-env.fs.FSWatcher.addListener'
    name: 'addListener(string, (args: any[]) => void)'
    children: []
    type: method
    langs:
      - typeScript
    summary: |-
      events.EventEmitter
        1. change
        2. error
    syntax:
      content: 'function addListener(event: string, listener: (args: any[]) => void)'
      parameters:
        - id: event
          type:
            - string
          description: ''
        - id: listener
          type:
            - '(args: any[]) => void'
          description: ''
      return:
        type:
          - this
        description: ''
    package: '@azure/ms-rest-azure-env'
  - uid: '@azure/ms-rest-azure-env.fs.FSWatcher.close'
    name: close()
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: function close()
      parameters: []
    package: '@azure/ms-rest-azure-env'
  - uid: '@azure/ms-rest-azure-env.fs.FSWatcher.defaultMaxListeners'
    name: defaultMaxListeners
    fullName: defaultMaxListeners
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    syntax:
      content: 'static defaultMaxListeners: number'
      return:
        type:
          - number
        description: ''
    package: '@azure/ms-rest-azure-env'
  - uid: '@azure/ms-rest-azure-env.fs.FSWatcher.emit'
    name: 'emit(string | symbol, any[])'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function emit(event: string | symbol, args: any[])'
      parameters:
        - id: event
          type:
            - string | symbol
          description: ''
        - id: args
          type:
            - 'any[]'
          description: ''
      return:
        type:
          - boolean
        description: ''
    package: '@azure/ms-rest-azure-env'
  - uid: '@azure/ms-rest-azure-env.fs.FSWatcher.eventNames'
    name: eventNames()
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: function eventNames()
      parameters: []
      return:
        type:
          - Array<string | symbol>
        description: ''
    package: '@azure/ms-rest-azure-env'
  - uid: '@azure/ms-rest-azure-env.fs.FSWatcher.constructor'
    name: FSWatcher(EventEmitterOptions)
    children: []
    type: constructor
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'new FSWatcher(options?: EventEmitterOptions)'
      parameters:
        - id: options
          type:
            - '@azure/ms-rest-azure-env.events.EventEmitterOptions'
          description: ''
          optional: true
    package: '@azure/ms-rest-azure-env'
  - uid: '@azure/ms-rest-azure-env.fs.FSWatcher.getMaxListeners'
    name: getMaxListeners()
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: function getMaxListeners()
      parameters: []
      return:
        type:
          - number
        description: ''
    package: '@azure/ms-rest-azure-env'
  - uid: '@azure/ms-rest-azure-env.fs.FSWatcher.listenerCount'
    name: 'listenerCount(EventEmitter, string | symbol)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        static function listenerCount(emitter: EventEmitter, event: string |
        symbol)
      parameters:
        - id: emitter
          type:
            - '@azure/ms-rest-azure-env.events.EventEmitter.EventEmitter'
          description: ''
        - id: event
          type:
            - string | symbol
          description: ''
      return:
        type:
          - number
        description: ''
    package: '@azure/ms-rest-azure-env'
    deprecated:
      content: since v4.0.0
  - uid: '@azure/ms-rest-azure-env.fs.FSWatcher.listenerCount'
    name: listenerCount(string | symbol)
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function listenerCount(type: string | symbol)'
      parameters:
        - id: type
          type:
            - string | symbol
          description: ''
      return:
        type:
          - number
        description: ''
    package: '@azure/ms-rest-azure-env'
  - uid: '@azure/ms-rest-azure-env.fs.FSWatcher.listeners'
    name: listeners(string | symbol)
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function listeners(event: string | symbol)'
      parameters:
        - id: event
          type:
            - string | symbol
          description: ''
      return:
        type:
          - 'Function[]'
        description: ''
    package: '@azure/ms-rest-azure-env'
  - uid: '@azure/ms-rest-azure-env.fs.FSWatcher.off'
    name: 'off(string | symbol, (args: any[]) => void)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function off(event: string | symbol, listener: (args: any[]) => void)'
      parameters:
        - id: event
          type:
            - string | symbol
          description: ''
        - id: listener
          type:
            - '(args: any[]) => void'
          description: ''
      return:
        type:
          - this
        description: ''
    package: '@azure/ms-rest-azure-env'
  - uid: '@azure/ms-rest-azure-env.fs.FSWatcher.on_1'
    name: 'on("change", (eventType: string, filename: string | Buffer) => void)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function on(event: "change", listener: (eventType: string, filename:
        string | Buffer) => void)
      parameters:
        - id: event
          type:
            - '"change"'
          description: ''
        - id: listener
          type:
            - '(eventType: string, filename: string | Buffer) => void'
          description: ''
      return:
        type:
          - this
        description: ''
    package: '@azure/ms-rest-azure-env'
  - uid: '@azure/ms-rest-azure-env.fs.FSWatcher.on_2'
    name: 'on("error", (error: Error) => void)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function on(event: "error", listener: (error: Error) => void)'
      parameters:
        - id: event
          type:
            - '"error"'
          description: ''
        - id: listener
          type:
            - '(error: Error) => void'
          description: ''
      return:
        type:
          - this
        description: ''
    package: '@azure/ms-rest-azure-env'
  - uid: '@azure/ms-rest-azure-env.fs.FSWatcher.on'
    name: 'on(string, (args: any[]) => void)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function on(event: string, listener: (args: any[]) => void)'
      parameters:
        - id: event
          type:
            - string
          description: ''
        - id: listener
          type:
            - '(args: any[]) => void'
          description: ''
      return:
        type:
          - this
        description: ''
    package: '@azure/ms-rest-azure-env'
  - uid: '@azure/ms-rest-azure-env.fs.FSWatcher.once_1'
    name: 'once("change", (eventType: string, filename: string | Buffer) => void)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function once(event: "change", listener: (eventType: string, filename:
        string | Buffer) => void)
      parameters:
        - id: event
          type:
            - '"change"'
          description: ''
        - id: listener
          type:
            - '(eventType: string, filename: string | Buffer) => void'
          description: ''
      return:
        type:
          - this
        description: ''
    package: '@azure/ms-rest-azure-env'
  - uid: '@azure/ms-rest-azure-env.fs.FSWatcher.once_2'
    name: 'once("error", (error: Error) => void)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function once(event: "error", listener: (error: Error) => void)'
      parameters:
        - id: event
          type:
            - '"error"'
          description: ''
        - id: listener
          type:
            - '(error: Error) => void'
          description: ''
      return:
        type:
          - this
        description: ''
    package: '@azure/ms-rest-azure-env'
  - uid: '@azure/ms-rest-azure-env.fs.FSWatcher.once'
    name: 'once(string, (args: any[]) => void)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function once(event: string, listener: (args: any[]) => void)'
      parameters:
        - id: event
          type:
            - string
          description: ''
        - id: listener
          type:
            - '(args: any[]) => void'
          description: ''
      return:
        type:
          - this
        description: ''
    package: '@azure/ms-rest-azure-env'
  - uid: '@azure/ms-rest-azure-env.fs.FSWatcher.prependListener_1'
    name: >-
      prependListener("change", (eventType: string, filename: string | Buffer)
      => void)
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function prependListener(event: "change", listener: (eventType: string,
        filename: string | Buffer) => void)
      parameters:
        - id: event
          type:
            - '"change"'
          description: ''
        - id: listener
          type:
            - '(eventType: string, filename: string | Buffer) => void'
          description: ''
      return:
        type:
          - this
        description: ''
    package: '@azure/ms-rest-azure-env'
  - uid: '@azure/ms-rest-azure-env.fs.FSWatcher.prependListener_2'
    name: 'prependListener("error", (error: Error) => void)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function prependListener(event: "error", listener: (error: Error) =>
        void)
      parameters:
        - id: event
          type:
            - '"error"'
          description: ''
        - id: listener
          type:
            - '(error: Error) => void'
          description: ''
      return:
        type:
          - this
        description: ''
    package: '@azure/ms-rest-azure-env'
  - uid: '@azure/ms-rest-azure-env.fs.FSWatcher.prependListener'
    name: 'prependListener(string, (args: any[]) => void)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function prependListener(event: string, listener: (args: any[]) => void)'
      parameters:
        - id: event
          type:
            - string
          description: ''
        - id: listener
          type:
            - '(args: any[]) => void'
          description: ''
      return:
        type:
          - this
        description: ''
    package: '@azure/ms-rest-azure-env'
  - uid: '@azure/ms-rest-azure-env.fs.FSWatcher.prependOnceListener_1'
    name: >-
      prependOnceListener("change", (eventType: string, filename: string |
      Buffer) => void)
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function prependOnceListener(event: "change", listener: (eventType:
        string, filename: string | Buffer) => void)
      parameters:
        - id: event
          type:
            - '"change"'
          description: ''
        - id: listener
          type:
            - '(eventType: string, filename: string | Buffer) => void'
          description: ''
      return:
        type:
          - this
        description: ''
    package: '@azure/ms-rest-azure-env'
  - uid: '@azure/ms-rest-azure-env.fs.FSWatcher.prependOnceListener_2'
    name: 'prependOnceListener("error", (error: Error) => void)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function prependOnceListener(event: "error", listener: (error: Error) =>
        void)
      parameters:
        - id: event
          type:
            - '"error"'
          description: ''
        - id: listener
          type:
            - '(error: Error) => void'
          description: ''
      return:
        type:
          - this
        description: ''
    package: '@azure/ms-rest-azure-env'
  - uid: '@azure/ms-rest-azure-env.fs.FSWatcher.prependOnceListener'
    name: 'prependOnceListener(string, (args: any[]) => void)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function prependOnceListener(event: string, listener: (args: any[]) =>
        void)
      parameters:
        - id: event
          type:
            - string
          description: ''
        - id: listener
          type:
            - '(args: any[]) => void'
          description: ''
      return:
        type:
          - this
        description: ''
    package: '@azure/ms-rest-azure-env'
  - uid: '@azure/ms-rest-azure-env.fs.FSWatcher.rawListeners'
    name: rawListeners(string | symbol)
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function rawListeners(event: string | symbol)'
      parameters:
        - id: event
          type:
            - string | symbol
          description: ''
      return:
        type:
          - 'Function[]'
        description: ''
    package: '@azure/ms-rest-azure-env'
  - uid: '@azure/ms-rest-azure-env.fs.FSWatcher.removeAllListeners'
    name: removeAllListeners(string | symbol)
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function removeAllListeners(event?: string | symbol)'
      parameters:
        - id: event
          type:
            - string | symbol
          description: ''
          optional: true
      return:
        type:
          - this
        description: ''
    package: '@azure/ms-rest-azure-env'
  - uid: '@azure/ms-rest-azure-env.fs.FSWatcher.removeListener'
    name: 'removeListener(string | symbol, (args: any[]) => void)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function removeListener(event: string | symbol, listener: (args: any[])
        => void)
      parameters:
        - id: event
          type:
            - string | symbol
          description: ''
        - id: listener
          type:
            - '(args: any[]) => void'
          description: ''
      return:
        type:
          - this
        description: ''
    package: '@azure/ms-rest-azure-env'
  - uid: '@azure/ms-rest-azure-env.fs.FSWatcher.setMaxListeners'
    name: setMaxListeners(number)
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function setMaxListeners(n: number)'
      parameters:
        - id: 'n'
          type:
            - number
          description: ''
      return:
        type:
          - this
        description: ''
    package: '@azure/ms-rest-azure-env'
references:
  - uid: '@azure/ms-rest-azure-env.stream.internal.Readable'
    name: Readable
    spec.typeScript:
      - name: Readable
        fullName: Readable
        uid: '@azure/ms-rest-azure-env.stream.internal.Readable'
  - uid: '@azure/ms-rest-azure-env.stream.internal.ReadableOptions'
    name: ReadableOptions
    spec.typeScript:
      - name: ReadableOptions
        fullName: ReadableOptions
        uid: '@azure/ms-rest-azure-env.stream.internal.ReadableOptions'
  - uid: '@azure/ms-rest-azure-env.NodeJS.WritableStream'
    name: WritableStream
    spec.typeScript:
      - name: WritableStream
        fullName: WritableStream
        uid: '@azure/ms-rest-azure-env.NodeJS.WritableStream'
  - uid: '@azure/ms-rest-azure-env.BufferEncoding'
    name: BufferEncoding
    spec.typeScript:
      - name: BufferEncoding
        fullName: BufferEncoding
        uid: '@azure/ms-rest-azure-env.BufferEncoding'
  - uid: '@azure/ms-rest-azure-env.stream.internal.Writable'
    name: Writable
    spec.typeScript:
      - name: Writable
        fullName: Writable
        uid: '@azure/ms-rest-azure-env.stream.internal.Writable'
  - uid: '@azure/ms-rest-azure-env.stream.internal.WritableOptions'
    name: WritableOptions
    spec.typeScript:
      - name: WritableOptions
        fullName: WritableOptions
        uid: '@azure/ms-rest-azure-env.stream.internal.WritableOptions'
  - uid: '@azure/ms-rest-azure-env.Error'
    name: Error
    spec.typeScript:
      - name: Error
        fullName: Error
        uid: '@azure/ms-rest-azure-env.Error'
  - uid: '@azure/ms-rest-azure-env.events.EventEmitter.EventEmitter'
    name: EventEmitter
    spec.typeScript:
      - name: EventEmitter
        fullName: EventEmitter
        uid: '@azure/ms-rest-azure-env.events.EventEmitter.EventEmitter'
  - uid: '@azure/ms-rest-azure-env.events.EventEmitterOptions'
    name: EventEmitterOptions
    spec.typeScript:
      - name: EventEmitterOptions
        fullName: EventEmitterOptions
        uid: '@azure/ms-rest-azure-env.events.EventEmitterOptions'
  - uid: '@azure/ms-rest-azure-env.fs.PathLike'
    name: PathLike
    spec.typeScript:
      - name: PathLike
        fullName: PathLike
        uid: '@azure/ms-rest-azure-env.fs.PathLike'
  - uid: '@azure/ms-rest-azure-env.fs.PathLike | number'
    name: PathLike | number
    spec.typeScript:
      - name: PathLike
        fullName: PathLike
        uid: '@azure/ms-rest-azure-env.fs.PathLike'
      - name: ' | number'
        fullName: ' | number'
  - uid: '@azure/ms-rest-azure-env.fs.ReadStream'
    name: ReadStream
    spec.typeScript:
      - name: ReadStream
        fullName: ReadStream
        uid: '@azure/ms-rest-azure-env.fs.ReadStream'
  - uid: '@azure/ms-rest-azure-env.fs.WriteStream'
    name: WriteStream
    spec.typeScript:
      - name: WriteStream
        fullName: WriteStream
        uid: '@azure/ms-rest-azure-env.fs.WriteStream'
  - uid: '@azure/ms-rest-azure-env.fs.Stats'
    name: Stats
    spec.typeScript:
      - name: Stats
        fullName: Stats
        uid: '@azure/ms-rest-azure-env.fs.Stats'
  - uid: Object | @azure/ms-rest-azure-env.BufferEncoding | null
    name: BufferEncoding | null
    spec.typeScript:
      - name: 'Object | '
        fullName: 'Object | '
      - name: BufferEncoding
        fullName: BufferEncoding
        uid: '@azure/ms-rest-azure-env.BufferEncoding'
      - name: ' | null'
        fullName: ' | null'
  - uid: Object | @azure/ms-rest-azure-env.BufferEncoding | undefined | null
    name: BufferEncoding | undefined | null
    spec.typeScript:
      - name: 'Object | '
        fullName: 'Object | '
      - name: BufferEncoding
        fullName: BufferEncoding
        uid: '@azure/ms-rest-azure-env.BufferEncoding'
      - name: ' | undefined | null'
        fullName: ' | undefined | null'
