### YamlMime:UniversalReference
items:
  - uid: '@azure/abort-controller.http2.Http2ServerResponse'
    name: Http2ServerResponse
    fullName: Http2ServerResponse
    children:
      - '@azure/abort-controller.http2.Http2ServerResponse.addListener'
      - '@azure/abort-controller.http2.Http2ServerResponse.addListener_1'
      - '@azure/abort-controller.http2.Http2ServerResponse.addListener_2'
      - '@azure/abort-controller.http2.Http2ServerResponse.addListener_3'
      - '@azure/abort-controller.http2.Http2ServerResponse.addListener_4'
      - '@azure/abort-controller.http2.Http2ServerResponse.addListener_5'
      - '@azure/abort-controller.http2.Http2ServerResponse.addListener_6'
      - '@azure/abort-controller.http2.Http2ServerResponse.addTrailers'
      - '@azure/abort-controller.http2.Http2ServerResponse.connection'
      - '@azure/abort-controller.http2.Http2ServerResponse.createPushResponse'
      - '@azure/abort-controller.http2.Http2ServerResponse.emit'
      - '@azure/abort-controller.http2.Http2ServerResponse.emit_1'
      - '@azure/abort-controller.http2.Http2ServerResponse.emit_2'
      - '@azure/abort-controller.http2.Http2ServerResponse.emit_3'
      - '@azure/abort-controller.http2.Http2ServerResponse.emit_4'
      - '@azure/abort-controller.http2.Http2ServerResponse.emit_5'
      - '@azure/abort-controller.http2.Http2ServerResponse.emit_6'
      - '@azure/abort-controller.http2.Http2ServerResponse.end_2'
      - '@azure/abort-controller.http2.Http2ServerResponse.end_1'
      - '@azure/abort-controller.http2.Http2ServerResponse.end'
      - '@azure/abort-controller.http2.Http2ServerResponse.eventNames'
      - '@azure/abort-controller.http2.Http2ServerResponse.finished'
      - '@azure/abort-controller.http2.Http2ServerResponse.getHeader'
      - '@azure/abort-controller.http2.Http2ServerResponse.getHeaderNames'
      - '@azure/abort-controller.http2.Http2ServerResponse.getHeaders'
      - '@azure/abort-controller.http2.Http2ServerResponse.getMaxListeners'
      - '@azure/abort-controller.http2.Http2ServerResponse.hasHeader'
      - '@azure/abort-controller.http2.Http2ServerResponse.headersSent'
      - '@azure/abort-controller.http2.Http2ServerResponse.constructor'
      - '@azure/abort-controller.http2.Http2ServerResponse.listenerCount'
      - '@azure/abort-controller.http2.Http2ServerResponse.listeners'
      - '@azure/abort-controller.http2.Http2ServerResponse.off'
      - '@azure/abort-controller.http2.Http2ServerResponse.on'
      - '@azure/abort-controller.http2.Http2ServerResponse.on_1'
      - '@azure/abort-controller.http2.Http2ServerResponse.on_2'
      - '@azure/abort-controller.http2.Http2ServerResponse.on_3'
      - '@azure/abort-controller.http2.Http2ServerResponse.on_4'
      - '@azure/abort-controller.http2.Http2ServerResponse.on_5'
      - '@azure/abort-controller.http2.Http2ServerResponse.on_6'
      - '@azure/abort-controller.http2.Http2ServerResponse.once'
      - '@azure/abort-controller.http2.Http2ServerResponse.once_1'
      - '@azure/abort-controller.http2.Http2ServerResponse.once_2'
      - '@azure/abort-controller.http2.Http2ServerResponse.once_3'
      - '@azure/abort-controller.http2.Http2ServerResponse.once_4'
      - '@azure/abort-controller.http2.Http2ServerResponse.once_5'
      - '@azure/abort-controller.http2.Http2ServerResponse.once_6'
      - '@azure/abort-controller.http2.Http2ServerResponse.pipe'
      - '@azure/abort-controller.http2.Http2ServerResponse.prependListener'
      - '@azure/abort-controller.http2.Http2ServerResponse.prependListener_1'
      - '@azure/abort-controller.http2.Http2ServerResponse.prependListener_2'
      - '@azure/abort-controller.http2.Http2ServerResponse.prependListener_3'
      - '@azure/abort-controller.http2.Http2ServerResponse.prependListener_4'
      - '@azure/abort-controller.http2.Http2ServerResponse.prependListener_5'
      - '@azure/abort-controller.http2.Http2ServerResponse.prependListener_6'
      - '@azure/abort-controller.http2.Http2ServerResponse.prependOnceListener'
      - '@azure/abort-controller.http2.Http2ServerResponse.prependOnceListener_1'
      - '@azure/abort-controller.http2.Http2ServerResponse.prependOnceListener_2'
      - '@azure/abort-controller.http2.Http2ServerResponse.prependOnceListener_3'
      - '@azure/abort-controller.http2.Http2ServerResponse.prependOnceListener_4'
      - '@azure/abort-controller.http2.Http2ServerResponse.prependOnceListener_5'
      - '@azure/abort-controller.http2.Http2ServerResponse.prependOnceListener_6'
      - '@azure/abort-controller.http2.Http2ServerResponse.rawListeners'
      - '@azure/abort-controller.http2.Http2ServerResponse.removeAllListeners'
      - '@azure/abort-controller.http2.Http2ServerResponse.removeHeader'
      - '@azure/abort-controller.http2.Http2ServerResponse.removeListener'
      - '@azure/abort-controller.http2.Http2ServerResponse.sendDate'
      - '@azure/abort-controller.http2.Http2ServerResponse.setHeader'
      - '@azure/abort-controller.http2.Http2ServerResponse.setMaxListeners'
      - '@azure/abort-controller.http2.Http2ServerResponse.setTimeout'
      - '@azure/abort-controller.http2.Http2ServerResponse.socket'
      - '@azure/abort-controller.http2.Http2ServerResponse.statusCode'
      - '@azure/abort-controller.http2.Http2ServerResponse.statusMessage'
      - '@azure/abort-controller.http2.Http2ServerResponse.stream'
      - '@azure/abort-controller.http2.Http2ServerResponse.write_1'
      - '@azure/abort-controller.http2.Http2ServerResponse.write'
      - '@azure/abort-controller.http2.Http2ServerResponse.writeContinue'
      - '@azure/abort-controller.http2.Http2ServerResponse.writeHead'
      - '@azure/abort-controller.http2.Http2ServerResponse.writeHead_1'
    langs:
      - typeScript
    type: class
    summary: ''
    extends:
      name: '@azure/abort-controller.stream.internal.Stream'
    package: '@azure/abort-controller'
  - uid: '@azure/abort-controller.http2.Http2ServerResponse.addListener'
    name: 'addListener("close", () => void)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function addListener(event: "close", listener: () => void)'
      parameters:
        - id: event
          type:
            - '"close"'
          description: ''
        - id: listener
          type:
            - () => void
          description: ''
      return:
        type:
          - this
        description: ''
    package: '@azure/abort-controller'
  - uid: '@azure/abort-controller.http2.Http2ServerResponse.addListener_1'
    name: 'addListener("drain", () => void)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function addListener(event: "drain", listener: () => void)'
      parameters:
        - id: event
          type:
            - '"drain"'
          description: ''
        - id: listener
          type:
            - () => void
          description: ''
      return:
        type:
          - this
        description: ''
    package: '@azure/abort-controller'
  - uid: '@azure/abort-controller.http2.Http2ServerResponse.addListener_2'
    name: 'addListener("error", (error: Error) => void)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function addListener(event: "error", listener: (error: Error) => void)'
      parameters:
        - id: event
          type:
            - '"error"'
          description: ''
        - id: listener
          type:
            - '(error: Error) => void'
          description: ''
      return:
        type:
          - this
        description: ''
    package: '@azure/abort-controller'
  - uid: '@azure/abort-controller.http2.Http2ServerResponse.addListener_3'
    name: 'addListener("finish", () => void)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function addListener(event: "finish", listener: () => void)'
      parameters:
        - id: event
          type:
            - '"finish"'
          description: ''
        - id: listener
          type:
            - () => void
          description: ''
      return:
        type:
          - this
        description: ''
    package: '@azure/abort-controller'
  - uid: '@azure/abort-controller.http2.Http2ServerResponse.addListener_4'
    name: 'addListener("pipe", (src: stream.Readable) => void)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function addListener(event: "pipe", listener: (src: stream.Readable) =>
        void)
      parameters:
        - id: event
          type:
            - '"pipe"'
          description: ''
        - id: listener
          type:
            - '(src: stream.Readable) => void'
          description: ''
      return:
        type:
          - this
        description: ''
    package: '@azure/abort-controller'
  - uid: '@azure/abort-controller.http2.Http2ServerResponse.addListener_5'
    name: 'addListener("unpipe", (src: stream.Readable) => void)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function addListener(event: "unpipe", listener: (src: stream.Readable)
        => void)
      parameters:
        - id: event
          type:
            - '"unpipe"'
          description: ''
        - id: listener
          type:
            - '(src: stream.Readable) => void'
          description: ''
      return:
        type:
          - this
        description: ''
    package: '@azure/abort-controller'
  - uid: '@azure/abort-controller.http2.Http2ServerResponse.addListener_6'
    name: 'addListener(string | symbol, (args: any[]) => void)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function addListener(event: string | symbol, listener: (args: any[]) =>
        void)
      parameters:
        - id: event
          type:
            - string | symbol
          description: ''
        - id: listener
          type:
            - '(args: any[]) => void'
          description: ''
      return:
        type:
          - this
        description: ''
    package: '@azure/abort-controller'
  - uid: '@azure/abort-controller.http2.Http2ServerResponse.addTrailers'
    name: addTrailers(OutgoingHttpHeaders)
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function addTrailers(trailers: OutgoingHttpHeaders)'
      parameters:
        - id: trailers
          type:
            - '@azure/abort-controller.http.OutgoingHttpHeaders'
          description: ''
    package: '@azure/abort-controller'
  - uid: '@azure/abort-controller.http2.Http2ServerResponse.connection'
    name: connection
    fullName: connection
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    syntax:
      content: 'connection: Socket | TLSSocket'
      return:
        type:
          - >-
            @azure/abort-controller.net.Socket |
            @azure/abort-controller.tls.TLSSocket
        description: ''
    package: '@azure/abort-controller'
  - uid: '@azure/abort-controller.http2.Http2ServerResponse.createPushResponse'
    name: >-
      createPushResponse(OutgoingHttpHeaders, (err: Error | null, res:
      Http2ServerResponse) => void)
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function createPushResponse(headers: OutgoingHttpHeaders, callback:
        (err: Error | null, res: Http2ServerResponse) => void)
      parameters:
        - id: headers
          type:
            - '@azure/abort-controller.http.OutgoingHttpHeaders'
          description: ''
        - id: callback
          type:
            - '(err: Error | null, res: Http2ServerResponse) => void'
          description: ''
    package: '@azure/abort-controller'
  - uid: '@azure/abort-controller.http2.Http2ServerResponse.emit'
    name: emit("close")
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function emit(event: "close")'
      parameters:
        - id: event
          type:
            - '"close"'
          description: ''
      return:
        type:
          - boolean
        description: ''
    package: '@azure/abort-controller'
  - uid: '@azure/abort-controller.http2.Http2ServerResponse.emit_1'
    name: emit("drain")
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function emit(event: "drain")'
      parameters:
        - id: event
          type:
            - '"drain"'
          description: ''
      return:
        type:
          - boolean
        description: ''
    package: '@azure/abort-controller'
  - uid: '@azure/abort-controller.http2.Http2ServerResponse.emit_2'
    name: 'emit("error", Error)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function emit(event: "error", error: Error)'
      parameters:
        - id: event
          type:
            - '"error"'
          description: ''
        - id: error
          type:
            - Error
          description: ''
      return:
        type:
          - boolean
        description: ''
    package: '@azure/abort-controller'
  - uid: '@azure/abort-controller.http2.Http2ServerResponse.emit_3'
    name: emit("finish")
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function emit(event: "finish")'
      parameters:
        - id: event
          type:
            - '"finish"'
          description: ''
      return:
        type:
          - boolean
        description: ''
    package: '@azure/abort-controller'
  - uid: '@azure/abort-controller.http2.Http2ServerResponse.emit_4'
    name: 'emit("pipe", stream.Readable)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function emit(event: "pipe", src: stream.Readable)'
      parameters:
        - id: event
          type:
            - '"pipe"'
          description: ''
        - id: src
          type:
            - stream.Readable
          description: ''
      return:
        type:
          - boolean
        description: ''
    package: '@azure/abort-controller'
  - uid: '@azure/abort-controller.http2.Http2ServerResponse.emit_5'
    name: 'emit("unpipe", stream.Readable)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function emit(event: "unpipe", src: stream.Readable)'
      parameters:
        - id: event
          type:
            - '"unpipe"'
          description: ''
        - id: src
          type:
            - stream.Readable
          description: ''
      return:
        type:
          - boolean
        description: ''
    package: '@azure/abort-controller'
  - uid: '@azure/abort-controller.http2.Http2ServerResponse.emit_6'
    name: 'emit(string | symbol, any[])'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function emit(event: string | symbol, args: any[])'
      parameters:
        - id: event
          type:
            - string | symbol
          description: ''
        - id: args
          type:
            - 'any[]'
          description: ''
      return:
        type:
          - boolean
        description: ''
    package: '@azure/abort-controller'
  - uid: '@azure/abort-controller.http2.Http2ServerResponse.end_2'
    name: 'end(string | Uint8Array, string, undefined | () => void)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function end(data: string | Uint8Array, encoding: string, callback?:
        undefined | () => void)
      parameters:
        - id: data
          type:
            - string | Uint8Array
          description: ''
        - id: encoding
          type:
            - string
          description: ''
        - id: callback
          type:
            - undefined | () => void
          description: ''
          optional: true
    package: '@azure/abort-controller'
  - uid: '@azure/abort-controller.http2.Http2ServerResponse.end_1'
    name: 'end(string | Uint8Array, undefined | () => void)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function end(data: string | Uint8Array, callback?: undefined | () =>
        void)
      parameters:
        - id: data
          type:
            - string | Uint8Array
          description: ''
        - id: callback
          type:
            - undefined | () => void
          description: ''
          optional: true
    package: '@azure/abort-controller'
  - uid: '@azure/abort-controller.http2.Http2ServerResponse.end'
    name: end(undefined | () => void)
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function end(callback?: undefined | () => void)'
      parameters:
        - id: callback
          type:
            - undefined | () => void
          description: ''
          optional: true
    package: '@azure/abort-controller'
  - uid: '@azure/abort-controller.http2.Http2ServerResponse.eventNames'
    name: eventNames()
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: function eventNames()
      parameters: []
      return:
        type:
          - Array<string | symbol>
        description: ''
    package: '@azure/abort-controller'
  - uid: '@azure/abort-controller.http2.Http2ServerResponse.finished'
    name: finished
    fullName: finished
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    syntax:
      content: 'finished: boolean'
      return:
        type:
          - boolean
        description: ''
    package: '@azure/abort-controller'
  - uid: '@azure/abort-controller.http2.Http2ServerResponse.getHeader'
    name: getHeader(string)
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function getHeader(name: string)'
      parameters:
        - id: name
          type:
            - string
          description: ''
      return:
        type:
          - string
        description: ''
    package: '@azure/abort-controller'
  - uid: '@azure/abort-controller.http2.Http2ServerResponse.getHeaderNames'
    name: getHeaderNames()
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: function getHeaderNames()
      parameters: []
      return:
        type:
          - 'string[]'
        description: ''
    package: '@azure/abort-controller'
  - uid: '@azure/abort-controller.http2.Http2ServerResponse.getHeaders'
    name: getHeaders()
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: function getHeaders()
      parameters: []
      return:
        type:
          - '@azure/abort-controller.http.OutgoingHttpHeaders'
        description: ''
    package: '@azure/abort-controller'
  - uid: '@azure/abort-controller.http2.Http2ServerResponse.getMaxListeners'
    name: getMaxListeners()
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: function getMaxListeners()
      parameters: []
      return:
        type:
          - number
        description: ''
    package: '@azure/abort-controller'
  - uid: '@azure/abort-controller.http2.Http2ServerResponse.hasHeader'
    name: hasHeader(string)
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function hasHeader(name: string)'
      parameters:
        - id: name
          type:
            - string
          description: ''
      return:
        type:
          - boolean
        description: ''
    package: '@azure/abort-controller'
  - uid: '@azure/abort-controller.http2.Http2ServerResponse.headersSent'
    name: headersSent
    fullName: headersSent
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    syntax:
      content: 'headersSent: boolean'
      return:
        type:
          - boolean
        description: ''
    package: '@azure/abort-controller'
  - uid: '@azure/abort-controller.http2.Http2ServerResponse.constructor'
    name: Http2ServerResponse(ServerHttp2Stream)
    children: []
    type: constructor
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'new Http2ServerResponse(stream: ServerHttp2Stream)'
      parameters:
        - id: stream
          type:
            - '@azure/abort-controller.http2.ServerHttp2Stream'
          description: ''
    package: '@azure/abort-controller'
  - uid: '@azure/abort-controller.http2.Http2ServerResponse.listenerCount'
    name: listenerCount(string | symbol)
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function listenerCount(type: string | symbol)'
      parameters:
        - id: type
          type:
            - string | symbol
          description: ''
      return:
        type:
          - number
        description: ''
    package: '@azure/abort-controller'
  - uid: '@azure/abort-controller.http2.Http2ServerResponse.listeners'
    name: listeners(string | symbol)
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function listeners(event: string | symbol)'
      parameters:
        - id: event
          type:
            - string | symbol
          description: ''
      return:
        type:
          - 'Function[]'
        description: ''
    package: '@azure/abort-controller'
  - uid: '@azure/abort-controller.http2.Http2ServerResponse.off'
    name: 'off(string | symbol, (args: any[]) => void)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function off(event: string | symbol, listener: (args: any[]) => void)'
      parameters:
        - id: event
          type:
            - string | symbol
          description: ''
        - id: listener
          type:
            - '(args: any[]) => void'
          description: ''
      return:
        type:
          - this
        description: ''
    package: '@azure/abort-controller'
  - uid: '@azure/abort-controller.http2.Http2ServerResponse.on'
    name: 'on("close", () => void)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function on(event: "close", listener: () => void)'
      parameters:
        - id: event
          type:
            - '"close"'
          description: ''
        - id: listener
          type:
            - () => void
          description: ''
      return:
        type:
          - this
        description: ''
    package: '@azure/abort-controller'
  - uid: '@azure/abort-controller.http2.Http2ServerResponse.on_1'
    name: 'on("drain", () => void)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function on(event: "drain", listener: () => void)'
      parameters:
        - id: event
          type:
            - '"drain"'
          description: ''
        - id: listener
          type:
            - () => void
          description: ''
      return:
        type:
          - this
        description: ''
    package: '@azure/abort-controller'
  - uid: '@azure/abort-controller.http2.Http2ServerResponse.on_2'
    name: 'on("error", (error: Error) => void)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function on(event: "error", listener: (error: Error) => void)'
      parameters:
        - id: event
          type:
            - '"error"'
          description: ''
        - id: listener
          type:
            - '(error: Error) => void'
          description: ''
      return:
        type:
          - this
        description: ''
    package: '@azure/abort-controller'
  - uid: '@azure/abort-controller.http2.Http2ServerResponse.on_3'
    name: 'on("finish", () => void)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function on(event: "finish", listener: () => void)'
      parameters:
        - id: event
          type:
            - '"finish"'
          description: ''
        - id: listener
          type:
            - () => void
          description: ''
      return:
        type:
          - this
        description: ''
    package: '@azure/abort-controller'
  - uid: '@azure/abort-controller.http2.Http2ServerResponse.on_4'
    name: 'on("pipe", (src: stream.Readable) => void)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function on(event: "pipe", listener: (src: stream.Readable) => void)'
      parameters:
        - id: event
          type:
            - '"pipe"'
          description: ''
        - id: listener
          type:
            - '(src: stream.Readable) => void'
          description: ''
      return:
        type:
          - this
        description: ''
    package: '@azure/abort-controller'
  - uid: '@azure/abort-controller.http2.Http2ServerResponse.on_5'
    name: 'on("unpipe", (src: stream.Readable) => void)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function on(event: "unpipe", listener: (src: stream.Readable) => void)'
      parameters:
        - id: event
          type:
            - '"unpipe"'
          description: ''
        - id: listener
          type:
            - '(src: stream.Readable) => void'
          description: ''
      return:
        type:
          - this
        description: ''
    package: '@azure/abort-controller'
  - uid: '@azure/abort-controller.http2.Http2ServerResponse.on_6'
    name: 'on(string | symbol, (args: any[]) => void)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function on(event: string | symbol, listener: (args: any[]) => void)'
      parameters:
        - id: event
          type:
            - string | symbol
          description: ''
        - id: listener
          type:
            - '(args: any[]) => void'
          description: ''
      return:
        type:
          - this
        description: ''
    package: '@azure/abort-controller'
  - uid: '@azure/abort-controller.http2.Http2ServerResponse.once'
    name: 'once("close", () => void)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function once(event: "close", listener: () => void)'
      parameters:
        - id: event
          type:
            - '"close"'
          description: ''
        - id: listener
          type:
            - () => void
          description: ''
      return:
        type:
          - this
        description: ''
    package: '@azure/abort-controller'
  - uid: '@azure/abort-controller.http2.Http2ServerResponse.once_1'
    name: 'once("drain", () => void)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function once(event: "drain", listener: () => void)'
      parameters:
        - id: event
          type:
            - '"drain"'
          description: ''
        - id: listener
          type:
            - () => void
          description: ''
      return:
        type:
          - this
        description: ''
    package: '@azure/abort-controller'
  - uid: '@azure/abort-controller.http2.Http2ServerResponse.once_2'
    name: 'once("error", (error: Error) => void)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function once(event: "error", listener: (error: Error) => void)'
      parameters:
        - id: event
          type:
            - '"error"'
          description: ''
        - id: listener
          type:
            - '(error: Error) => void'
          description: ''
      return:
        type:
          - this
        description: ''
    package: '@azure/abort-controller'
  - uid: '@azure/abort-controller.http2.Http2ServerResponse.once_3'
    name: 'once("finish", () => void)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function once(event: "finish", listener: () => void)'
      parameters:
        - id: event
          type:
            - '"finish"'
          description: ''
        - id: listener
          type:
            - () => void
          description: ''
      return:
        type:
          - this
        description: ''
    package: '@azure/abort-controller'
  - uid: '@azure/abort-controller.http2.Http2ServerResponse.once_4'
    name: 'once("pipe", (src: stream.Readable) => void)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function once(event: "pipe", listener: (src: stream.Readable) => void)'
      parameters:
        - id: event
          type:
            - '"pipe"'
          description: ''
        - id: listener
          type:
            - '(src: stream.Readable) => void'
          description: ''
      return:
        type:
          - this
        description: ''
    package: '@azure/abort-controller'
  - uid: '@azure/abort-controller.http2.Http2ServerResponse.once_5'
    name: 'once("unpipe", (src: stream.Readable) => void)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function once(event: "unpipe", listener: (src: stream.Readable) => void)'
      parameters:
        - id: event
          type:
            - '"unpipe"'
          description: ''
        - id: listener
          type:
            - '(src: stream.Readable) => void'
          description: ''
      return:
        type:
          - this
        description: ''
    package: '@azure/abort-controller'
  - uid: '@azure/abort-controller.http2.Http2ServerResponse.once_6'
    name: 'once(string | symbol, (args: any[]) => void)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function once(event: string | symbol, listener: (args: any[]) => void)'
      parameters:
        - id: event
          type:
            - string | symbol
          description: ''
        - id: listener
          type:
            - '(args: any[]) => void'
          description: ''
      return:
        type:
          - this
        description: ''
    package: '@azure/abort-controller'
  - uid: '@azure/abort-controller.http2.Http2ServerResponse.pipe'
    name: 'pipe(T, undefined | Object)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function pipe<T>(destination: T, options?: undefined | Object)'
      parameters:
        - id: destination
          type:
            - T
          description: ''
        - id: options
          type:
            - undefined | Object
          description: ''
          optional: true
      return:
        type:
          - T
        description: ''
    package: '@azure/abort-controller'
  - uid: '@azure/abort-controller.http2.Http2ServerResponse.prependListener'
    name: 'prependListener("close", () => void)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function prependListener(event: "close", listener: () => void)'
      parameters:
        - id: event
          type:
            - '"close"'
          description: ''
        - id: listener
          type:
            - () => void
          description: ''
      return:
        type:
          - this
        description: ''
    package: '@azure/abort-controller'
  - uid: '@azure/abort-controller.http2.Http2ServerResponse.prependListener_1'
    name: 'prependListener("drain", () => void)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function prependListener(event: "drain", listener: () => void)'
      parameters:
        - id: event
          type:
            - '"drain"'
          description: ''
        - id: listener
          type:
            - () => void
          description: ''
      return:
        type:
          - this
        description: ''
    package: '@azure/abort-controller'
  - uid: '@azure/abort-controller.http2.Http2ServerResponse.prependListener_2'
    name: 'prependListener("error", (error: Error) => void)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function prependListener(event: "error", listener: (error: Error) =>
        void)
      parameters:
        - id: event
          type:
            - '"error"'
          description: ''
        - id: listener
          type:
            - '(error: Error) => void'
          description: ''
      return:
        type:
          - this
        description: ''
    package: '@azure/abort-controller'
  - uid: '@azure/abort-controller.http2.Http2ServerResponse.prependListener_3'
    name: 'prependListener("finish", () => void)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function prependListener(event: "finish", listener: () => void)'
      parameters:
        - id: event
          type:
            - '"finish"'
          description: ''
        - id: listener
          type:
            - () => void
          description: ''
      return:
        type:
          - this
        description: ''
    package: '@azure/abort-controller'
  - uid: '@azure/abort-controller.http2.Http2ServerResponse.prependListener_4'
    name: 'prependListener("pipe", (src: stream.Readable) => void)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function prependListener(event: "pipe", listener: (src: stream.Readable)
        => void)
      parameters:
        - id: event
          type:
            - '"pipe"'
          description: ''
        - id: listener
          type:
            - '(src: stream.Readable) => void'
          description: ''
      return:
        type:
          - this
        description: ''
    package: '@azure/abort-controller'
  - uid: '@azure/abort-controller.http2.Http2ServerResponse.prependListener_5'
    name: 'prependListener("unpipe", (src: stream.Readable) => void)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function prependListener(event: "unpipe", listener: (src:
        stream.Readable) => void)
      parameters:
        - id: event
          type:
            - '"unpipe"'
          description: ''
        - id: listener
          type:
            - '(src: stream.Readable) => void'
          description: ''
      return:
        type:
          - this
        description: ''
    package: '@azure/abort-controller'
  - uid: '@azure/abort-controller.http2.Http2ServerResponse.prependListener_6'
    name: 'prependListener(string | symbol, (args: any[]) => void)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function prependListener(event: string | symbol, listener: (args: any[])
        => void)
      parameters:
        - id: event
          type:
            - string | symbol
          description: ''
        - id: listener
          type:
            - '(args: any[]) => void'
          description: ''
      return:
        type:
          - this
        description: ''
    package: '@azure/abort-controller'
  - uid: '@azure/abort-controller.http2.Http2ServerResponse.prependOnceListener'
    name: 'prependOnceListener("close", () => void)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function prependOnceListener(event: "close", listener: () => void)'
      parameters:
        - id: event
          type:
            - '"close"'
          description: ''
        - id: listener
          type:
            - () => void
          description: ''
      return:
        type:
          - this
        description: ''
    package: '@azure/abort-controller'
  - uid: '@azure/abort-controller.http2.Http2ServerResponse.prependOnceListener_1'
    name: 'prependOnceListener("drain", () => void)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function prependOnceListener(event: "drain", listener: () => void)'
      parameters:
        - id: event
          type:
            - '"drain"'
          description: ''
        - id: listener
          type:
            - () => void
          description: ''
      return:
        type:
          - this
        description: ''
    package: '@azure/abort-controller'
  - uid: '@azure/abort-controller.http2.Http2ServerResponse.prependOnceListener_2'
    name: 'prependOnceListener("error", (error: Error) => void)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function prependOnceListener(event: "error", listener: (error: Error) =>
        void)
      parameters:
        - id: event
          type:
            - '"error"'
          description: ''
        - id: listener
          type:
            - '(error: Error) => void'
          description: ''
      return:
        type:
          - this
        description: ''
    package: '@azure/abort-controller'
  - uid: '@azure/abort-controller.http2.Http2ServerResponse.prependOnceListener_3'
    name: 'prependOnceListener("finish", () => void)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function prependOnceListener(event: "finish", listener: () => void)'
      parameters:
        - id: event
          type:
            - '"finish"'
          description: ''
        - id: listener
          type:
            - () => void
          description: ''
      return:
        type:
          - this
        description: ''
    package: '@azure/abort-controller'
  - uid: '@azure/abort-controller.http2.Http2ServerResponse.prependOnceListener_4'
    name: 'prependOnceListener("pipe", (src: stream.Readable) => void)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function prependOnceListener(event: "pipe", listener: (src:
        stream.Readable) => void)
      parameters:
        - id: event
          type:
            - '"pipe"'
          description: ''
        - id: listener
          type:
            - '(src: stream.Readable) => void'
          description: ''
      return:
        type:
          - this
        description: ''
    package: '@azure/abort-controller'
  - uid: '@azure/abort-controller.http2.Http2ServerResponse.prependOnceListener_5'
    name: 'prependOnceListener("unpipe", (src: stream.Readable) => void)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function prependOnceListener(event: "unpipe", listener: (src:
        stream.Readable) => void)
      parameters:
        - id: event
          type:
            - '"unpipe"'
          description: ''
        - id: listener
          type:
            - '(src: stream.Readable) => void'
          description: ''
      return:
        type:
          - this
        description: ''
    package: '@azure/abort-controller'
  - uid: '@azure/abort-controller.http2.Http2ServerResponse.prependOnceListener_6'
    name: 'prependOnceListener(string | symbol, (args: any[]) => void)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function prependOnceListener(event: string | symbol, listener: (args:
        any[]) => void)
      parameters:
        - id: event
          type:
            - string | symbol
          description: ''
        - id: listener
          type:
            - '(args: any[]) => void'
          description: ''
      return:
        type:
          - this
        description: ''
    package: '@azure/abort-controller'
  - uid: '@azure/abort-controller.http2.Http2ServerResponse.rawListeners'
    name: rawListeners(string | symbol)
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function rawListeners(event: string | symbol)'
      parameters:
        - id: event
          type:
            - string | symbol
          description: ''
      return:
        type:
          - 'Function[]'
        description: ''
    package: '@azure/abort-controller'
  - uid: '@azure/abort-controller.http2.Http2ServerResponse.removeAllListeners'
    name: removeAllListeners(string | symbol)
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function removeAllListeners(event?: string | symbol)'
      parameters:
        - id: event
          type:
            - string | symbol
          description: ''
          optional: true
      return:
        type:
          - this
        description: ''
    package: '@azure/abort-controller'
  - uid: '@azure/abort-controller.http2.Http2ServerResponse.removeHeader'
    name: removeHeader(string)
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function removeHeader(name: string)'
      parameters:
        - id: name
          type:
            - string
          description: ''
    package: '@azure/abort-controller'
  - uid: '@azure/abort-controller.http2.Http2ServerResponse.removeListener'
    name: 'removeListener(string | symbol, (args: any[]) => void)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function removeListener(event: string | symbol, listener: (args: any[])
        => void)
      parameters:
        - id: event
          type:
            - string | symbol
          description: ''
        - id: listener
          type:
            - '(args: any[]) => void'
          description: ''
      return:
        type:
          - this
        description: ''
    package: '@azure/abort-controller'
  - uid: '@azure/abort-controller.http2.Http2ServerResponse.sendDate'
    name: sendDate
    fullName: sendDate
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    syntax:
      content: 'sendDate: boolean'
      return:
        type:
          - boolean
        description: ''
    package: '@azure/abort-controller'
  - uid: '@azure/abort-controller.http2.Http2ServerResponse.setHeader'
    name: 'setHeader(string, number | string | string[])'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function setHeader(name: string, value: number | string | string[])'
      parameters:
        - id: name
          type:
            - string
          description: ''
        - id: value
          type:
            - 'number | string | string[]'
          description: ''
    package: '@azure/abort-controller'
  - uid: '@azure/abort-controller.http2.Http2ServerResponse.setMaxListeners'
    name: setMaxListeners(number)
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function setMaxListeners(n: number)'
      parameters:
        - id: 'n'
          type:
            - number
          description: ''
      return:
        type:
          - this
        description: ''
    package: '@azure/abort-controller'
  - uid: '@azure/abort-controller.http2.Http2ServerResponse.setTimeout'
    name: 'setTimeout(number, undefined | () => void)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function setTimeout(msecs: number, callback?: undefined | () => void)'
      parameters:
        - id: msecs
          type:
            - number
          description: ''
        - id: callback
          type:
            - undefined | () => void
          description: ''
          optional: true
    package: '@azure/abort-controller'
  - uid: '@azure/abort-controller.http2.Http2ServerResponse.socket'
    name: socket
    fullName: socket
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    syntax:
      content: 'socket: Socket | TLSSocket'
      return:
        type:
          - >-
            @azure/abort-controller.net.Socket |
            @azure/abort-controller.tls.TLSSocket
        description: ''
    package: '@azure/abort-controller'
  - uid: '@azure/abort-controller.http2.Http2ServerResponse.statusCode'
    name: statusCode
    fullName: statusCode
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    syntax:
      content: 'statusCode: number'
      return:
        type:
          - number
        description: ''
    package: '@azure/abort-controller'
  - uid: '@azure/abort-controller.http2.Http2ServerResponse.statusMessage'
    name: statusMessage
    fullName: statusMessage
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    syntax:
      content: 'statusMessage: Object'
      return:
        type:
          - Object
        description: ''
    package: '@azure/abort-controller'
  - uid: '@azure/abort-controller.http2.Http2ServerResponse.stream'
    name: stream
    fullName: stream
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    syntax:
      content: 'stream: ServerHttp2Stream'
      return:
        type:
          - '@azure/abort-controller.http2.ServerHttp2Stream'
        description: ''
    package: '@azure/abort-controller'
  - uid: '@azure/abort-controller.http2.Http2ServerResponse.write_1'
    name: 'write(string | Uint8Array, string, undefined | (err: Error) => void)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function write(chunk: string | Uint8Array, encoding: string, callback?:
        undefined | (err: Error) => void)
      parameters:
        - id: chunk
          type:
            - string | Uint8Array
          description: ''
        - id: encoding
          type:
            - string
          description: ''
        - id: callback
          type:
            - 'undefined | (err: Error) => void'
          description: ''
          optional: true
      return:
        type:
          - boolean
        description: ''
    package: '@azure/abort-controller'
  - uid: '@azure/abort-controller.http2.Http2ServerResponse.write'
    name: 'write(string | Uint8Array, undefined | (err: Error) => void)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function write(chunk: string | Uint8Array, callback?: undefined | (err:
        Error) => void)
      parameters:
        - id: chunk
          type:
            - string | Uint8Array
          description: ''
        - id: callback
          type:
            - 'undefined | (err: Error) => void'
          description: ''
          optional: true
      return:
        type:
          - boolean
        description: ''
    package: '@azure/abort-controller'
  - uid: '@azure/abort-controller.http2.Http2ServerResponse.writeContinue'
    name: writeContinue()
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: function writeContinue()
      parameters: []
    package: '@azure/abort-controller'
  - uid: '@azure/abort-controller.http2.Http2ServerResponse.writeHead'
    name: 'writeHead(number, OutgoingHttpHeaders)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function writeHead(statusCode: number, headers?: OutgoingHttpHeaders)'
      parameters:
        - id: statusCode
          type:
            - number
          description: ''
        - id: headers
          type:
            - '@azure/abort-controller.http.OutgoingHttpHeaders'
          description: ''
          optional: true
      return:
        type:
          - this
        description: ''
    package: '@azure/abort-controller'
  - uid: '@azure/abort-controller.http2.Http2ServerResponse.writeHead_1'
    name: 'writeHead(number, string, OutgoingHttpHeaders)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function writeHead(statusCode: number, statusMessage: string, headers?:
        OutgoingHttpHeaders)
      parameters:
        - id: statusCode
          type:
            - number
          description: ''
        - id: statusMessage
          type:
            - string
          description: ''
        - id: headers
          type:
            - '@azure/abort-controller.http.OutgoingHttpHeaders'
          description: ''
          optional: true
      return:
        type:
          - this
        description: ''
    package: '@azure/abort-controller'
references:
  - uid: '@azure/abort-controller.stream.internal.Readable'
    name: Readable
    spec.typeScript:
      - name: Readable
        fullName: Readable
        uid: '@azure/abort-controller.stream.internal.Readable'
  - uid: '@azure/abort-controller.http2.ServerHttp2Stream'
    name: ServerHttp2Stream
    spec.typeScript:
      - name: ServerHttp2Stream
        fullName: ServerHttp2Stream
        uid: '@azure/abort-controller.http2.ServerHttp2Stream'
  - uid: '@azure/abort-controller.http2.IncomingHttpHeaders'
    name: IncomingHttpHeaders
    spec.typeScript:
      - name: IncomingHttpHeaders
        fullName: IncomingHttpHeaders
        uid: '@azure/abort-controller.http2.IncomingHttpHeaders'
  - uid: '@azure/abort-controller.net.Socket | @azure/abort-controller.tls.TLSSocket'
    name: TLSSocket
    spec.typeScript:
      - name: Socket
        fullName: Socket
        uid: '@azure/abort-controller.net.Socket'
      - name: ' | '
        fullName: ' | '
      - name: TLSSocket
        fullName: TLSSocket
        uid: '@azure/abort-controller.tls.TLSSocket'
  - uid: '@azure/abort-controller.AbortError.Error'
    name: Error
    spec.typeScript:
      - name: Error
        fullName: Error
        uid: '@azure/abort-controller.AbortError.Error'
  - uid: '@azure/abort-controller.NodeJS.WritableStream'
    name: WritableStream
    spec.typeScript:
      - name: WritableStream
        fullName: WritableStream
        uid: '@azure/abort-controller.NodeJS.WritableStream'
  - uid: '@azure/abort-controller.BufferEncoding'
    name: BufferEncoding
    spec.typeScript:
      - name: BufferEncoding
        fullName: BufferEncoding
        uid: '@azure/abort-controller.BufferEncoding'
  - uid: '@azure/abort-controller.NodeJS.ReadableStream'
    name: ReadableStream
    spec.typeScript:
      - name: ReadableStream
        fullName: ReadableStream
        uid: '@azure/abort-controller.NodeJS.ReadableStream'
  - uid: '@azure/abort-controller.stream.internal.ReadableOptions'
    name: ReadableOptions
    spec.typeScript:
      - name: ReadableOptions
        fullName: ReadableOptions
        uid: '@azure/abort-controller.stream.internal.ReadableOptions'
  - uid: '@azure/abort-controller.stream.internal.Stream'
    name: Stream
    spec.typeScript:
      - name: Stream
        fullName: Stream
        uid: '@azure/abort-controller.stream.internal.Stream'
  - uid: '@azure/abort-controller.http.OutgoingHttpHeaders'
    name: OutgoingHttpHeaders
    spec.typeScript:
      - name: OutgoingHttpHeaders
        fullName: OutgoingHttpHeaders
        uid: '@azure/abort-controller.http.OutgoingHttpHeaders'
  - uid: number | string | @azure/abort-controller.url.URL
    name: URL
    spec.typeScript:
      - name: 'number | string | '
        fullName: 'number | string | '
      - name: URL
        fullName: URL
        uid: '@azure/abort-controller.url.URL'
  - uid: '@azure/abort-controller.http2.Http2Session'
    name: Http2Session
    spec.typeScript:
      - name: Http2Session
        fullName: Http2Session
        uid: '@azure/abort-controller.http2.Http2Session'
  - uid: '@azure/abort-controller.http2.Settings'
    name: Settings
    spec.typeScript:
      - name: Settings
        fullName: Settings
        uid: '@azure/abort-controller.http2.Settings'
  - uid: '@azure/abort-controller.http2.SessionState'
    name: SessionState
    spec.typeScript:
      - name: SessionState
        fullName: SessionState
        uid: '@azure/abort-controller.http2.SessionState'
  - uid: '@azure/abort-controller.http2.ClientHttp2Session'
    name: ClientHttp2Session
    spec.typeScript:
      - name: ClientHttp2Session
        fullName: ClientHttp2Session
        uid: '@azure/abort-controller.http2.ClientHttp2Session'
  - uid: '@azure/abort-controller.http2.ClientHttp2Stream'
    name: ClientHttp2Stream
    spec.typeScript:
      - name: ClientHttp2Stream
        fullName: ClientHttp2Stream
        uid: '@azure/abort-controller.http2.ClientHttp2Stream'
  - uid: >-
      @azure/abort-controller.http2.IncomingHttpHeaders &
      @azure/abort-controller.http2.IncomingHttpStatusHeader
    name: IncomingHttpStatusHeader
    spec.typeScript:
      - name: IncomingHttpHeaders
        fullName: IncomingHttpHeaders
        uid: '@azure/abort-controller.http2.IncomingHttpHeaders'
      - name: ' & '
        fullName: ' & '
      - name: IncomingHttpStatusHeader
        fullName: IncomingHttpStatusHeader
        uid: '@azure/abort-controller.http2.IncomingHttpStatusHeader'
  - uid: '@azure/abort-controller.NodeJS.ArrayBufferView'
    name: ArrayBufferView
    spec.typeScript:
      - name: ArrayBufferView
        fullName: ArrayBufferView
        uid: '@azure/abort-controller.NodeJS.ArrayBufferView'
  - uid: '@azure/abort-controller.http2.ClientSessionRequestOptions'
    name: ClientSessionRequestOptions
    spec.typeScript:
      - name: ClientSessionRequestOptions
        fullName: ClientSessionRequestOptions
        uid: '@azure/abort-controller.http2.ClientSessionRequestOptions'
  - uid: '@azure/abort-controller.http2.Http2Stream'
    name: Http2Stream
    spec.typeScript:
      - name: Http2Stream
        fullName: Http2Stream
        uid: '@azure/abort-controller.http2.Http2Stream'
  - uid: '@azure/abort-controller.stream.internal.DuplexOptions'
    name: DuplexOptions
    spec.typeScript:
      - name: DuplexOptions
        fullName: DuplexOptions
        uid: '@azure/abort-controller.stream.internal.DuplexOptions'
  - uid: '@azure/abort-controller.http.OutgoingHttpHeaders[]'
    name: 'OutgoingHttpHeaders[]'
    spec.typeScript:
      - name: OutgoingHttpHeaders
        fullName: OutgoingHttpHeaders
        uid: '@azure/abort-controller.http.OutgoingHttpHeaders'
      - name: '[]'
        fullName: '[]'
  - uid: '@azure/abort-controller.http2.StreamState'
    name: StreamState
    spec.typeScript:
      - name: StreamState
        fullName: StreamState
        uid: '@azure/abort-controller.http2.StreamState'
  - uid: '@azure/abort-controller.http2.StreamPriorityOptions'
    name: StreamPriorityOptions
    spec.typeScript:
      - name: StreamPriorityOptions
        fullName: StreamPriorityOptions
        uid: '@azure/abort-controller.http2.StreamPriorityOptions'
  - uid: '@azure/abort-controller.http2.SessionOptions'
    name: SessionOptions
    spec.typeScript:
      - name: SessionOptions
        fullName: SessionOptions
        uid: '@azure/abort-controller.http2.SessionOptions'
  - uid: '@azure/abort-controller.tls.Server'
    name: Server
    spec.typeScript:
      - name: Server
        fullName: Server
        uid: '@azure/abort-controller.tls.Server'
  - uid: '@azure/abort-controller.tls.SecureContextOptions'
    name: SecureContextOptions
    spec.typeScript:
      - name: SecureContextOptions
        fullName: SecureContextOptions
        uid: '@azure/abort-controller.tls.SecureContextOptions'
  - uid: '@azure/abort-controller.net.AddressInfo | string | null'
    name: AddressInfo | string | null
    spec.typeScript:
      - name: AddressInfo
        fullName: AddressInfo
        uid: '@azure/abort-controller.net.AddressInfo'
      - name: ' | string | null'
        fullName: ' | string | null'
  - uid: '@azure/abort-controller.http2.Http2ServerRequest'
    name: Http2ServerRequest
    spec.typeScript:
      - name: Http2ServerRequest
        fullName: Http2ServerRequest
        uid: '@azure/abort-controller.http2.Http2ServerRequest'
  - uid: '@azure/abort-controller.http2.Http2ServerResponse'
    name: Http2ServerResponse
    spec.typeScript:
      - name: Http2ServerResponse
        fullName: Http2ServerResponse
        uid: '@azure/abort-controller.http2.Http2ServerResponse'
  - uid: '@azure/abort-controller.http2.ServerHttp2Session'
    name: ServerHttp2Session
    spec.typeScript:
      - name: ServerHttp2Session
        fullName: ServerHttp2Session
        uid: '@azure/abort-controller.http2.ServerHttp2Session'
  - uid: '@azure/abort-controller.tls.TLSSocket'
    name: TLSSocket
    spec.typeScript:
      - name: TLSSocket
        fullName: TLSSocket
        uid: '@azure/abort-controller.tls.TLSSocket'
  - uid: '@azure/abort-controller.net.ListenOptions'
    name: ListenOptions
    spec.typeScript:
      - name: ListenOptions
        fullName: ListenOptions
        uid: '@azure/abort-controller.net.ListenOptions'
  - uid: '@azure/abort-controller.net.Server'
    name: Server
    spec.typeScript:
      - name: Server
        fullName: Server
        uid: '@azure/abort-controller.net.Server'
  - uid: '@azure/abort-controller.events.EventEmitter.EventEmitter'
    name: EventEmitter
    spec.typeScript:
      - name: EventEmitter
        fullName: EventEmitter
        uid: '@azure/abort-controller.events.EventEmitter.EventEmitter'
  - uid: '@azure/abort-controller.events.EventEmitterOptions'
    name: EventEmitterOptions
    spec.typeScript:
      - name: EventEmitterOptions
        fullName: EventEmitterOptions
        uid: '@azure/abort-controller.events.EventEmitterOptions'
  - uid: '@azure/abort-controller.stream.internal.Duplex'
    name: Duplex
    spec.typeScript:
      - name: Duplex
        fullName: Duplex
        uid: '@azure/abort-controller.stream.internal.Duplex'
  - uid: '@azure/abort-controller.http.IncomingHttpHeaders'
    name: IncomingHttpHeaders
    spec.typeScript:
      - name: IncomingHttpHeaders
        fullName: IncomingHttpHeaders
        uid: '@azure/abort-controller.http.IncomingHttpHeaders'
  - uid: '@azure/abort-controller.http2.ClientSessionOptions'
    name: ClientSessionOptions
    spec.typeScript:
      - name: ClientSessionOptions
        fullName: ClientSessionOptions
        uid: '@azure/abort-controller.http2.ClientSessionOptions'
  - uid: undefined | @azure/abort-controller.tls.checkServerIdentity
    name: checkServerIdentity
    spec.typeScript:
      - name: 'undefined | '
        fullName: 'undefined | '
      - name: checkServerIdentity
        fullName: checkServerIdentity
        uid: '@azure/abort-controller.tls.checkServerIdentity'
  - uid: string | Buffer | Array<Buffer | @azure/abort-controller.tls.KeyObject>
    name: KeyObject>
    spec.typeScript:
      - name: 'string | Buffer | Array<Buffer | '
        fullName: 'string | Buffer | Array<Buffer | '
      - name: KeyObject
        fullName: KeyObject
        uid: '@azure/abort-controller.tls.KeyObject'
      - name: '>'
        fullName: '>'
  - uid: '@azure/abort-controller.tls.SecureVersion'
    name: SecureVersion
    spec.typeScript:
      - name: SecureVersion
        fullName: SecureVersion
        uid: '@azure/abort-controller.tls.SecureVersion'
  - uid: >-
      string | Buffer | Array<string | Buffer |
      @azure/abort-controller.tls.PxfObject>
    name: PxfObject>
    spec.typeScript:
      - name: 'string | Buffer | Array<string | Buffer | '
        fullName: 'string | Buffer | Array<string | Buffer | '
      - name: PxfObject
        fullName: PxfObject
        uid: '@azure/abort-controller.tls.PxfObject'
      - name: '>'
        fullName: '>'
  - uid: '@azure/abort-controller.tls.SecureContext'
    name: SecureContext
    spec.typeScript:
      - name: SecureContext
        fullName: SecureContext
        uid: '@azure/abort-controller.tls.SecureContext'
  - uid: '@azure/abort-controller.Buffer'
    name: Buffer
    spec.typeScript:
      - name: Buffer
        fullName: Buffer
        uid: '@azure/abort-controller.Buffer'
  - uid: '@azure/abort-controller.tls.PSKCallbackNegotation | null'
    name: PSKCallbackNegotation | null
    spec.typeScript:
      - name: PSKCallbackNegotation
        fullName: PSKCallbackNegotation
        uid: '@azure/abort-controller.tls.PSKCallbackNegotation'
      - name: ' | null'
        fullName: ' | null'
  - uid: '@azure/abort-controller.http2.SecureServerSessionOptions'
    name: SecureServerSessionOptions
    spec.typeScript:
      - name: SecureServerSessionOptions
        fullName: SecureServerSessionOptions
        uid: '@azure/abort-controller.http2.SecureServerSessionOptions'
  - uid: undefined | @azure/abort-controller.http.IncomingMessage
    name: IncomingMessage
    spec.typeScript:
      - name: 'undefined | '
        fullName: 'undefined | '
      - name: IncomingMessage
        fullName: IncomingMessage
        uid: '@azure/abort-controller.http.IncomingMessage'
  - uid: undefined | @azure/abort-controller.http.ServerResponse
    name: ServerResponse
    spec.typeScript:
      - name: 'undefined | '
        fullName: 'undefined | '
      - name: ServerResponse
        fullName: ServerResponse
        uid: '@azure/abort-controller.http.ServerResponse'
  - uid: undefined | @azure/abort-controller.http2.Http2ServerRequest
    name: Http2ServerRequest
    spec.typeScript:
      - name: 'undefined | '
        fullName: 'undefined | '
      - name: Http2ServerRequest
        fullName: Http2ServerRequest
        uid: '@azure/abort-controller.http2.Http2ServerRequest'
  - uid: undefined | @azure/abort-controller.http2.Http2ServerResponse
    name: Http2ServerResponse
    spec.typeScript:
      - name: 'undefined | '
        fullName: 'undefined | '
      - name: Http2ServerResponse
        fullName: Http2ServerResponse
        uid: '@azure/abort-controller.http2.Http2ServerResponse'
  - uid: '@azure/abort-controller.url.URL'
    name: URL
    spec.typeScript:
      - name: URL
        fullName: URL
        uid: '@azure/abort-controller.url.URL'
  - uid: DataView | @azure/abort-controller.NodeJS.TypedArray | null
    name: TypedArray | null
    spec.typeScript:
      - name: 'DataView | '
        fullName: 'DataView | '
      - name: TypedArray
        fullName: TypedArray
        uid: '@azure/abort-controller.NodeJS.TypedArray'
      - name: ' | null'
        fullName: ' | null'
  - uid: '@azure/abort-controller.http2.ServerSessionOptions'
    name: ServerSessionOptions
    spec.typeScript:
      - name: ServerSessionOptions
        fullName: ServerSessionOptions
        uid: '@azure/abort-controller.http2.ServerSessionOptions'
  - uid: >-
      @azure/abort-controller.http2.Http2Server |
      @azure/abort-controller.http2.Http2SecureServer
    name: Http2SecureServer
    spec.typeScript:
      - name: Http2Server
        fullName: Http2Server
        uid: '@azure/abort-controller.http2.Http2Server'
      - name: ' | '
        fullName: ' | '
      - name: Http2SecureServer
        fullName: Http2SecureServer
        uid: '@azure/abort-controller.http2.Http2SecureServer'
  - uid: >-
      number | string | @azure/abort-controller.url.URL |
      @azure/abort-controller.http2.AlternativeServiceOptions
    name: AlternativeServiceOptions
    spec.typeScript:
      - name: 'number | string | '
        fullName: 'number | string | '
      - name: URL
        fullName: URL
        uid: '@azure/abort-controller.url.URL'
      - name: ' | '
        fullName: ' | '
      - name: AlternativeServiceOptions
        fullName: AlternativeServiceOptions
        uid: '@azure/abort-controller.http2.AlternativeServiceOptions'
  - uid: Array<string | @azure/abort-controller.url.URL | Object>
    name: URL | Object>
    spec.typeScript:
      - name: 'Array<string | '
        fullName: 'Array<string | '
      - name: URL
        fullName: URL
        uid: '@azure/abort-controller.url.URL'
      - name: ' | Object>'
        fullName: ' | Object>'
  - uid: '@azure/abort-controller.http2.ServerStreamResponseOptions'
    name: ServerStreamResponseOptions
    spec.typeScript:
      - name: ServerStreamResponseOptions
        fullName: ServerStreamResponseOptions
        uid: '@azure/abort-controller.http2.ServerStreamResponseOptions'
  - uid: number | @azure/abort-controller.fs.promises.FileHandle
    name: FileHandle
    spec.typeScript:
      - name: 'number | '
        fullName: 'number | '
      - name: FileHandle
        fullName: FileHandle
        uid: '@azure/abort-controller.fs.promises.FileHandle'
  - uid: '@azure/abort-controller.http2.ServerStreamFileResponseOptions'
    name: ServerStreamFileResponseOptions
    spec.typeScript:
      - name: ServerStreamFileResponseOptions
        fullName: ServerStreamFileResponseOptions
        uid: '@azure/abort-controller.http2.ServerStreamFileResponseOptions'
  - uid: '@azure/abort-controller.http2.ServerStreamFileResponseOptionsWithError'
    name: ServerStreamFileResponseOptionsWithError
    spec.typeScript:
      - name: ServerStreamFileResponseOptionsWithError
        fullName: ServerStreamFileResponseOptionsWithError
        uid: '@azure/abort-controller.http2.ServerStreamFileResponseOptionsWithError'
  - uid: '@azure/abort-controller.fs.Stats'
    name: Stats
    spec.typeScript:
      - name: Stats
        fullName: Stats
        uid: '@azure/abort-controller.fs.Stats'
  - uid: '@azure/abort-controller.http2.StatOptions'
    name: StatOptions
    spec.typeScript:
      - name: StatOptions
        fullName: StatOptions
        uid: '@azure/abort-controller.http2.StatOptions'
  - uid: '@azure/abort-controller.NodeJS.ErrnoException'
    name: ErrnoException
    spec.typeScript:
      - name: ErrnoException
        fullName: ErrnoException
        uid: '@azure/abort-controller.NodeJS.ErrnoException'
  - uid: string | @azure/abort-controller.url.URL
    name: URL
    spec.typeScript:
      - name: 'string | '
        fullName: 'string | '
      - name: URL
        fullName: URL
        uid: '@azure/abort-controller.url.URL'
  - uid: >-
      @azure/abort-controller.http2.ClientSessionOptions |
      @azure/abort-controller.http2.SecureClientSessionOptions
    name: SecureClientSessionOptions
    spec.typeScript:
      - name: ClientSessionOptions
        fullName: ClientSessionOptions
        uid: '@azure/abort-controller.http2.ClientSessionOptions'
      - name: ' | '
        fullName: ' | '
      - name: SecureClientSessionOptions
        fullName: SecureClientSessionOptions
        uid: '@azure/abort-controller.http2.SecureClientSessionOptions'
  - uid: '@azure/abort-controller.http2.Http2SecureServer'
    name: Http2SecureServer
    spec.typeScript:
      - name: Http2SecureServer
        fullName: Http2SecureServer
        uid: '@azure/abort-controller.http2.Http2SecureServer'
  - uid: '@azure/abort-controller.http2.SecureServerOptions'
    name: SecureServerOptions
    spec.typeScript:
      - name: SecureServerOptions
        fullName: SecureServerOptions
        uid: '@azure/abort-controller.http2.SecureServerOptions'
  - uid: '@azure/abort-controller.http2.Http2Server'
    name: Http2Server
    spec.typeScript:
      - name: Http2Server
        fullName: Http2Server
        uid: '@azure/abort-controller.http2.Http2Server'
  - uid: '@azure/abort-controller.http2.ServerOptions'
    name: ServerOptions
    spec.typeScript:
      - name: ServerOptions
        fullName: ServerOptions
        uid: '@azure/abort-controller.http2.ServerOptions'
