### YamlMime:UniversalReference
items:
  - uid: '@azure/abort-controller.net'
    name: net
    langs:
      - typeScript
    fullName: net
    children:
      - '@azure/abort-controller.net.AddressInfo'
      - '@azure/abort-controller.net.connect'
      - '@azure/abort-controller.net.connect_1'
      - '@azure/abort-controller.net.connect_2'
      - '@azure/abort-controller.net.ConnectOpts'
      - '@azure/abort-controller.net.createConnection'
      - '@azure/abort-controller.net.createConnection_1'
      - '@azure/abort-controller.net.createConnection_2'
      - '@azure/abort-controller.net.createServer'
      - '@azure/abort-controller.net.createServer_1'
      - '@azure/abort-controller.net.IpcNetConnectOpts'
      - '@azure/abort-controller.net.IpcSocketConnectOpts'
      - '@azure/abort-controller.net.isIP'
      - '@azure/abort-controller.net.isIPv4'
      - '@azure/abort-controller.net.isIPv6'
      - '@azure/abort-controller.net.ListenOptions'
      - '@azure/abort-controller.net.LookupFunction'
      - '@azure/abort-controller.net.NetConnectOpts'
      - '@azure/abort-controller.net.OnReadOpts'
      - '@azure/abort-controller.net.Server'
      - '@azure/abort-controller.net.Socket'
      - '@azure/abort-controller.net.SocketConnectOpts'
      - '@azure/abort-controller.net.SocketConstructorOpts'
      - '@azure/abort-controller.net.TcpNetConnectOpts'
      - '@azure/abort-controller.net.TcpSocketConnectOpts'
    type: module
    summary: ''
    package: '@azure/abort-controller'
  - uid: '@azure/abort-controller.net.connect'
    name: 'connect(NetConnectOpts, undefined | () => void)'
    children: []
    type: function
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function connect(options: NetConnectOpts, connectionListener?: undefined
        | () => void)
      parameters:
        - id: options
          type:
            - '@azure/abort-controller.net.NetConnectOpts'
          description: ''
        - id: connectionListener
          type:
            - undefined | () => void
          description: ''
          optional: true
      return:
        type:
          - '@azure/abort-controller.net.Socket'
        description: ''
    package: '@azure/abort-controller'
  - uid: '@azure/abort-controller.net.connect_1'
    name: 'connect(number, undefined | string, undefined | () => void)'
    children: []
    type: function
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function connect(port: number, host?: undefined | string,
        connectionListener?: undefined | () => void)
      parameters:
        - id: port
          type:
            - number
          description: ''
        - id: host
          type:
            - undefined | string
          description: ''
          optional: true
        - id: connectionListener
          type:
            - undefined | () => void
          description: ''
          optional: true
      return:
        type:
          - '@azure/abort-controller.net.Socket'
        description: ''
    package: '@azure/abort-controller'
  - uid: '@azure/abort-controller.net.connect_2'
    name: 'connect(string, undefined | () => void)'
    children: []
    type: function
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function connect(path: string, connectionListener?: undefined | () =>
        void)
      parameters:
        - id: path
          type:
            - string
          description: ''
        - id: connectionListener
          type:
            - undefined | () => void
          description: ''
          optional: true
      return:
        type:
          - '@azure/abort-controller.net.Socket'
        description: ''
    package: '@azure/abort-controller'
  - uid: '@azure/abort-controller.net.createConnection'
    name: 'createConnection(NetConnectOpts, undefined | () => void)'
    children: []
    type: function
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function createConnection(options: NetConnectOpts, connectionListener?:
        undefined | () => void)
      parameters:
        - id: options
          type:
            - '@azure/abort-controller.net.NetConnectOpts'
          description: ''
        - id: connectionListener
          type:
            - undefined | () => void
          description: ''
          optional: true
      return:
        type:
          - '@azure/abort-controller.net.Socket'
        description: ''
    package: '@azure/abort-controller'
  - uid: '@azure/abort-controller.net.createConnection_1'
    name: 'createConnection(number, undefined | string, undefined | () => void)'
    children: []
    type: function
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function createConnection(port: number, host?: undefined | string,
        connectionListener?: undefined | () => void)
      parameters:
        - id: port
          type:
            - number
          description: ''
        - id: host
          type:
            - undefined | string
          description: ''
          optional: true
        - id: connectionListener
          type:
            - undefined | () => void
          description: ''
          optional: true
      return:
        type:
          - '@azure/abort-controller.net.Socket'
        description: ''
    package: '@azure/abort-controller'
  - uid: '@azure/abort-controller.net.createConnection_2'
    name: 'createConnection(string, undefined | () => void)'
    children: []
    type: function
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function createConnection(path: string, connectionListener?: undefined |
        () => void)
      parameters:
        - id: path
          type:
            - string
          description: ''
        - id: connectionListener
          type:
            - undefined | () => void
          description: ''
          optional: true
      return:
        type:
          - '@azure/abort-controller.net.Socket'
        description: ''
    package: '@azure/abort-controller'
  - uid: '@azure/abort-controller.net.createServer'
    name: 'createServer(undefined | (socket: Socket) => void)'
    children: []
    type: function
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function createServer(connectionListener?: undefined | (socket: Socket)
        => void)
      parameters:
        - id: connectionListener
          type:
            - 'undefined | (socket: Socket) => void'
          description: ''
          optional: true
      return:
        type:
          - '@azure/abort-controller.net.Server'
        description: ''
    package: '@azure/abort-controller'
  - uid: '@azure/abort-controller.net.createServer_1'
    name: 'createServer(undefined | Object, undefined | (socket: Socket) => void)'
    children: []
    type: function
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function createServer(options?: undefined | Object, connectionListener?:
        undefined | (socket: Socket) => void)
      parameters:
        - id: options
          type:
            - undefined | Object
          description: ''
          optional: true
        - id: connectionListener
          type:
            - 'undefined | (socket: Socket) => void'
          description: ''
          optional: true
      return:
        type:
          - '@azure/abort-controller.net.Server'
        description: ''
    package: '@azure/abort-controller'
  - uid: '@azure/abort-controller.net.isIP'
    name: isIP(string)
    children: []
    type: function
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function isIP(input: string)'
      parameters:
        - id: input
          type:
            - string
          description: ''
      return:
        type:
          - number
        description: ''
    package: '@azure/abort-controller'
  - uid: '@azure/abort-controller.net.isIPv4'
    name: isIPv4(string)
    children: []
    type: function
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function isIPv4(input: string)'
      parameters:
        - id: input
          type:
            - string
          description: ''
      return:
        type:
          - boolean
        description: ''
    package: '@azure/abort-controller'
  - uid: '@azure/abort-controller.net.isIPv6'
    name: isIPv6(string)
    children: []
    type: function
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function isIPv6(input: string)'
      parameters:
        - id: input
          type:
            - string
          description: ''
      return:
        type:
          - boolean
        description: ''
    package: '@azure/abort-controller'
references:
  - uid: '@azure/abort-controller.events.EventEmitter.EventEmitter'
    name: EventEmitter
    spec.typeScript:
      - name: EventEmitter
        fullName: EventEmitter
        uid: '@azure/abort-controller.events.EventEmitter.EventEmitter'
  - uid: '@azure/abort-controller.net.AddressInfo | string | null'
    name: AddressInfo | string | null
    spec.typeScript:
      - name: AddressInfo
        fullName: AddressInfo
        uid: '@azure/abort-controller.net.AddressInfo'
      - name: ' | string | null'
        fullName: ' | string | null'
  - uid: '@azure/abort-controller.net.Socket'
    name: Socket
    spec.typeScript:
      - name: Socket
        fullName: Socket
        uid: '@azure/abort-controller.net.Socket'
  - uid: '@azure/abort-controller.net.ListenOptions'
    name: ListenOptions
    spec.typeScript:
      - name: ListenOptions
        fullName: ListenOptions
        uid: '@azure/abort-controller.net.ListenOptions'
  - uid: '@azure/abort-controller.stream.internal.Duplex'
    name: Duplex
    spec.typeScript:
      - name: Duplex
        fullName: Duplex
        uid: '@azure/abort-controller.stream.internal.Duplex'
  - uid: '@azure/abort-controller.net.SocketConstructorOpts'
    name: SocketConstructorOpts
    spec.typeScript:
      - name: SocketConstructorOpts
        fullName: SocketConstructorOpts
        uid: '@azure/abort-controller.net.SocketConstructorOpts'
  - uid: '@azure/abort-controller.net.AddressInfo | string'
    name: AddressInfo | string
    spec.typeScript:
      - name: AddressInfo
        fullName: AddressInfo
        uid: '@azure/abort-controller.net.AddressInfo'
      - name: ' | string'
        fullName: ' | string'
  - uid: '@azure/abort-controller.net.SocketConnectOpts'
    name: SocketConnectOpts
    spec.typeScript:
      - name: SocketConnectOpts
        fullName: SocketConnectOpts
        uid: '@azure/abort-controller.net.SocketConnectOpts'
  - uid: '@azure/abort-controller.AbortError.Error'
    name: Error
    spec.typeScript:
      - name: Error
        fullName: Error
        uid: '@azure/abort-controller.AbortError.Error'
  - uid: '@azure/abort-controller.NodeJS.WritableStream'
    name: WritableStream
    spec.typeScript:
      - name: WritableStream
        fullName: WritableStream
        uid: '@azure/abort-controller.NodeJS.WritableStream'
  - uid: '@azure/abort-controller.BufferEncoding'
    name: BufferEncoding
    spec.typeScript:
      - name: BufferEncoding
        fullName: BufferEncoding
        uid: '@azure/abort-controller.BufferEncoding'
  - uid: '@azure/abort-controller.NodeJS.ReadableStream'
    name: ReadableStream
    spec.typeScript:
      - name: ReadableStream
        fullName: ReadableStream
        uid: '@azure/abort-controller.NodeJS.ReadableStream'
  - uid: '@azure/abort-controller.stream.internal.ReadableOptions'
    name: ReadableOptions
    spec.typeScript:
      - name: ReadableOptions
        fullName: ReadableOptions
        uid: '@azure/abort-controller.stream.internal.ReadableOptions'
  - uid: '@azure/abort-controller.stream.internal.Readable'
    name: Readable
    spec.typeScript:
      - name: Readable
        fullName: Readable
        uid: '@azure/abort-controller.stream.internal.Readable'
  - uid: '@azure/abort-controller.net.OnReadOpts'
    name: OnReadOpts
    spec.typeScript:
      - name: OnReadOpts
        fullName: OnReadOpts
        uid: '@azure/abort-controller.net.OnReadOpts'
  - uid: '@azure/abort-controller.net.IpcSocketConnectOpts'
    name: IpcSocketConnectOpts
    spec.typeScript:
      - name: IpcSocketConnectOpts
        fullName: IpcSocketConnectOpts
        uid: '@azure/abort-controller.net.IpcSocketConnectOpts'
  - uid: '@azure/abort-controller.net.ConnectOpts'
    name: ConnectOpts
    spec.typeScript:
      - name: ConnectOpts
        fullName: ConnectOpts
        uid: '@azure/abort-controller.net.ConnectOpts'
  - uid: '@azure/abort-controller.net.TcpSocketConnectOpts'
    name: TcpSocketConnectOpts
    spec.typeScript:
      - name: TcpSocketConnectOpts
        fullName: TcpSocketConnectOpts
        uid: '@azure/abort-controller.net.TcpSocketConnectOpts'
  - uid: '@azure/abort-controller.net.LookupFunction'
    name: LookupFunction
    spec.typeScript:
      - name: LookupFunction
        fullName: LookupFunction
        uid: '@azure/abort-controller.net.LookupFunction'
  - uid: '@azure/abort-controller.net.NetConnectOpts'
    name: NetConnectOpts
    spec.typeScript:
      - name: NetConnectOpts
        fullName: NetConnectOpts
        uid: '@azure/abort-controller.net.NetConnectOpts'
  - uid: '@azure/abort-controller.net.Server'
    name: Server
    spec.typeScript:
      - name: Server
        fullName: Server
        uid: '@azure/abort-controller.net.Server'
  - uid: '@azure/abort-controller.net.AddressInfo'
    name: AddressInfo
  - uid: '@azure/abort-controller.net.connect'
    name: connect
  - uid: '@azure/abort-controller.net.connect_1'
    name: connect_1
  - uid: '@azure/abort-controller.net.connect_2'
    name: connect_2
  - uid: '@azure/abort-controller.net.createConnection'
    name: createConnection
  - uid: '@azure/abort-controller.net.createConnection_1'
    name: createConnection_1
  - uid: '@azure/abort-controller.net.createConnection_2'
    name: createConnection_2
  - uid: '@azure/abort-controller.net.createServer'
    name: createServer
  - uid: '@azure/abort-controller.net.createServer_1'
    name: createServer_1
  - uid: '@azure/abort-controller.net.IpcNetConnectOpts'
    name: IpcNetConnectOpts
  - uid: '@azure/abort-controller.net.isIP'
    name: isIP
  - uid: '@azure/abort-controller.net.isIPv4'
    name: isIPv4
  - uid: '@azure/abort-controller.net.isIPv6'
    name: isIPv6
  - uid: '@azure/abort-controller.net.TcpNetConnectOpts'
    name: TcpNetConnectOpts
