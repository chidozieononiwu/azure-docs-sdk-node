### YamlMime:UniversalReference
items:
  - uid: '@azure/abort-controller.readline'
    name: readline
    langs:
      - typeScript
    fullName: readline
    children:
      - '@azure/abort-controller.readline.AsyncCompleter'
      - '@azure/abort-controller.readline.clearLine'
      - '@azure/abort-controller.readline.clearScreenDown'
      - '@azure/abort-controller.readline.Completer'
      - '@azure/abort-controller.readline.CompleterResult'
      - '@azure/abort-controller.readline.createInterface'
      - '@azure/abort-controller.readline.createInterface_1'
      - '@azure/abort-controller.readline.CursorPos'
      - '@azure/abort-controller.readline.cursorTo'
      - '@azure/abort-controller.readline.Direction'
      - '@azure/abort-controller.readline.emitKeypressEvents'
      - '@azure/abort-controller.readline.Interface'
      - '@azure/abort-controller.readline.Key'
      - '@azure/abort-controller.readline.moveCursor'
      - '@azure/abort-controller.readline.ReadLine'
      - '@azure/abort-controller.readline.ReadLineOptions'
    type: module
    summary: ''
    package: '@azure/abort-controller'
  - uid: '@azure/abort-controller.readline.clearLine'
    name: 'clearLine(WritableStream, Direction, () => void)'
    children: []
    type: function
    langs:
      - typeScript
    summary: >-
      Clears the current line of this WriteStream in a direction identified by
      `dir`.
    syntax:
      content: >-
        function clearLine(stream: WritableStream, dir: Direction, callback?: ()
        => void)
      parameters:
        - id: stream
          type:
            - '@azure/abort-controller.NodeJS.WritableStream'
          description: ''
        - id: dir
          type:
            - '@azure/abort-controller.readline.Direction'
          description: ''
        - id: callback
          type:
            - () => void
          description: ''
          optional: true
      return:
        type:
          - boolean
        description: ''
    package: '@azure/abort-controller'
  - uid: '@azure/abort-controller.readline.clearScreenDown'
    name: 'clearScreenDown(WritableStream, () => void)'
    children: []
    type: function
    langs:
      - typeScript
    summary: Clears this `WriteStream` from the current cursor down.
    syntax:
      content: 'function clearScreenDown(stream: WritableStream, callback?: () => void)'
      parameters:
        - id: stream
          type:
            - '@azure/abort-controller.NodeJS.WritableStream'
          description: ''
        - id: callback
          type:
            - () => void
          description: ''
          optional: true
      return:
        type:
          - boolean
        description: ''
    package: '@azure/abort-controller'
  - uid: '@azure/abort-controller.readline.createInterface'
    name: >-
      createInterface(ReadableStream, WritableStream, Completer |
      AsyncCompleter, boolean)
    children: []
    type: function
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function createInterface(input: ReadableStream, output?: WritableStream,
        completer?: Completer | AsyncCompleter, terminal?: boolean)
      parameters:
        - id: input
          type:
            - '@azure/abort-controller.NodeJS.ReadableStream'
          description: ''
        - id: output
          type:
            - '@azure/abort-controller.NodeJS.WritableStream'
          description: ''
          optional: true
        - id: completer
          type:
            - >-
              @azure/abort-controller.readline.Completer |
              @azure/abort-controller.readline.AsyncCompleter
          description: ''
          optional: true
        - id: terminal
          type:
            - boolean
          description: ''
          optional: true
      return:
        type:
          - '@azure/abort-controller.readline.Interface'
        description: ''
    package: '@azure/abort-controller'
  - uid: '@azure/abort-controller.readline.createInterface_1'
    name: createInterface(ReadLineOptions)
    children: []
    type: function
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function createInterface(options: ReadLineOptions)'
      parameters:
        - id: options
          type:
            - '@azure/abort-controller.readline.ReadLineOptions'
          description: ''
      return:
        type:
          - '@azure/abort-controller.readline.Interface'
        description: ''
    package: '@azure/abort-controller'
  - uid: '@azure/abort-controller.readline.cursorTo'
    name: 'cursorTo(WritableStream, number, number, () => void)'
    children: []
    type: function
    langs:
      - typeScript
    summary: Moves this WriteStream's cursor to the specified position.
    syntax:
      content: >-
        function cursorTo(stream: WritableStream, x: number, y?: number,
        callback?: () => void)
      parameters:
        - id: stream
          type:
            - '@azure/abort-controller.NodeJS.WritableStream'
          description: ''
        - id: x
          type:
            - number
          description: ''
        - id: 'y'
          type:
            - number
          description: ''
          optional: true
        - id: callback
          type:
            - () => void
          description: ''
          optional: true
      return:
        type:
          - boolean
        description: ''
    package: '@azure/abort-controller'
  - uid: '@azure/abort-controller.readline.emitKeypressEvents'
    name: 'emitKeypressEvents(ReadableStream, Interface)'
    children: []
    type: function
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function emitKeypressEvents(stream: ReadableStream, readlineInterface?:
        Interface)
      parameters:
        - id: stream
          type:
            - '@azure/abort-controller.NodeJS.ReadableStream'
          description: ''
        - id: readlineInterface
          type:
            - '@azure/abort-controller.readline.Interface'
          description: ''
          optional: true
    package: '@azure/abort-controller'
  - uid: '@azure/abort-controller.readline.moveCursor'
    name: 'moveCursor(WritableStream, number, number, () => void)'
    children: []
    type: function
    langs:
      - typeScript
    summary: Moves this WriteStream's cursor relative to its current position.
    syntax:
      content: >-
        function moveCursor(stream: WritableStream, dx: number, dy: number,
        callback?: () => void)
      parameters:
        - id: stream
          type:
            - '@azure/abort-controller.NodeJS.WritableStream'
          description: ''
        - id: dx
          type:
            - number
          description: ''
        - id: dy
          type:
            - number
          description: ''
        - id: callback
          type:
            - () => void
          description: ''
          optional: true
      return:
        type:
          - boolean
        description: ''
    package: '@azure/abort-controller'
references:
  - uid: '@azure/abort-controller.events.EventEmitter.EventEmitter'
    name: EventEmitter
    spec.typeScript:
      - name: EventEmitter
        fullName: EventEmitter
        uid: '@azure/abort-controller.events.EventEmitter.EventEmitter'
  - uid: '@azure/abort-controller.readline.CursorPos'
    name: CursorPos
    spec.typeScript:
      - name: CursorPos
        fullName: CursorPos
        uid: '@azure/abort-controller.readline.CursorPos'
  - uid: '@azure/abort-controller.readline.Key'
    name: Key
    spec.typeScript:
      - name: Key
        fullName: Key
        uid: '@azure/abort-controller.readline.Key'
  - uid: >-
      @azure/abort-controller.readline.Completer |
      @azure/abort-controller.readline.AsyncCompleter
    name: AsyncCompleter
    spec.typeScript:
      - name: Completer
        fullName: Completer
        uid: '@azure/abort-controller.readline.Completer'
      - name: ' | '
        fullName: ' | '
      - name: AsyncCompleter
        fullName: AsyncCompleter
        uid: '@azure/abort-controller.readline.AsyncCompleter'
  - uid: '@azure/abort-controller.NodeJS.ReadableStream'
    name: ReadableStream
    spec.typeScript:
      - name: ReadableStream
        fullName: ReadableStream
        uid: '@azure/abort-controller.NodeJS.ReadableStream'
  - uid: '@azure/abort-controller.NodeJS.WritableStream'
    name: WritableStream
    spec.typeScript:
      - name: WritableStream
        fullName: WritableStream
        uid: '@azure/abort-controller.NodeJS.WritableStream'
  - uid: '@azure/abort-controller.readline.Direction'
    name: Direction
    spec.typeScript:
      - name: Direction
        fullName: Direction
        uid: '@azure/abort-controller.readline.Direction'
  - uid: '@azure/abort-controller.readline.Interface'
    name: Interface
    spec.typeScript:
      - name: Interface
        fullName: Interface
        uid: '@azure/abort-controller.readline.Interface'
  - uid: '@azure/abort-controller.readline.ReadLineOptions'
    name: ReadLineOptions
    spec.typeScript:
      - name: ReadLineOptions
        fullName: ReadLineOptions
        uid: '@azure/abort-controller.readline.ReadLineOptions'
  - uid: '@azure/abort-controller.readline.AsyncCompleter'
    name: AsyncCompleter
  - uid: '@azure/abort-controller.readline.clearLine'
    name: clearLine
  - uid: '@azure/abort-controller.readline.clearScreenDown'
    name: clearScreenDown
  - uid: '@azure/abort-controller.readline.Completer'
    name: Completer
  - uid: '@azure/abort-controller.readline.CompleterResult'
    name: CompleterResult
  - uid: '@azure/abort-controller.readline.createInterface'
    name: createInterface
  - uid: '@azure/abort-controller.readline.createInterface_1'
    name: createInterface_1
  - uid: '@azure/abort-controller.readline.cursorTo'
    name: cursorTo
  - uid: '@azure/abort-controller.readline.emitKeypressEvents'
    name: emitKeypressEvents
  - uid: '@azure/abort-controller.readline.moveCursor'
    name: moveCursor
  - uid: '@azure/abort-controller.readline.ReadLine'
    name: ReadLine
