### YamlMime:UniversalReference
items:
  - uid: '@azure/ms-rest-azure-env.tls.TLSSocket'
    name: TLSSocket
    fullName: TLSSocket
    children:
      - '@azure/ms-rest-azure-env.tls.TLSSocket.addListener_1'
      - '@azure/ms-rest-azure-env.tls.TLSSocket.addListener_2'
      - '@azure/ms-rest-azure-env.tls.TLSSocket.addListener'
      - '@azure/ms-rest-azure-env.tls.TLSSocket.address'
      - '@azure/ms-rest-azure-env.tls.TLSSocket.authorizationError'
      - '@azure/ms-rest-azure-env.tls.TLSSocket.authorized'
      - '@azure/ms-rest-azure-env.tls.TLSSocket.bufferSize'
      - '@azure/ms-rest-azure-env.tls.TLSSocket.bytesRead'
      - '@azure/ms-rest-azure-env.tls.TLSSocket.bytesWritten'
      - '@azure/ms-rest-azure-env.tls.TLSSocket.connect_1'
      - '@azure/ms-rest-azure-env.tls.TLSSocket.connect_2'
      - '@azure/ms-rest-azure-env.tls.TLSSocket.connect'
      - '@azure/ms-rest-azure-env.tls.TLSSocket.connect_3'
      - '@azure/ms-rest-azure-env.tls.TLSSocket.connecting'
      - '@azure/ms-rest-azure-env.tls.TLSSocket.cork'
      - '@azure/ms-rest-azure-env.tls.TLSSocket.destroy'
      - '@azure/ms-rest-azure-env.tls.TLSSocket.destroyed'
      - '@azure/ms-rest-azure-env.tls.TLSSocket.emit_1'
      - '@azure/ms-rest-azure-env.tls.TLSSocket.emit_2'
      - '@azure/ms-rest-azure-env.tls.TLSSocket.emit'
      - '@azure/ms-rest-azure-env.tls.TLSSocket.encrypted'
      - '@azure/ms-rest-azure-env.tls.TLSSocket.end_1'
      - '@azure/ms-rest-azure-env.tls.TLSSocket.end_2'
      - '@azure/ms-rest-azure-env.tls.TLSSocket.end'
      - '@azure/ms-rest-azure-env.tls.TLSSocket.eventNames'
      - '@azure/ms-rest-azure-env.tls.TLSSocket.from'
      - '@azure/ms-rest-azure-env.tls.TLSSocket.getCipher'
      - '@azure/ms-rest-azure-env.tls.TLSSocket.getMaxListeners'
      - '@azure/ms-rest-azure-env.tls.TLSSocket.getPeerCertificate'
      - '@azure/ms-rest-azure-env.tls.TLSSocket.getPeerCertificate_2'
      - '@azure/ms-rest-azure-env.tls.TLSSocket.getPeerCertificate_1'
      - '@azure/ms-rest-azure-env.tls.TLSSocket.getProtocol'
      - '@azure/ms-rest-azure-env.tls.TLSSocket.getSession'
      - '@azure/ms-rest-azure-env.tls.TLSSocket.getTLSTicket'
      - '@azure/ms-rest-azure-env.tls.TLSSocket.isPaused'
      - '@azure/ms-rest-azure-env.tls.TLSSocket.listenerCount'
      - '@azure/ms-rest-azure-env.tls.TLSSocket.listeners'
      - '@azure/ms-rest-azure-env.tls.TLSSocket.localAddress'
      - '@azure/ms-rest-azure-env.tls.TLSSocket.localPort'
      - '@azure/ms-rest-azure-env.tls.TLSSocket.off'
      - '@azure/ms-rest-azure-env.tls.TLSSocket.on_1'
      - '@azure/ms-rest-azure-env.tls.TLSSocket.on_2'
      - '@azure/ms-rest-azure-env.tls.TLSSocket.on'
      - '@azure/ms-rest-azure-env.tls.TLSSocket.once_1'
      - '@azure/ms-rest-azure-env.tls.TLSSocket.once_2'
      - '@azure/ms-rest-azure-env.tls.TLSSocket.once'
      - '@azure/ms-rest-azure-env.tls.TLSSocket.pause'
      - '@azure/ms-rest-azure-env.tls.TLSSocket.pipe'
      - '@azure/ms-rest-azure-env.tls.TLSSocket.prependListener_1'
      - '@azure/ms-rest-azure-env.tls.TLSSocket.prependListener_2'
      - '@azure/ms-rest-azure-env.tls.TLSSocket.prependListener'
      - '@azure/ms-rest-azure-env.tls.TLSSocket.prependOnceListener_1'
      - '@azure/ms-rest-azure-env.tls.TLSSocket.prependOnceListener_2'
      - '@azure/ms-rest-azure-env.tls.TLSSocket.prependOnceListener'
      - '@azure/ms-rest-azure-env.tls.TLSSocket.push'
      - '@azure/ms-rest-azure-env.tls.TLSSocket.rawListeners'
      - '@azure/ms-rest-azure-env.tls.TLSSocket.read'
      - '@azure/ms-rest-azure-env.tls.TLSSocket.readable'
      - '@azure/ms-rest-azure-env.tls.TLSSocket.readableHighWaterMark'
      - '@azure/ms-rest-azure-env.tls.TLSSocket.readableLength'
      - '@azure/ms-rest-azure-env.tls.TLSSocket.readableObjectMode'
      - '@azure/ms-rest-azure-env.tls.TLSSocket.ref'
      - '@azure/ms-rest-azure-env.tls.TLSSocket.remoteAddress'
      - '@azure/ms-rest-azure-env.tls.TLSSocket.remoteFamily'
      - '@azure/ms-rest-azure-env.tls.TLSSocket.remotePort'
      - '@azure/ms-rest-azure-env.tls.TLSSocket.removeAllListeners'
      - '@azure/ms-rest-azure-env.tls.TLSSocket.removeListener'
      - '@azure/ms-rest-azure-env.tls.TLSSocket.removeListener_1'
      - '@azure/ms-rest-azure-env.tls.TLSSocket.removeListener_2'
      - '@azure/ms-rest-azure-env.tls.TLSSocket.removeListener_4'
      - '@azure/ms-rest-azure-env.tls.TLSSocket.removeListener_3'
      - '@azure/ms-rest-azure-env.tls.TLSSocket.removeListener_5'
      - '@azure/ms-rest-azure-env.tls.TLSSocket.renegotiate'
      - '@azure/ms-rest-azure-env.tls.TLSSocket.resume'
      - '@azure/ms-rest-azure-env.tls.TLSSocket.setDefaultEncoding'
      - '@azure/ms-rest-azure-env.tls.TLSSocket.setEncoding'
      - '@azure/ms-rest-azure-env.tls.TLSSocket.setKeepAlive'
      - '@azure/ms-rest-azure-env.tls.TLSSocket.setMaxListeners'
      - '@azure/ms-rest-azure-env.tls.TLSSocket.setMaxSendFragment'
      - '@azure/ms-rest-azure-env.tls.TLSSocket.setNoDelay'
      - '@azure/ms-rest-azure-env.tls.TLSSocket.setTimeout'
      - '@azure/ms-rest-azure-env.tls.TLSSocket.constructor'
      - '@azure/ms-rest-azure-env.tls.TLSSocket.uncork'
      - '@azure/ms-rest-azure-env.tls.TLSSocket.unpipe'
      - '@azure/ms-rest-azure-env.tls.TLSSocket.unref'
      - '@azure/ms-rest-azure-env.tls.TLSSocket.unshift'
      - '@azure/ms-rest-azure-env.tls.TLSSocket.wrap'
      - '@azure/ms-rest-azure-env.tls.TLSSocket.writable'
      - '@azure/ms-rest-azure-env.tls.TLSSocket.writableCorked'
      - '@azure/ms-rest-azure-env.tls.TLSSocket.writableEnded'
      - '@azure/ms-rest-azure-env.tls.TLSSocket.writableFinished'
      - '@azure/ms-rest-azure-env.tls.TLSSocket.writableHighWaterMark'
      - '@azure/ms-rest-azure-env.tls.TLSSocket.writableLength'
      - '@azure/ms-rest-azure-env.tls.TLSSocket.writableObjectMode'
      - '@azure/ms-rest-azure-env.tls.TLSSocket.write'
      - '@azure/ms-rest-azure-env.tls.TLSSocket.write_1'
    langs:
      - typeScript
    type: class
    summary: ''
    extends:
      name: '@azure/ms-rest-azure-env.net.Socket'
    package: '@azure/ms-rest-azure-env'
  - uid: '@azure/ms-rest-azure-env.tls.TLSSocket.addListener_1'
    name: 'addListener("OCSPResponse", (response: Buffer) => void)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function addListener(event: "OCSPResponse", listener: (response: Buffer)
        => void)
      parameters:
        - id: event
          type:
            - '"OCSPResponse"'
          description: ''
        - id: listener
          type:
            - '(response: Buffer) => void'
          description: ''
      return:
        type:
          - this
        description: ''
    package: '@azure/ms-rest-azure-env'
  - uid: '@azure/ms-rest-azure-env.tls.TLSSocket.addListener_2'
    name: 'addListener("secureConnect", () => void)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function addListener(event: "secureConnect", listener: () => void)'
      parameters:
        - id: event
          type:
            - '"secureConnect"'
          description: ''
        - id: listener
          type:
            - () => void
          description: ''
      return:
        type:
          - this
        description: ''
    package: '@azure/ms-rest-azure-env'
  - uid: '@azure/ms-rest-azure-env.tls.TLSSocket.addListener'
    name: 'addListener(string, (args: any[]) => void)'
    children: []
    type: method
    langs:
      - typeScript
    summary: |-
      events.EventEmitter
      1. OCSPResponse
      2. secureConnect
    syntax:
      content: 'function addListener(event: string, listener: (args: any[]) => void)'
      parameters:
        - id: event
          type:
            - string
          description: ''
        - id: listener
          type:
            - '(args: any[]) => void'
          description: ''
      return:
        type:
          - this
        description: ''
    package: '@azure/ms-rest-azure-env'
  - uid: '@azure/ms-rest-azure-env.tls.TLSSocket.address'
    name: address()
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: function address()
      parameters: []
      return:
        type:
          - '@azure/ms-rest-azure-env.net.AddressInfo | string'
        description: ''
    package: '@azure/ms-rest-azure-env'
  - uid: '@azure/ms-rest-azure-env.tls.TLSSocket.authorizationError'
    name: authorizationError
    fullName: authorizationError
    children: []
    langs:
      - typeScript
    type: property
    summary: |-
      The reason why the peer's certificate has not been verified.
      This property becomes available only when tlsSocket.authorized === false.
    syntax:
      content: 'authorizationError: Error'
      return:
        type:
          - Error
        description: ''
    package: '@azure/ms-rest-azure-env'
  - uid: '@azure/ms-rest-azure-env.tls.TLSSocket.authorized'
    name: authorized
    fullName: authorized
    children: []
    langs:
      - typeScript
    type: property
    summary: >-
      A boolean that is true if the peer certificate was signed by one of the
      specified CAs, otherwise false.
    syntax:
      content: 'authorized: boolean'
      return:
        type:
          - boolean
        description: ''
    package: '@azure/ms-rest-azure-env'
  - uid: '@azure/ms-rest-azure-env.tls.TLSSocket.bufferSize'
    name: bufferSize
    fullName: bufferSize
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    syntax:
      content: 'bufferSize: number'
      return:
        type:
          - number
        description: ''
    package: '@azure/ms-rest-azure-env'
  - uid: '@azure/ms-rest-azure-env.tls.TLSSocket.bytesRead'
    name: bytesRead
    fullName: bytesRead
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    syntax:
      content: 'bytesRead: number'
      return:
        type:
          - number
        description: ''
    package: '@azure/ms-rest-azure-env'
  - uid: '@azure/ms-rest-azure-env.tls.TLSSocket.bytesWritten'
    name: bytesWritten
    fullName: bytesWritten
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    syntax:
      content: 'bytesWritten: number'
      return:
        type:
          - number
        description: ''
    package: '@azure/ms-rest-azure-env'
  - uid: '@azure/ms-rest-azure-env.tls.TLSSocket.connect_1'
    name: 'connect(number, string, undefined | () => void)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function connect(port: number, host: string, connectionListener?:
        undefined | () => void)
      parameters:
        - id: port
          type:
            - number
          description: ''
        - id: host
          type:
            - string
          description: ''
        - id: connectionListener
          type:
            - undefined | () => void
          description: ''
          optional: true
      return:
        type:
          - this
        description: ''
    package: '@azure/ms-rest-azure-env'
  - uid: '@azure/ms-rest-azure-env.tls.TLSSocket.connect_2'
    name: 'connect(number, undefined | () => void)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function connect(port: number, connectionListener?: undefined | () =>
        void)
      parameters:
        - id: port
          type:
            - number
          description: ''
        - id: connectionListener
          type:
            - undefined | () => void
          description: ''
          optional: true
      return:
        type:
          - this
        description: ''
    package: '@azure/ms-rest-azure-env'
  - uid: '@azure/ms-rest-azure-env.tls.TLSSocket.connect'
    name: 'connect(SocketConnectOpts, undefined | () => void)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function connect(options: SocketConnectOpts, connectionListener?:
        undefined | () => void)
      parameters:
        - id: options
          type:
            - '@azure/ms-rest-azure-env.net.SocketConnectOpts'
          description: ''
        - id: connectionListener
          type:
            - undefined | () => void
          description: ''
          optional: true
      return:
        type:
          - this
        description: ''
    package: '@azure/ms-rest-azure-env'
  - uid: '@azure/ms-rest-azure-env.tls.TLSSocket.connect_3'
    name: 'connect(string, undefined | () => void)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function connect(path: string, connectionListener?: undefined | () =>
        void)
      parameters:
        - id: path
          type:
            - string
          description: ''
        - id: connectionListener
          type:
            - undefined | () => void
          description: ''
          optional: true
      return:
        type:
          - this
        description: ''
    package: '@azure/ms-rest-azure-env'
  - uid: '@azure/ms-rest-azure-env.tls.TLSSocket.connecting'
    name: connecting
    fullName: connecting
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    syntax:
      content: 'connecting: boolean'
      return:
        type:
          - boolean
        description: ''
    package: '@azure/ms-rest-azure-env'
  - uid: '@azure/ms-rest-azure-env.tls.TLSSocket.cork'
    name: cork()
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: function cork()
      parameters: []
    package: '@azure/ms-rest-azure-env'
  - uid: '@azure/ms-rest-azure-env.tls.TLSSocket.destroy'
    name: destroy(Error)
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function destroy(error?: Error)'
      parameters:
        - id: error
          type:
            - '@azure/ms-rest-azure-env.Error'
          description: ''
          optional: true
    package: '@azure/ms-rest-azure-env'
  - uid: '@azure/ms-rest-azure-env.tls.TLSSocket.destroyed'
    name: destroyed
    fullName: destroyed
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    syntax:
      content: 'destroyed: boolean'
      return:
        type:
          - boolean
        description: ''
    package: '@azure/ms-rest-azure-env'
  - uid: '@azure/ms-rest-azure-env.tls.TLSSocket.emit_1'
    name: 'emit("OCSPResponse", Buffer)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function emit(event: "OCSPResponse", response: Buffer)'
      parameters:
        - id: event
          type:
            - '"OCSPResponse"'
          description: ''
        - id: response
          type:
            - Buffer
          description: ''
      return:
        type:
          - boolean
        description: ''
    package: '@azure/ms-rest-azure-env'
  - uid: '@azure/ms-rest-azure-env.tls.TLSSocket.emit_2'
    name: emit("secureConnect")
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function emit(event: "secureConnect")'
      parameters:
        - id: event
          type:
            - '"secureConnect"'
          description: ''
      return:
        type:
          - boolean
        description: ''
    package: '@azure/ms-rest-azure-env'
  - uid: '@azure/ms-rest-azure-env.tls.TLSSocket.emit'
    name: 'emit(string | symbol, any[])'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function emit(event: string | symbol, args: any[])'
      parameters:
        - id: event
          type:
            - string | symbol
          description: ''
        - id: args
          type:
            - 'any[]'
          description: ''
      return:
        type:
          - boolean
        description: ''
    package: '@azure/ms-rest-azure-env'
  - uid: '@azure/ms-rest-azure-env.tls.TLSSocket.encrypted'
    name: encrypted
    fullName: encrypted
    children: []
    langs:
      - typeScript
    type: property
    summary: |-
      Static boolean value, always true.
      May be used to distinguish TLS sockets from regular ones.
    syntax:
      content: 'encrypted: boolean'
      return:
        type:
          - boolean
        description: ''
    package: '@azure/ms-rest-azure-env'
  - uid: '@azure/ms-rest-azure-env.tls.TLSSocket.end_1'
    name: 'end(Uint8Array | string, undefined | () => void)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function end(buffer: Uint8Array | string, cb?: undefined | () => void)'
      parameters:
        - id: buffer
          type:
            - Uint8Array | string
          description: ''
        - id: cb
          type:
            - undefined | () => void
          description: ''
          optional: true
    package: '@azure/ms-rest-azure-env'
  - uid: '@azure/ms-rest-azure-env.tls.TLSSocket.end_2'
    name: 'end(Uint8Array | string, undefined | string, undefined | () => void)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function end(str: Uint8Array | string, encoding?: undefined | string,
        cb?: undefined | () => void)
      parameters:
        - id: str
          type:
            - Uint8Array | string
          description: ''
        - id: encoding
          type:
            - undefined | string
          description: ''
          optional: true
        - id: cb
          type:
            - undefined | () => void
          description: ''
          optional: true
    package: '@azure/ms-rest-azure-env'
  - uid: '@azure/ms-rest-azure-env.tls.TLSSocket.end'
    name: end(undefined | () => void)
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function end(cb?: undefined | () => void)'
      parameters:
        - id: cb
          type:
            - undefined | () => void
          description: ''
          optional: true
    package: '@azure/ms-rest-azure-env'
  - uid: '@azure/ms-rest-azure-env.tls.TLSSocket.eventNames'
    name: eventNames()
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: function eventNames()
      parameters: []
      return:
        type:
          - Array<string | symbol>
        description: ''
    package: '@azure/ms-rest-azure-env'
  - uid: '@azure/ms-rest-azure-env.tls.TLSSocket.from'
    name: 'from(Iterable<any> | AsyncIterable<any>, ReadableOptions)'
    children: []
    type: method
    langs:
      - typeScript
    summary: A utility method for creating Readable Streams out of iterators.
    syntax:
      content: >-
        static function from(iterable: Iterable<any> | AsyncIterable<any>,
        options?: ReadableOptions)
      parameters:
        - id: iterable
          type:
            - Iterable<any> | AsyncIterable<any>
          description: ''
        - id: options
          type:
            - '@azure/ms-rest-azure-env.stream.internal.ReadableOptions'
          description: ''
          optional: true
      return:
        type:
          - '@azure/ms-rest-azure-env.stream.internal.Readable'
        description: ''
    package: '@azure/ms-rest-azure-env'
  - uid: '@azure/ms-rest-azure-env.tls.TLSSocket.getCipher'
    name: getCipher()
    children: []
    type: method
    langs:
      - typeScript
    summary: >-
      Returns an object representing the cipher name and the SSL/TLS protocol
      version of the current connection.
    syntax:
      content: function getCipher()
      parameters: []
      return:
        type:
          - CipherNameAndProtocol
        description: |-
          Returns an object representing the cipher name
          and the SSL/TLS protocol version of the current connection.
    package: '@azure/ms-rest-azure-env'
  - uid: '@azure/ms-rest-azure-env.tls.TLSSocket.getMaxListeners'
    name: getMaxListeners()
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: function getMaxListeners()
      parameters: []
      return:
        type:
          - number
        description: ''
    package: '@azure/ms-rest-azure-env'
  - uid: '@azure/ms-rest-azure-env.tls.TLSSocket.getPeerCertificate'
    name: getPeerCertificate(true)
    children: []
    type: method
    langs:
      - typeScript
    summary: >-
      Returns an object representing the peer's certificate.

      The returned object has some properties corresponding to the field of the
      certificate.

      If detailed argument is true the full chain with issuer property will be
      returned,

      if false only the top certificate without issuer property.

      If the peer does not provide a certificate, it returns null or an empty
      object.
    syntax:
      content: 'function getPeerCertificate(detailed: true)'
      parameters:
        - id: detailed
          type:
            - 'true'
          description: If true; the full chain with issuer property will be returned.
      return:
        type:
          - DetailedPeerCertificate
        description: An object representing the peer's certificate.
    package: '@azure/ms-rest-azure-env'
  - uid: '@azure/ms-rest-azure-env.tls.TLSSocket.getPeerCertificate_2'
    name: getPeerCertificate(undefined | false | true)
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function getPeerCertificate(detailed?: undefined | false | true)'
      parameters:
        - id: detailed
          type:
            - undefined | false | true
          description: ''
          optional: true
      return:
        type:
          - PeerCertificate | DetailedPeerCertificate
        description: ''
    package: '@azure/ms-rest-azure-env'
  - uid: '@azure/ms-rest-azure-env.tls.TLSSocket.getPeerCertificate_1'
    name: getPeerCertificate(undefined | false)
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function getPeerCertificate(detailed?: undefined | false)'
      parameters:
        - id: detailed
          type:
            - undefined | false
          description: ''
          optional: true
      return:
        type:
          - PeerCertificate
        description: ''
    package: '@azure/ms-rest-azure-env'
  - uid: '@azure/ms-rest-azure-env.tls.TLSSocket.getProtocol'
    name: getProtocol()
    children: []
    type: method
    langs:
      - typeScript
    summary: >-
      Returns a string containing the negotiated SSL/TLS protocol version of the
      current connection.

      The value `'unknown'` will be returned for connected sockets that have not
      completed the handshaking process.

      The value `null` will be returned for server sockets or disconnected
      client sockets.

      See https://www.openssl.org/docs/man1.0.2/ssl/SSL_get_version.html for
      more information.
    syntax:
      content: function getProtocol()
      parameters: []
      return:
        type:
          - string | null
        description: negotiated SSL/TLS protocol version of the current connection
    package: '@azure/ms-rest-azure-env'
  - uid: '@azure/ms-rest-azure-env.tls.TLSSocket.getSession'
    name: getSession()
    children: []
    type: method
    langs:
      - typeScript
    summary: >-
      Could be used to speed up handshake establishment when reconnecting to the
      server.
    syntax:
      content: function getSession()
      parameters: []
      return:
        type:
          - any
        description: ASN.1 encoded TLS session or undefined if none was negotiated.
    package: '@azure/ms-rest-azure-env'
  - uid: '@azure/ms-rest-azure-env.tls.TLSSocket.getTLSTicket'
    name: getTLSTicket()
    children: []
    type: method
    langs:
      - typeScript
    summary: >-
      NOTE: Works only with client TLS sockets.

      Useful only for debugging, for session reuse provide session option to
      tls.connect().
    syntax:
      content: function getTLSTicket()
      parameters: []
      return:
        type:
          - any
        description: TLS session ticket or undefined if none was negotiated.
    package: '@azure/ms-rest-azure-env'
  - uid: '@azure/ms-rest-azure-env.tls.TLSSocket.isPaused'
    name: isPaused()
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: function isPaused()
      parameters: []
      return:
        type:
          - boolean
        description: ''
    package: '@azure/ms-rest-azure-env'
  - uid: '@azure/ms-rest-azure-env.tls.TLSSocket.listenerCount'
    name: listenerCount(string | symbol)
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function listenerCount(type: string | symbol)'
      parameters:
        - id: type
          type:
            - string | symbol
          description: ''
      return:
        type:
          - number
        description: ''
    package: '@azure/ms-rest-azure-env'
  - uid: '@azure/ms-rest-azure-env.tls.TLSSocket.listeners'
    name: listeners(string | symbol)
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function listeners(event: string | symbol)'
      parameters:
        - id: event
          type:
            - string | symbol
          description: ''
      return:
        type:
          - 'Function[]'
        description: ''
    package: '@azure/ms-rest-azure-env'
  - uid: '@azure/ms-rest-azure-env.tls.TLSSocket.localAddress'
    name: localAddress
    fullName: localAddress
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    syntax:
      content: 'localAddress: string'
      return:
        type:
          - string
        description: ''
    package: '@azure/ms-rest-azure-env'
  - uid: '@azure/ms-rest-azure-env.tls.TLSSocket.localPort'
    name: localPort
    fullName: localPort
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    syntax:
      content: 'localPort: number'
      return:
        type:
          - number
        description: ''
    package: '@azure/ms-rest-azure-env'
  - uid: '@azure/ms-rest-azure-env.tls.TLSSocket.off'
    name: 'off(string | symbol, (args: any[]) => void)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function off(event: string | symbol, listener: (args: any[]) => void)'
      parameters:
        - id: event
          type:
            - string | symbol
          description: ''
        - id: listener
          type:
            - '(args: any[]) => void'
          description: ''
      return:
        type:
          - this
        description: ''
    package: '@azure/ms-rest-azure-env'
  - uid: '@azure/ms-rest-azure-env.tls.TLSSocket.on_1'
    name: 'on("OCSPResponse", (response: Buffer) => void)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function on(event: "OCSPResponse", listener: (response: Buffer) => void)'
      parameters:
        - id: event
          type:
            - '"OCSPResponse"'
          description: ''
        - id: listener
          type:
            - '(response: Buffer) => void'
          description: ''
      return:
        type:
          - this
        description: ''
    package: '@azure/ms-rest-azure-env'
  - uid: '@azure/ms-rest-azure-env.tls.TLSSocket.on_2'
    name: 'on("secureConnect", () => void)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function on(event: "secureConnect", listener: () => void)'
      parameters:
        - id: event
          type:
            - '"secureConnect"'
          description: ''
        - id: listener
          type:
            - () => void
          description: ''
      return:
        type:
          - this
        description: ''
    package: '@azure/ms-rest-azure-env'
  - uid: '@azure/ms-rest-azure-env.tls.TLSSocket.on'
    name: 'on(string, (args: any[]) => void)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function on(event: string, listener: (args: any[]) => void)'
      parameters:
        - id: event
          type:
            - string
          description: ''
        - id: listener
          type:
            - '(args: any[]) => void'
          description: ''
      return:
        type:
          - this
        description: ''
    package: '@azure/ms-rest-azure-env'
  - uid: '@azure/ms-rest-azure-env.tls.TLSSocket.once_1'
    name: 'once("OCSPResponse", (response: Buffer) => void)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function once(event: "OCSPResponse", listener: (response: Buffer) =>
        void)
      parameters:
        - id: event
          type:
            - '"OCSPResponse"'
          description: ''
        - id: listener
          type:
            - '(response: Buffer) => void'
          description: ''
      return:
        type:
          - this
        description: ''
    package: '@azure/ms-rest-azure-env'
  - uid: '@azure/ms-rest-azure-env.tls.TLSSocket.once_2'
    name: 'once("secureConnect", () => void)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function once(event: "secureConnect", listener: () => void)'
      parameters:
        - id: event
          type:
            - '"secureConnect"'
          description: ''
        - id: listener
          type:
            - () => void
          description: ''
      return:
        type:
          - this
        description: ''
    package: '@azure/ms-rest-azure-env'
  - uid: '@azure/ms-rest-azure-env.tls.TLSSocket.once'
    name: 'once(string, (args: any[]) => void)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function once(event: string, listener: (args: any[]) => void)'
      parameters:
        - id: event
          type:
            - string
          description: ''
        - id: listener
          type:
            - '(args: any[]) => void'
          description: ''
      return:
        type:
          - this
        description: ''
    package: '@azure/ms-rest-azure-env'
  - uid: '@azure/ms-rest-azure-env.tls.TLSSocket.pause'
    name: pause()
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: function pause()
      parameters: []
      return:
        type:
          - this
        description: ''
    package: '@azure/ms-rest-azure-env'
  - uid: '@azure/ms-rest-azure-env.tls.TLSSocket.pipe'
    name: 'pipe(T, undefined | Object)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function pipe<T>(destination: T, options?: undefined | Object)'
      parameters:
        - id: destination
          type:
            - T
          description: ''
        - id: options
          type:
            - undefined | Object
          description: ''
          optional: true
      return:
        type:
          - T
        description: ''
    package: '@azure/ms-rest-azure-env'
  - uid: '@azure/ms-rest-azure-env.tls.TLSSocket.prependListener_1'
    name: 'prependListener("OCSPResponse", (response: Buffer) => void)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function prependListener(event: "OCSPResponse", listener: (response:
        Buffer) => void)
      parameters:
        - id: event
          type:
            - '"OCSPResponse"'
          description: ''
        - id: listener
          type:
            - '(response: Buffer) => void'
          description: ''
      return:
        type:
          - this
        description: ''
    package: '@azure/ms-rest-azure-env'
  - uid: '@azure/ms-rest-azure-env.tls.TLSSocket.prependListener_2'
    name: 'prependListener("secureConnect", () => void)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function prependListener(event: "secureConnect", listener: () => void)'
      parameters:
        - id: event
          type:
            - '"secureConnect"'
          description: ''
        - id: listener
          type:
            - () => void
          description: ''
      return:
        type:
          - this
        description: ''
    package: '@azure/ms-rest-azure-env'
  - uid: '@azure/ms-rest-azure-env.tls.TLSSocket.prependListener'
    name: 'prependListener(string, (args: any[]) => void)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function prependListener(event: string, listener: (args: any[]) => void)'
      parameters:
        - id: event
          type:
            - string
          description: ''
        - id: listener
          type:
            - '(args: any[]) => void'
          description: ''
      return:
        type:
          - this
        description: ''
    package: '@azure/ms-rest-azure-env'
  - uid: '@azure/ms-rest-azure-env.tls.TLSSocket.prependOnceListener_1'
    name: 'prependOnceListener("OCSPResponse", (response: Buffer) => void)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function prependOnceListener(event: "OCSPResponse", listener: (response:
        Buffer) => void)
      parameters:
        - id: event
          type:
            - '"OCSPResponse"'
          description: ''
        - id: listener
          type:
            - '(response: Buffer) => void'
          description: ''
      return:
        type:
          - this
        description: ''
    package: '@azure/ms-rest-azure-env'
  - uid: '@azure/ms-rest-azure-env.tls.TLSSocket.prependOnceListener_2'
    name: 'prependOnceListener("secureConnect", () => void)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function prependOnceListener(event: "secureConnect", listener: () =>
        void)
      parameters:
        - id: event
          type:
            - '"secureConnect"'
          description: ''
        - id: listener
          type:
            - () => void
          description: ''
      return:
        type:
          - this
        description: ''
    package: '@azure/ms-rest-azure-env'
  - uid: '@azure/ms-rest-azure-env.tls.TLSSocket.prependOnceListener'
    name: 'prependOnceListener(string, (args: any[]) => void)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function prependOnceListener(event: string, listener: (args: any[]) =>
        void)
      parameters:
        - id: event
          type:
            - string
          description: ''
        - id: listener
          type:
            - '(args: any[]) => void'
          description: ''
      return:
        type:
          - this
        description: ''
    package: '@azure/ms-rest-azure-env'
  - uid: '@azure/ms-rest-azure-env.tls.TLSSocket.push'
    name: 'push(any, undefined | string)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function push(chunk: any, encoding?: undefined | string)'
      parameters:
        - id: chunk
          type:
            - any
          description: ''
        - id: encoding
          type:
            - undefined | string
          description: ''
          optional: true
      return:
        type:
          - boolean
        description: ''
    package: '@azure/ms-rest-azure-env'
  - uid: '@azure/ms-rest-azure-env.tls.TLSSocket.rawListeners'
    name: rawListeners(string | symbol)
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function rawListeners(event: string | symbol)'
      parameters:
        - id: event
          type:
            - string | symbol
          description: ''
      return:
        type:
          - 'Function[]'
        description: ''
    package: '@azure/ms-rest-azure-env'
  - uid: '@azure/ms-rest-azure-env.tls.TLSSocket.read'
    name: read(undefined | number)
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function read(size?: undefined | number)'
      parameters:
        - id: size
          type:
            - undefined | number
          description: ''
          optional: true
      return:
        type:
          - any
        description: ''
    package: '@azure/ms-rest-azure-env'
  - uid: '@azure/ms-rest-azure-env.tls.TLSSocket.readable'
    name: readable
    fullName: readable
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    syntax:
      content: 'readable: boolean'
      return:
        type:
          - boolean
        description: ''
    package: '@azure/ms-rest-azure-env'
  - uid: '@azure/ms-rest-azure-env.tls.TLSSocket.readableHighWaterMark'
    name: readableHighWaterMark
    fullName: readableHighWaterMark
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    syntax:
      content: 'readableHighWaterMark: number'
      return:
        type:
          - number
        description: ''
    package: '@azure/ms-rest-azure-env'
  - uid: '@azure/ms-rest-azure-env.tls.TLSSocket.readableLength'
    name: readableLength
    fullName: readableLength
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    syntax:
      content: 'readableLength: number'
      return:
        type:
          - number
        description: ''
    package: '@azure/ms-rest-azure-env'
  - uid: '@azure/ms-rest-azure-env.tls.TLSSocket.readableObjectMode'
    name: readableObjectMode
    fullName: readableObjectMode
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    syntax:
      content: 'readableObjectMode: boolean'
      return:
        type:
          - boolean
        description: ''
    package: '@azure/ms-rest-azure-env'
  - uid: '@azure/ms-rest-azure-env.tls.TLSSocket.ref'
    name: ref()
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: function ref()
      parameters: []
      return:
        type:
          - this
        description: ''
    package: '@azure/ms-rest-azure-env'
  - uid: '@azure/ms-rest-azure-env.tls.TLSSocket.remoteAddress'
    name: remoteAddress
    fullName: remoteAddress
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    optional: true
    syntax:
      content: 'remoteAddress?: undefined | string'
      return:
        type:
          - undefined | string
        description: ''
    package: '@azure/ms-rest-azure-env'
  - uid: '@azure/ms-rest-azure-env.tls.TLSSocket.remoteFamily'
    name: remoteFamily
    fullName: remoteFamily
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    optional: true
    syntax:
      content: 'remoteFamily?: undefined | string'
      return:
        type:
          - undefined | string
        description: ''
    package: '@azure/ms-rest-azure-env'
  - uid: '@azure/ms-rest-azure-env.tls.TLSSocket.remotePort'
    name: remotePort
    fullName: remotePort
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    optional: true
    syntax:
      content: 'remotePort?: undefined | number'
      return:
        type:
          - undefined | number
        description: ''
    package: '@azure/ms-rest-azure-env'
  - uid: '@azure/ms-rest-azure-env.tls.TLSSocket.removeAllListeners'
    name: removeAllListeners(string | symbol)
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function removeAllListeners(event?: string | symbol)'
      parameters:
        - id: event
          type:
            - string | symbol
          description: ''
          optional: true
      return:
        type:
          - this
        description: ''
    package: '@azure/ms-rest-azure-env'
  - uid: '@azure/ms-rest-azure-env.tls.TLSSocket.removeListener'
    name: 'removeListener("close", () => void)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function removeListener(event: "close", listener: () => void)'
      parameters:
        - id: event
          type:
            - '"close"'
          description: ''
        - id: listener
          type:
            - () => void
          description: ''
      return:
        type:
          - this
        description: ''
    package: '@azure/ms-rest-azure-env'
  - uid: '@azure/ms-rest-azure-env.tls.TLSSocket.removeListener_1'
    name: 'removeListener("data", (chunk: any) => void)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function removeListener(event: "data", listener: (chunk: any) => void)'
      parameters:
        - id: event
          type:
            - '"data"'
          description: ''
        - id: listener
          type:
            - '(chunk: any) => void'
          description: ''
      return:
        type:
          - this
        description: ''
    package: '@azure/ms-rest-azure-env'
  - uid: '@azure/ms-rest-azure-env.tls.TLSSocket.removeListener_2'
    name: 'removeListener("end", () => void)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function removeListener(event: "end", listener: () => void)'
      parameters:
        - id: event
          type:
            - '"end"'
          description: ''
        - id: listener
          type:
            - () => void
          description: ''
      return:
        type:
          - this
        description: ''
    package: '@azure/ms-rest-azure-env'
  - uid: '@azure/ms-rest-azure-env.tls.TLSSocket.removeListener_4'
    name: 'removeListener("error", (err: Error) => void)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function removeListener(event: "error", listener: (err: Error) => void)'
      parameters:
        - id: event
          type:
            - '"error"'
          description: ''
        - id: listener
          type:
            - '(err: Error) => void'
          description: ''
      return:
        type:
          - this
        description: ''
    package: '@azure/ms-rest-azure-env'
  - uid: '@azure/ms-rest-azure-env.tls.TLSSocket.removeListener_3'
    name: 'removeListener("readable", () => void)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function removeListener(event: "readable", listener: () => void)'
      parameters:
        - id: event
          type:
            - '"readable"'
          description: ''
        - id: listener
          type:
            - () => void
          description: ''
      return:
        type:
          - this
        description: ''
    package: '@azure/ms-rest-azure-env'
  - uid: '@azure/ms-rest-azure-env.tls.TLSSocket.removeListener_5'
    name: 'removeListener(string | symbol, (args: any[]) => void)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function removeListener(event: string | symbol, listener: (args: any[])
        => void)
      parameters:
        - id: event
          type:
            - string | symbol
          description: ''
        - id: listener
          type:
            - '(args: any[]) => void'
          description: ''
      return:
        type:
          - this
        description: ''
    package: '@azure/ms-rest-azure-env'
  - uid: '@azure/ms-rest-azure-env.tls.TLSSocket.renegotiate'
    name: 'renegotiate(Object, (err: Error | null) => void)'
    children: []
    type: method
    langs:
      - typeScript
    summary: >-
      Initiate TLS renegotiation process.

      NOTE: Can be used to request peer's certificate after the secure
      connection has been established.

      ANOTHER NOTE: When running as the server, socket will be destroyed with an
      error after handshakeTimeout timeout.
    syntax:
      content: >-
        function renegotiate(options: Object, callback: (err: Error | null) =>
        void)
      parameters:
        - id: options
          type:
            - Object
          description: |-
            The options may contain the following fields: rejectUnauthorized,
            requestCert (See tls.createServer() for details).
        - id: callback
          type:
            - '(err: Error | null) => void'
          description: >
            callback(err) will be executed with null as err, once the
            renegotiation

            is successfully completed.
      return:
        type:
          - any
        description: ''
    package: '@azure/ms-rest-azure-env'
  - uid: '@azure/ms-rest-azure-env.tls.TLSSocket.resume'
    name: resume()
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: function resume()
      parameters: []
      return:
        type:
          - this
        description: ''
    package: '@azure/ms-rest-azure-env'
  - uid: '@azure/ms-rest-azure-env.tls.TLSSocket.setDefaultEncoding'
    name: setDefaultEncoding(string)
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function setDefaultEncoding(encoding: string)'
      parameters:
        - id: encoding
          type:
            - string
          description: ''
      return:
        type:
          - this
        description: ''
    package: '@azure/ms-rest-azure-env'
  - uid: '@azure/ms-rest-azure-env.tls.TLSSocket.setEncoding'
    name: setEncoding(undefined | string)
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function setEncoding(encoding?: undefined | string)'
      parameters:
        - id: encoding
          type:
            - undefined | string
          description: ''
          optional: true
      return:
        type:
          - this
        description: ''
    package: '@azure/ms-rest-azure-env'
  - uid: '@azure/ms-rest-azure-env.tls.TLSSocket.setKeepAlive'
    name: 'setKeepAlive(undefined | false | true, undefined | number)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function setKeepAlive(enable?: undefined | false | true, initialDelay?:
        undefined | number)
      parameters:
        - id: enable
          type:
            - undefined | false | true
          description: ''
          optional: true
        - id: initialDelay
          type:
            - undefined | number
          description: ''
          optional: true
      return:
        type:
          - this
        description: ''
    package: '@azure/ms-rest-azure-env'
  - uid: '@azure/ms-rest-azure-env.tls.TLSSocket.setMaxListeners'
    name: setMaxListeners(number)
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function setMaxListeners(n: number)'
      parameters:
        - id: 'n'
          type:
            - number
          description: ''
      return:
        type:
          - this
        description: ''
    package: '@azure/ms-rest-azure-env'
  - uid: '@azure/ms-rest-azure-env.tls.TLSSocket.setMaxSendFragment'
    name: setMaxSendFragment(number)
    children: []
    type: method
    langs:
      - typeScript
    summary: >-
      Set maximum TLS fragment size (default and maximum value is: 16384,
      minimum is: 512).

      Smaller fragment size decreases buffering latency on the client: large
      fragments are buffered by

      the TLS layer until the entire fragment is received and its integrity is
      verified;

      large fragments can span multiple roundtrips, and their processing can be
      delayed due to packet

      loss or reordering. However, smaller fragments add extra TLS framing bytes
      and CPU overhead,

      which may decrease overall server throughput.
    syntax:
      content: 'function setMaxSendFragment(size: number)'
      parameters:
        - id: size
          type:
            - number
          description: >-
            TLS fragment size (default and maximum value is: 16384, minimum is:
            512).
      return:
        type:
          - boolean
        description: 'Returns true on success, false otherwise.'
    package: '@azure/ms-rest-azure-env'
  - uid: '@azure/ms-rest-azure-env.tls.TLSSocket.setNoDelay'
    name: setNoDelay(undefined | false | true)
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function setNoDelay(noDelay?: undefined | false | true)'
      parameters:
        - id: noDelay
          type:
            - undefined | false | true
          description: ''
          optional: true
      return:
        type:
          - this
        description: ''
    package: '@azure/ms-rest-azure-env'
  - uid: '@azure/ms-rest-azure-env.tls.TLSSocket.setTimeout'
    name: 'setTimeout(number, undefined | () => void)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function setTimeout(timeout: number, callback?: undefined | () => void)'
      parameters:
        - id: timeout
          type:
            - number
          description: ''
        - id: callback
          type:
            - undefined | () => void
          description: ''
          optional: true
      return:
        type:
          - this
        description: ''
    package: '@azure/ms-rest-azure-env'
  - uid: '@azure/ms-rest-azure-env.tls.TLSSocket.constructor'
    name: 'TLSSocket(Socket, undefined | Object)'
    children: []
    type: constructor
    langs:
      - typeScript
    summary: Construct a new tls.TLSSocket object from an existing TCP socket.
    syntax:
      content: 'new TLSSocket(socket: Socket, options?: undefined | Object)'
      parameters:
        - id: socket
          type:
            - '@azure/ms-rest-azure-env.net.Socket'
          description: ''
        - id: options
          type:
            - undefined | Object
          description: ''
          optional: true
    package: '@azure/ms-rest-azure-env'
  - uid: '@azure/ms-rest-azure-env.tls.TLSSocket.uncork'
    name: uncork()
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: function uncork()
      parameters: []
    package: '@azure/ms-rest-azure-env'
  - uid: '@azure/ms-rest-azure-env.tls.TLSSocket.unpipe'
    name: unpipe(NodeJS.WritableStream)
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function unpipe(destination?: NodeJS.WritableStream)'
      parameters:
        - id: destination
          type:
            - '@azure/ms-rest-azure-env.NodeJS.WritableStream'
          description: ''
          optional: true
      return:
        type:
          - this
        description: ''
    package: '@azure/ms-rest-azure-env'
  - uid: '@azure/ms-rest-azure-env.tls.TLSSocket.unref'
    name: unref()
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: function unref()
      parameters: []
      return:
        type:
          - this
        description: ''
    package: '@azure/ms-rest-azure-env'
  - uid: '@azure/ms-rest-azure-env.tls.TLSSocket.unshift'
    name: 'unshift(any, BufferEncoding)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function unshift(chunk: any, encoding?: BufferEncoding)'
      parameters:
        - id: chunk
          type:
            - any
          description: ''
        - id: encoding
          type:
            - '@azure/ms-rest-azure-env.BufferEncoding'
          description: ''
          optional: true
    package: '@azure/ms-rest-azure-env'
  - uid: '@azure/ms-rest-azure-env.tls.TLSSocket.wrap'
    name: wrap(ReadableStream)
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function wrap(oldStream: ReadableStream)'
      parameters:
        - id: oldStream
          type:
            - ReadableStream
          description: ''
      return:
        type:
          - this
        description: ''
    package: '@azure/ms-rest-azure-env'
  - uid: '@azure/ms-rest-azure-env.tls.TLSSocket.writable'
    name: writable
    fullName: writable
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    syntax:
      content: 'writable: boolean'
      return:
        type:
          - boolean
        description: ''
    package: '@azure/ms-rest-azure-env'
  - uid: '@azure/ms-rest-azure-env.tls.TLSSocket.writableCorked'
    name: writableCorked
    fullName: writableCorked
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    syntax:
      content: 'writableCorked: number'
      return:
        type:
          - number
        description: ''
    package: '@azure/ms-rest-azure-env'
  - uid: '@azure/ms-rest-azure-env.tls.TLSSocket.writableEnded'
    name: writableEnded
    fullName: writableEnded
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    syntax:
      content: 'writableEnded: boolean'
      return:
        type:
          - boolean
        description: ''
    package: '@azure/ms-rest-azure-env'
  - uid: '@azure/ms-rest-azure-env.tls.TLSSocket.writableFinished'
    name: writableFinished
    fullName: writableFinished
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    syntax:
      content: 'writableFinished: boolean'
      return:
        type:
          - boolean
        description: ''
    package: '@azure/ms-rest-azure-env'
  - uid: '@azure/ms-rest-azure-env.tls.TLSSocket.writableHighWaterMark'
    name: writableHighWaterMark
    fullName: writableHighWaterMark
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    syntax:
      content: 'writableHighWaterMark: number'
      return:
        type:
          - number
        description: ''
    package: '@azure/ms-rest-azure-env'
  - uid: '@azure/ms-rest-azure-env.tls.TLSSocket.writableLength'
    name: writableLength
    fullName: writableLength
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    syntax:
      content: 'writableLength: number'
      return:
        type:
          - number
        description: ''
    package: '@azure/ms-rest-azure-env'
  - uid: '@azure/ms-rest-azure-env.tls.TLSSocket.writableObjectMode'
    name: writableObjectMode
    fullName: writableObjectMode
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    syntax:
      content: 'writableObjectMode: boolean'
      return:
        type:
          - boolean
        description: ''
    package: '@azure/ms-rest-azure-env'
  - uid: '@azure/ms-rest-azure-env.tls.TLSSocket.write'
    name: 'write(Uint8Array | string, undefined | (err?: Error) => void)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function write(buffer: Uint8Array | string, cb?: undefined | (err?:
        Error) => void)
      parameters:
        - id: buffer
          type:
            - Uint8Array | string
          description: ''
        - id: cb
          type:
            - 'undefined | (err?: Error) => void'
          description: ''
          optional: true
      return:
        type:
          - boolean
        description: ''
    package: '@azure/ms-rest-azure-env'
  - uid: '@azure/ms-rest-azure-env.tls.TLSSocket.write_1'
    name: >-
      write(Uint8Array | string, undefined | string, undefined | (err?: Error)
      => void)
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function write(str: Uint8Array | string, encoding?: undefined | string,
        cb?: undefined | (err?: Error) => void)
      parameters:
        - id: str
          type:
            - Uint8Array | string
          description: ''
        - id: encoding
          type:
            - undefined | string
          description: ''
          optional: true
        - id: cb
          type:
            - 'undefined | (err?: Error) => void'
          description: ''
          optional: true
      return:
        type:
          - boolean
        description: ''
    package: '@azure/ms-rest-azure-env'
references:
  - uid: '@azure/ms-rest-azure-env.net.Server'
    name: Server
    spec.typeScript:
      - name: Server
        fullName: Server
        uid: '@azure/ms-rest-azure-env.net.Server'
  - uid: '@azure/ms-rest-azure-env.net.AddressInfo | string | null'
    name: AddressInfo | string | null
    spec.typeScript:
      - name: AddressInfo
        fullName: AddressInfo
        uid: '@azure/ms-rest-azure-env.net.AddressInfo'
      - name: ' | string | null'
        fullName: ' | string | null'
  - uid: '@azure/ms-rest-azure-env.tls.TLSSocket'
    name: TLSSocket
    spec.typeScript:
      - name: TLSSocket
        fullName: TLSSocket
        uid: '@azure/ms-rest-azure-env.tls.TLSSocket'
  - uid: '@azure/ms-rest-azure-env.net.Socket'
    name: Socket
    spec.typeScript:
      - name: Socket
        fullName: Socket
        uid: '@azure/ms-rest-azure-env.net.Socket'
  - uid: '@azure/ms-rest-azure-env.net.AddressInfo | string'
    name: AddressInfo | string
    spec.typeScript:
      - name: AddressInfo
        fullName: AddressInfo
        uid: '@azure/ms-rest-azure-env.net.AddressInfo'
      - name: ' | string'
        fullName: ' | string'
  - uid: '@azure/ms-rest-azure-env.net.SocketConnectOpts'
    name: SocketConnectOpts
    spec.typeScript:
      - name: SocketConnectOpts
        fullName: SocketConnectOpts
        uid: '@azure/ms-rest-azure-env.net.SocketConnectOpts'
  - uid: '@azure/ms-rest-azure-env.Error'
    name: Error
    spec.typeScript:
      - name: Error
        fullName: Error
        uid: '@azure/ms-rest-azure-env.Error'
  - uid: '@azure/ms-rest-azure-env.NodeJS.WritableStream'
    name: WritableStream
    spec.typeScript:
      - name: WritableStream
        fullName: WritableStream
        uid: '@azure/ms-rest-azure-env.NodeJS.WritableStream'
  - uid: '@azure/ms-rest-azure-env.BufferEncoding'
    name: BufferEncoding
    spec.typeScript:
      - name: BufferEncoding
        fullName: BufferEncoding
        uid: '@azure/ms-rest-azure-env.BufferEncoding'
  - uid: '@azure/ms-rest-azure-env.stream.internal.ReadableOptions'
    name: ReadableOptions
    spec.typeScript:
      - name: ReadableOptions
        fullName: ReadableOptions
        uid: '@azure/ms-rest-azure-env.stream.internal.ReadableOptions'
  - uid: '@azure/ms-rest-azure-env.stream.internal.Readable'
    name: Readable
    spec.typeScript:
      - name: Readable
        fullName: Readable
        uid: '@azure/ms-rest-azure-env.stream.internal.Readable'
  - uid: '@azure/ms-rest-azure-env.stream.internal.Duplex'
    name: Duplex
    spec.typeScript:
      - name: Duplex
        fullName: Duplex
        uid: '@azure/ms-rest-azure-env.stream.internal.Duplex'
  - uid: '@azure/ms-rest-azure-env.stream.internal.DuplexOptions'
    name: DuplexOptions
    spec.typeScript:
      - name: DuplexOptions
        fullName: DuplexOptions
        uid: '@azure/ms-rest-azure-env.stream.internal.DuplexOptions'
  - uid: string | Buffer | Array<Buffer | @azure/ms-rest-azure-env.tls.KeyObject>
    name: KeyObject>
    spec.typeScript:
      - name: 'string | Buffer | Array<Buffer | '
        fullName: 'string | Buffer | Array<Buffer | '
      - name: KeyObject
        fullName: KeyObject
        uid: '@azure/ms-rest-azure-env.tls.KeyObject'
      - name: '>'
        fullName: '>'
  - uid: '@azure/ms-rest-azure-env.tls.SecureVersion'
    name: SecureVersion
    spec.typeScript:
      - name: SecureVersion
        fullName: SecureVersion
        uid: '@azure/ms-rest-azure-env.tls.SecureVersion'
  - uid: >-
      string | Buffer | Array<string | Buffer |
      @azure/ms-rest-azure-env.tls.PxfObject>
    name: PxfObject>
    spec.typeScript:
      - name: 'string | Buffer | Array<string | Buffer | '
        fullName: 'string | Buffer | Array<string | Buffer | '
      - name: PxfObject
        fullName: PxfObject
        uid: '@azure/ms-rest-azure-env.tls.PxfObject'
      - name: '>'
        fullName: '>'
  - uid: '@azure/ms-rest-azure-env.tls.SecureContext'
    name: SecureContext
    spec.typeScript:
      - name: SecureContext
        fullName: SecureContext
        uid: '@azure/ms-rest-azure-env.tls.SecureContext'
  - uid: '@azure/ms-rest-azure-env.Buffer'
    name: Buffer
    spec.typeScript:
      - name: Buffer
        fullName: Buffer
        uid: '@azure/ms-rest-azure-env.Buffer'
  - uid: '@azure/ms-rest-azure-env.tls.ConnectionOptions'
    name: ConnectionOptions
    spec.typeScript:
      - name: ConnectionOptions
        fullName: ConnectionOptions
        uid: '@azure/ms-rest-azure-env.tls.ConnectionOptions'
  - uid: '@azure/ms-rest-azure-env.tls.Server'
    name: Server
    spec.typeScript:
      - name: Server
        fullName: Server
        uid: '@azure/ms-rest-azure-env.tls.Server'
