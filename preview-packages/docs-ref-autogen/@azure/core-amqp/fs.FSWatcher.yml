### YamlMime:UniversalReference
items:
  - uid: tslib.fs.FSWatcher
    name: FSWatcher
    fullName: FSWatcher
    children:
      - tslib.fs.FSWatcher.addListener_1
      - tslib.fs.FSWatcher.addListener_3
      - tslib.fs.FSWatcher.addListener_2
      - tslib.fs.FSWatcher.addListener
      - tslib.fs.FSWatcher.close
      - tslib.fs.FSWatcher.defaultMaxListeners
      - tslib.fs.FSWatcher.emit
      - tslib.fs.FSWatcher.eventNames
      - tslib.fs.FSWatcher.constructor
      - tslib.fs.FSWatcher.getMaxListeners
      - tslib.fs.FSWatcher.listenerCount
      - tslib.fs.FSWatcher.listenerCount
      - tslib.fs.FSWatcher.listeners
      - tslib.fs.FSWatcher.off
      - tslib.fs.FSWatcher.on_1
      - tslib.fs.FSWatcher.on_3
      - tslib.fs.FSWatcher.on_2
      - tslib.fs.FSWatcher.on
      - tslib.fs.FSWatcher.once_1
      - tslib.fs.FSWatcher.once_3
      - tslib.fs.FSWatcher.once_2
      - tslib.fs.FSWatcher.once
      - tslib.fs.FSWatcher.prependListener_1
      - tslib.fs.FSWatcher.prependListener_3
      - tslib.fs.FSWatcher.prependListener_2
      - tslib.fs.FSWatcher.prependListener
      - tslib.fs.FSWatcher.prependOnceListener_1
      - tslib.fs.FSWatcher.prependOnceListener_3
      - tslib.fs.FSWatcher.prependOnceListener_2
      - tslib.fs.FSWatcher.prependOnceListener
      - tslib.fs.FSWatcher.rawListeners
      - tslib.fs.FSWatcher.removeAllListeners
      - tslib.fs.FSWatcher.removeListener
      - tslib.fs.FSWatcher.setMaxListeners
    langs:
      - typeScript
    type: interface
    summary: ''
    extends:
      name: tslib.events.EventEmitter.EventEmitter
    package: tslib
  - uid: tslib.fs.FSWatcher.addListener_1
    name: >-
      addListener("change", (eventType: string, filename: string | Buffer) =>
      void)
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function addListener(event: "change", listener: (eventType: string,
        filename: string | Buffer) => void)
      parameters:
        - id: event
          type:
            - '"change"'
          description: ''
        - id: listener
          type:
            - '(eventType: string, filename: string | Buffer) => void'
          description: ''
      return:
        type:
          - this
        description: ''
    package: tslib
  - uid: tslib.fs.FSWatcher.addListener_3
    name: 'addListener("close", () => void)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function addListener(event: "close", listener: () => void)'
      parameters:
        - id: event
          type:
            - '"close"'
          description: ''
        - id: listener
          type:
            - () => void
          description: ''
      return:
        type:
          - this
        description: ''
    package: tslib
  - uid: tslib.fs.FSWatcher.addListener_2
    name: 'addListener("error", (error: Error) => void)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function addListener(event: "error", listener: (error: Error) => void)'
      parameters:
        - id: event
          type:
            - '"error"'
          description: ''
        - id: listener
          type:
            - '(error: Error) => void'
          description: ''
      return:
        type:
          - this
        description: ''
    package: tslib
  - uid: tslib.fs.FSWatcher.addListener
    name: 'addListener(string, (args: any[]) => void)'
    children: []
    type: method
    langs:
      - typeScript
    summary: |-
      events.EventEmitter
        1. change
        2. error
    syntax:
      content: 'function addListener(event: string, listener: (args: any[]) => void)'
      parameters:
        - id: event
          type:
            - string
          description: ''
        - id: listener
          type:
            - '(args: any[]) => void'
          description: ''
      return:
        type:
          - this
        description: ''
    package: tslib
  - uid: tslib.fs.FSWatcher.close
    name: close()
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: function close()
      parameters: []
    package: tslib
  - uid: tslib.fs.FSWatcher.defaultMaxListeners
    name: defaultMaxListeners
    fullName: defaultMaxListeners
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    syntax:
      content: 'static defaultMaxListeners: number'
      return:
        type:
          - number
        description: ''
    package: tslib
  - uid: tslib.fs.FSWatcher.emit
    name: 'emit(string | symbol, any[])'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function emit(event: string | symbol, args: any[])'
      parameters:
        - id: event
          type:
            - string | symbol
          description: ''
        - id: args
          type:
            - 'any[]'
          description: ''
      return:
        type:
          - boolean
        description: ''
    package: tslib
  - uid: tslib.fs.FSWatcher.eventNames
    name: eventNames()
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: function eventNames()
      parameters: []
      return:
        type:
          - Array<string | symbol>
        description: ''
    package: tslib
  - uid: tslib.fs.FSWatcher.constructor
    name: FSWatcher(EventEmitterOptions)
    children: []
    type: constructor
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'new FSWatcher(options?: EventEmitterOptions)'
      parameters:
        - id: options
          type:
            - tslib.events.EventEmitterOptions
          description: ''
          optional: true
    package: tslib
  - uid: tslib.fs.FSWatcher.getMaxListeners
    name: getMaxListeners()
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: function getMaxListeners()
      parameters: []
      return:
        type:
          - number
        description: ''
    package: tslib
  - uid: tslib.fs.FSWatcher.listenerCount
    name: 'listenerCount(EventEmitter, string | symbol)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        static function listenerCount(emitter: EventEmitter, event: string |
        symbol)
      parameters:
        - id: emitter
          type:
            - tslib.events.EventEmitter.EventEmitter
          description: ''
        - id: event
          type:
            - string | symbol
          description: ''
      return:
        type:
          - number
        description: ''
    package: tslib
    deprecated:
      content: since v4.0.0
  - uid: tslib.fs.FSWatcher.listenerCount
    name: listenerCount(string | symbol)
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function listenerCount(type: string | symbol)'
      parameters:
        - id: type
          type:
            - string | symbol
          description: ''
      return:
        type:
          - number
        description: ''
    package: tslib
  - uid: tslib.fs.FSWatcher.listeners
    name: listeners(string | symbol)
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function listeners(event: string | symbol)'
      parameters:
        - id: event
          type:
            - string | symbol
          description: ''
      return:
        type:
          - 'Function[]'
        description: ''
    package: tslib
  - uid: tslib.fs.FSWatcher.off
    name: 'off(string | symbol, (args: any[]) => void)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function off(event: string | symbol, listener: (args: any[]) => void)'
      parameters:
        - id: event
          type:
            - string | symbol
          description: ''
        - id: listener
          type:
            - '(args: any[]) => void'
          description: ''
      return:
        type:
          - this
        description: ''
    package: tslib
  - uid: tslib.fs.FSWatcher.on_1
    name: 'on("change", (eventType: string, filename: string | Buffer) => void)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function on(event: "change", listener: (eventType: string, filename:
        string | Buffer) => void)
      parameters:
        - id: event
          type:
            - '"change"'
          description: ''
        - id: listener
          type:
            - '(eventType: string, filename: string | Buffer) => void'
          description: ''
      return:
        type:
          - this
        description: ''
    package: tslib
  - uid: tslib.fs.FSWatcher.on_3
    name: 'on("close", () => void)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function on(event: "close", listener: () => void)'
      parameters:
        - id: event
          type:
            - '"close"'
          description: ''
        - id: listener
          type:
            - () => void
          description: ''
      return:
        type:
          - this
        description: ''
    package: tslib
  - uid: tslib.fs.FSWatcher.on_2
    name: 'on("error", (error: Error) => void)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function on(event: "error", listener: (error: Error) => void)'
      parameters:
        - id: event
          type:
            - '"error"'
          description: ''
        - id: listener
          type:
            - '(error: Error) => void'
          description: ''
      return:
        type:
          - this
        description: ''
    package: tslib
  - uid: tslib.fs.FSWatcher.on
    name: 'on(string, (args: any[]) => void)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function on(event: string, listener: (args: any[]) => void)'
      parameters:
        - id: event
          type:
            - string
          description: ''
        - id: listener
          type:
            - '(args: any[]) => void'
          description: ''
      return:
        type:
          - this
        description: ''
    package: tslib
  - uid: tslib.fs.FSWatcher.once_1
    name: 'once("change", (eventType: string, filename: string | Buffer) => void)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function once(event: "change", listener: (eventType: string, filename:
        string | Buffer) => void)
      parameters:
        - id: event
          type:
            - '"change"'
          description: ''
        - id: listener
          type:
            - '(eventType: string, filename: string | Buffer) => void'
          description: ''
      return:
        type:
          - this
        description: ''
    package: tslib
  - uid: tslib.fs.FSWatcher.once_3
    name: 'once("close", () => void)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function once(event: "close", listener: () => void)'
      parameters:
        - id: event
          type:
            - '"close"'
          description: ''
        - id: listener
          type:
            - () => void
          description: ''
      return:
        type:
          - this
        description: ''
    package: tslib
  - uid: tslib.fs.FSWatcher.once_2
    name: 'once("error", (error: Error) => void)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function once(event: "error", listener: (error: Error) => void)'
      parameters:
        - id: event
          type:
            - '"error"'
          description: ''
        - id: listener
          type:
            - '(error: Error) => void'
          description: ''
      return:
        type:
          - this
        description: ''
    package: tslib
  - uid: tslib.fs.FSWatcher.once
    name: 'once(string, (args: any[]) => void)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function once(event: string, listener: (args: any[]) => void)'
      parameters:
        - id: event
          type:
            - string
          description: ''
        - id: listener
          type:
            - '(args: any[]) => void'
          description: ''
      return:
        type:
          - this
        description: ''
    package: tslib
  - uid: tslib.fs.FSWatcher.prependListener_1
    name: >-
      prependListener("change", (eventType: string, filename: string | Buffer)
      => void)
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function prependListener(event: "change", listener: (eventType: string,
        filename: string | Buffer) => void)
      parameters:
        - id: event
          type:
            - '"change"'
          description: ''
        - id: listener
          type:
            - '(eventType: string, filename: string | Buffer) => void'
          description: ''
      return:
        type:
          - this
        description: ''
    package: tslib
  - uid: tslib.fs.FSWatcher.prependListener_3
    name: 'prependListener("close", () => void)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function prependListener(event: "close", listener: () => void)'
      parameters:
        - id: event
          type:
            - '"close"'
          description: ''
        - id: listener
          type:
            - () => void
          description: ''
      return:
        type:
          - this
        description: ''
    package: tslib
  - uid: tslib.fs.FSWatcher.prependListener_2
    name: 'prependListener("error", (error: Error) => void)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function prependListener(event: "error", listener: (error: Error) =>
        void)
      parameters:
        - id: event
          type:
            - '"error"'
          description: ''
        - id: listener
          type:
            - '(error: Error) => void'
          description: ''
      return:
        type:
          - this
        description: ''
    package: tslib
  - uid: tslib.fs.FSWatcher.prependListener
    name: 'prependListener(string, (args: any[]) => void)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function prependListener(event: string, listener: (args: any[]) => void)'
      parameters:
        - id: event
          type:
            - string
          description: ''
        - id: listener
          type:
            - '(args: any[]) => void'
          description: ''
      return:
        type:
          - this
        description: ''
    package: tslib
  - uid: tslib.fs.FSWatcher.prependOnceListener_1
    name: >-
      prependOnceListener("change", (eventType: string, filename: string |
      Buffer) => void)
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function prependOnceListener(event: "change", listener: (eventType:
        string, filename: string | Buffer) => void)
      parameters:
        - id: event
          type:
            - '"change"'
          description: ''
        - id: listener
          type:
            - '(eventType: string, filename: string | Buffer) => void'
          description: ''
      return:
        type:
          - this
        description: ''
    package: tslib
  - uid: tslib.fs.FSWatcher.prependOnceListener_3
    name: 'prependOnceListener("close", () => void)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function prependOnceListener(event: "close", listener: () => void)'
      parameters:
        - id: event
          type:
            - '"close"'
          description: ''
        - id: listener
          type:
            - () => void
          description: ''
      return:
        type:
          - this
        description: ''
    package: tslib
  - uid: tslib.fs.FSWatcher.prependOnceListener_2
    name: 'prependOnceListener("error", (error: Error) => void)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function prependOnceListener(event: "error", listener: (error: Error) =>
        void)
      parameters:
        - id: event
          type:
            - '"error"'
          description: ''
        - id: listener
          type:
            - '(error: Error) => void'
          description: ''
      return:
        type:
          - this
        description: ''
    package: tslib
  - uid: tslib.fs.FSWatcher.prependOnceListener
    name: 'prependOnceListener(string, (args: any[]) => void)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function prependOnceListener(event: string, listener: (args: any[]) =>
        void)
      parameters:
        - id: event
          type:
            - string
          description: ''
        - id: listener
          type:
            - '(args: any[]) => void'
          description: ''
      return:
        type:
          - this
        description: ''
    package: tslib
  - uid: tslib.fs.FSWatcher.rawListeners
    name: rawListeners(string | symbol)
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function rawListeners(event: string | symbol)'
      parameters:
        - id: event
          type:
            - string | symbol
          description: ''
      return:
        type:
          - 'Function[]'
        description: ''
    package: tslib
  - uid: tslib.fs.FSWatcher.removeAllListeners
    name: removeAllListeners(string | symbol)
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function removeAllListeners(event?: string | symbol)'
      parameters:
        - id: event
          type:
            - string | symbol
          description: ''
          optional: true
      return:
        type:
          - this
        description: ''
    package: tslib
  - uid: tslib.fs.FSWatcher.removeListener
    name: 'removeListener(string | symbol, (args: any[]) => void)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function removeListener(event: string | symbol, listener: (args: any[])
        => void)
      parameters:
        - id: event
          type:
            - string | symbol
          description: ''
        - id: listener
          type:
            - '(args: any[]) => void'
          description: ''
      return:
        type:
          - this
        description: ''
    package: tslib
  - uid: tslib.fs.FSWatcher.setMaxListeners
    name: setMaxListeners(number)
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function setMaxListeners(n: number)'
      parameters:
        - id: 'n'
          type:
            - number
          description: ''
      return:
        type:
          - this
        description: ''
    package: tslib
references:
  - uid: Object | tslib.BufferEncoding
    name: BufferEncoding
    spec.typeScript:
      - name: 'Object | '
        fullName: 'Object | '
      - name: BufferEncoding
        fullName: BufferEncoding
        uid: tslib.BufferEncoding
  - uid: Promise<tslib.fs.Stats>
    name: Stats>
    spec.typeScript:
      - name: Promise<
        fullName: Promise<
      - name: Stats
        fullName: Stats
        uid: tslib.fs.Stats
      - name: '>'
        fullName: '>'
  - uid: 'tslib.NodeJS.ArrayBufferView[]'
    name: 'ArrayBufferView[]'
    spec.typeScript:
      - name: ArrayBufferView
        fullName: ArrayBufferView
        uid: tslib.NodeJS.ArrayBufferView
      - name: '[]'
        fullName: '[]'
  - uid: Promise<tslib.fs.WriteVResult>
    name: WriteVResult>
    spec.typeScript:
      - name: Promise<
        fullName: Promise<
      - name: WriteVResult
        fullName: WriteVResult
        uid: tslib.fs.WriteVResult
      - name: '>'
        fullName: '>'
  - uid: tslib.fs.PathLike
    name: PathLike
    spec.typeScript:
      - name: PathLike
        fullName: PathLike
        uid: tslib.fs.PathLike
  - uid: tslib.fs.PathLike | tslib.fs.promises.FileHandle
    name: FileHandle
    spec.typeScript:
      - name: PathLike
        fullName: PathLike
        uid: tslib.fs.PathLike
      - name: ' | '
        fullName: ' | '
      - name: FileHandle
        fullName: FileHandle
        uid: tslib.fs.promises.FileHandle
  - uid: tslib.fs.promises.FileHandle
    name: FileHandle
    spec.typeScript:
      - name: FileHandle
        fullName: FileHandle
        uid: tslib.fs.promises.FileHandle
  - uid: number | string | tslib.fs.MakeDirectoryOptions | null
    name: MakeDirectoryOptions | null
    spec.typeScript:
      - name: 'number | string | '
        fullName: 'number | string | '
      - name: MakeDirectoryOptions
        fullName: MakeDirectoryOptions
        uid: tslib.fs.MakeDirectoryOptions
      - name: ' | null'
        fullName: ' | null'
  - uid: Object | tslib.BufferEncoding | null
    name: BufferEncoding | null
    spec.typeScript:
      - name: 'Object | '
        fullName: 'Object | '
      - name: BufferEncoding
        fullName: BufferEncoding
        uid: tslib.BufferEncoding
      - name: ' | null'
        fullName: ' | null'
  - uid: Promise<tslib.fs.promises.FileHandle>
    name: FileHandle>
    spec.typeScript:
      - name: Promise<
        fullName: Promise<
      - name: FileHandle
        fullName: FileHandle
        uid: tslib.fs.promises.FileHandle
      - name: '>'
        fullName: '>'
  - uid: tslib.fs.OpenDirOptions
    name: OpenDirOptions
    spec.typeScript:
      - name: OpenDirOptions
        fullName: OpenDirOptions
        uid: tslib.fs.OpenDirOptions
  - uid: Promise<tslib.fs.Dir>
    name: Dir>
    spec.typeScript:
      - name: Promise<
        fullName: Promise<
      - name: Dir
        fullName: Dir
        uid: tslib.fs.Dir
      - name: '>'
        fullName: '>'
  - uid: 'Promise<tslib.fs.Dirent[]>'
    name: 'Dirent[]>'
    spec.typeScript:
      - name: Promise<
        fullName: Promise<
      - name: Dirent
        fullName: Dirent
        uid: tslib.fs.Dirent
      - name: '[]>'
        fullName: '[]>'
  - uid: tslib.fs.RmDirAsyncOptions
    name: RmDirAsyncOptions
    spec.typeScript:
      - name: RmDirAsyncOptions
        fullName: RmDirAsyncOptions
        uid: tslib.fs.RmDirAsyncOptions
  - uid: Object | tslib.BufferEncoding | undefined | null
    name: BufferEncoding | undefined | null
    spec.typeScript:
      - name: 'Object | '
        fullName: 'Object | '
      - name: BufferEncoding
        fullName: BufferEncoding
        uid: tslib.BufferEncoding
      - name: ' | undefined | null'
        fullName: ' | undefined | null'
  - uid: tslib.fs.NoParamCallback
    name: NoParamCallback
    spec.typeScript:
      - name: NoParamCallback
        fullName: NoParamCallback
        uid: tslib.fs.NoParamCallback
  - uid: Promise<tslib.fs.Dirent | null>
    name: Dirent | null>
    spec.typeScript:
      - name: Promise<
        fullName: Promise<
      - name: Dirent
        fullName: Dirent
        uid: tslib.fs.Dirent
      - name: ' | null>'
        fullName: ' | null>'
  - uid: tslib.fs.Dirent
    name: Dirent
    spec.typeScript:
      - name: Dirent
        fullName: Dirent
        uid: tslib.fs.Dirent
  - uid: tslib.stream.internal.Readable
    name: Readable
    spec.typeScript:
      - name: Readable
        fullName: Readable
        uid: tslib.stream.internal.Readable
  - uid: tslib.stream.internal.ReadableOptions
    name: ReadableOptions
    spec.typeScript:
      - name: ReadableOptions
        fullName: ReadableOptions
        uid: tslib.stream.internal.ReadableOptions
  - uid: tslib.AbortError.Error
    name: Error
    spec.typeScript:
      - name: Error
        fullName: Error
        uid: tslib.AbortError.Error
  - uid: tslib.NodeJS.WritableStream
    name: WritableStream
    spec.typeScript:
      - name: WritableStream
        fullName: WritableStream
        uid: tslib.NodeJS.WritableStream
  - uid: tslib.BufferEncoding
    name: BufferEncoding
    spec.typeScript:
      - name: BufferEncoding
        fullName: BufferEncoding
        uid: tslib.BufferEncoding
  - uid: tslib.NodeJS.ReadableStream
    name: ReadableStream
    spec.typeScript:
      - name: ReadableStream
        fullName: ReadableStream
        uid: tslib.NodeJS.ReadableStream
  - uid: tslib.fs.StatsBase<number>
    name: StatsBase<number>
    spec.typeScript:
      - name: StatsBase
        fullName: StatsBase
        uid: tslib.fs.StatsBase
      - name: <number>
        fullName: <number>
  - uid: tslib.stream.internal.Writable
    name: Writable
    spec.typeScript:
      - name: Writable
        fullName: Writable
        uid: tslib.stream.internal.Writable
  - uid: tslib.stream.internal.WritableOptions
    name: WritableOptions
    spec.typeScript:
      - name: WritableOptions
        fullName: WritableOptions
        uid: tslib.stream.internal.WritableOptions
  - uid: tslib.events.EventEmitter.EventEmitter
    name: EventEmitter
    spec.typeScript:
      - name: EventEmitter
        fullName: EventEmitter
        uid: tslib.events.EventEmitter.EventEmitter
  - uid: tslib.events.EventEmitterOptions
    name: EventEmitterOptions
    spec.typeScript:
      - name: EventEmitterOptions
        fullName: EventEmitterOptions
        uid: tslib.events.EventEmitterOptions
  - uid: tslib.fs.RmDirOptions
    name: RmDirOptions
    spec.typeScript:
      - name: RmDirOptions
        fullName: RmDirOptions
        uid: tslib.fs.RmDirOptions
  - uid: tslib.fs.PathLike | number
    name: PathLike | number
    spec.typeScript:
      - name: PathLike
        fullName: PathLike
        uid: tslib.fs.PathLike
      - name: ' | number'
        fullName: ' | number'
  - uid: tslib.fs.WriteFileOptions
    name: WriteFileOptions
    spec.typeScript:
      - name: WriteFileOptions
        fullName: WriteFileOptions
        uid: tslib.fs.WriteFileOptions
  - uid: tslib.fs.ReadStream
    name: ReadStream
    spec.typeScript:
      - name: ReadStream
        fullName: ReadStream
        uid: tslib.fs.ReadStream
  - uid: tslib.fs.WriteStream
    name: WriteStream
    spec.typeScript:
      - name: WriteStream
        fullName: WriteStream
        uid: tslib.fs.WriteStream
  - uid: tslib.fs.Stats
    name: Stats
    spec.typeScript:
      - name: Stats
        fullName: Stats
        uid: tslib.fs.Stats
  - uid: tslib.fs.Dir
    name: Dir
    spec.typeScript:
      - name: Dir
        fullName: Dir
        uid: tslib.fs.Dir
  - uid: tslib.NodeJS.ArrayBufferView
    name: ArrayBufferView
    spec.typeScript:
      - name: ArrayBufferView
        fullName: ArrayBufferView
        uid: tslib.NodeJS.ArrayBufferView
  - uid: 'tslib.fs.Dirent[]'
    name: 'Dirent[]'
    spec.typeScript:
      - name: Dirent
        fullName: Dirent
        uid: tslib.fs.Dirent
      - name: '[]'
        fullName: '[]'
  - uid: tslib.fs.FSWatcher
    name: FSWatcher
    spec.typeScript:
      - name: FSWatcher
        fullName: FSWatcher
        uid: tslib.fs.FSWatcher
