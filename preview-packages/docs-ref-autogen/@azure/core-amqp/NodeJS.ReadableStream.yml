### YamlMime:UniversalReference
items:
  - uid: tslib.NodeJS.ReadableStream
    name: ReadableStream
    fullName: ReadableStream
    children:
      - tslib.NodeJS.ReadableStream.addListener
      - tslib.NodeJS.ReadableStream.emit
      - tslib.NodeJS.ReadableStream.eventNames
      - tslib.NodeJS.ReadableStream.getMaxListeners
      - tslib.NodeJS.ReadableStream.isPaused
      - tslib.NodeJS.ReadableStream.listenerCount
      - tslib.NodeJS.ReadableStream.listeners
      - tslib.NodeJS.ReadableStream.off
      - tslib.NodeJS.ReadableStream.on
      - tslib.NodeJS.ReadableStream.once
      - tslib.NodeJS.ReadableStream.pause
      - tslib.NodeJS.ReadableStream.pipe
      - tslib.NodeJS.ReadableStream.prependListener
      - tslib.NodeJS.ReadableStream.prependOnceListener
      - tslib.NodeJS.ReadableStream.rawListeners
      - tslib.NodeJS.ReadableStream.read
      - tslib.NodeJS.ReadableStream.readable
      - tslib.NodeJS.ReadableStream.removeAllListeners
      - tslib.NodeJS.ReadableStream.removeListener
      - tslib.NodeJS.ReadableStream.resume
      - tslib.NodeJS.ReadableStream.setEncoding
      - tslib.NodeJS.ReadableStream.setMaxListeners
      - tslib.NodeJS.ReadableStream.unpipe
      - tslib.NodeJS.ReadableStream.unshift
      - tslib.NodeJS.ReadableStream.wrap
    langs:
      - typeScript
    type: interface
    summary: ''
    extends:
      name: tslib.NodeJS.EventEmitter
    package: tslib
  - uid: tslib.NodeJS.ReadableStream.addListener
    name: 'addListener(string | symbol, (args: any[]) => void)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function addListener(event: string | symbol, listener: (args: any[]) =>
        void)
      parameters:
        - id: event
          type:
            - string | symbol
          description: ''
        - id: listener
          type:
            - '(args: any[]) => void'
          description: ''
      return:
        type:
          - this
        description: ''
    package: tslib
  - uid: tslib.NodeJS.ReadableStream.emit
    name: 'emit(string | symbol, any[])'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function emit(event: string | symbol, args: any[])'
      parameters:
        - id: event
          type:
            - string | symbol
          description: ''
        - id: args
          type:
            - 'any[]'
          description: ''
      return:
        type:
          - boolean
        description: ''
    package: tslib
  - uid: tslib.NodeJS.ReadableStream.eventNames
    name: eventNames()
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: function eventNames()
      parameters: []
      return:
        type:
          - Array<string | symbol>
        description: ''
    package: tslib
  - uid: tslib.NodeJS.ReadableStream.getMaxListeners
    name: getMaxListeners()
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: function getMaxListeners()
      parameters: []
      return:
        type:
          - number
        description: ''
    package: tslib
  - uid: tslib.NodeJS.ReadableStream.isPaused
    name: isPaused()
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: function isPaused()
      parameters: []
      return:
        type:
          - boolean
        description: ''
    package: tslib
  - uid: tslib.NodeJS.ReadableStream.listenerCount
    name: listenerCount(string | symbol)
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function listenerCount(type: string | symbol)'
      parameters:
        - id: type
          type:
            - string | symbol
          description: ''
      return:
        type:
          - number
        description: ''
    package: tslib
  - uid: tslib.NodeJS.ReadableStream.listeners
    name: listeners(string | symbol)
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function listeners(event: string | symbol)'
      parameters:
        - id: event
          type:
            - string | symbol
          description: ''
      return:
        type:
          - 'Function[]'
        description: ''
    package: tslib
  - uid: tslib.NodeJS.ReadableStream.off
    name: 'off(string | symbol, (args: any[]) => void)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function off(event: string | symbol, listener: (args: any[]) => void)'
      parameters:
        - id: event
          type:
            - string | symbol
          description: ''
        - id: listener
          type:
            - '(args: any[]) => void'
          description: ''
      return:
        type:
          - this
        description: ''
    package: tslib
  - uid: tslib.NodeJS.ReadableStream.on
    name: 'on(string | symbol, (args: any[]) => void)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function on(event: string | symbol, listener: (args: any[]) => void)'
      parameters:
        - id: event
          type:
            - string | symbol
          description: ''
        - id: listener
          type:
            - '(args: any[]) => void'
          description: ''
      return:
        type:
          - this
        description: ''
    package: tslib
  - uid: tslib.NodeJS.ReadableStream.once
    name: 'once(string | symbol, (args: any[]) => void)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function once(event: string | symbol, listener: (args: any[]) => void)'
      parameters:
        - id: event
          type:
            - string | symbol
          description: ''
        - id: listener
          type:
            - '(args: any[]) => void'
          description: ''
      return:
        type:
          - this
        description: ''
    package: tslib
  - uid: tslib.NodeJS.ReadableStream.pause
    name: pause()
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: function pause()
      parameters: []
      return:
        type:
          - this
        description: ''
    package: tslib
  - uid: tslib.NodeJS.ReadableStream.pipe
    name: 'pipe(T, undefined | Object)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function pipe<T>(destination: T, options?: undefined | Object)'
      parameters:
        - id: destination
          type:
            - T
          description: ''
        - id: options
          type:
            - undefined | Object
          description: ''
          optional: true
      return:
        type:
          - T
        description: ''
    package: tslib
  - uid: tslib.NodeJS.ReadableStream.prependListener
    name: 'prependListener(string | symbol, (args: any[]) => void)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function prependListener(event: string | symbol, listener: (args: any[])
        => void)
      parameters:
        - id: event
          type:
            - string | symbol
          description: ''
        - id: listener
          type:
            - '(args: any[]) => void'
          description: ''
      return:
        type:
          - this
        description: ''
    package: tslib
  - uid: tslib.NodeJS.ReadableStream.prependOnceListener
    name: 'prependOnceListener(string | symbol, (args: any[]) => void)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function prependOnceListener(event: string | symbol, listener: (args:
        any[]) => void)
      parameters:
        - id: event
          type:
            - string | symbol
          description: ''
        - id: listener
          type:
            - '(args: any[]) => void'
          description: ''
      return:
        type:
          - this
        description: ''
    package: tslib
  - uid: tslib.NodeJS.ReadableStream.rawListeners
    name: rawListeners(string | symbol)
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function rawListeners(event: string | symbol)'
      parameters:
        - id: event
          type:
            - string | symbol
          description: ''
      return:
        type:
          - 'Function[]'
        description: ''
    package: tslib
  - uid: tslib.NodeJS.ReadableStream.read
    name: read(undefined | number)
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function read(size?: undefined | number)'
      parameters:
        - id: size
          type:
            - undefined | number
          description: ''
          optional: true
      return:
        type:
          - string | Buffer
        description: ''
    package: tslib
  - uid: tslib.NodeJS.ReadableStream.readable
    name: readable
    fullName: readable
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    syntax:
      content: 'readable: boolean'
      return:
        type:
          - boolean
        description: ''
    package: tslib
  - uid: tslib.NodeJS.ReadableStream.removeAllListeners
    name: removeAllListeners(string | symbol)
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function removeAllListeners(event?: string | symbol)'
      parameters:
        - id: event
          type:
            - string | symbol
          description: ''
          optional: true
      return:
        type:
          - this
        description: ''
    package: tslib
  - uid: tslib.NodeJS.ReadableStream.removeListener
    name: 'removeListener(string | symbol, (args: any[]) => void)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function removeListener(event: string | symbol, listener: (args: any[])
        => void)
      parameters:
        - id: event
          type:
            - string | symbol
          description: ''
        - id: listener
          type:
            - '(args: any[]) => void'
          description: ''
      return:
        type:
          - this
        description: ''
    package: tslib
  - uid: tslib.NodeJS.ReadableStream.resume
    name: resume()
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: function resume()
      parameters: []
      return:
        type:
          - this
        description: ''
    package: tslib
  - uid: tslib.NodeJS.ReadableStream.setEncoding
    name: setEncoding(string)
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function setEncoding(encoding: string)'
      parameters:
        - id: encoding
          type:
            - string
          description: ''
      return:
        type:
          - this
        description: ''
    package: tslib
  - uid: tslib.NodeJS.ReadableStream.setMaxListeners
    name: setMaxListeners(number)
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function setMaxListeners(n: number)'
      parameters:
        - id: 'n'
          type:
            - number
          description: ''
      return:
        type:
          - this
        description: ''
    package: tslib
  - uid: tslib.NodeJS.ReadableStream.unpipe
    name: unpipe(WritableStream)
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function unpipe(destination?: WritableStream)'
      parameters:
        - id: destination
          type:
            - tslib.NodeJS.WritableStream
          description: ''
          optional: true
      return:
        type:
          - this
        description: ''
    package: tslib
  - uid: tslib.NodeJS.ReadableStream.unshift
    name: 'unshift(string | Uint8Array, BufferEncoding)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function unshift(chunk: string | Uint8Array, encoding?: BufferEncoding)'
      parameters:
        - id: chunk
          type:
            - string | Uint8Array
          description: ''
        - id: encoding
          type:
            - tslib.BufferEncoding
          description: ''
          optional: true
    package: tslib
  - uid: tslib.NodeJS.ReadableStream.wrap
    name: wrap(ReadableStream)
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function wrap(oldStream: ReadableStream)'
      parameters:
        - id: oldStream
          type:
            - tslib.NodeJS.ReadableStream
          description: ''
      return:
        type:
          - this
        description: ''
    package: tslib
references:
  - uid: tslib.NodeJS.WritableStream
    name: WritableStream
    spec.typeScript:
      - name: WritableStream
        fullName: WritableStream
        uid: tslib.NodeJS.WritableStream
  - uid: tslib.NodeJS.ConsoleConstructorOptions
    name: ConsoleConstructorOptions
    spec.typeScript:
      - name: ConsoleConstructorOptions
        fullName: ConsoleConstructorOptions
        uid: tslib.NodeJS.ConsoleConstructorOptions
  - uid: tslib.NodeJS.InspectOptions
    name: InspectOptions
    spec.typeScript:
      - name: InspectOptions
        fullName: InspectOptions
        uid: tslib.NodeJS.InspectOptions
  - uid: tslib.NodeJS.EventEmitter
    name: EventEmitter
    spec.typeScript:
      - name: EventEmitter
        fullName: EventEmitter
        uid: tslib.NodeJS.EventEmitter
  - uid: tslib.NodeJS.EventEmitter | tslib.NodeJS.Timer
    name: Timer
    spec.typeScript:
      - name: EventEmitter
        fullName: EventEmitter
        uid: tslib.NodeJS.EventEmitter
      - name: ' | '
        fullName: ' | '
      - name: Timer
        fullName: Timer
        uid: tslib.NodeJS.Timer
  - uid: tslib.NodeJS.Global
    name: Global
    spec.typeScript:
      - name: Global
        fullName: Global
        uid: tslib.NodeJS.Global
  - uid: tslib.NodeJS.Process
    name: Process
    spec.typeScript:
      - name: Process
        fullName: Process
        uid: tslib.NodeJS.Process
  - uid: tslib.NodeJS.RefCounted
    name: RefCounted
    spec.typeScript:
      - name: RefCounted
        fullName: RefCounted
        uid: tslib.NodeJS.RefCounted
  - uid: 'tslib.NodeJS.Module[]'
    name: 'Module[]'
    spec.typeScript:
      - name: Module
        fullName: Module
        uid: tslib.NodeJS.Module
      - name: '[]'
        fullName: '[]'
  - uid: tslib.NodeJS.Module | null
    name: Module | null
    spec.typeScript:
      - name: Module
        fullName: Module
        uid: tslib.NodeJS.Module
      - name: ' | null'
        fullName: ' | null'
  - uid: tslib.NodeJS.Require
    name: Require
    spec.typeScript:
      - name: Require
        fullName: Require
        uid: tslib.NodeJS.Require
  - uid: tslib.NodeJS.Domain
    name: Domain
    spec.typeScript:
      - name: Domain
        fullName: Domain
        uid: tslib.NodeJS.Domain
  - uid: tslib.NodeJS.ProcessEnv
    name: ProcessEnv
    spec.typeScript:
      - name: ProcessEnv
        fullName: ProcessEnv
        uid: tslib.NodeJS.ProcessEnv
  - uid: tslib.NodeJS.Module
    name: Module
    spec.typeScript:
      - name: Module
        fullName: Module
        uid: tslib.NodeJS.Module
  - uid: tslib.NodeJS.Platform
    name: Platform
    spec.typeScript:
      - name: Platform
        fullName: Platform
        uid: tslib.NodeJS.Platform
  - uid: tslib.NodeJS.ProcessRelease
    name: ProcessRelease
    spec.typeScript:
      - name: ProcessRelease
        fullName: ProcessRelease
        uid: tslib.NodeJS.ProcessRelease
  - uid: tslib.NodeJS.ProcessReport
    name: ProcessReport
    spec.typeScript:
      - name: ProcessReport
        fullName: ProcessReport
        uid: tslib.NodeJS.ProcessReport
  - uid: tslib.NodeJS.ProcessVersions
    name: ProcessVersions
    spec.typeScript:
      - name: ProcessVersions
        fullName: ProcessVersions
        uid: tslib.NodeJS.ProcessVersions
  - uid: tslib.NodeJS.BeforeExitListener
    name: BeforeExitListener
    spec.typeScript:
      - name: BeforeExitListener
        fullName: BeforeExitListener
        uid: tslib.NodeJS.BeforeExitListener
  - uid: tslib.NodeJS.DisconnectListener
    name: DisconnectListener
    spec.typeScript:
      - name: DisconnectListener
        fullName: DisconnectListener
        uid: tslib.NodeJS.DisconnectListener
  - uid: tslib.NodeJS.ExitListener
    name: ExitListener
    spec.typeScript:
      - name: ExitListener
        fullName: ExitListener
        uid: tslib.NodeJS.ExitListener
  - uid: tslib.NodeJS.RejectionHandledListener
    name: RejectionHandledListener
    spec.typeScript:
      - name: RejectionHandledListener
        fullName: RejectionHandledListener
        uid: tslib.NodeJS.RejectionHandledListener
  - uid: tslib.NodeJS.UncaughtExceptionListener
    name: UncaughtExceptionListener
    spec.typeScript:
      - name: UncaughtExceptionListener
        fullName: UncaughtExceptionListener
        uid: tslib.NodeJS.UncaughtExceptionListener
  - uid: tslib.NodeJS.UnhandledRejectionListener
    name: UnhandledRejectionListener
    spec.typeScript:
      - name: UnhandledRejectionListener
        fullName: UnhandledRejectionListener
        uid: tslib.NodeJS.UnhandledRejectionListener
  - uid: tslib.NodeJS.WarningListener
    name: WarningListener
    spec.typeScript:
      - name: WarningListener
        fullName: WarningListener
        uid: tslib.NodeJS.WarningListener
  - uid: tslib.NodeJS.MessageListener
    name: MessageListener
    spec.typeScript:
      - name: MessageListener
        fullName: MessageListener
        uid: tslib.NodeJS.MessageListener
  - uid: tslib.NodeJS.Signals
    name: Signals
    spec.typeScript:
      - name: Signals
        fullName: Signals
        uid: tslib.NodeJS.Signals
  - uid: tslib.NodeJS.SignalsListener
    name: SignalsListener
    spec.typeScript:
      - name: SignalsListener
        fullName: SignalsListener
        uid: tslib.NodeJS.SignalsListener
  - uid: tslib.NodeJS.NewListenerListener
    name: NewListenerListener
    spec.typeScript:
      - name: NewListenerListener
        fullName: NewListenerListener
        uid: tslib.NodeJS.NewListenerListener
  - uid: tslib.NodeJS.RemoveListenerListener
    name: RemoveListenerListener
    spec.typeScript:
      - name: RemoveListenerListener
        fullName: RemoveListenerListener
        uid: tslib.NodeJS.RemoveListenerListener
  - uid: tslib.NodeJS.MultipleResolveListener
    name: MultipleResolveListener
    spec.typeScript:
      - name: MultipleResolveListener
        fullName: MultipleResolveListener
        uid: tslib.NodeJS.MultipleResolveListener
  - uid: tslib.NodeJS.CpuUsage
    name: CpuUsage
    spec.typeScript:
      - name: CpuUsage
        fullName: CpuUsage
        uid: tslib.NodeJS.CpuUsage
  - uid: tslib.NodeJS.Global.Function
    name: Function
    spec.typeScript:
      - name: Function
        fullName: Function
        uid: tslib.NodeJS.Global.Function
  - uid: 'tslib.NodeJS.BeforeExitListener[]'
    name: 'BeforeExitListener[]'
    spec.typeScript:
      - name: BeforeExitListener
        fullName: BeforeExitListener
        uid: tslib.NodeJS.BeforeExitListener
      - name: '[]'
        fullName: '[]'
  - uid: 'tslib.NodeJS.DisconnectListener[]'
    name: 'DisconnectListener[]'
    spec.typeScript:
      - name: DisconnectListener
        fullName: DisconnectListener
        uid: tslib.NodeJS.DisconnectListener
      - name: '[]'
        fullName: '[]'
  - uid: 'tslib.NodeJS.ExitListener[]'
    name: 'ExitListener[]'
    spec.typeScript:
      - name: ExitListener
        fullName: ExitListener
        uid: tslib.NodeJS.ExitListener
      - name: '[]'
        fullName: '[]'
  - uid: 'tslib.NodeJS.RejectionHandledListener[]'
    name: 'RejectionHandledListener[]'
    spec.typeScript:
      - name: RejectionHandledListener
        fullName: RejectionHandledListener
        uid: tslib.NodeJS.RejectionHandledListener
      - name: '[]'
        fullName: '[]'
  - uid: 'tslib.NodeJS.UncaughtExceptionListener[]'
    name: 'UncaughtExceptionListener[]'
    spec.typeScript:
      - name: UncaughtExceptionListener
        fullName: UncaughtExceptionListener
        uid: tslib.NodeJS.UncaughtExceptionListener
      - name: '[]'
        fullName: '[]'
  - uid: 'tslib.NodeJS.UnhandledRejectionListener[]'
    name: 'UnhandledRejectionListener[]'
    spec.typeScript:
      - name: UnhandledRejectionListener
        fullName: UnhandledRejectionListener
        uid: tslib.NodeJS.UnhandledRejectionListener
      - name: '[]'
        fullName: '[]'
  - uid: 'tslib.NodeJS.WarningListener[]'
    name: 'WarningListener[]'
    spec.typeScript:
      - name: WarningListener
        fullName: WarningListener
        uid: tslib.NodeJS.WarningListener
      - name: '[]'
        fullName: '[]'
  - uid: 'tslib.NodeJS.MessageListener[]'
    name: 'MessageListener[]'
    spec.typeScript:
      - name: MessageListener
        fullName: MessageListener
        uid: tslib.NodeJS.MessageListener
      - name: '[]'
        fullName: '[]'
  - uid: 'tslib.NodeJS.SignalsListener[]'
    name: 'SignalsListener[]'
    spec.typeScript:
      - name: SignalsListener
        fullName: SignalsListener
        uid: tslib.NodeJS.SignalsListener
      - name: '[]'
        fullName: '[]'
  - uid: 'tslib.NodeJS.NewListenerListener[]'
    name: 'NewListenerListener[]'
    spec.typeScript:
      - name: NewListenerListener
        fullName: NewListenerListener
        uid: tslib.NodeJS.NewListenerListener
      - name: '[]'
        fullName: '[]'
  - uid: 'tslib.NodeJS.RemoveListenerListener[]'
    name: 'RemoveListenerListener[]'
    spec.typeScript:
      - name: RemoveListenerListener
        fullName: RemoveListenerListener
        uid: tslib.NodeJS.RemoveListenerListener
      - name: '[]'
        fullName: '[]'
  - uid: 'tslib.NodeJS.MultipleResolveListener[]'
    name: 'MultipleResolveListener[]'
    spec.typeScript:
      - name: MultipleResolveListener
        fullName: MultipleResolveListener
        uid: tslib.NodeJS.MultipleResolveListener
      - name: '[]'
        fullName: '[]'
  - uid: tslib.NodeJS.MemoryUsage
    name: MemoryUsage
    spec.typeScript:
      - name: MemoryUsage
        fullName: MemoryUsage
        uid: tslib.NodeJS.MemoryUsage
  - uid: tslib.NodeJS.Socket
    name: Socket
    spec.typeScript:
      - name: Socket
        fullName: Socket
        uid: tslib.NodeJS.Socket
  - uid: tslib.NodeJS.ResourceUsage
    name: ResourceUsage
    spec.typeScript:
      - name: ResourceUsage
        fullName: ResourceUsage
        uid: tslib.NodeJS.ResourceUsage
  - uid: tslib.AbortError.Error
    name: Error
    spec.typeScript:
      - name: Error
        fullName: Error
        uid: tslib.AbortError.Error
  - uid: tslib.NodeJS.ReadableStream
    name: ReadableStream
    spec.typeScript:
      - name: ReadableStream
        fullName: ReadableStream
        uid: tslib.NodeJS.ReadableStream
  - uid: tslib.BufferEncoding
    name: BufferEncoding
    spec.typeScript:
      - name: BufferEncoding
        fullName: BufferEncoding
        uid: tslib.BufferEncoding
  - uid: tslib.NodeJS.NodeRequireCache
    name: NodeRequireCache
    spec.typeScript:
      - name: NodeRequireCache
        fullName: NodeRequireCache
        uid: tslib.NodeJS.NodeRequireCache
  - uid: tslib.NodeJS.RequireExtensions
    name: RequireExtensions
    spec.typeScript:
      - name: RequireExtensions
        fullName: RequireExtensions
        uid: tslib.NodeJS.RequireExtensions
  - uid: tslib.NodeJS.Module | undefined
    name: Module | undefined
    spec.typeScript:
      - name: Module
        fullName: Module
        uid: tslib.NodeJS.Module
      - name: ' | undefined'
        fullName: ' | undefined'
  - uid: tslib.NodeJS.RequireResolve
    name: RequireResolve
    spec.typeScript:
      - name: RequireResolve
        fullName: RequireResolve
        uid: tslib.NodeJS.RequireResolve
  - uid: tslib.NodeJS.ReadWriteStream
    name: ReadWriteStream
    spec.typeScript:
      - name: ReadWriteStream
        fullName: ReadWriteStream
        uid: tslib.NodeJS.ReadWriteStream
  - uid: tslib.NodeJS.Timer
    name: Timer
    spec.typeScript:
      - name: Timer
        fullName: Timer
        uid: tslib.NodeJS.Timer
