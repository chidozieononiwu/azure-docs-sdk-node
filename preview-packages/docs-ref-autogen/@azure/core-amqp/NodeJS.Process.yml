### YamlMime:UniversalReference
items:
  - uid: tslib.NodeJS.Process
    name: Process
    fullName: Process
    children:
      - tslib.NodeJS.Process.abort
      - tslib.NodeJS.Process.addListener
      - tslib.NodeJS.Process.addListener_1
      - tslib.NodeJS.Process.addListener_2
      - tslib.NodeJS.Process.addListener_7
      - tslib.NodeJS.Process.addListener_11
      - tslib.NodeJS.Process.addListener_9
      - tslib.NodeJS.Process.addListener_3
      - tslib.NodeJS.Process.addListener_10
      - tslib.NodeJS.Process.addListener_4
      - tslib.NodeJS.Process.addListener_5
      - tslib.NodeJS.Process.addListener_6
      - tslib.NodeJS.Process.addListener_8
      - tslib.NodeJS.Process.allowedNodeEnvironmentFlags
      - tslib.NodeJS.Process.arch
      - tslib.NodeJS.Process.argv
      - tslib.NodeJS.Process.argv0
      - tslib.NodeJS.Process.chdir
      - tslib.NodeJS.Process.config
      - tslib.NodeJS.Process.connected
      - tslib.NodeJS.Process.cpuUsage
      - tslib.NodeJS.Process.cwd
      - tslib.NodeJS.Process.debugPort
      - tslib.NodeJS.Process.disconnect
      - tslib.NodeJS.Process.domain
      - tslib.NodeJS.Process.emit
      - tslib.NodeJS.Process.emit_1
      - tslib.NodeJS.Process.emit_2
      - tslib.NodeJS.Process.emit_7
      - tslib.NodeJS.Process.emit_11
      - tslib.NodeJS.Process.emit_9
      - tslib.NodeJS.Process.emit_3
      - tslib.NodeJS.Process.emit_10
      - tslib.NodeJS.Process.emit_4
      - tslib.NodeJS.Process.emit_5
      - tslib.NodeJS.Process.emit_6
      - tslib.NodeJS.Process.emit_8
      - tslib.NodeJS.Process.emitWarning
      - tslib.NodeJS.Process.env
      - tslib.NodeJS.Process.eventNames
      - tslib.NodeJS.Process.execArgv
      - tslib.NodeJS.Process.execPath
      - tslib.NodeJS.Process.exit
      - tslib.NodeJS.Process.exitCode
      - tslib.NodeJS.Process.features
      - tslib.NodeJS.Process.getegid
      - tslib.NodeJS.Process.geteuid
      - tslib.NodeJS.Process.getgid
      - tslib.NodeJS.Process.getgroups
      - tslib.NodeJS.Process.getMaxListeners
      - tslib.NodeJS.Process.getuid
      - tslib.NodeJS.Process.hasUncaughtExceptionCaptureCallback
      - tslib.NodeJS.Process.hrtime
      - tslib.NodeJS.Process.kill
      - tslib.NodeJS.Process.listenerCount
      - tslib.NodeJS.Process.listeners
      - tslib.NodeJS.Process.listeners_1
      - tslib.NodeJS.Process.listeners_2
      - tslib.NodeJS.Process.listeners_7
      - tslib.NodeJS.Process.listeners_11
      - tslib.NodeJS.Process.listeners_9
      - tslib.NodeJS.Process.listeners_3
      - tslib.NodeJS.Process.listeners_10
      - tslib.NodeJS.Process.listeners_4
      - tslib.NodeJS.Process.listeners_5
      - tslib.NodeJS.Process.listeners_6
      - tslib.NodeJS.Process.listeners_8
      - tslib.NodeJS.Process.mainModule
      - tslib.NodeJS.Process.memoryUsage
      - tslib.NodeJS.Process.nextTick
      - tslib.NodeJS.Process.off
      - tslib.NodeJS.Process.on
      - tslib.NodeJS.Process.on_1
      - tslib.NodeJS.Process.on_2
      - tslib.NodeJS.Process.on_7
      - tslib.NodeJS.Process.on_11
      - tslib.NodeJS.Process.on_9
      - tslib.NodeJS.Process.on_3
      - tslib.NodeJS.Process.on_10
      - tslib.NodeJS.Process.on_4
      - tslib.NodeJS.Process.on_5
      - tslib.NodeJS.Process.on_6
      - tslib.NodeJS.Process.on_8
      - tslib.NodeJS.Process.once
      - tslib.NodeJS.Process.once_1
      - tslib.NodeJS.Process.once_2
      - tslib.NodeJS.Process.once_7
      - tslib.NodeJS.Process.once_11
      - tslib.NodeJS.Process.once_9
      - tslib.NodeJS.Process.once_3
      - tslib.NodeJS.Process.once_10
      - tslib.NodeJS.Process.once_4
      - tslib.NodeJS.Process.once_5
      - tslib.NodeJS.Process.once_6
      - tslib.NodeJS.Process.once_8
      - tslib.NodeJS.Process.openStdin
      - tslib.NodeJS.Process.pid
      - tslib.NodeJS.Process.platform
      - tslib.NodeJS.Process.ppid
      - tslib.NodeJS.Process.prependListener
      - tslib.NodeJS.Process.prependListener_1
      - tslib.NodeJS.Process.prependListener_2
      - tslib.NodeJS.Process.prependListener_7
      - tslib.NodeJS.Process.prependListener_11
      - tslib.NodeJS.Process.prependListener_9
      - tslib.NodeJS.Process.prependListener_3
      - tslib.NodeJS.Process.prependListener_10
      - tslib.NodeJS.Process.prependListener_4
      - tslib.NodeJS.Process.prependListener_5
      - tslib.NodeJS.Process.prependListener_6
      - tslib.NodeJS.Process.prependListener_8
      - tslib.NodeJS.Process.prependOnceListener
      - tslib.NodeJS.Process.prependOnceListener_1
      - tslib.NodeJS.Process.prependOnceListener_2
      - tslib.NodeJS.Process.prependOnceListener_7
      - tslib.NodeJS.Process.prependOnceListener_11
      - tslib.NodeJS.Process.prependOnceListener_9
      - tslib.NodeJS.Process.prependOnceListener_3
      - tslib.NodeJS.Process.prependOnceListener_10
      - tslib.NodeJS.Process.prependOnceListener_4
      - tslib.NodeJS.Process.prependOnceListener_5
      - tslib.NodeJS.Process.prependOnceListener_6
      - tslib.NodeJS.Process.prependOnceListener_8
      - tslib.NodeJS.Process.rawListeners
      - tslib.NodeJS.Process.release
      - tslib.NodeJS.Process.removeAllListeners
      - tslib.NodeJS.Process.removeListener
      - tslib.NodeJS.Process.report
      - tslib.NodeJS.Process.resourceUsage
      - tslib.NodeJS.Process.send
      - tslib.NodeJS.Process.setegid
      - tslib.NodeJS.Process.seteuid
      - tslib.NodeJS.Process.setgid
      - tslib.NodeJS.Process.setgroups
      - tslib.NodeJS.Process.setMaxListeners
      - tslib.NodeJS.Process.setuid
      - tslib.NodeJS.Process.setUncaughtExceptionCaptureCallback
      - tslib.NodeJS.Process.stderr
      - tslib.NodeJS.Process.stdin
      - tslib.NodeJS.Process.stdout
      - tslib.NodeJS.Process.title
      - tslib.NodeJS.Process.umask
      - tslib.NodeJS.Process.uptime
      - tslib.NodeJS.Process.version
      - tslib.NodeJS.Process.versions
    langs:
      - typeScript
    type: interface
    summary: ''
    extends:
      name: tslib.NodeJS.EventEmitter
    package: tslib
  - uid: tslib.NodeJS.Process.abort
    name: abort()
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: function abort()
      parameters: []
    package: tslib
  - uid: tslib.NodeJS.Process.addListener
    name: 'addListener("beforeExit", BeforeExitListener)'
    children: []
    type: method
    langs:
      - typeScript
    summary: |-
      EventEmitter
        1. beforeExit
        2. disconnect
        3. exit
        4. message
        5. rejectionHandled
        6. uncaughtException
        7. unhandledRejection
        8. warning
        9. message
       10. <All OS Signals>
       11. newListener/removeListener inherited from EventEmitter
    syntax:
      content: 'function addListener(event: "beforeExit", listener: BeforeExitListener)'
      parameters:
        - id: event
          type:
            - '"beforeExit"'
          description: ''
        - id: listener
          type:
            - tslib.NodeJS.BeforeExitListener
          description: ''
      return:
        type:
          - this
        description: ''
    package: tslib
  - uid: tslib.NodeJS.Process.addListener_1
    name: 'addListener("disconnect", DisconnectListener)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function addListener(event: "disconnect", listener: DisconnectListener)'
      parameters:
        - id: event
          type:
            - '"disconnect"'
          description: ''
        - id: listener
          type:
            - tslib.NodeJS.DisconnectListener
          description: ''
      return:
        type:
          - this
        description: ''
    package: tslib
  - uid: tslib.NodeJS.Process.addListener_2
    name: 'addListener("exit", ExitListener)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function addListener(event: "exit", listener: ExitListener)'
      parameters:
        - id: event
          type:
            - '"exit"'
          description: ''
        - id: listener
          type:
            - tslib.NodeJS.ExitListener
          description: ''
      return:
        type:
          - this
        description: ''
    package: tslib
  - uid: tslib.NodeJS.Process.addListener_7
    name: 'addListener("message", MessageListener)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function addListener(event: "message", listener: MessageListener)'
      parameters:
        - id: event
          type:
            - '"message"'
          description: ''
        - id: listener
          type:
            - tslib.NodeJS.MessageListener
          description: ''
      return:
        type:
          - this
        description: ''
    package: tslib
  - uid: tslib.NodeJS.Process.addListener_11
    name: 'addListener("multipleResolves", MultipleResolveListener)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function addListener(event: "multipleResolves", listener:
        MultipleResolveListener)
      parameters:
        - id: event
          type:
            - '"multipleResolves"'
          description: ''
        - id: listener
          type:
            - tslib.NodeJS.MultipleResolveListener
          description: ''
      return:
        type:
          - this
        description: ''
    package: tslib
  - uid: tslib.NodeJS.Process.addListener_9
    name: 'addListener("newListener", NewListenerListener)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function addListener(event: "newListener", listener:
        NewListenerListener)
      parameters:
        - id: event
          type:
            - '"newListener"'
          description: ''
        - id: listener
          type:
            - tslib.NodeJS.NewListenerListener
          description: ''
      return:
        type:
          - this
        description: ''
    package: tslib
  - uid: tslib.NodeJS.Process.addListener_3
    name: 'addListener("rejectionHandled", RejectionHandledListener)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function addListener(event: "rejectionHandled", listener:
        RejectionHandledListener)
      parameters:
        - id: event
          type:
            - '"rejectionHandled"'
          description: ''
        - id: listener
          type:
            - tslib.NodeJS.RejectionHandledListener
          description: ''
      return:
        type:
          - this
        description: ''
    package: tslib
  - uid: tslib.NodeJS.Process.addListener_10
    name: 'addListener("removeListener", RemoveListenerListener)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function addListener(event: "removeListener", listener:
        RemoveListenerListener)
      parameters:
        - id: event
          type:
            - '"removeListener"'
          description: ''
        - id: listener
          type:
            - tslib.NodeJS.RemoveListenerListener
          description: ''
      return:
        type:
          - this
        description: ''
    package: tslib
  - uid: tslib.NodeJS.Process.addListener_4
    name: 'addListener("uncaughtException", UncaughtExceptionListener)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function addListener(event: "uncaughtException", listener:
        UncaughtExceptionListener)
      parameters:
        - id: event
          type:
            - '"uncaughtException"'
          description: ''
        - id: listener
          type:
            - tslib.NodeJS.UncaughtExceptionListener
          description: ''
      return:
        type:
          - this
        description: ''
    package: tslib
  - uid: tslib.NodeJS.Process.addListener_5
    name: 'addListener("unhandledRejection", UnhandledRejectionListener)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function addListener(event: "unhandledRejection", listener:
        UnhandledRejectionListener)
      parameters:
        - id: event
          type:
            - '"unhandledRejection"'
          description: ''
        - id: listener
          type:
            - tslib.NodeJS.UnhandledRejectionListener
          description: ''
      return:
        type:
          - this
        description: ''
    package: tslib
  - uid: tslib.NodeJS.Process.addListener_6
    name: 'addListener("warning", WarningListener)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function addListener(event: "warning", listener: WarningListener)'
      parameters:
        - id: event
          type:
            - '"warning"'
          description: ''
        - id: listener
          type:
            - tslib.NodeJS.WarningListener
          description: ''
      return:
        type:
          - this
        description: ''
    package: tslib
  - uid: tslib.NodeJS.Process.addListener_8
    name: 'addListener(Signals, SignalsListener)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function addListener(event: Signals, listener: SignalsListener)'
      parameters:
        - id: event
          type:
            - tslib.NodeJS.Signals
          description: ''
        - id: listener
          type:
            - tslib.NodeJS.SignalsListener
          description: ''
      return:
        type:
          - this
        description: ''
    package: tslib
  - uid: tslib.NodeJS.Process.allowedNodeEnvironmentFlags
    name: allowedNodeEnvironmentFlags
    fullName: allowedNodeEnvironmentFlags
    children: []
    langs:
      - typeScript
    type: property
    summary: |-
      The `process.allowedNodeEnvironmentFlags` property is a special,
      read-only `Set` of flags allowable within the [`NODE_OPTIONS`][]
      environment variable.
    syntax:
      content: 'allowedNodeEnvironmentFlags: ReadonlySet<string>'
      return:
        type:
          - ReadonlySet<string>
        description: ''
    package: tslib
  - uid: tslib.NodeJS.Process.arch
    name: arch
    fullName: arch
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    syntax:
      content: 'arch: string'
      return:
        type:
          - string
        description: ''
    package: tslib
  - uid: tslib.NodeJS.Process.argv
    name: argv
    fullName: argv
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    syntax:
      content: 'argv: string[]'
      return:
        type:
          - 'string[]'
        description: ''
    package: tslib
  - uid: tslib.NodeJS.Process.argv0
    name: argv0
    fullName: argv0
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    syntax:
      content: 'argv0: string'
      return:
        type:
          - string
        description: ''
    package: tslib
  - uid: tslib.NodeJS.Process.chdir
    name: chdir(string)
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function chdir(directory: string)'
      parameters:
        - id: directory
          type:
            - string
          description: ''
    package: tslib
  - uid: tslib.NodeJS.Process.config
    name: config
    fullName: config
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    syntax:
      content: 'config: Object'
      return:
        type:
          - Object
        description: ''
    package: tslib
  - uid: tslib.NodeJS.Process.connected
    name: connected
    fullName: connected
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    syntax:
      content: 'connected: boolean'
      return:
        type:
          - boolean
        description: ''
    package: tslib
  - uid: tslib.NodeJS.Process.cpuUsage
    name: cpuUsage(CpuUsage)
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function cpuUsage(previousValue?: CpuUsage)'
      parameters:
        - id: previousValue
          type:
            - tslib.NodeJS.CpuUsage
          description: ''
          optional: true
      return:
        type:
          - tslib.NodeJS.CpuUsage
        description: ''
    package: tslib
  - uid: tslib.NodeJS.Process.cwd
    name: cwd()
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: function cwd()
      parameters: []
      return:
        type:
          - string
        description: ''
    package: tslib
  - uid: tslib.NodeJS.Process.debugPort
    name: debugPort
    fullName: debugPort
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    syntax:
      content: 'debugPort: number'
      return:
        type:
          - number
        description: ''
    package: tslib
  - uid: tslib.NodeJS.Process.disconnect
    name: disconnect()
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: function disconnect()
      parameters: []
    package: tslib
  - uid: tslib.NodeJS.Process.domain
    name: domain
    fullName: domain
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    syntax:
      content: 'domain: Domain'
      return:
        type:
          - tslib.NodeJS.Domain
        description: ''
    package: tslib
  - uid: tslib.NodeJS.Process.emit
    name: 'emit("beforeExit", number)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function emit(event: "beforeExit", code: number)'
      parameters:
        - id: event
          type:
            - '"beforeExit"'
          description: ''
        - id: code
          type:
            - number
          description: ''
      return:
        type:
          - boolean
        description: ''
    package: tslib
  - uid: tslib.NodeJS.Process.emit_1
    name: emit("disconnect")
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function emit(event: "disconnect")'
      parameters:
        - id: event
          type:
            - '"disconnect"'
          description: ''
      return:
        type:
          - boolean
        description: ''
    package: tslib
  - uid: tslib.NodeJS.Process.emit_2
    name: 'emit("exit", number)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function emit(event: "exit", code: number)'
      parameters:
        - id: event
          type:
            - '"exit"'
          description: ''
        - id: code
          type:
            - number
          description: ''
      return:
        type:
          - boolean
        description: ''
    package: tslib
  - uid: tslib.NodeJS.Process.emit_7
    name: 'emit("message", any, any)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function emit(event: "message", message: any, sendHandle: any)'
      parameters:
        - id: event
          type:
            - '"message"'
          description: ''
        - id: message
          type:
            - any
          description: ''
        - id: sendHandle
          type:
            - any
          description: ''
      return:
        type:
          - this
        description: ''
    package: tslib
  - uid: tslib.NodeJS.Process.emit_11
    name: 'emit("multipleResolves", MultipleResolveListener)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function emit(event: "multipleResolves", listener:
        MultipleResolveListener)
      parameters:
        - id: event
          type:
            - '"multipleResolves"'
          description: ''
        - id: listener
          type:
            - tslib.NodeJS.MultipleResolveListener
          description: ''
      return:
        type:
          - this
        description: ''
    package: tslib
  - uid: tslib.NodeJS.Process.emit_9
    name: 'emit("newListener", string | symbol, (args: any[]) => void)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function emit(event: "newListener", eventName: string | symbol,
        listener: (args: any[]) => void)
      parameters:
        - id: event
          type:
            - '"newListener"'
          description: ''
        - id: eventName
          type:
            - string | symbol
          description: ''
        - id: listener
          type:
            - '(args: any[]) => void'
          description: ''
      return:
        type:
          - this
        description: ''
    package: tslib
  - uid: tslib.NodeJS.Process.emit_3
    name: 'emit("rejectionHandled", Promise<any>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function emit(event: "rejectionHandled", promise: Promise<any>)'
      parameters:
        - id: event
          type:
            - '"rejectionHandled"'
          description: ''
        - id: promise
          type:
            - Promise<any>
          description: ''
      return:
        type:
          - boolean
        description: ''
    package: tslib
  - uid: tslib.NodeJS.Process.emit_10
    name: 'emit("removeListener", string, (args: any[]) => void)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function emit(event: "removeListener", eventName: string, listener:
        (args: any[]) => void)
      parameters:
        - id: event
          type:
            - '"removeListener"'
          description: ''
        - id: eventName
          type:
            - string
          description: ''
        - id: listener
          type:
            - '(args: any[]) => void'
          description: ''
      return:
        type:
          - this
        description: ''
    package: tslib
  - uid: tslib.NodeJS.Process.emit_4
    name: 'emit("uncaughtException", Error)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function emit(event: "uncaughtException", error: Error)'
      parameters:
        - id: event
          type:
            - '"uncaughtException"'
          description: ''
        - id: error
          type:
            - Error
          description: ''
      return:
        type:
          - boolean
        description: ''
    package: tslib
  - uid: tslib.NodeJS.Process.emit_5
    name: 'emit("unhandledRejection", any, Promise<any>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function emit(event: "unhandledRejection", reason: any, promise:
        Promise<any>)
      parameters:
        - id: event
          type:
            - '"unhandledRejection"'
          description: ''
        - id: reason
          type:
            - any
          description: ''
        - id: promise
          type:
            - Promise<any>
          description: ''
      return:
        type:
          - boolean
        description: ''
    package: tslib
  - uid: tslib.NodeJS.Process.emit_6
    name: 'emit("warning", Error)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function emit(event: "warning", warning: Error)'
      parameters:
        - id: event
          type:
            - '"warning"'
          description: ''
        - id: warning
          type:
            - Error
          description: ''
      return:
        type:
          - boolean
        description: ''
    package: tslib
  - uid: tslib.NodeJS.Process.emit_8
    name: 'emit(Signals, Signals)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function emit(event: Signals, signal: Signals)'
      parameters:
        - id: event
          type:
            - tslib.NodeJS.Signals
          description: ''
        - id: signal
          type:
            - tslib.NodeJS.Signals
          description: ''
      return:
        type:
          - boolean
        description: ''
    package: tslib
  - uid: tslib.NodeJS.Process.emitWarning
    name: 'emitWarning(string | Error, undefined | string, Function)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function emitWarning(warning: string | Error, name?: undefined | string,
        ctor?: Function)
      parameters:
        - id: warning
          type:
            - string | Error
          description: ''
        - id: name
          type:
            - undefined | string
          description: ''
          optional: true
        - id: ctor
          type:
            - tslib.NodeJS.Global.Function
          description: ''
          optional: true
    package: tslib
  - uid: tslib.NodeJS.Process.env
    name: env
    fullName: env
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    syntax:
      content: 'env: ProcessEnv'
      return:
        type:
          - tslib.NodeJS.ProcessEnv
        description: ''
    package: tslib
  - uid: tslib.NodeJS.Process.eventNames
    name: eventNames()
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: function eventNames()
      parameters: []
      return:
        type:
          - Array<string | symbol>
        description: ''
    package: tslib
  - uid: tslib.NodeJS.Process.execArgv
    name: execArgv
    fullName: execArgv
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    syntax:
      content: 'execArgv: string[]'
      return:
        type:
          - 'string[]'
        description: ''
    package: tslib
  - uid: tslib.NodeJS.Process.execPath
    name: execPath
    fullName: execPath
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    syntax:
      content: 'execPath: string'
      return:
        type:
          - string
        description: ''
    package: tslib
  - uid: tslib.NodeJS.Process.exit
    name: exit(undefined | number)
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function exit(code?: undefined | number)'
      parameters:
        - id: code
          type:
            - undefined | number
          description: ''
          optional: true
      return:
        type:
          - never
        description: ''
    package: tslib
  - uid: tslib.NodeJS.Process.exitCode
    name: exitCode
    fullName: exitCode
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    optional: true
    syntax:
      content: 'exitCode?: undefined | number'
      return:
        type:
          - undefined | number
        description: ''
    package: tslib
  - uid: tslib.NodeJS.Process.features
    name: features
    fullName: features
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    syntax:
      content: 'features: Object'
      return:
        type:
          - Object
        description: ''
    package: tslib
  - uid: tslib.NodeJS.Process.getegid
    name: getegid()
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: function getegid()
      parameters: []
      return:
        type:
          - number
        description: ''
    package: tslib
  - uid: tslib.NodeJS.Process.geteuid
    name: geteuid()
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: function geteuid()
      parameters: []
      return:
        type:
          - number
        description: ''
    package: tslib
  - uid: tslib.NodeJS.Process.getgid
    name: getgid()
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: function getgid()
      parameters: []
      return:
        type:
          - number
        description: ''
    package: tslib
  - uid: tslib.NodeJS.Process.getgroups
    name: getgroups()
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: function getgroups()
      parameters: []
      return:
        type:
          - 'number[]'
        description: ''
    package: tslib
  - uid: tslib.NodeJS.Process.getMaxListeners
    name: getMaxListeners()
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: function getMaxListeners()
      parameters: []
      return:
        type:
          - number
        description: ''
    package: tslib
  - uid: tslib.NodeJS.Process.getuid
    name: getuid()
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: function getuid()
      parameters: []
      return:
        type:
          - number
        description: ''
    package: tslib
  - uid: tslib.NodeJS.Process.hasUncaughtExceptionCaptureCallback
    name: hasUncaughtExceptionCaptureCallback()
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: function hasUncaughtExceptionCaptureCallback()
      parameters: []
      return:
        type:
          - boolean
        description: ''
    package: tslib
  - uid: tslib.NodeJS.Process.hrtime
    name: hrtime
    fullName: hrtime
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    syntax:
      content: 'hrtime: HRTime'
      return:
        type:
          - HRTime
        description: ''
    package: tslib
  - uid: tslib.NodeJS.Process.kill
    name: 'kill(number, string | number)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function kill(pid: number, signal?: string | number)'
      parameters:
        - id: pid
          type:
            - number
          description: ''
        - id: signal
          type:
            - string | number
          description: ''
          optional: true
    package: tslib
  - uid: tslib.NodeJS.Process.listenerCount
    name: listenerCount(string | symbol)
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function listenerCount(type: string | symbol)'
      parameters:
        - id: type
          type:
            - string | symbol
          description: ''
      return:
        type:
          - number
        description: ''
    package: tslib
  - uid: tslib.NodeJS.Process.listeners
    name: listeners("beforeExit")
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function listeners(event: "beforeExit")'
      parameters:
        - id: event
          type:
            - '"beforeExit"'
          description: ''
      return:
        type:
          - 'tslib.NodeJS.BeforeExitListener[]'
        description: ''
    package: tslib
  - uid: tslib.NodeJS.Process.listeners_1
    name: listeners("disconnect")
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function listeners(event: "disconnect")'
      parameters:
        - id: event
          type:
            - '"disconnect"'
          description: ''
      return:
        type:
          - 'tslib.NodeJS.DisconnectListener[]'
        description: ''
    package: tslib
  - uid: tslib.NodeJS.Process.listeners_2
    name: listeners("exit")
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function listeners(event: "exit")'
      parameters:
        - id: event
          type:
            - '"exit"'
          description: ''
      return:
        type:
          - 'tslib.NodeJS.ExitListener[]'
        description: ''
    package: tslib
  - uid: tslib.NodeJS.Process.listeners_7
    name: listeners("message")
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function listeners(event: "message")'
      parameters:
        - id: event
          type:
            - '"message"'
          description: ''
      return:
        type:
          - 'tslib.NodeJS.MessageListener[]'
        description: ''
    package: tslib
  - uid: tslib.NodeJS.Process.listeners_11
    name: listeners("multipleResolves")
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function listeners(event: "multipleResolves")'
      parameters:
        - id: event
          type:
            - '"multipleResolves"'
          description: ''
      return:
        type:
          - 'tslib.NodeJS.MultipleResolveListener[]'
        description: ''
    package: tslib
  - uid: tslib.NodeJS.Process.listeners_9
    name: listeners("newListener")
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function listeners(event: "newListener")'
      parameters:
        - id: event
          type:
            - '"newListener"'
          description: ''
      return:
        type:
          - 'tslib.NodeJS.NewListenerListener[]'
        description: ''
    package: tslib
  - uid: tslib.NodeJS.Process.listeners_3
    name: listeners("rejectionHandled")
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function listeners(event: "rejectionHandled")'
      parameters:
        - id: event
          type:
            - '"rejectionHandled"'
          description: ''
      return:
        type:
          - 'tslib.NodeJS.RejectionHandledListener[]'
        description: ''
    package: tslib
  - uid: tslib.NodeJS.Process.listeners_10
    name: listeners("removeListener")
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function listeners(event: "removeListener")'
      parameters:
        - id: event
          type:
            - '"removeListener"'
          description: ''
      return:
        type:
          - 'tslib.NodeJS.RemoveListenerListener[]'
        description: ''
    package: tslib
  - uid: tslib.NodeJS.Process.listeners_4
    name: listeners("uncaughtException")
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function listeners(event: "uncaughtException")'
      parameters:
        - id: event
          type:
            - '"uncaughtException"'
          description: ''
      return:
        type:
          - 'tslib.NodeJS.UncaughtExceptionListener[]'
        description: ''
    package: tslib
  - uid: tslib.NodeJS.Process.listeners_5
    name: listeners("unhandledRejection")
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function listeners(event: "unhandledRejection")'
      parameters:
        - id: event
          type:
            - '"unhandledRejection"'
          description: ''
      return:
        type:
          - 'tslib.NodeJS.UnhandledRejectionListener[]'
        description: ''
    package: tslib
  - uid: tslib.NodeJS.Process.listeners_6
    name: listeners("warning")
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function listeners(event: "warning")'
      parameters:
        - id: event
          type:
            - '"warning"'
          description: ''
      return:
        type:
          - 'tslib.NodeJS.WarningListener[]'
        description: ''
    package: tslib
  - uid: tslib.NodeJS.Process.listeners_8
    name: listeners(Signals)
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function listeners(event: Signals)'
      parameters:
        - id: event
          type:
            - tslib.NodeJS.Signals
          description: ''
      return:
        type:
          - 'tslib.NodeJS.SignalsListener[]'
        description: ''
    package: tslib
  - uid: tslib.NodeJS.Process.mainModule
    name: mainModule
    fullName: mainModule
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    optional: true
    syntax:
      content: 'mainModule?: Module'
      return:
        type:
          - tslib.NodeJS.Module
        description: ''
    package: tslib
  - uid: tslib.NodeJS.Process.memoryUsage
    name: memoryUsage()
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: function memoryUsage()
      parameters: []
      return:
        type:
          - tslib.NodeJS.MemoryUsage
        description: ''
    package: tslib
  - uid: tslib.NodeJS.Process.nextTick
    name: 'nextTick(Function, any[])'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function nextTick(callback: Function, args: any[])'
      parameters:
        - id: callback
          type:
            - Function
          description: ''
        - id: args
          type:
            - 'any[]'
          description: ''
    package: tslib
  - uid: tslib.NodeJS.Process.off
    name: 'off(string | symbol, (args: any[]) => void)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function off(event: string | symbol, listener: (args: any[]) => void)'
      parameters:
        - id: event
          type:
            - string | symbol
          description: ''
        - id: listener
          type:
            - '(args: any[]) => void'
          description: ''
      return:
        type:
          - this
        description: ''
    package: tslib
  - uid: tslib.NodeJS.Process.on
    name: 'on("beforeExit", BeforeExitListener)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function on(event: "beforeExit", listener: BeforeExitListener)'
      parameters:
        - id: event
          type:
            - '"beforeExit"'
          description: ''
        - id: listener
          type:
            - tslib.NodeJS.BeforeExitListener
          description: ''
      return:
        type:
          - this
        description: ''
    package: tslib
  - uid: tslib.NodeJS.Process.on_1
    name: 'on("disconnect", DisconnectListener)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function on(event: "disconnect", listener: DisconnectListener)'
      parameters:
        - id: event
          type:
            - '"disconnect"'
          description: ''
        - id: listener
          type:
            - tslib.NodeJS.DisconnectListener
          description: ''
      return:
        type:
          - this
        description: ''
    package: tslib
  - uid: tslib.NodeJS.Process.on_2
    name: 'on("exit", ExitListener)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function on(event: "exit", listener: ExitListener)'
      parameters:
        - id: event
          type:
            - '"exit"'
          description: ''
        - id: listener
          type:
            - tslib.NodeJS.ExitListener
          description: ''
      return:
        type:
          - this
        description: ''
    package: tslib
  - uid: tslib.NodeJS.Process.on_7
    name: 'on("message", MessageListener)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function on(event: "message", listener: MessageListener)'
      parameters:
        - id: event
          type:
            - '"message"'
          description: ''
        - id: listener
          type:
            - tslib.NodeJS.MessageListener
          description: ''
      return:
        type:
          - this
        description: ''
    package: tslib
  - uid: tslib.NodeJS.Process.on_11
    name: 'on("multipleResolves", MultipleResolveListener)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function on(event: "multipleResolves", listener:
        MultipleResolveListener)
      parameters:
        - id: event
          type:
            - '"multipleResolves"'
          description: ''
        - id: listener
          type:
            - tslib.NodeJS.MultipleResolveListener
          description: ''
      return:
        type:
          - this
        description: ''
    package: tslib
  - uid: tslib.NodeJS.Process.on_9
    name: 'on("newListener", NewListenerListener)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function on(event: "newListener", listener: NewListenerListener)'
      parameters:
        - id: event
          type:
            - '"newListener"'
          description: ''
        - id: listener
          type:
            - tslib.NodeJS.NewListenerListener
          description: ''
      return:
        type:
          - this
        description: ''
    package: tslib
  - uid: tslib.NodeJS.Process.on_3
    name: 'on("rejectionHandled", RejectionHandledListener)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function on(event: "rejectionHandled", listener:
        RejectionHandledListener)
      parameters:
        - id: event
          type:
            - '"rejectionHandled"'
          description: ''
        - id: listener
          type:
            - tslib.NodeJS.RejectionHandledListener
          description: ''
      return:
        type:
          - this
        description: ''
    package: tslib
  - uid: tslib.NodeJS.Process.on_10
    name: 'on("removeListener", RemoveListenerListener)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function on(event: "removeListener", listener: RemoveListenerListener)'
      parameters:
        - id: event
          type:
            - '"removeListener"'
          description: ''
        - id: listener
          type:
            - tslib.NodeJS.RemoveListenerListener
          description: ''
      return:
        type:
          - this
        description: ''
    package: tslib
  - uid: tslib.NodeJS.Process.on_4
    name: 'on("uncaughtException", UncaughtExceptionListener)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function on(event: "uncaughtException", listener:
        UncaughtExceptionListener)
      parameters:
        - id: event
          type:
            - '"uncaughtException"'
          description: ''
        - id: listener
          type:
            - tslib.NodeJS.UncaughtExceptionListener
          description: ''
      return:
        type:
          - this
        description: ''
    package: tslib
  - uid: tslib.NodeJS.Process.on_5
    name: 'on("unhandledRejection", UnhandledRejectionListener)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function on(event: "unhandledRejection", listener:
        UnhandledRejectionListener)
      parameters:
        - id: event
          type:
            - '"unhandledRejection"'
          description: ''
        - id: listener
          type:
            - tslib.NodeJS.UnhandledRejectionListener
          description: ''
      return:
        type:
          - this
        description: ''
    package: tslib
  - uid: tslib.NodeJS.Process.on_6
    name: 'on("warning", WarningListener)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function on(event: "warning", listener: WarningListener)'
      parameters:
        - id: event
          type:
            - '"warning"'
          description: ''
        - id: listener
          type:
            - tslib.NodeJS.WarningListener
          description: ''
      return:
        type:
          - this
        description: ''
    package: tslib
  - uid: tslib.NodeJS.Process.on_8
    name: 'on(Signals, SignalsListener)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function on(event: Signals, listener: SignalsListener)'
      parameters:
        - id: event
          type:
            - tslib.NodeJS.Signals
          description: ''
        - id: listener
          type:
            - tslib.NodeJS.SignalsListener
          description: ''
      return:
        type:
          - this
        description: ''
    package: tslib
  - uid: tslib.NodeJS.Process.once
    name: 'once("beforeExit", BeforeExitListener)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function once(event: "beforeExit", listener: BeforeExitListener)'
      parameters:
        - id: event
          type:
            - '"beforeExit"'
          description: ''
        - id: listener
          type:
            - tslib.NodeJS.BeforeExitListener
          description: ''
      return:
        type:
          - this
        description: ''
    package: tslib
  - uid: tslib.NodeJS.Process.once_1
    name: 'once("disconnect", DisconnectListener)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function once(event: "disconnect", listener: DisconnectListener)'
      parameters:
        - id: event
          type:
            - '"disconnect"'
          description: ''
        - id: listener
          type:
            - tslib.NodeJS.DisconnectListener
          description: ''
      return:
        type:
          - this
        description: ''
    package: tslib
  - uid: tslib.NodeJS.Process.once_2
    name: 'once("exit", ExitListener)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function once(event: "exit", listener: ExitListener)'
      parameters:
        - id: event
          type:
            - '"exit"'
          description: ''
        - id: listener
          type:
            - tslib.NodeJS.ExitListener
          description: ''
      return:
        type:
          - this
        description: ''
    package: tslib
  - uid: tslib.NodeJS.Process.once_7
    name: 'once("message", MessageListener)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function once(event: "message", listener: MessageListener)'
      parameters:
        - id: event
          type:
            - '"message"'
          description: ''
        - id: listener
          type:
            - tslib.NodeJS.MessageListener
          description: ''
      return:
        type:
          - this
        description: ''
    package: tslib
  - uid: tslib.NodeJS.Process.once_11
    name: 'once("multipleResolves", MultipleResolveListener)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function once(event: "multipleResolves", listener:
        MultipleResolveListener)
      parameters:
        - id: event
          type:
            - '"multipleResolves"'
          description: ''
        - id: listener
          type:
            - tslib.NodeJS.MultipleResolveListener
          description: ''
      return:
        type:
          - this
        description: ''
    package: tslib
  - uid: tslib.NodeJS.Process.once_9
    name: 'once("newListener", NewListenerListener)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function once(event: "newListener", listener: NewListenerListener)'
      parameters:
        - id: event
          type:
            - '"newListener"'
          description: ''
        - id: listener
          type:
            - tslib.NodeJS.NewListenerListener
          description: ''
      return:
        type:
          - this
        description: ''
    package: tslib
  - uid: tslib.NodeJS.Process.once_3
    name: 'once("rejectionHandled", RejectionHandledListener)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function once(event: "rejectionHandled", listener:
        RejectionHandledListener)
      parameters:
        - id: event
          type:
            - '"rejectionHandled"'
          description: ''
        - id: listener
          type:
            - tslib.NodeJS.RejectionHandledListener
          description: ''
      return:
        type:
          - this
        description: ''
    package: tslib
  - uid: tslib.NodeJS.Process.once_10
    name: 'once("removeListener", RemoveListenerListener)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function once(event: "removeListener", listener: RemoveListenerListener)'
      parameters:
        - id: event
          type:
            - '"removeListener"'
          description: ''
        - id: listener
          type:
            - tslib.NodeJS.RemoveListenerListener
          description: ''
      return:
        type:
          - this
        description: ''
    package: tslib
  - uid: tslib.NodeJS.Process.once_4
    name: 'once("uncaughtException", UncaughtExceptionListener)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function once(event: "uncaughtException", listener:
        UncaughtExceptionListener)
      parameters:
        - id: event
          type:
            - '"uncaughtException"'
          description: ''
        - id: listener
          type:
            - tslib.NodeJS.UncaughtExceptionListener
          description: ''
      return:
        type:
          - this
        description: ''
    package: tslib
  - uid: tslib.NodeJS.Process.once_5
    name: 'once("unhandledRejection", UnhandledRejectionListener)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function once(event: "unhandledRejection", listener:
        UnhandledRejectionListener)
      parameters:
        - id: event
          type:
            - '"unhandledRejection"'
          description: ''
        - id: listener
          type:
            - tslib.NodeJS.UnhandledRejectionListener
          description: ''
      return:
        type:
          - this
        description: ''
    package: tslib
  - uid: tslib.NodeJS.Process.once_6
    name: 'once("warning", WarningListener)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function once(event: "warning", listener: WarningListener)'
      parameters:
        - id: event
          type:
            - '"warning"'
          description: ''
        - id: listener
          type:
            - tslib.NodeJS.WarningListener
          description: ''
      return:
        type:
          - this
        description: ''
    package: tslib
  - uid: tslib.NodeJS.Process.once_8
    name: 'once(Signals, SignalsListener)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function once(event: Signals, listener: SignalsListener)'
      parameters:
        - id: event
          type:
            - tslib.NodeJS.Signals
          description: ''
        - id: listener
          type:
            - tslib.NodeJS.SignalsListener
          description: ''
      return:
        type:
          - this
        description: ''
    package: tslib
  - uid: tslib.NodeJS.Process.openStdin
    name: openStdin()
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: function openStdin()
      parameters: []
      return:
        type:
          - tslib.NodeJS.Socket
        description: ''
    package: tslib
  - uid: tslib.NodeJS.Process.pid
    name: pid
    fullName: pid
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    syntax:
      content: 'pid: number'
      return:
        type:
          - number
        description: ''
    package: tslib
  - uid: tslib.NodeJS.Process.platform
    name: platform
    fullName: platform
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    syntax:
      content: 'platform: Platform'
      return:
        type:
          - tslib.NodeJS.Platform
        description: ''
    package: tslib
  - uid: tslib.NodeJS.Process.ppid
    name: ppid
    fullName: ppid
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    syntax:
      content: 'ppid: number'
      return:
        type:
          - number
        description: ''
    package: tslib
  - uid: tslib.NodeJS.Process.prependListener
    name: 'prependListener("beforeExit", BeforeExitListener)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function prependListener(event: "beforeExit", listener:
        BeforeExitListener)
      parameters:
        - id: event
          type:
            - '"beforeExit"'
          description: ''
        - id: listener
          type:
            - tslib.NodeJS.BeforeExitListener
          description: ''
      return:
        type:
          - this
        description: ''
    package: tslib
  - uid: tslib.NodeJS.Process.prependListener_1
    name: 'prependListener("disconnect", DisconnectListener)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function prependListener(event: "disconnect", listener:
        DisconnectListener)
      parameters:
        - id: event
          type:
            - '"disconnect"'
          description: ''
        - id: listener
          type:
            - tslib.NodeJS.DisconnectListener
          description: ''
      return:
        type:
          - this
        description: ''
    package: tslib
  - uid: tslib.NodeJS.Process.prependListener_2
    name: 'prependListener("exit", ExitListener)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function prependListener(event: "exit", listener: ExitListener)'
      parameters:
        - id: event
          type:
            - '"exit"'
          description: ''
        - id: listener
          type:
            - tslib.NodeJS.ExitListener
          description: ''
      return:
        type:
          - this
        description: ''
    package: tslib
  - uid: tslib.NodeJS.Process.prependListener_7
    name: 'prependListener("message", MessageListener)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function prependListener(event: "message", listener: MessageListener)'
      parameters:
        - id: event
          type:
            - '"message"'
          description: ''
        - id: listener
          type:
            - tslib.NodeJS.MessageListener
          description: ''
      return:
        type:
          - this
        description: ''
    package: tslib
  - uid: tslib.NodeJS.Process.prependListener_11
    name: 'prependListener("multipleResolves", MultipleResolveListener)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function prependListener(event: "multipleResolves", listener:
        MultipleResolveListener)
      parameters:
        - id: event
          type:
            - '"multipleResolves"'
          description: ''
        - id: listener
          type:
            - tslib.NodeJS.MultipleResolveListener
          description: ''
      return:
        type:
          - this
        description: ''
    package: tslib
  - uid: tslib.NodeJS.Process.prependListener_9
    name: 'prependListener("newListener", NewListenerListener)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function prependListener(event: "newListener", listener:
        NewListenerListener)
      parameters:
        - id: event
          type:
            - '"newListener"'
          description: ''
        - id: listener
          type:
            - tslib.NodeJS.NewListenerListener
          description: ''
      return:
        type:
          - this
        description: ''
    package: tslib
  - uid: tslib.NodeJS.Process.prependListener_3
    name: 'prependListener("rejectionHandled", RejectionHandledListener)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function prependListener(event: "rejectionHandled", listener:
        RejectionHandledListener)
      parameters:
        - id: event
          type:
            - '"rejectionHandled"'
          description: ''
        - id: listener
          type:
            - tslib.NodeJS.RejectionHandledListener
          description: ''
      return:
        type:
          - this
        description: ''
    package: tslib
  - uid: tslib.NodeJS.Process.prependListener_10
    name: 'prependListener("removeListener", RemoveListenerListener)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function prependListener(event: "removeListener", listener:
        RemoveListenerListener)
      parameters:
        - id: event
          type:
            - '"removeListener"'
          description: ''
        - id: listener
          type:
            - tslib.NodeJS.RemoveListenerListener
          description: ''
      return:
        type:
          - this
        description: ''
    package: tslib
  - uid: tslib.NodeJS.Process.prependListener_4
    name: 'prependListener("uncaughtException", UncaughtExceptionListener)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function prependListener(event: "uncaughtException", listener:
        UncaughtExceptionListener)
      parameters:
        - id: event
          type:
            - '"uncaughtException"'
          description: ''
        - id: listener
          type:
            - tslib.NodeJS.UncaughtExceptionListener
          description: ''
      return:
        type:
          - this
        description: ''
    package: tslib
  - uid: tslib.NodeJS.Process.prependListener_5
    name: 'prependListener("unhandledRejection", UnhandledRejectionListener)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function prependListener(event: "unhandledRejection", listener:
        UnhandledRejectionListener)
      parameters:
        - id: event
          type:
            - '"unhandledRejection"'
          description: ''
        - id: listener
          type:
            - tslib.NodeJS.UnhandledRejectionListener
          description: ''
      return:
        type:
          - this
        description: ''
    package: tslib
  - uid: tslib.NodeJS.Process.prependListener_6
    name: 'prependListener("warning", WarningListener)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function prependListener(event: "warning", listener: WarningListener)'
      parameters:
        - id: event
          type:
            - '"warning"'
          description: ''
        - id: listener
          type:
            - tslib.NodeJS.WarningListener
          description: ''
      return:
        type:
          - this
        description: ''
    package: tslib
  - uid: tslib.NodeJS.Process.prependListener_8
    name: 'prependListener(Signals, SignalsListener)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function prependListener(event: Signals, listener: SignalsListener)'
      parameters:
        - id: event
          type:
            - tslib.NodeJS.Signals
          description: ''
        - id: listener
          type:
            - tslib.NodeJS.SignalsListener
          description: ''
      return:
        type:
          - this
        description: ''
    package: tslib
  - uid: tslib.NodeJS.Process.prependOnceListener
    name: 'prependOnceListener("beforeExit", BeforeExitListener)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function prependOnceListener(event: "beforeExit", listener:
        BeforeExitListener)
      parameters:
        - id: event
          type:
            - '"beforeExit"'
          description: ''
        - id: listener
          type:
            - tslib.NodeJS.BeforeExitListener
          description: ''
      return:
        type:
          - this
        description: ''
    package: tslib
  - uid: tslib.NodeJS.Process.prependOnceListener_1
    name: 'prependOnceListener("disconnect", DisconnectListener)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function prependOnceListener(event: "disconnect", listener:
        DisconnectListener)
      parameters:
        - id: event
          type:
            - '"disconnect"'
          description: ''
        - id: listener
          type:
            - tslib.NodeJS.DisconnectListener
          description: ''
      return:
        type:
          - this
        description: ''
    package: tslib
  - uid: tslib.NodeJS.Process.prependOnceListener_2
    name: 'prependOnceListener("exit", ExitListener)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function prependOnceListener(event: "exit", listener: ExitListener)'
      parameters:
        - id: event
          type:
            - '"exit"'
          description: ''
        - id: listener
          type:
            - tslib.NodeJS.ExitListener
          description: ''
      return:
        type:
          - this
        description: ''
    package: tslib
  - uid: tslib.NodeJS.Process.prependOnceListener_7
    name: 'prependOnceListener("message", MessageListener)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function prependOnceListener(event: "message", listener:
        MessageListener)
      parameters:
        - id: event
          type:
            - '"message"'
          description: ''
        - id: listener
          type:
            - tslib.NodeJS.MessageListener
          description: ''
      return:
        type:
          - this
        description: ''
    package: tslib
  - uid: tslib.NodeJS.Process.prependOnceListener_11
    name: 'prependOnceListener("multipleResolves", MultipleResolveListener)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function prependOnceListener(event: "multipleResolves", listener:
        MultipleResolveListener)
      parameters:
        - id: event
          type:
            - '"multipleResolves"'
          description: ''
        - id: listener
          type:
            - tslib.NodeJS.MultipleResolveListener
          description: ''
      return:
        type:
          - this
        description: ''
    package: tslib
  - uid: tslib.NodeJS.Process.prependOnceListener_9
    name: 'prependOnceListener("newListener", NewListenerListener)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function prependOnceListener(event: "newListener", listener:
        NewListenerListener)
      parameters:
        - id: event
          type:
            - '"newListener"'
          description: ''
        - id: listener
          type:
            - tslib.NodeJS.NewListenerListener
          description: ''
      return:
        type:
          - this
        description: ''
    package: tslib
  - uid: tslib.NodeJS.Process.prependOnceListener_3
    name: 'prependOnceListener("rejectionHandled", RejectionHandledListener)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function prependOnceListener(event: "rejectionHandled", listener:
        RejectionHandledListener)
      parameters:
        - id: event
          type:
            - '"rejectionHandled"'
          description: ''
        - id: listener
          type:
            - tslib.NodeJS.RejectionHandledListener
          description: ''
      return:
        type:
          - this
        description: ''
    package: tslib
  - uid: tslib.NodeJS.Process.prependOnceListener_10
    name: 'prependOnceListener("removeListener", RemoveListenerListener)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function prependOnceListener(event: "removeListener", listener:
        RemoveListenerListener)
      parameters:
        - id: event
          type:
            - '"removeListener"'
          description: ''
        - id: listener
          type:
            - tslib.NodeJS.RemoveListenerListener
          description: ''
      return:
        type:
          - this
        description: ''
    package: tslib
  - uid: tslib.NodeJS.Process.prependOnceListener_4
    name: 'prependOnceListener("uncaughtException", UncaughtExceptionListener)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function prependOnceListener(event: "uncaughtException", listener:
        UncaughtExceptionListener)
      parameters:
        - id: event
          type:
            - '"uncaughtException"'
          description: ''
        - id: listener
          type:
            - tslib.NodeJS.UncaughtExceptionListener
          description: ''
      return:
        type:
          - this
        description: ''
    package: tslib
  - uid: tslib.NodeJS.Process.prependOnceListener_5
    name: 'prependOnceListener("unhandledRejection", UnhandledRejectionListener)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function prependOnceListener(event: "unhandledRejection", listener:
        UnhandledRejectionListener)
      parameters:
        - id: event
          type:
            - '"unhandledRejection"'
          description: ''
        - id: listener
          type:
            - tslib.NodeJS.UnhandledRejectionListener
          description: ''
      return:
        type:
          - this
        description: ''
    package: tslib
  - uid: tslib.NodeJS.Process.prependOnceListener_6
    name: 'prependOnceListener("warning", WarningListener)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function prependOnceListener(event: "warning", listener:
        WarningListener)
      parameters:
        - id: event
          type:
            - '"warning"'
          description: ''
        - id: listener
          type:
            - tslib.NodeJS.WarningListener
          description: ''
      return:
        type:
          - this
        description: ''
    package: tslib
  - uid: tslib.NodeJS.Process.prependOnceListener_8
    name: 'prependOnceListener(Signals, SignalsListener)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function prependOnceListener(event: Signals, listener: SignalsListener)'
      parameters:
        - id: event
          type:
            - tslib.NodeJS.Signals
          description: ''
        - id: listener
          type:
            - tslib.NodeJS.SignalsListener
          description: ''
      return:
        type:
          - this
        description: ''
    package: tslib
  - uid: tslib.NodeJS.Process.rawListeners
    name: rawListeners(string | symbol)
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function rawListeners(event: string | symbol)'
      parameters:
        - id: event
          type:
            - string | symbol
          description: ''
      return:
        type:
          - 'Function[]'
        description: ''
    package: tslib
  - uid: tslib.NodeJS.Process.release
    name: release
    fullName: release
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    syntax:
      content: 'release: ProcessRelease'
      return:
        type:
          - tslib.NodeJS.ProcessRelease
        description: ''
    package: tslib
  - uid: tslib.NodeJS.Process.removeAllListeners
    name: removeAllListeners(string | symbol)
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function removeAllListeners(event?: string | symbol)'
      parameters:
        - id: event
          type:
            - string | symbol
          description: ''
          optional: true
      return:
        type:
          - this
        description: ''
    package: tslib
  - uid: tslib.NodeJS.Process.removeListener
    name: 'removeListener(string | symbol, (args: any[]) => void)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function removeListener(event: string | symbol, listener: (args: any[])
        => void)
      parameters:
        - id: event
          type:
            - string | symbol
          description: ''
        - id: listener
          type:
            - '(args: any[]) => void'
          description: ''
      return:
        type:
          - this
        description: ''
    package: tslib
  - uid: tslib.NodeJS.Process.report
    name: report
    fullName: report
    children: []
    langs:
      - typeScript
    type: property
    summary: Only available with `--experimental-report`
    optional: true
    syntax:
      content: 'report?: ProcessReport'
      return:
        type:
          - tslib.NodeJS.ProcessReport
        description: ''
    package: tslib
  - uid: tslib.NodeJS.Process.resourceUsage
    name: resourceUsage()
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: function resourceUsage()
      parameters: []
      return:
        type:
          - tslib.NodeJS.ResourceUsage
        description: ''
    package: tslib
  - uid: tslib.NodeJS.Process.send
    name: >-
      send(any, any, undefined | Object, undefined | (error: Error | null) =>
      void)
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function send(message: any, sendHandle?: any, options?: undefined |
        Object, callback?: undefined | (error: Error | null) => void)
      parameters:
        - id: message
          type:
            - any
          description: ''
        - id: sendHandle
          type:
            - any
          description: ''
          optional: true
        - id: options
          type:
            - undefined | Object
          description: ''
          optional: true
        - id: callback
          type:
            - 'undefined | (error: Error | null) => void'
          description: ''
          optional: true
      return:
        type:
          - boolean
        description: ''
    package: tslib
  - uid: tslib.NodeJS.Process.setegid
    name: setegid(number | string)
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function setegid(id: number | string)'
      parameters:
        - id: id
          type:
            - number | string
          description: ''
    package: tslib
  - uid: tslib.NodeJS.Process.seteuid
    name: seteuid(number | string)
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function seteuid(id: number | string)'
      parameters:
        - id: id
          type:
            - number | string
          description: ''
    package: tslib
  - uid: tslib.NodeJS.Process.setgid
    name: setgid(number | string)
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function setgid(id: number | string)'
      parameters:
        - id: id
          type:
            - number | string
          description: ''
    package: tslib
  - uid: tslib.NodeJS.Process.setgroups
    name: setgroups(Array<string | number>)
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function setgroups(groups: Array<string | number>)'
      parameters:
        - id: groups
          type:
            - Array<string | number>
          description: ''
    package: tslib
  - uid: tslib.NodeJS.Process.setMaxListeners
    name: setMaxListeners(number)
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function setMaxListeners(n: number)'
      parameters:
        - id: 'n'
          type:
            - number
          description: ''
      return:
        type:
          - this
        description: ''
    package: tslib
  - uid: tslib.NodeJS.Process.setuid
    name: setuid(number | string)
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function setuid(id: number | string)'
      parameters:
        - id: id
          type:
            - number | string
          description: ''
    package: tslib
  - uid: tslib.NodeJS.Process.setUncaughtExceptionCaptureCallback
    name: 'setUncaughtExceptionCaptureCallback((err: Error) => void | null)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function setUncaughtExceptionCaptureCallback(cb: (err: Error) => void |
        null)
      parameters:
        - id: cb
          type:
            - '(err: Error) => void | null'
          description: ''
    package: tslib
  - uid: tslib.NodeJS.Process.stderr
    name: stderr
    fullName: stderr
    children: []
    langs:
      - typeScript
    type: property
    summary: 'Can also be a tty.WriteStream, not typed due to limitation.s'
    syntax:
      content: 'stderr: WriteStream'
      return:
        type:
          - WriteStream
        description: ''
    package: tslib
  - uid: tslib.NodeJS.Process.stdin
    name: stdin
    fullName: stdin
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    syntax:
      content: 'stdin: ReadStream'
      return:
        type:
          - ReadStream
        description: ''
    package: tslib
  - uid: tslib.NodeJS.Process.stdout
    name: stdout
    fullName: stdout
    children: []
    langs:
      - typeScript
    type: property
    summary: 'Can also be a tty.WriteStream, not typed due to limitation.s'
    syntax:
      content: 'stdout: WriteStream'
      return:
        type:
          - WriteStream
        description: ''
    package: tslib
  - uid: tslib.NodeJS.Process.title
    name: title
    fullName: title
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    syntax:
      content: 'title: string'
      return:
        type:
          - string
        description: ''
    package: tslib
  - uid: tslib.NodeJS.Process.umask
    name: umask(undefined | number)
    children: []
    type: method
    langs:
      - typeScript
    summary: Can only be set if not in worker thread.
    syntax:
      content: 'function umask(mask?: undefined | number)'
      parameters:
        - id: mask
          type:
            - undefined | number
          description: ''
          optional: true
      return:
        type:
          - number
        description: ''
    package: tslib
  - uid: tslib.NodeJS.Process.uptime
    name: uptime()
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: function uptime()
      parameters: []
      return:
        type:
          - number
        description: ''
    package: tslib
  - uid: tslib.NodeJS.Process.version
    name: version
    fullName: version
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    syntax:
      content: 'version: string'
      return:
        type:
          - string
        description: ''
    package: tslib
  - uid: tslib.NodeJS.Process.versions
    name: versions
    fullName: versions
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    syntax:
      content: 'versions: ProcessVersions'
      return:
        type:
          - tslib.NodeJS.ProcessVersions
        description: ''
    package: tslib
references:
  - uid: tslib.NodeJS.WritableStream
    name: WritableStream
    spec.typeScript:
      - name: WritableStream
        fullName: WritableStream
        uid: tslib.NodeJS.WritableStream
  - uid: tslib.NodeJS.ConsoleConstructorOptions
    name: ConsoleConstructorOptions
    spec.typeScript:
      - name: ConsoleConstructorOptions
        fullName: ConsoleConstructorOptions
        uid: tslib.NodeJS.ConsoleConstructorOptions
  - uid: tslib.NodeJS.InspectOptions
    name: InspectOptions
    spec.typeScript:
      - name: InspectOptions
        fullName: InspectOptions
        uid: tslib.NodeJS.InspectOptions
  - uid: tslib.NodeJS.EventEmitter
    name: EventEmitter
    spec.typeScript:
      - name: EventEmitter
        fullName: EventEmitter
        uid: tslib.NodeJS.EventEmitter
  - uid: tslib.NodeJS.EventEmitter | tslib.NodeJS.Timer
    name: Timer
    spec.typeScript:
      - name: EventEmitter
        fullName: EventEmitter
        uid: tslib.NodeJS.EventEmitter
      - name: ' | '
        fullName: ' | '
      - name: Timer
        fullName: Timer
        uid: tslib.NodeJS.Timer
  - uid: tslib.NodeJS.Global
    name: Global
    spec.typeScript:
      - name: Global
        fullName: Global
        uid: tslib.NodeJS.Global
  - uid: tslib.NodeJS.Process
    name: Process
    spec.typeScript:
      - name: Process
        fullName: Process
        uid: tslib.NodeJS.Process
  - uid: tslib.NodeJS.RefCounted
    name: RefCounted
    spec.typeScript:
      - name: RefCounted
        fullName: RefCounted
        uid: tslib.NodeJS.RefCounted
  - uid: 'tslib.NodeJS.Module[]'
    name: 'Module[]'
    spec.typeScript:
      - name: Module
        fullName: Module
        uid: tslib.NodeJS.Module
      - name: '[]'
        fullName: '[]'
  - uid: tslib.NodeJS.Module | null
    name: Module | null
    spec.typeScript:
      - name: Module
        fullName: Module
        uid: tslib.NodeJS.Module
      - name: ' | null'
        fullName: ' | null'
  - uid: tslib.NodeJS.Require
    name: Require
    spec.typeScript:
      - name: Require
        fullName: Require
        uid: tslib.NodeJS.Require
  - uid: tslib.NodeJS.Domain
    name: Domain
    spec.typeScript:
      - name: Domain
        fullName: Domain
        uid: tslib.NodeJS.Domain
  - uid: tslib.NodeJS.ProcessEnv
    name: ProcessEnv
    spec.typeScript:
      - name: ProcessEnv
        fullName: ProcessEnv
        uid: tslib.NodeJS.ProcessEnv
  - uid: tslib.NodeJS.Module
    name: Module
    spec.typeScript:
      - name: Module
        fullName: Module
        uid: tslib.NodeJS.Module
  - uid: tslib.NodeJS.Platform
    name: Platform
    spec.typeScript:
      - name: Platform
        fullName: Platform
        uid: tslib.NodeJS.Platform
  - uid: tslib.NodeJS.ProcessRelease
    name: ProcessRelease
    spec.typeScript:
      - name: ProcessRelease
        fullName: ProcessRelease
        uid: tslib.NodeJS.ProcessRelease
  - uid: tslib.NodeJS.ProcessReport
    name: ProcessReport
    spec.typeScript:
      - name: ProcessReport
        fullName: ProcessReport
        uid: tslib.NodeJS.ProcessReport
  - uid: tslib.NodeJS.ProcessVersions
    name: ProcessVersions
    spec.typeScript:
      - name: ProcessVersions
        fullName: ProcessVersions
        uid: tslib.NodeJS.ProcessVersions
  - uid: tslib.NodeJS.BeforeExitListener
    name: BeforeExitListener
    spec.typeScript:
      - name: BeforeExitListener
        fullName: BeforeExitListener
        uid: tslib.NodeJS.BeforeExitListener
  - uid: tslib.NodeJS.DisconnectListener
    name: DisconnectListener
    spec.typeScript:
      - name: DisconnectListener
        fullName: DisconnectListener
        uid: tslib.NodeJS.DisconnectListener
  - uid: tslib.NodeJS.ExitListener
    name: ExitListener
    spec.typeScript:
      - name: ExitListener
        fullName: ExitListener
        uid: tslib.NodeJS.ExitListener
  - uid: tslib.NodeJS.RejectionHandledListener
    name: RejectionHandledListener
    spec.typeScript:
      - name: RejectionHandledListener
        fullName: RejectionHandledListener
        uid: tslib.NodeJS.RejectionHandledListener
  - uid: tslib.NodeJS.UncaughtExceptionListener
    name: UncaughtExceptionListener
    spec.typeScript:
      - name: UncaughtExceptionListener
        fullName: UncaughtExceptionListener
        uid: tslib.NodeJS.UncaughtExceptionListener
  - uid: tslib.NodeJS.UnhandledRejectionListener
    name: UnhandledRejectionListener
    spec.typeScript:
      - name: UnhandledRejectionListener
        fullName: UnhandledRejectionListener
        uid: tslib.NodeJS.UnhandledRejectionListener
  - uid: tslib.NodeJS.WarningListener
    name: WarningListener
    spec.typeScript:
      - name: WarningListener
        fullName: WarningListener
        uid: tslib.NodeJS.WarningListener
  - uid: tslib.NodeJS.MessageListener
    name: MessageListener
    spec.typeScript:
      - name: MessageListener
        fullName: MessageListener
        uid: tslib.NodeJS.MessageListener
  - uid: tslib.NodeJS.Signals
    name: Signals
    spec.typeScript:
      - name: Signals
        fullName: Signals
        uid: tslib.NodeJS.Signals
  - uid: tslib.NodeJS.SignalsListener
    name: SignalsListener
    spec.typeScript:
      - name: SignalsListener
        fullName: SignalsListener
        uid: tslib.NodeJS.SignalsListener
  - uid: tslib.NodeJS.NewListenerListener
    name: NewListenerListener
    spec.typeScript:
      - name: NewListenerListener
        fullName: NewListenerListener
        uid: tslib.NodeJS.NewListenerListener
  - uid: tslib.NodeJS.RemoveListenerListener
    name: RemoveListenerListener
    spec.typeScript:
      - name: RemoveListenerListener
        fullName: RemoveListenerListener
        uid: tslib.NodeJS.RemoveListenerListener
  - uid: tslib.NodeJS.MultipleResolveListener
    name: MultipleResolveListener
    spec.typeScript:
      - name: MultipleResolveListener
        fullName: MultipleResolveListener
        uid: tslib.NodeJS.MultipleResolveListener
  - uid: tslib.NodeJS.CpuUsage
    name: CpuUsage
    spec.typeScript:
      - name: CpuUsage
        fullName: CpuUsage
        uid: tslib.NodeJS.CpuUsage
  - uid: tslib.NodeJS.Global.Function
    name: Function
    spec.typeScript:
      - name: Function
        fullName: Function
        uid: tslib.NodeJS.Global.Function
  - uid: 'tslib.NodeJS.BeforeExitListener[]'
    name: 'BeforeExitListener[]'
    spec.typeScript:
      - name: BeforeExitListener
        fullName: BeforeExitListener
        uid: tslib.NodeJS.BeforeExitListener
      - name: '[]'
        fullName: '[]'
  - uid: 'tslib.NodeJS.DisconnectListener[]'
    name: 'DisconnectListener[]'
    spec.typeScript:
      - name: DisconnectListener
        fullName: DisconnectListener
        uid: tslib.NodeJS.DisconnectListener
      - name: '[]'
        fullName: '[]'
  - uid: 'tslib.NodeJS.ExitListener[]'
    name: 'ExitListener[]'
    spec.typeScript:
      - name: ExitListener
        fullName: ExitListener
        uid: tslib.NodeJS.ExitListener
      - name: '[]'
        fullName: '[]'
  - uid: 'tslib.NodeJS.RejectionHandledListener[]'
    name: 'RejectionHandledListener[]'
    spec.typeScript:
      - name: RejectionHandledListener
        fullName: RejectionHandledListener
        uid: tslib.NodeJS.RejectionHandledListener
      - name: '[]'
        fullName: '[]'
  - uid: 'tslib.NodeJS.UncaughtExceptionListener[]'
    name: 'UncaughtExceptionListener[]'
    spec.typeScript:
      - name: UncaughtExceptionListener
        fullName: UncaughtExceptionListener
        uid: tslib.NodeJS.UncaughtExceptionListener
      - name: '[]'
        fullName: '[]'
  - uid: 'tslib.NodeJS.UnhandledRejectionListener[]'
    name: 'UnhandledRejectionListener[]'
    spec.typeScript:
      - name: UnhandledRejectionListener
        fullName: UnhandledRejectionListener
        uid: tslib.NodeJS.UnhandledRejectionListener
      - name: '[]'
        fullName: '[]'
  - uid: 'tslib.NodeJS.WarningListener[]'
    name: 'WarningListener[]'
    spec.typeScript:
      - name: WarningListener
        fullName: WarningListener
        uid: tslib.NodeJS.WarningListener
      - name: '[]'
        fullName: '[]'
  - uid: 'tslib.NodeJS.MessageListener[]'
    name: 'MessageListener[]'
    spec.typeScript:
      - name: MessageListener
        fullName: MessageListener
        uid: tslib.NodeJS.MessageListener
      - name: '[]'
        fullName: '[]'
  - uid: 'tslib.NodeJS.SignalsListener[]'
    name: 'SignalsListener[]'
    spec.typeScript:
      - name: SignalsListener
        fullName: SignalsListener
        uid: tslib.NodeJS.SignalsListener
      - name: '[]'
        fullName: '[]'
  - uid: 'tslib.NodeJS.NewListenerListener[]'
    name: 'NewListenerListener[]'
    spec.typeScript:
      - name: NewListenerListener
        fullName: NewListenerListener
        uid: tslib.NodeJS.NewListenerListener
      - name: '[]'
        fullName: '[]'
  - uid: 'tslib.NodeJS.RemoveListenerListener[]'
    name: 'RemoveListenerListener[]'
    spec.typeScript:
      - name: RemoveListenerListener
        fullName: RemoveListenerListener
        uid: tslib.NodeJS.RemoveListenerListener
      - name: '[]'
        fullName: '[]'
  - uid: 'tslib.NodeJS.MultipleResolveListener[]'
    name: 'MultipleResolveListener[]'
    spec.typeScript:
      - name: MultipleResolveListener
        fullName: MultipleResolveListener
        uid: tslib.NodeJS.MultipleResolveListener
      - name: '[]'
        fullName: '[]'
  - uid: tslib.NodeJS.MemoryUsage
    name: MemoryUsage
    spec.typeScript:
      - name: MemoryUsage
        fullName: MemoryUsage
        uid: tslib.NodeJS.MemoryUsage
  - uid: tslib.NodeJS.Socket
    name: Socket
    spec.typeScript:
      - name: Socket
        fullName: Socket
        uid: tslib.NodeJS.Socket
  - uid: tslib.NodeJS.ResourceUsage
    name: ResourceUsage
    spec.typeScript:
      - name: ResourceUsage
        fullName: ResourceUsage
        uid: tslib.NodeJS.ResourceUsage
  - uid: tslib.AbortError.Error
    name: Error
    spec.typeScript:
      - name: Error
        fullName: Error
        uid: tslib.AbortError.Error
  - uid: tslib.NodeJS.ReadableStream
    name: ReadableStream
    spec.typeScript:
      - name: ReadableStream
        fullName: ReadableStream
        uid: tslib.NodeJS.ReadableStream
  - uid: tslib.BufferEncoding
    name: BufferEncoding
    spec.typeScript:
      - name: BufferEncoding
        fullName: BufferEncoding
        uid: tslib.BufferEncoding
  - uid: tslib.NodeJS.NodeRequireCache
    name: NodeRequireCache
    spec.typeScript:
      - name: NodeRequireCache
        fullName: NodeRequireCache
        uid: tslib.NodeJS.NodeRequireCache
  - uid: tslib.NodeJS.RequireExtensions
    name: RequireExtensions
    spec.typeScript:
      - name: RequireExtensions
        fullName: RequireExtensions
        uid: tslib.NodeJS.RequireExtensions
  - uid: tslib.NodeJS.Module | undefined
    name: Module | undefined
    spec.typeScript:
      - name: Module
        fullName: Module
        uid: tslib.NodeJS.Module
      - name: ' | undefined'
        fullName: ' | undefined'
  - uid: tslib.NodeJS.RequireResolve
    name: RequireResolve
    spec.typeScript:
      - name: RequireResolve
        fullName: RequireResolve
        uid: tslib.NodeJS.RequireResolve
  - uid: tslib.NodeJS.ReadWriteStream
    name: ReadWriteStream
    spec.typeScript:
      - name: ReadWriteStream
        fullName: ReadWriteStream
        uid: tslib.NodeJS.ReadWriteStream
  - uid: tslib.NodeJS.Timer
    name: Timer
    spec.typeScript:
      - name: Timer
        fullName: Timer
        uid: tslib.NodeJS.Timer
