### YamlMime:UniversalReference
items:
  - uid: '@azure/storage-file-datalake.FileSystemOperations'
    name: FileSystemOperations
    fullName: FileSystemOperations
    children:
      - '@azure/storage-file-datalake.FileSystemOperations.create_2'
      - '@azure/storage-file-datalake.FileSystemOperations.create'
      - '@azure/storage-file-datalake.FileSystemOperations.create_1'
      - '@azure/storage-file-datalake.FileSystemOperations.deleteMethod_2'
      - '@azure/storage-file-datalake.FileSystemOperations.deleteMethod'
      - '@azure/storage-file-datalake.FileSystemOperations.deleteMethod_1'
      - '@azure/storage-file-datalake.FileSystemOperations.constructor'
      - '@azure/storage-file-datalake.FileSystemOperations.getProperties_2'
      - '@azure/storage-file-datalake.FileSystemOperations.getProperties'
      - '@azure/storage-file-datalake.FileSystemOperations.getProperties_1'
      - '@azure/storage-file-datalake.FileSystemOperations.listPaths_2'
      - '@azure/storage-file-datalake.FileSystemOperations.listPaths'
      - '@azure/storage-file-datalake.FileSystemOperations.listPaths_1'
      - '@azure/storage-file-datalake.FileSystemOperations.setProperties_2'
      - '@azure/storage-file-datalake.FileSystemOperations.setProperties'
      - '@azure/storage-file-datalake.FileSystemOperations.setProperties_1'
    langs:
      - typeScript
    type: class
    summary: Class representing a FileSystemOperations.
    package: '@azure/storage-file-datalake'
  - uid: '@azure/storage-file-datalake.FileSystemOperations.create_2'
    name: 'create(FileSystemCreateOptionalParams, ServiceCallback<void>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function create(options: FileSystemCreateOptionalParams, callback:
        ServiceCallback<void>)
      parameters:
        - id: options
          type:
            - '@azure/storage-file-datalake.FileSystemCreateOptionalParams'
          description: The optional parameters
        - id: callback
          type:
            - ServiceCallback<void>
          description: |
            The callback
    package: '@azure/storage-file-datalake'
  - uid: '@azure/storage-file-datalake.FileSystemOperations.create'
    name: create(Models.FileSystemCreateOptionalParams)
    children: []
    type: method
    langs:
      - typeScript
    summary: >-
      Create a FileSystem rooted at the specified location. If the FileSystem
      already exists, the

      operation fails.  This operation does not support conditional HTTP
      requests.
    syntax:
      content: 'function create(options?: Models.FileSystemCreateOptionalParams)'
      parameters:
        - id: options
          type:
            - Models.FileSystemCreateOptionalParams
          description: ''
          optional: true
      return:
        type:
          - Promise<Models.FileSystemCreateResponse>
        description: Promise<Models.FileSystemCreateResponse>
    package: '@azure/storage-file-datalake'
  - uid: '@azure/storage-file-datalake.FileSystemOperations.create_1'
    name: create(ServiceCallback<void>)
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function create(callback: ServiceCallback<void>)'
      parameters:
        - id: callback
          type:
            - ServiceCallback<void>
          description: |
            The callback
    package: '@azure/storage-file-datalake'
  - uid: '@azure/storage-file-datalake.FileSystemOperations.deleteMethod_2'
    name: 'deleteMethod(FileSystemDeleteMethodOptionalParams, ServiceCallback<void>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function deleteMethod(options: FileSystemDeleteMethodOptionalParams,
        callback: ServiceCallback<void>)
      parameters:
        - id: options
          type:
            - '@azure/storage-file-datalake.FileSystemDeleteMethodOptionalParams'
          description: The optional parameters
        - id: callback
          type:
            - ServiceCallback<void>
          description: |
            The callback
    package: '@azure/storage-file-datalake'
  - uid: '@azure/storage-file-datalake.FileSystemOperations.deleteMethod'
    name: deleteMethod(Models.FileSystemDeleteMethodOptionalParams)
    children: []
    type: method
    langs:
      - typeScript
    summary: >-
      Marks the FileSystem for deletion.  When a FileSystem is deleted, a
      FileSystem with the same

      identifier cannot be created for at least 30 seconds. While the filesystem
      is being deleted,

      attempts to create a filesystem with the same identifier will fail with
      status code 409

      (Conflict), with the service returning additional error information
      indicating that the

      filesystem is being deleted. All other operations, including operations on
      any files or

      directories within the filesystem, will fail with status code 404 (Not
      Found) while the

      filesystem is being deleted. This operation supports conditional HTTP
      requests.  For more

      information, see [Specifying Conditional Headers for Blob Service

      Operations](https://docs.microsoft.com/en-us/rest/api/storageservices/specifying-conditional-headers-for-blob-service-operations).
    syntax:
      content: >-
        function deleteMethod(options?:
        Models.FileSystemDeleteMethodOptionalParams)
      parameters:
        - id: options
          type:
            - Models.FileSystemDeleteMethodOptionalParams
          description: ''
          optional: true
      return:
        type:
          - Promise<Models.FileSystemDeleteResponse>
        description: Promise<Models.FileSystemDeleteResponse>
    package: '@azure/storage-file-datalake'
  - uid: '@azure/storage-file-datalake.FileSystemOperations.deleteMethod_1'
    name: deleteMethod(ServiceCallback<void>)
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function deleteMethod(callback: ServiceCallback<void>)'
      parameters:
        - id: callback
          type:
            - ServiceCallback<void>
          description: |
            The callback
    package: '@azure/storage-file-datalake'
  - uid: '@azure/storage-file-datalake.FileSystemOperations.constructor'
    name: FileSystemOperations(StorageClientContext)
    children: []
    type: constructor
    langs:
      - typeScript
    summary: Create a FileSystemOperations.
    syntax:
      content: 'new FileSystemOperations(client: StorageClientContext)'
      parameters:
        - id: client
          type:
            - '@azure/storage-file-datalake.StorageClientContext'
          description: |
            Reference to the service client.
    package: '@azure/storage-file-datalake'
  - uid: '@azure/storage-file-datalake.FileSystemOperations.getProperties_2'
    name: >-
      getProperties(FileSystemGetPropertiesOptionalParams,
      ServiceCallback<void>)
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function getProperties(options: FileSystemGetPropertiesOptionalParams,
        callback: ServiceCallback<void>)
      parameters:
        - id: options
          type:
            - '@azure/storage-file-datalake.FileSystemGetPropertiesOptionalParams'
          description: The optional parameters
        - id: callback
          type:
            - ServiceCallback<void>
          description: |
            The callback
    package: '@azure/storage-file-datalake'
  - uid: '@azure/storage-file-datalake.FileSystemOperations.getProperties'
    name: getProperties(Models.FileSystemGetPropertiesOptionalParams)
    children: []
    type: method
    langs:
      - typeScript
    summary: >-
      All system and user-defined filesystem properties are specified in the
      response headers.
    syntax:
      content: >-
        function getProperties(options?:
        Models.FileSystemGetPropertiesOptionalParams)
      parameters:
        - id: options
          type:
            - Models.FileSystemGetPropertiesOptionalParams
          description: ''
          optional: true
      return:
        type:
          - Promise<Models.FileSystemGetPropertiesResponse>
        description: Promise<Models.FileSystemGetPropertiesResponse>
    package: '@azure/storage-file-datalake'
  - uid: '@azure/storage-file-datalake.FileSystemOperations.getProperties_1'
    name: getProperties(ServiceCallback<void>)
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function getProperties(callback: ServiceCallback<void>)'
      parameters:
        - id: callback
          type:
            - ServiceCallback<void>
          description: |
            The callback
    package: '@azure/storage-file-datalake'
  - uid: '@azure/storage-file-datalake.FileSystemOperations.listPaths_2'
    name: >-
      listPaths(boolean, FileSystemListPathsOptionalParams,
      ServiceCallback<PathList>)
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function listPaths(recursive: boolean, options:
        FileSystemListPathsOptionalParams, callback: ServiceCallback<PathList>)
      parameters:
        - id: recursive
          type:
            - boolean
          description: Required
        - id: options
          type:
            - '@azure/storage-file-datalake.FileSystemListPathsOptionalParams'
          description: The optional parameters
        - id: callback
          type:
            - ServiceCallback<@azure/storage-file-datalake.PathList>
          description: |
            The callback
    package: '@azure/storage-file-datalake'
  - uid: '@azure/storage-file-datalake.FileSystemOperations.listPaths'
    name: 'listPaths(boolean, Models.FileSystemListPathsOptionalParams)'
    children: []
    type: method
    langs:
      - typeScript
    summary: List FileSystem paths and their properties.
    syntax:
      content: >-
        function listPaths(recursive: boolean, options?:
        Models.FileSystemListPathsOptionalParams)
      parameters:
        - id: recursive
          type:
            - boolean
          description: Required
        - id: options
          type:
            - Models.FileSystemListPathsOptionalParams
          description: ''
          optional: true
      return:
        type:
          - Promise<Models.FileSystemListPathsResponse>
        description: Promise<Models.FileSystemListPathsResponse>
    package: '@azure/storage-file-datalake'
  - uid: '@azure/storage-file-datalake.FileSystemOperations.listPaths_1'
    name: 'listPaths(boolean, ServiceCallback<PathList>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function listPaths(recursive: boolean, callback:
        ServiceCallback<PathList>)
      parameters:
        - id: recursive
          type:
            - boolean
          description: Required
        - id: callback
          type:
            - ServiceCallback<@azure/storage-file-datalake.PathList>
          description: |
            The callback
    package: '@azure/storage-file-datalake'
  - uid: '@azure/storage-file-datalake.FileSystemOperations.setProperties_2'
    name: >-
      setProperties(FileSystemSetPropertiesOptionalParams,
      ServiceCallback<void>)
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function setProperties(options: FileSystemSetPropertiesOptionalParams,
        callback: ServiceCallback<void>)
      parameters:
        - id: options
          type:
            - '@azure/storage-file-datalake.FileSystemSetPropertiesOptionalParams'
          description: The optional parameters
        - id: callback
          type:
            - ServiceCallback<void>
          description: |
            The callback
    package: '@azure/storage-file-datalake'
  - uid: '@azure/storage-file-datalake.FileSystemOperations.setProperties'
    name: setProperties(Models.FileSystemSetPropertiesOptionalParams)
    children: []
    type: method
    langs:
      - typeScript
    summary: >-
      Set properties for the FileSystem.  This operation supports conditional
      HTTP requests.  For more

      information, see [Specifying Conditional Headers for Blob Service

      Operations](https://docs.microsoft.com/en-us/rest/api/storageservices/specifying-conditional-headers-for-blob-service-operations).
    syntax:
      content: >-
        function setProperties(options?:
        Models.FileSystemSetPropertiesOptionalParams)
      parameters:
        - id: options
          type:
            - Models.FileSystemSetPropertiesOptionalParams
          description: ''
          optional: true
      return:
        type:
          - Promise<Models.FileSystemSetPropertiesResponse>
        description: Promise<Models.FileSystemSetPropertiesResponse>
    package: '@azure/storage-file-datalake'
  - uid: '@azure/storage-file-datalake.FileSystemOperations.setProperties_1'
    name: setProperties(ServiceCallback<void>)
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function setProperties(callback: ServiceCallback<void>)'
      parameters:
        - id: callback
          type:
            - ServiceCallback<void>
          description: |
            The callback
    package: '@azure/storage-file-datalake'
references:
  - uid: '@azure/storage-file-datalake.StorageClientContext'
    name: StorageClientContext
    spec.typeScript:
      - name: StorageClientContext
        fullName: StorageClientContext
        uid: '@azure/storage-file-datalake.StorageClientContext'
  - uid: '@azure/storage-file-datalake.FileSystemCreateOptionalParams'
    name: FileSystemCreateOptionalParams
    spec.typeScript:
      - name: FileSystemCreateOptionalParams
        fullName: FileSystemCreateOptionalParams
        uid: '@azure/storage-file-datalake.FileSystemCreateOptionalParams'
  - uid: '@azure/storage-file-datalake.FileSystemDeleteMethodOptionalParams'
    name: FileSystemDeleteMethodOptionalParams
    spec.typeScript:
      - name: FileSystemDeleteMethodOptionalParams
        fullName: FileSystemDeleteMethodOptionalParams
        uid: '@azure/storage-file-datalake.FileSystemDeleteMethodOptionalParams'
  - uid: '@azure/storage-file-datalake.FileSystemGetPropertiesOptionalParams'
    name: FileSystemGetPropertiesOptionalParams
    spec.typeScript:
      - name: FileSystemGetPropertiesOptionalParams
        fullName: FileSystemGetPropertiesOptionalParams
        uid: '@azure/storage-file-datalake.FileSystemGetPropertiesOptionalParams'
  - uid: ServiceCallback<@azure/storage-file-datalake.PathList>
    name: PathList>
    spec.typeScript:
      - name: ServiceCallback<
        fullName: ServiceCallback<
      - name: PathList
        fullName: PathList
        uid: '@azure/storage-file-datalake.PathList'
      - name: '>'
        fullName: '>'
  - uid: '@azure/storage-file-datalake.FileSystemListPathsOptionalParams'
    name: FileSystemListPathsOptionalParams
    spec.typeScript:
      - name: FileSystemListPathsOptionalParams
        fullName: FileSystemListPathsOptionalParams
        uid: '@azure/storage-file-datalake.FileSystemListPathsOptionalParams'
  - uid: '@azure/storage-file-datalake.FileSystemSetPropertiesOptionalParams'
    name: FileSystemSetPropertiesOptionalParams
    spec.typeScript:
      - name: FileSystemSetPropertiesOptionalParams
        fullName: FileSystemSetPropertiesOptionalParams
        uid: '@azure/storage-file-datalake.FileSystemSetPropertiesOptionalParams'
