### YamlMime:UniversalReference
items:
  - uid: '@azure/abort-controller.PageBlob'
    name: PageBlob
    fullName: PageBlob
    children:
      - '@azure/abort-controller.PageBlob.clearPages'
      - '@azure/abort-controller.PageBlob.clearPages_2'
      - '@azure/abort-controller.PageBlob.clearPages_1'
      - '@azure/abort-controller.PageBlob.copyIncremental'
      - '@azure/abort-controller.PageBlob.copyIncremental_2'
      - '@azure/abort-controller.PageBlob.copyIncremental_1'
      - '@azure/abort-controller.PageBlob.create'
      - '@azure/abort-controller.PageBlob.create_2'
      - '@azure/abort-controller.PageBlob.create_1'
      - '@azure/abort-controller.PageBlob.getPageRanges'
      - '@azure/abort-controller.PageBlob.getPageRanges_2'
      - '@azure/abort-controller.PageBlob.getPageRanges_1'
      - '@azure/abort-controller.PageBlob.getPageRangesDiff'
      - '@azure/abort-controller.PageBlob.getPageRangesDiff_2'
      - '@azure/abort-controller.PageBlob.getPageRangesDiff_1'
      - '@azure/abort-controller.PageBlob.constructor'
      - '@azure/abort-controller.PageBlob.resize'
      - '@azure/abort-controller.PageBlob.resize_2'
      - '@azure/abort-controller.PageBlob.resize_1'
      - '@azure/abort-controller.PageBlob.updateSequenceNumber'
      - '@azure/abort-controller.PageBlob.updateSequenceNumber_2'
      - '@azure/abort-controller.PageBlob.updateSequenceNumber_1'
      - '@azure/abort-controller.PageBlob.uploadPages'
      - '@azure/abort-controller.PageBlob.uploadPages_2'
      - '@azure/abort-controller.PageBlob.uploadPages_1'
      - '@azure/abort-controller.PageBlob.uploadPagesFromURL'
      - '@azure/abort-controller.PageBlob.uploadPagesFromURL_2'
      - '@azure/abort-controller.PageBlob.uploadPagesFromURL_1'
    langs:
      - typeScript
    type: class
    summary: Class representing a PageBlob.
    package: '@azure/abort-controller'
  - uid: '@azure/abort-controller.PageBlob.clearPages'
    name: 'clearPages(number, Models.PageBlobClearPagesOptionalParams)'
    children: []
    type: method
    langs:
      - typeScript
    summary: The Clear Pages operation clears a set of pages from a page blob
    syntax:
      content: >-
        function clearPages(contentLength: number, options?:
        Models.PageBlobClearPagesOptionalParams)
      parameters:
        - id: contentLength
          type:
            - number
          description: The length of the request.
        - id: options
          type:
            - Models.PageBlobClearPagesOptionalParams
          description: ''
          optional: true
      return:
        type:
          - Promise<Models.PageBlobClearPagesResponse>
        description: Promise<Models.PageBlobClearPagesResponse>
    package: '@azure/abort-controller'
  - uid: '@azure/abort-controller.PageBlob.clearPages_2'
    name: >-
      clearPages(number, PageBlobClearPagesOptionalParams,
      ServiceCallback<void>)
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function clearPages(contentLength: number, options:
        PageBlobClearPagesOptionalParams, callback: ServiceCallback<void>)
      parameters:
        - id: contentLength
          type:
            - number
          description: The length of the request.
        - id: options
          type:
            - '@azure/abort-controller.PageBlobClearPagesOptionalParams'
          description: The optional parameters
        - id: callback
          type:
            - '@azure/abort-controller.ServiceCallback<void>'
          description: |
            The callback
    package: '@azure/abort-controller'
  - uid: '@azure/abort-controller.PageBlob.clearPages_1'
    name: 'clearPages(number, ServiceCallback<void>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function clearPages(contentLength: number, callback:
        ServiceCallback<void>)
      parameters:
        - id: contentLength
          type:
            - number
          description: The length of the request.
        - id: callback
          type:
            - '@azure/abort-controller.ServiceCallback<void>'
          description: |
            The callback
    package: '@azure/abort-controller'
  - uid: '@azure/abort-controller.PageBlob.copyIncremental'
    name: 'copyIncremental(string, Models.PageBlobCopyIncrementalOptionalParams)'
    children: []
    type: method
    langs:
      - typeScript
    summary: >-
      The Copy Incremental operation copies a snapshot of the source page blob
      to a destination page

      blob. The snapshot is copied such that only the differential changes
      between the previously

      copied snapshot are transferred to the destination. The copied snapshots
      are complete copies of

      the original snapshot and can be read or copied from as usual. This API is
      supported since REST

      version 2016-05-31.
    syntax:
      content: >-
        function copyIncremental(copySource: string, options?:
        Models.PageBlobCopyIncrementalOptionalParams)
      parameters:
        - id: copySource
          type:
            - string
          description: >-
            Specifies the name of the source page blob snapshot. This value is a
            URL of up

            to 2 KB in length that specifies a page blob snapshot. The value
            should be URL-encoded as it

            would appear in a request URI. The source blob must either be public
            or must be authenticated

            via a shared access signature.
        - id: options
          type:
            - Models.PageBlobCopyIncrementalOptionalParams
          description: ''
          optional: true
      return:
        type:
          - Promise<Models.PageBlobCopyIncrementalResponse>
        description: Promise<Models.PageBlobCopyIncrementalResponse>
    package: '@azure/abort-controller'
  - uid: '@azure/abort-controller.PageBlob.copyIncremental_2'
    name: >-
      copyIncremental(string, PageBlobCopyIncrementalOptionalParams,
      ServiceCallback<void>)
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function copyIncremental(copySource: string, options:
        PageBlobCopyIncrementalOptionalParams, callback: ServiceCallback<void>)
      parameters:
        - id: copySource
          type:
            - string
          description: >-
            Specifies the name of the source page blob snapshot. This value is a
            URL of up

            to 2 KB in length that specifies a page blob snapshot. The value
            should be URL-encoded as it

            would appear in a request URI. The source blob must either be public
            or must be authenticated

            via a shared access signature.
        - id: options
          type:
            - '@azure/abort-controller.PageBlobCopyIncrementalOptionalParams'
          description: The optional parameters
        - id: callback
          type:
            - '@azure/abort-controller.ServiceCallback<void>'
          description: |
            The callback
    package: '@azure/abort-controller'
  - uid: '@azure/abort-controller.PageBlob.copyIncremental_1'
    name: 'copyIncremental(string, ServiceCallback<void>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function copyIncremental(copySource: string, callback:
        ServiceCallback<void>)
      parameters:
        - id: copySource
          type:
            - string
          description: >-
            Specifies the name of the source page blob snapshot. This value is a
            URL of up

            to 2 KB in length that specifies a page blob snapshot. The value
            should be URL-encoded as it

            would appear in a request URI. The source blob must either be public
            or must be authenticated

            via a shared access signature.
        - id: callback
          type:
            - '@azure/abort-controller.ServiceCallback<void>'
          description: |
            The callback
    package: '@azure/abort-controller'
  - uid: '@azure/abort-controller.PageBlob.create'
    name: 'create(number, number, Models.PageBlobCreateOptionalParams)'
    children: []
    type: method
    langs:
      - typeScript
    summary: The Create operation creates a new page blob.
    syntax:
      content: >-
        function create(contentLength: number, blobContentLength: number,
        options?: Models.PageBlobCreateOptionalParams)
      parameters:
        - id: contentLength
          type:
            - number
          description: The length of the request.
        - id: blobContentLength
          type:
            - number
          description: >-
            This header specifies the maximum size for the page blob, up to 1
            TB.

            The page blob size must be aligned to a 512-byte boundary.
        - id: options
          type:
            - Models.PageBlobCreateOptionalParams
          description: ''
          optional: true
      return:
        type:
          - Promise<Models.PageBlobCreateResponse>
        description: Promise<Models.PageBlobCreateResponse>
    package: '@azure/abort-controller'
  - uid: '@azure/abort-controller.PageBlob.create_2'
    name: >-
      create(number, number, PageBlobCreateOptionalParams,
      ServiceCallback<void>)
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function create(contentLength: number, blobContentLength: number,
        options: PageBlobCreateOptionalParams, callback: ServiceCallback<void>)
      parameters:
        - id: contentLength
          type:
            - number
          description: The length of the request.
        - id: blobContentLength
          type:
            - number
          description: >-
            This header specifies the maximum size for the page blob, up to 1
            TB.

            The page blob size must be aligned to a 512-byte boundary.
        - id: options
          type:
            - '@azure/abort-controller.PageBlobCreateOptionalParams'
          description: The optional parameters
        - id: callback
          type:
            - '@azure/abort-controller.ServiceCallback<void>'
          description: |
            The callback
    package: '@azure/abort-controller'
  - uid: '@azure/abort-controller.PageBlob.create_1'
    name: 'create(number, number, ServiceCallback<void>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function create(contentLength: number, blobContentLength: number,
        callback: ServiceCallback<void>)
      parameters:
        - id: contentLength
          type:
            - number
          description: The length of the request.
        - id: blobContentLength
          type:
            - number
          description: >-
            This header specifies the maximum size for the page blob, up to 1
            TB.

            The page blob size must be aligned to a 512-byte boundary.
        - id: callback
          type:
            - '@azure/abort-controller.ServiceCallback<void>'
          description: |
            The callback
    package: '@azure/abort-controller'
  - uid: '@azure/abort-controller.PageBlob.getPageRanges'
    name: getPageRanges(Models.PageBlobGetPageRangesOptionalParams)
    children: []
    type: method
    langs:
      - typeScript
    summary: >-
      The Get Page Ranges operation returns the list of valid page ranges for a
      page blob or snapshot

      of a page blob
    syntax:
      content: >-
        function getPageRanges(options?:
        Models.PageBlobGetPageRangesOptionalParams)
      parameters:
        - id: options
          type:
            - Models.PageBlobGetPageRangesOptionalParams
          description: ''
          optional: true
      return:
        type:
          - Promise<Models.PageBlobGetPageRangesResponse>
        description: Promise<Models.PageBlobGetPageRangesResponse>
    package: '@azure/abort-controller'
  - uid: '@azure/abort-controller.PageBlob.getPageRanges_2'
    name: >-
      getPageRanges(PageBlobGetPageRangesOptionalParams,
      ServiceCallback<PageList>)
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function getPageRanges(options: PageBlobGetPageRangesOptionalParams,
        callback: ServiceCallback<PageList>)
      parameters:
        - id: options
          type:
            - '@azure/abort-controller.PageBlobGetPageRangesOptionalParams'
          description: The optional parameters
        - id: callback
          type:
            - >-
              @azure/abort-controller.ServiceCallback<@azure/abort-controller.PageList>
          description: |
            The callback
    package: '@azure/abort-controller'
  - uid: '@azure/abort-controller.PageBlob.getPageRanges_1'
    name: getPageRanges(ServiceCallback<PageList>)
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function getPageRanges(callback: ServiceCallback<PageList>)'
      parameters:
        - id: callback
          type:
            - >-
              @azure/abort-controller.ServiceCallback<@azure/abort-controller.PageList>
          description: |
            The callback
    package: '@azure/abort-controller'
  - uid: '@azure/abort-controller.PageBlob.getPageRangesDiff'
    name: getPageRangesDiff(Models.PageBlobGetPageRangesDiffOptionalParams)
    children: []
    type: method
    langs:
      - typeScript
    summary: >-
      The Get Page Ranges Diff operation returns the list of valid page ranges
      for a page blob that

      were changed between target blob and previous snapshot.
    syntax:
      content: >-
        function getPageRangesDiff(options?:
        Models.PageBlobGetPageRangesDiffOptionalParams)
      parameters:
        - id: options
          type:
            - Models.PageBlobGetPageRangesDiffOptionalParams
          description: ''
          optional: true
      return:
        type:
          - Promise<Models.PageBlobGetPageRangesDiffResponse>
        description: Promise<Models.PageBlobGetPageRangesDiffResponse>
    package: '@azure/abort-controller'
  - uid: '@azure/abort-controller.PageBlob.getPageRangesDiff_2'
    name: >-
      getPageRangesDiff(PageBlobGetPageRangesDiffOptionalParams,
      ServiceCallback<PageList>)
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function getPageRangesDiff(options:
        PageBlobGetPageRangesDiffOptionalParams, callback:
        ServiceCallback<PageList>)
      parameters:
        - id: options
          type:
            - '@azure/abort-controller.PageBlobGetPageRangesDiffOptionalParams'
          description: The optional parameters
        - id: callback
          type:
            - >-
              @azure/abort-controller.ServiceCallback<@azure/abort-controller.PageList>
          description: |
            The callback
    package: '@azure/abort-controller'
  - uid: '@azure/abort-controller.PageBlob.getPageRangesDiff_1'
    name: getPageRangesDiff(ServiceCallback<PageList>)
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function getPageRangesDiff(callback: ServiceCallback<PageList>)'
      parameters:
        - id: callback
          type:
            - >-
              @azure/abort-controller.ServiceCallback<@azure/abort-controller.PageList>
          description: |
            The callback
    package: '@azure/abort-controller'
  - uid: '@azure/abort-controller.PageBlob.constructor'
    name: PageBlob(StorageClientContext)
    children: []
    type: constructor
    langs:
      - typeScript
    summary: Create a PageBlob.
    syntax:
      content: 'new PageBlob(client: StorageClientContext)'
      parameters:
        - id: client
          type:
            - '@azure/abort-controller.StorageClientContext'
          description: |
            Reference to the service client.
    package: '@azure/abort-controller'
  - uid: '@azure/abort-controller.PageBlob.resize'
    name: 'resize(number, Models.PageBlobResizeOptionalParams)'
    children: []
    type: method
    langs:
      - typeScript
    summary: Resize the Blob
    syntax:
      content: >-
        function resize(blobContentLength: number, options?:
        Models.PageBlobResizeOptionalParams)
      parameters:
        - id: blobContentLength
          type:
            - number
          description: >-
            This header specifies the maximum size for the page blob, up to 1
            TB.

            The page blob size must be aligned to a 512-byte boundary.
        - id: options
          type:
            - Models.PageBlobResizeOptionalParams
          description: ''
          optional: true
      return:
        type:
          - Promise<Models.PageBlobResizeResponse>
        description: Promise<Models.PageBlobResizeResponse>
    package: '@azure/abort-controller'
  - uid: '@azure/abort-controller.PageBlob.resize_2'
    name: 'resize(number, PageBlobResizeOptionalParams, ServiceCallback<void>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function resize(blobContentLength: number, options:
        PageBlobResizeOptionalParams, callback: ServiceCallback<void>)
      parameters:
        - id: blobContentLength
          type:
            - number
          description: >-
            This header specifies the maximum size for the page blob, up to 1
            TB.

            The page blob size must be aligned to a 512-byte boundary.
        - id: options
          type:
            - '@azure/abort-controller.PageBlobResizeOptionalParams'
          description: The optional parameters
        - id: callback
          type:
            - '@azure/abort-controller.ServiceCallback<void>'
          description: |
            The callback
    package: '@azure/abort-controller'
  - uid: '@azure/abort-controller.PageBlob.resize_1'
    name: 'resize(number, ServiceCallback<void>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function resize(blobContentLength: number, callback:
        ServiceCallback<void>)
      parameters:
        - id: blobContentLength
          type:
            - number
          description: >-
            This header specifies the maximum size for the page blob, up to 1
            TB.

            The page blob size must be aligned to a 512-byte boundary.
        - id: callback
          type:
            - '@azure/abort-controller.ServiceCallback<void>'
          description: |
            The callback
    package: '@azure/abort-controller'
  - uid: '@azure/abort-controller.PageBlob.updateSequenceNumber'
    name: >-
      updateSequenceNumber(Models.SequenceNumberActionType,
      Models.PageBlobUpdateSequenceNumberOptionalParams)
    children: []
    type: method
    langs:
      - typeScript
    summary: Update the sequence number of the blob
    syntax:
      content: >-
        function updateSequenceNumber(sequenceNumberAction:
        Models.SequenceNumberActionType, options?:
        Models.PageBlobUpdateSequenceNumberOptionalParams)
      parameters:
        - id: sequenceNumberAction
          type:
            - Models.SequenceNumberActionType
          description: >-
            Required if the x-ms-blob-sequence-number header is set for the

            request. This property applies to page blobs only. This property
            indicates how the service

            should modify the blob's sequence number. Possible values include:
            'max', 'update', 'increment'
        - id: options
          type:
            - Models.PageBlobUpdateSequenceNumberOptionalParams
          description: ''
          optional: true
      return:
        type:
          - Promise<Models.PageBlobUpdateSequenceNumberResponse>
        description: Promise<Models.PageBlobUpdateSequenceNumberResponse>
    package: '@azure/abort-controller'
  - uid: '@azure/abort-controller.PageBlob.updateSequenceNumber_2'
    name: >-
      updateSequenceNumber(Models.SequenceNumberActionType,
      PageBlobUpdateSequenceNumberOptionalParams, ServiceCallback<void>)
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function updateSequenceNumber(sequenceNumberAction:
        Models.SequenceNumberActionType, options:
        PageBlobUpdateSequenceNumberOptionalParams, callback:
        ServiceCallback<void>)
      parameters:
        - id: sequenceNumberAction
          type:
            - Models.SequenceNumberActionType
          description: >-
            Required if the x-ms-blob-sequence-number header is set for the

            request. This property applies to page blobs only. This property
            indicates how the service

            should modify the blob's sequence number. Possible values include:
            'max', 'update', 'increment'
        - id: options
          type:
            - '@azure/abort-controller.PageBlobUpdateSequenceNumberOptionalParams'
          description: The optional parameters
        - id: callback
          type:
            - '@azure/abort-controller.ServiceCallback<void>'
          description: |
            The callback
    package: '@azure/abort-controller'
  - uid: '@azure/abort-controller.PageBlob.updateSequenceNumber_1'
    name: >-
      updateSequenceNumber(Models.SequenceNumberActionType,
      ServiceCallback<void>)
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function updateSequenceNumber(sequenceNumberAction:
        Models.SequenceNumberActionType, callback: ServiceCallback<void>)
      parameters:
        - id: sequenceNumberAction
          type:
            - Models.SequenceNumberActionType
          description: >-
            Required if the x-ms-blob-sequence-number header is set for the

            request. This property applies to page blobs only. This property
            indicates how the service

            should modify the blob's sequence number. Possible values include:
            'max', 'update', 'increment'
        - id: callback
          type:
            - '@azure/abort-controller.ServiceCallback<void>'
          description: |
            The callback
    package: '@azure/abort-controller'
  - uid: '@azure/abort-controller.PageBlob.uploadPages'
    name: >-
      uploadPages(coreHttp.HttpRequestBody, number,
      Models.PageBlobUploadPagesOptionalParams)
    children: []
    type: method
    langs:
      - typeScript
    summary: The Upload Pages operation writes a range of pages to a page blob
    syntax:
      content: >-
        function uploadPages(body: coreHttp.HttpRequestBody, contentLength:
        number, options?: Models.PageBlobUploadPagesOptionalParams)
      parameters:
        - id: body
          type:
            - coreHttp.HttpRequestBody
          description: Initial data
        - id: contentLength
          type:
            - number
          description: The length of the request.
        - id: options
          type:
            - Models.PageBlobUploadPagesOptionalParams
          description: ''
          optional: true
      return:
        type:
          - Promise<Models.PageBlobUploadPagesResponse>
        description: Promise<Models.PageBlobUploadPagesResponse>
    package: '@azure/abort-controller'
  - uid: '@azure/abort-controller.PageBlob.uploadPages_2'
    name: >-
      uploadPages(coreHttp.HttpRequestBody, number,
      PageBlobUploadPagesOptionalParams, ServiceCallback<void>)
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function uploadPages(body: coreHttp.HttpRequestBody, contentLength:
        number, options: PageBlobUploadPagesOptionalParams, callback:
        ServiceCallback<void>)
      parameters:
        - id: body
          type:
            - coreHttp.HttpRequestBody
          description: Initial data
        - id: contentLength
          type:
            - number
          description: The length of the request.
        - id: options
          type:
            - '@azure/abort-controller.PageBlobUploadPagesOptionalParams'
          description: The optional parameters
        - id: callback
          type:
            - '@azure/abort-controller.ServiceCallback<void>'
          description: |
            The callback
    package: '@azure/abort-controller'
  - uid: '@azure/abort-controller.PageBlob.uploadPages_1'
    name: 'uploadPages(coreHttp.HttpRequestBody, number, ServiceCallback<void>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function uploadPages(body: coreHttp.HttpRequestBody, contentLength:
        number, callback: ServiceCallback<void>)
      parameters:
        - id: body
          type:
            - coreHttp.HttpRequestBody
          description: Initial data
        - id: contentLength
          type:
            - number
          description: The length of the request.
        - id: callback
          type:
            - '@azure/abort-controller.ServiceCallback<void>'
          description: |
            The callback
    package: '@azure/abort-controller'
  - uid: '@azure/abort-controller.PageBlob.uploadPagesFromURL'
    name: >-
      uploadPagesFromURL(string, string, number, string,
      Models.PageBlobUploadPagesFromURLOptionalParams)
    children: []
    type: method
    langs:
      - typeScript
    summary: >-
      The Upload Pages operation writes a range of pages to a page blob where
      the contents are read

      from a URL
    syntax:
      content: >-
        function uploadPagesFromURL(sourceUrl: string, sourceRange: string,
        contentLength: number, range: string, options?:
        Models.PageBlobUploadPagesFromURLOptionalParams)
      parameters:
        - id: sourceUrl
          type:
            - string
          description: Specify a URL to the copy source.
        - id: sourceRange
          type:
            - string
          description: >-
            Bytes of source data in the specified range. The length of this
            range should

            match the ContentLength header and x-ms-range/Range destination
            range header.
        - id: contentLength
          type:
            - number
          description: The length of the request.
        - id: range
          type:
            - string
          description: >-
            The range of bytes to which the source range would be written. The
            range should be

            512 aligned and range-end is required.
        - id: options
          type:
            - Models.PageBlobUploadPagesFromURLOptionalParams
          description: ''
          optional: true
      return:
        type:
          - Promise<Models.PageBlobUploadPagesFromURLResponse>
        description: Promise<Models.PageBlobUploadPagesFromURLResponse>
    package: '@azure/abort-controller'
  - uid: '@azure/abort-controller.PageBlob.uploadPagesFromURL_2'
    name: >-
      uploadPagesFromURL(string, string, number, string,
      PageBlobUploadPagesFromURLOptionalParams, ServiceCallback<void>)
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function uploadPagesFromURL(sourceUrl: string, sourceRange: string,
        contentLength: number, range: string, options:
        PageBlobUploadPagesFromURLOptionalParams, callback:
        ServiceCallback<void>)
      parameters:
        - id: sourceUrl
          type:
            - string
          description: Specify a URL to the copy source.
        - id: sourceRange
          type:
            - string
          description: >-
            Bytes of source data in the specified range. The length of this
            range should

            match the ContentLength header and x-ms-range/Range destination
            range header.
        - id: contentLength
          type:
            - number
          description: The length of the request.
        - id: range
          type:
            - string
          description: >-
            The range of bytes to which the source range would be written. The
            range should be

            512 aligned and range-end is required.
        - id: options
          type:
            - '@azure/abort-controller.PageBlobUploadPagesFromURLOptionalParams'
          description: The optional parameters
        - id: callback
          type:
            - '@azure/abort-controller.ServiceCallback<void>'
          description: |
            The callback
    package: '@azure/abort-controller'
  - uid: '@azure/abort-controller.PageBlob.uploadPagesFromURL_1'
    name: 'uploadPagesFromURL(string, string, number, string, ServiceCallback<void>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function uploadPagesFromURL(sourceUrl: string, sourceRange: string,
        contentLength: number, range: string, callback: ServiceCallback<void>)
      parameters:
        - id: sourceUrl
          type:
            - string
          description: Specify a URL to the copy source.
        - id: sourceRange
          type:
            - string
          description: >-
            Bytes of source data in the specified range. The length of this
            range should

            match the ContentLength header and x-ms-range/Range destination
            range header.
        - id: contentLength
          type:
            - number
          description: The length of the request.
        - id: range
          type:
            - string
          description: >-
            The range of bytes to which the source range would be written. The
            range should be

            512 aligned and range-end is required.
        - id: callback
          type:
            - '@azure/abort-controller.ServiceCallback<void>'
          description: |
            The callback
    package: '@azure/abort-controller'
references:
  - uid: '@azure/abort-controller.StorageClientContext'
    name: StorageClientContext
    spec.typeScript:
      - name: StorageClientContext
        fullName: StorageClientContext
        uid: '@azure/abort-controller.StorageClientContext'
  - uid: '@azure/abort-controller.ServiceCallback<void>'
    name: ServiceCallback<void>
    spec.typeScript:
      - name: ServiceCallback
        fullName: ServiceCallback
        uid: '@azure/abort-controller.ServiceCallback'
      - name: <void>
        fullName: <void>
  - uid: '@azure/abort-controller.PageBlobClearPagesOptionalParams'
    name: PageBlobClearPagesOptionalParams
    spec.typeScript:
      - name: PageBlobClearPagesOptionalParams
        fullName: PageBlobClearPagesOptionalParams
        uid: '@azure/abort-controller.PageBlobClearPagesOptionalParams'
  - uid: '@azure/abort-controller.PageBlobCopyIncrementalOptionalParams'
    name: PageBlobCopyIncrementalOptionalParams
    spec.typeScript:
      - name: PageBlobCopyIncrementalOptionalParams
        fullName: PageBlobCopyIncrementalOptionalParams
        uid: '@azure/abort-controller.PageBlobCopyIncrementalOptionalParams'
  - uid: '@azure/abort-controller.PageBlobCreateOptionalParams'
    name: PageBlobCreateOptionalParams
    spec.typeScript:
      - name: PageBlobCreateOptionalParams
        fullName: PageBlobCreateOptionalParams
        uid: '@azure/abort-controller.PageBlobCreateOptionalParams'
  - uid: '@azure/abort-controller.ServiceCallback<@azure/abort-controller.PageList>'
    name: PageList>
    spec.typeScript:
      - name: ServiceCallback
        fullName: ServiceCallback
        uid: '@azure/abort-controller.ServiceCallback'
      - name: <
        fullName: <
      - name: PageList
        fullName: PageList
        uid: '@azure/abort-controller.PageList'
      - name: '>'
        fullName: '>'
  - uid: '@azure/abort-controller.PageBlobGetPageRangesOptionalParams'
    name: PageBlobGetPageRangesOptionalParams
    spec.typeScript:
      - name: PageBlobGetPageRangesOptionalParams
        fullName: PageBlobGetPageRangesOptionalParams
        uid: '@azure/abort-controller.PageBlobGetPageRangesOptionalParams'
  - uid: '@azure/abort-controller.PageBlobGetPageRangesDiffOptionalParams'
    name: PageBlobGetPageRangesDiffOptionalParams
    spec.typeScript:
      - name: PageBlobGetPageRangesDiffOptionalParams
        fullName: PageBlobGetPageRangesDiffOptionalParams
        uid: '@azure/abort-controller.PageBlobGetPageRangesDiffOptionalParams'
  - uid: '@azure/abort-controller.PageBlobResizeOptionalParams'
    name: PageBlobResizeOptionalParams
    spec.typeScript:
      - name: PageBlobResizeOptionalParams
        fullName: PageBlobResizeOptionalParams
        uid: '@azure/abort-controller.PageBlobResizeOptionalParams'
  - uid: '@azure/abort-controller.PageBlobUpdateSequenceNumberOptionalParams'
    name: PageBlobUpdateSequenceNumberOptionalParams
    spec.typeScript:
      - name: PageBlobUpdateSequenceNumberOptionalParams
        fullName: PageBlobUpdateSequenceNumberOptionalParams
        uid: '@azure/abort-controller.PageBlobUpdateSequenceNumberOptionalParams'
  - uid: '@azure/abort-controller.PageBlobUploadPagesOptionalParams'
    name: PageBlobUploadPagesOptionalParams
    spec.typeScript:
      - name: PageBlobUploadPagesOptionalParams
        fullName: PageBlobUploadPagesOptionalParams
        uid: '@azure/abort-controller.PageBlobUploadPagesOptionalParams'
  - uid: '@azure/abort-controller.PageBlobUploadPagesFromURLOptionalParams'
    name: PageBlobUploadPagesFromURLOptionalParams
    spec.typeScript:
      - name: PageBlobUploadPagesFromURLOptionalParams
        fullName: PageBlobUploadPagesFromURLOptionalParams
        uid: '@azure/abort-controller.PageBlobUploadPagesFromURLOptionalParams'
