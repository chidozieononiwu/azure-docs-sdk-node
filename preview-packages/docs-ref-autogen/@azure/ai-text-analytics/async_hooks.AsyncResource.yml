### YamlMime:UniversalReference
items:
  - uid: '@azure/abort-controller.async_hooks.AsyncResource'
    name: AsyncResource
    fullName: AsyncResource
    children:
      - '@azure/abort-controller.async_hooks.AsyncResource.asyncId'
      - '@azure/abort-controller.async_hooks.AsyncResource.constructor'
      - '@azure/abort-controller.async_hooks.AsyncResource.emitDestroy'
      - '@azure/abort-controller.async_hooks.AsyncResource.runInAsyncScope'
      - '@azure/abort-controller.async_hooks.AsyncResource.triggerAsyncId'
    langs:
      - typeScript
    type: class
    summary: >-
      The class AsyncResource was designed to be extended by the embedder's
      async resources.

      Using this users can easily trigger the lifetime events of their own
      resources.
    package: '@azure/abort-controller'
  - uid: '@azure/abort-controller.async_hooks.AsyncResource.asyncId'
    name: asyncId()
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: function asyncId()
      parameters: []
      return:
        type:
          - number
        description: the unique ID assigned to this AsyncResource instance.
    package: '@azure/abort-controller'
  - uid: '@azure/abort-controller.async_hooks.AsyncResource.constructor'
    name: 'AsyncResource(string, number | AsyncResourceOptions)'
    children: []
    type: constructor
    langs:
      - typeScript
    summary: |-
      AsyncResource() is meant to be extended. Instantiating a
      new AsyncResource() also triggers init. If triggerAsyncId is omitted then
      async_hook.executionAsyncId() is used.
    syntax:
      content: >-
        new AsyncResource(type: string, triggerAsyncId?: number |
        AsyncResourceOptions)
      parameters:
        - id: type
          type:
            - string
          description: The type of async event.
        - id: triggerAsyncId
          type:
            - number | @azure/abort-controller.async_hooks.AsyncResourceOptions
          description: |
            The ID of the execution context that created
              this async event (default: `executionAsyncId()`), or an
              AsyncResourceOptions object (since 9.3)
          optional: true
    package: '@azure/abort-controller'
  - uid: '@azure/abort-controller.async_hooks.AsyncResource.emitDestroy'
    name: emitDestroy()
    children: []
    type: method
    langs:
      - typeScript
    summary: Call AsyncHooks destroy callbacks.
    syntax:
      content: function emitDestroy()
      parameters: []
    package: '@azure/abort-controller'
  - uid: '@azure/abort-controller.async_hooks.AsyncResource.runInAsyncScope'
    name: 'runInAsyncScope((this: This, args: any[]) => Result, This, any[])'
    children: []
    type: method
    langs:
      - typeScript
    summary: |-
      Call the provided function with the provided arguments in the
      execution context of the async resource. This will establish the
      context, trigger the AsyncHooks before callbacks, call the function,
      trigger the AsyncHooks after callbacks, and then restore the original
      execution context.
    syntax:
      content: >-
        function runInAsyncScope<This>(fn: (this: This, args: any[]) => Result,
        thisArg?: This, args: any[])
      parameters:
        - id: fn
          type:
            - '(this: This, args: any[]) => Result'
          description: |-
            The function to call in the execution context of this
              async resource.
        - id: thisArg
          type:
            - This
          description: The receiver to be used for the function call.
          optional: true
        - id: args
          type:
            - 'any[]'
          description: |
            Optional arguments to pass to the function.
      return:
        type:
          - Result
        description: ''
    package: '@azure/abort-controller'
  - uid: '@azure/abort-controller.async_hooks.AsyncResource.triggerAsyncId'
    name: triggerAsyncId()
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: function triggerAsyncId()
      parameters: []
      return:
        type:
          - number
        description: the trigger ID for this AsyncResource instance.
    package: '@azure/abort-controller'
references:
  - uid: number | @azure/abort-controller.async_hooks.AsyncResourceOptions
    name: AsyncResourceOptions
    spec.typeScript:
      - name: 'number | '
        fullName: 'number | '
      - name: AsyncResourceOptions
        fullName: AsyncResourceOptions
        uid: '@azure/abort-controller.async_hooks.AsyncResourceOptions'
  - uid: '@azure/abort-controller.async_hooks.HookCallbacks'
    name: HookCallbacks
    spec.typeScript:
      - name: HookCallbacks
        fullName: HookCallbacks
        uid: '@azure/abort-controller.async_hooks.HookCallbacks'
  - uid: '@azure/abort-controller.async_hooks.AsyncHook'
    name: AsyncHook
    spec.typeScript:
      - name: AsyncHook
        fullName: AsyncHook
        uid: '@azure/abort-controller.async_hooks.AsyncHook'
