### YamlMime:UniversalReference
items:
  - uid: '@azure/ms-rest-azure-env.safe-buffer.Buffer'
    name: Buffer
    fullName: Buffer
    children:
      - '@azure/ms-rest-azure-env.safe-buffer.Buffer.alloc'
      - '@azure/ms-rest-azure-env.safe-buffer.Buffer.allocUnsafe'
      - '@azure/ms-rest-azure-env.safe-buffer.Buffer.allocUnsafeSlow'
      - '@azure/ms-rest-azure-env.safe-buffer.Buffer.constructor_4'
      - '@azure/ms-rest-azure-env.safe-buffer.Buffer.constructor_3'
      - '@azure/ms-rest-azure-env.safe-buffer.Buffer.constructor_5'
      - '@azure/ms-rest-azure-env.safe-buffer.Buffer.constructor_1'
      - '@azure/ms-rest-azure-env.safe-buffer.Buffer.constructor'
      - '@azure/ms-rest-azure-env.safe-buffer.Buffer.constructor_2'
      - '@azure/ms-rest-azure-env.safe-buffer.Buffer.byteLength'
      - '@azure/ms-rest-azure-env.safe-buffer.Buffer.compare'
      - '@azure/ms-rest-azure-env.safe-buffer.Buffer.compare'
      - '@azure/ms-rest-azure-env.safe-buffer.Buffer.concat'
      - '@azure/ms-rest-azure-env.safe-buffer.Buffer.copy'
      - '@azure/ms-rest-azure-env.safe-buffer.Buffer.equals'
      - '@azure/ms-rest-azure-env.safe-buffer.Buffer.fill'
      - '@azure/ms-rest-azure-env.safe-buffer.Buffer.from'
      - '@azure/ms-rest-azure-env.safe-buffer.Buffer.from_1'
      - '@azure/ms-rest-azure-env.safe-buffer.Buffer.from_2'
      - '@azure/ms-rest-azure-env.safe-buffer.Buffer.from_3'
      - '@azure/ms-rest-azure-env.safe-buffer.Buffer.includes'
      - '@azure/ms-rest-azure-env.safe-buffer.Buffer.indexOf'
      - '@azure/ms-rest-azure-env.safe-buffer.Buffer.isBuffer'
      - '@azure/ms-rest-azure-env.safe-buffer.Buffer.isEncoding'
      - '@azure/ms-rest-azure-env.safe-buffer.Buffer.lastIndexOf'
      - '@azure/ms-rest-azure-env.safe-buffer.Buffer.length'
      - '@azure/ms-rest-azure-env.safe-buffer.Buffer.prototype'
      - '@azure/ms-rest-azure-env.safe-buffer.Buffer.readDoubleBE'
      - '@azure/ms-rest-azure-env.safe-buffer.Buffer.readDoubleLE'
      - '@azure/ms-rest-azure-env.safe-buffer.Buffer.readFloatBE'
      - '@azure/ms-rest-azure-env.safe-buffer.Buffer.readFloatLE'
      - '@azure/ms-rest-azure-env.safe-buffer.Buffer.readInt16BE'
      - '@azure/ms-rest-azure-env.safe-buffer.Buffer.readInt16LE'
      - '@azure/ms-rest-azure-env.safe-buffer.Buffer.readInt32BE'
      - '@azure/ms-rest-azure-env.safe-buffer.Buffer.readInt32LE'
      - '@azure/ms-rest-azure-env.safe-buffer.Buffer.readInt8'
      - '@azure/ms-rest-azure-env.safe-buffer.Buffer.readIntBE'
      - '@azure/ms-rest-azure-env.safe-buffer.Buffer.readIntLE'
      - '@azure/ms-rest-azure-env.safe-buffer.Buffer.readUInt16BE'
      - '@azure/ms-rest-azure-env.safe-buffer.Buffer.readUInt16LE'
      - '@azure/ms-rest-azure-env.safe-buffer.Buffer.readUInt32BE'
      - '@azure/ms-rest-azure-env.safe-buffer.Buffer.readUInt32LE'
      - '@azure/ms-rest-azure-env.safe-buffer.Buffer.readUInt8'
      - '@azure/ms-rest-azure-env.safe-buffer.Buffer.readUIntBE'
      - '@azure/ms-rest-azure-env.safe-buffer.Buffer.readUIntLE'
      - '@azure/ms-rest-azure-env.safe-buffer.Buffer.slice'
      - '@azure/ms-rest-azure-env.safe-buffer.Buffer.swap16'
      - '@azure/ms-rest-azure-env.safe-buffer.Buffer.swap32'
      - '@azure/ms-rest-azure-env.safe-buffer.Buffer.swap64'
      - '@azure/ms-rest-azure-env.safe-buffer.Buffer.toJSON'
      - '@azure/ms-rest-azure-env.safe-buffer.Buffer.toString'
      - '@azure/ms-rest-azure-env.safe-buffer.Buffer.write'
      - '@azure/ms-rest-azure-env.safe-buffer.Buffer.writeDoubleBE'
      - '@azure/ms-rest-azure-env.safe-buffer.Buffer.writeDoubleLE'
      - '@azure/ms-rest-azure-env.safe-buffer.Buffer.writeFloatBE'
      - '@azure/ms-rest-azure-env.safe-buffer.Buffer.writeFloatLE'
      - '@azure/ms-rest-azure-env.safe-buffer.Buffer.writeInt16BE'
      - '@azure/ms-rest-azure-env.safe-buffer.Buffer.writeInt16LE'
      - '@azure/ms-rest-azure-env.safe-buffer.Buffer.writeInt32BE'
      - '@azure/ms-rest-azure-env.safe-buffer.Buffer.writeInt32LE'
      - '@azure/ms-rest-azure-env.safe-buffer.Buffer.writeInt8'
      - '@azure/ms-rest-azure-env.safe-buffer.Buffer.writeIntBE'
      - '@azure/ms-rest-azure-env.safe-buffer.Buffer.writeIntLE'
      - '@azure/ms-rest-azure-env.safe-buffer.Buffer.writeUInt16BE'
      - '@azure/ms-rest-azure-env.safe-buffer.Buffer.writeUInt16LE'
      - '@azure/ms-rest-azure-env.safe-buffer.Buffer.writeUInt32BE'
      - '@azure/ms-rest-azure-env.safe-buffer.Buffer.writeUInt32LE'
      - '@azure/ms-rest-azure-env.safe-buffer.Buffer.writeUInt8'
      - '@azure/ms-rest-azure-env.safe-buffer.Buffer.writeUIntBE'
      - '@azure/ms-rest-azure-env.safe-buffer.Buffer.writeUIntLE'
    langs:
      - typeScript
    type: class
    summary: ''
    package: '@azure/ms-rest-azure-env'
  - uid: '@azure/ms-rest-azure-env.safe-buffer.Buffer.alloc'
    name: 'alloc(number, string | Buffer | number, undefined | string)'
    children: []
    type: method
    langs:
      - typeScript
    summary: 'Allocates a new buffer of {size} octets.'
    syntax:
      content: >-
        static function alloc(size: number, fill?: string | Buffer | number,
        encoding?: undefined | string)
      parameters:
        - id: size
          type:
            - number
          description: count of octets to allocate.
        - id: fill
          type:
            - string | @azure/ms-rest-azure-env.safe-buffer.Buffer | number
          description: |-
            if specified, buffer will be initialized by calling buf.fill(fill).
               If parameter is omitted, buffer will be filled with zeros.
          optional: true
        - id: encoding
          type:
            - undefined | string
          description: |
            encoding used for call to buf.fill while initalizing
          optional: true
      return:
        type:
          - '@azure/ms-rest-azure-env.safe-buffer.Buffer'
        description: ''
    package: '@azure/ms-rest-azure-env'
  - uid: '@azure/ms-rest-azure-env.safe-buffer.Buffer.allocUnsafe'
    name: allocUnsafe(number)
    children: []
    type: method
    langs:
      - typeScript
    summary: >-
      Allocates a new buffer of {size} octets, leaving memory not initialized,
      so the contents

      of the newly created Buffer are unknown and may contain sensitive data.
    syntax:
      content: 'static function allocUnsafe(size: number)'
      parameters:
        - id: size
          type:
            - number
          description: |
            count of octets to allocate
      return:
        type:
          - '@azure/ms-rest-azure-env.safe-buffer.Buffer'
        description: ''
    package: '@azure/ms-rest-azure-env'
  - uid: '@azure/ms-rest-azure-env.safe-buffer.Buffer.allocUnsafeSlow'
    name: allocUnsafeSlow(number)
    children: []
    type: method
    langs:
      - typeScript
    summary: >-
      Allocates a new non-pooled buffer of {size} octets, leaving memory not
      initialized, so the contents

      of the newly created Buffer are unknown and may contain sensitive data.
    syntax:
      content: 'static function allocUnsafeSlow(size: number)'
      parameters:
        - id: size
          type:
            - number
          description: |
            count of octets to allocate
      return:
        type:
          - '@azure/ms-rest-azure-env.safe-buffer.Buffer'
        description: ''
    package: '@azure/ms-rest-azure-env'
  - uid: '@azure/ms-rest-azure-env.safe-buffer.Buffer.constructor_4'
    name: 'Buffer(any[])'
    children: []
    type: constructor
    langs:
      - typeScript
    summary: 'Allocates a new buffer containing the given {array} of octets.'
    syntax:
      content: 'new Buffer(array: any[])'
      parameters:
        - id: array
          type:
            - 'any[]'
          description: |
            The octets to store.
    package: '@azure/ms-rest-azure-env'
  - uid: '@azure/ms-rest-azure-env.safe-buffer.Buffer.constructor_3'
    name: Buffer(ArrayBuffer)
    children: []
    type: constructor
    langs:
      - typeScript
    summary: |-
      Produces a Buffer backed by the same allocated memory as
      the given {ArrayBuffer}.
    syntax:
      content: 'new Buffer(arrayBuffer: ArrayBuffer)'
      parameters:
        - id: arrayBuffer
          type:
            - ArrayBuffer
          description: |
            The ArrayBuffer with which to share memory.
    package: '@azure/ms-rest-azure-env'
  - uid: '@azure/ms-rest-azure-env.safe-buffer.Buffer.constructor_5'
    name: Buffer(Buffer)
    children: []
    type: constructor
    langs:
      - typeScript
    summary: 'Copies the passed {buffer} data onto a new {Buffer} instance.'
    syntax:
      content: 'new Buffer(buffer: Buffer)'
      parameters:
        - id: buffer
          type:
            - '@azure/ms-rest-azure-env.safe-buffer.Buffer'
          description: |
            The buffer to copy.
    package: '@azure/ms-rest-azure-env'
  - uid: '@azure/ms-rest-azure-env.safe-buffer.Buffer.constructor_1'
    name: Buffer(number)
    children: []
    type: constructor
    langs:
      - typeScript
    summary: 'Allocates a new buffer of {size} octets.'
    syntax:
      content: 'new Buffer(size: number)'
      parameters:
        - id: size
          type:
            - number
          description: |
            count of octets to allocate.
    package: '@azure/ms-rest-azure-env'
  - uid: '@azure/ms-rest-azure-env.safe-buffer.Buffer.constructor'
    name: 'Buffer(string, undefined | string)'
    children: []
    type: constructor
    langs:
      - typeScript
    summary: 'Allocates a new buffer containing the given {str}.'
    syntax:
      content: 'new Buffer(str: string, encoding?: undefined | string)'
      parameters:
        - id: str
          type:
            - string
          description: String to store in buffer.
        - id: encoding
          type:
            - undefined | string
          description: |
            encoding to use, optional.  Default is 'utf8'
          optional: true
    package: '@azure/ms-rest-azure-env'
  - uid: '@azure/ms-rest-azure-env.safe-buffer.Buffer.constructor_2'
    name: Buffer(Uint8Array)
    children: []
    type: constructor
    langs:
      - typeScript
    summary: 'Allocates a new buffer containing the given {array} of octets.'
    syntax:
      content: 'new Buffer(array: Uint8Array)'
      parameters:
        - id: array
          type:
            - Uint8Array
          description: |
            The octets to store.
    package: '@azure/ms-rest-azure-env'
  - uid: '@azure/ms-rest-azure-env.safe-buffer.Buffer.byteLength'
    name: 'byteLength(string, undefined | string)'
    children: []
    type: method
    langs:
      - typeScript
    summary: >-
      Gives the actual byte length of a string. encoding defaults to 'utf8'.

      This is not the same as String.prototype.length since that returns the
      number of characters in a string.
    syntax:
      content: >-
        static function byteLength(string: string, encoding?: undefined |
        string)
      parameters:
        - id: string
          type:
            - string
          description: string to test.
        - id: encoding
          type:
            - undefined | string
          description: |
            encoding used to evaluate (defaults to 'utf8')
          optional: true
      return:
        type:
          - number
        description: ''
    package: '@azure/ms-rest-azure-env'
  - uid: '@azure/ms-rest-azure-env.safe-buffer.Buffer.compare'
    name: 'compare(Buffer, Buffer)'
    children: []
    type: method
    langs:
      - typeScript
    summary: The same as buf1.compare(buf2).
    syntax:
      content: 'static function compare(buf1: Buffer, buf2: Buffer)'
      parameters:
        - id: buf1
          type:
            - '@azure/ms-rest-azure-env.safe-buffer.Buffer'
          description: ''
        - id: buf2
          type:
            - '@azure/ms-rest-azure-env.safe-buffer.Buffer'
          description: ''
      return:
        type:
          - number
        description: ''
    package: '@azure/ms-rest-azure-env'
  - uid: '@azure/ms-rest-azure-env.safe-buffer.Buffer.compare'
    name: >-
      compare(Buffer, undefined | number, undefined | number, undefined |
      number, undefined | number)
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function compare(otherBuffer: Buffer, targetStart?: undefined | number,
        targetEnd?: undefined | number, sourceStart?: undefined | number,
        sourceEnd?: undefined | number)
      parameters:
        - id: otherBuffer
          type:
            - '@azure/ms-rest-azure-env.safe-buffer.Buffer'
          description: ''
        - id: targetStart
          type:
            - undefined | number
          description: ''
          optional: true
        - id: targetEnd
          type:
            - undefined | number
          description: ''
          optional: true
        - id: sourceStart
          type:
            - undefined | number
          description: ''
          optional: true
        - id: sourceEnd
          type:
            - undefined | number
          description: ''
          optional: true
      return:
        type:
          - number
        description: ''
    package: '@azure/ms-rest-azure-env'
  - uid: '@azure/ms-rest-azure-env.safe-buffer.Buffer.concat'
    name: 'concat(Buffer[], undefined | number)'
    children: []
    type: method
    langs:
      - typeScript
    summary: >
      Returns a buffer which is the result of concatenating all the buffers in
      the list together.

      If the list has no items, or if the totalLength is 0, then it returns a
      zero-length buffer.

      If the list has exactly one item, then the first item of the list is
      returned.

      If the list has more than one item, then a new Buffer is created.
    syntax:
      content: 'static function concat(list: Buffer[], totalLength?: undefined | number)'
      parameters:
        - id: list
          type:
            - '@azure/ms-rest-azure-env.safe-buffer.Buffer[]'
          description: An array of Buffer objects to concatenate
        - id: totalLength
          type:
            - undefined | number
          description: |
            Total length of the buffers when concatenated.
              If totalLength is not provided, it is read from the buffers in the list. However, this adds an additional loop to the function, so it is faster to provide the length explicitly.
          optional: true
      return:
        type:
          - '@azure/ms-rest-azure-env.safe-buffer.Buffer'
        description: ''
    package: '@azure/ms-rest-azure-env'
  - uid: '@azure/ms-rest-azure-env.safe-buffer.Buffer.copy'
    name: 'copy(Buffer, undefined | number, undefined | number, undefined | number)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function copy(targetBuffer: Buffer, targetStart?: undefined | number,
        sourceStart?: undefined | number, sourceEnd?: undefined | number)
      parameters:
        - id: targetBuffer
          type:
            - '@azure/ms-rest-azure-env.safe-buffer.Buffer'
          description: ''
        - id: targetStart
          type:
            - undefined | number
          description: ''
          optional: true
        - id: sourceStart
          type:
            - undefined | number
          description: ''
          optional: true
        - id: sourceEnd
          type:
            - undefined | number
          description: ''
          optional: true
      return:
        type:
          - number
        description: ''
    package: '@azure/ms-rest-azure-env'
  - uid: '@azure/ms-rest-azure-env.safe-buffer.Buffer.equals'
    name: equals(Buffer)
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function equals(otherBuffer: Buffer)'
      parameters:
        - id: otherBuffer
          type:
            - '@azure/ms-rest-azure-env.safe-buffer.Buffer'
          description: ''
      return:
        type:
          - boolean
        description: ''
    package: '@azure/ms-rest-azure-env'
  - uid: '@azure/ms-rest-azure-env.safe-buffer.Buffer.fill'
    name: 'fill(any, undefined | number, undefined | number)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function fill(value: any, offset?: undefined | number, end?: undefined |
        number)
      parameters:
        - id: value
          type:
            - any
          description: ''
        - id: offset
          type:
            - undefined | number
          description: ''
          optional: true
        - id: end
          type:
            - undefined | number
          description: ''
          optional: true
      return:
        type:
          - this
        description: ''
    package: '@azure/ms-rest-azure-env'
  - uid: '@azure/ms-rest-azure-env.safe-buffer.Buffer.from'
    name: 'from(any[])'
    children: []
    type: method
    langs:
      - typeScript
    summary: 'Allocates a new Buffer using an {array} of octets.'
    syntax:
      content: 'static function from(array: any[])'
      parameters:
        - id: array
          type:
            - 'any[]'
          description: |+

      return:
        type:
          - '@azure/ms-rest-azure-env.safe-buffer.Buffer'
        description: ''
    package: '@azure/ms-rest-azure-env'
  - uid: '@azure/ms-rest-azure-env.safe-buffer.Buffer.from_1'
    name: 'from(ArrayBuffer, undefined | number, undefined | number)'
    children: []
    type: method
    langs:
      - typeScript
    summary: >-
      When passed a reference to the .buffer property of a TypedArray instance,

      the newly created Buffer will share the same allocated memory as the
      TypedArray.

      The optional {byteOffset} and {length} arguments specify a memory range

      within the {arrayBuffer} that will be shared by the Buffer.
    syntax:
      content: >-
        static function from(arrayBuffer: ArrayBuffer, byteOffset?: undefined |
        number, length?: undefined | number)
      parameters:
        - id: arrayBuffer
          type:
            - ArrayBuffer
          description: The .buffer property of a TypedArray or a new ArrayBuffer()
        - id: byteOffset
          type:
            - undefined | number
          description: ''
          optional: true
        - id: length
          type:
            - undefined | number
          description: |+

          optional: true
      return:
        type:
          - '@azure/ms-rest-azure-env.safe-buffer.Buffer'
        description: ''
    package: '@azure/ms-rest-azure-env'
  - uid: '@azure/ms-rest-azure-env.safe-buffer.Buffer.from_2'
    name: from(Buffer)
    children: []
    type: method
    langs:
      - typeScript
    summary: 'Copies the passed {buffer} data onto a new Buffer instance.'
    syntax:
      content: 'static function from(buffer: Buffer)'
      parameters:
        - id: buffer
          type:
            - '@azure/ms-rest-azure-env.safe-buffer.Buffer'
          description: |+

      return:
        type:
          - '@azure/ms-rest-azure-env.safe-buffer.Buffer'
        description: ''
    package: '@azure/ms-rest-azure-env'
  - uid: '@azure/ms-rest-azure-env.safe-buffer.Buffer.from_3'
    name: 'from(string, undefined | string)'
    children: []
    type: method
    langs:
      - typeScript
    summary: |-
      Creates a new Buffer containing the given JavaScript string {str}.
      If provided, the {encoding} parameter identifies the character encoding.
      If not provided, {encoding} defaults to 'utf8'.
    syntax:
      content: 'static function from(str: string, encoding?: undefined | string)'
      parameters:
        - id: str
          type:
            - string
          description: |+

        - id: encoding
          type:
            - undefined | string
          description: ''
          optional: true
      return:
        type:
          - '@azure/ms-rest-azure-env.safe-buffer.Buffer'
        description: ''
    package: '@azure/ms-rest-azure-env'
  - uid: '@azure/ms-rest-azure-env.safe-buffer.Buffer.includes'
    name: 'includes(string | number | Buffer, undefined | number, undefined | string)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function includes(value: string | number | Buffer, byteOffset?:
        undefined | number, encoding?: undefined | string)
      parameters:
        - id: value
          type:
            - string | number | @azure/ms-rest-azure-env.safe-buffer.Buffer
          description: ''
        - id: byteOffset
          type:
            - undefined | number
          description: ''
          optional: true
        - id: encoding
          type:
            - undefined | string
          description: ''
          optional: true
      return:
        type:
          - boolean
        description: ''
    package: '@azure/ms-rest-azure-env'
  - uid: '@azure/ms-rest-azure-env.safe-buffer.Buffer.indexOf'
    name: 'indexOf(string | number | Buffer, undefined | number, undefined | string)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function indexOf(value: string | number | Buffer, byteOffset?: undefined
        | number, encoding?: undefined | string)
      parameters:
        - id: value
          type:
            - string | number | @azure/ms-rest-azure-env.safe-buffer.Buffer
          description: ''
        - id: byteOffset
          type:
            - undefined | number
          description: ''
          optional: true
        - id: encoding
          type:
            - undefined | string
          description: ''
          optional: true
      return:
        type:
          - number
        description: ''
    package: '@azure/ms-rest-azure-env'
  - uid: '@azure/ms-rest-azure-env.safe-buffer.Buffer.isBuffer'
    name: isBuffer(any)
    children: []
    type: method
    langs:
      - typeScript
    summary: 'Returns true if {obj} is a Buffer'
    syntax:
      content: 'static function isBuffer(obj: any)'
      parameters:
        - id: obj
          type:
            - any
          description: |
            object to test.
      return:
        type:
          - boolean
        description: ''
    package: '@azure/ms-rest-azure-env'
  - uid: '@azure/ms-rest-azure-env.safe-buffer.Buffer.isEncoding'
    name: isEncoding(string)
    children: []
    type: method
    langs:
      - typeScript
    summary: >-
      Returns true if {encoding} is a valid encoding argument.

      Valid string encodings in Node 0.12: 'ascii'|'utf8'|'utf16le'|'ucs2'(alias
      of 'utf16le')|'base64'|'binary'(deprecated)|'hex'
    syntax:
      content: 'static function isEncoding(encoding: string)'
      parameters:
        - id: encoding
          type:
            - string
          description: |
            string to test.
      return:
        type:
          - boolean
        description: ''
    package: '@azure/ms-rest-azure-env'
  - uid: '@azure/ms-rest-azure-env.safe-buffer.Buffer.lastIndexOf'
    name: >-
      lastIndexOf(string | number | Buffer, undefined | number, undefined |
      string)
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function lastIndexOf(value: string | number | Buffer, byteOffset?:
        undefined | number, encoding?: undefined | string)
      parameters:
        - id: value
          type:
            - string | number | @azure/ms-rest-azure-env.safe-buffer.Buffer
          description: ''
        - id: byteOffset
          type:
            - undefined | number
          description: ''
          optional: true
        - id: encoding
          type:
            - undefined | string
          description: ''
          optional: true
      return:
        type:
          - number
        description: ''
    package: '@azure/ms-rest-azure-env'
  - uid: '@azure/ms-rest-azure-env.safe-buffer.Buffer.length'
    name: length
    fullName: length
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    syntax:
      content: 'length: number'
      return:
        type:
          - number
        description: ''
    package: '@azure/ms-rest-azure-env'
  - uid: '@azure/ms-rest-azure-env.safe-buffer.Buffer.prototype'
    name: prototype
    fullName: prototype
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    syntax:
      content: 'prototype: Buffer'
      return:
        type:
          - '@azure/ms-rest-azure-env.safe-buffer.Buffer'
        description: ''
    package: '@azure/ms-rest-azure-env'
  - uid: '@azure/ms-rest-azure-env.safe-buffer.Buffer.readDoubleBE'
    name: 'readDoubleBE(number, undefined | false | true)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function readDoubleBE(offset: number, noAssert?: undefined | false |
        true)
      parameters:
        - id: offset
          type:
            - number
          description: ''
        - id: noAssert
          type:
            - undefined | false | true
          description: ''
          optional: true
      return:
        type:
          - number
        description: ''
    package: '@azure/ms-rest-azure-env'
  - uid: '@azure/ms-rest-azure-env.safe-buffer.Buffer.readDoubleLE'
    name: 'readDoubleLE(number, undefined | false | true)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function readDoubleLE(offset: number, noAssert?: undefined | false |
        true)
      parameters:
        - id: offset
          type:
            - number
          description: ''
        - id: noAssert
          type:
            - undefined | false | true
          description: ''
          optional: true
      return:
        type:
          - number
        description: ''
    package: '@azure/ms-rest-azure-env'
  - uid: '@azure/ms-rest-azure-env.safe-buffer.Buffer.readFloatBE'
    name: 'readFloatBE(number, undefined | false | true)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function readFloatBE(offset: number, noAssert?: undefined | false |
        true)
      parameters:
        - id: offset
          type:
            - number
          description: ''
        - id: noAssert
          type:
            - undefined | false | true
          description: ''
          optional: true
      return:
        type:
          - number
        description: ''
    package: '@azure/ms-rest-azure-env'
  - uid: '@azure/ms-rest-azure-env.safe-buffer.Buffer.readFloatLE'
    name: 'readFloatLE(number, undefined | false | true)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function readFloatLE(offset: number, noAssert?: undefined | false |
        true)
      parameters:
        - id: offset
          type:
            - number
          description: ''
        - id: noAssert
          type:
            - undefined | false | true
          description: ''
          optional: true
      return:
        type:
          - number
        description: ''
    package: '@azure/ms-rest-azure-env'
  - uid: '@azure/ms-rest-azure-env.safe-buffer.Buffer.readInt16BE'
    name: 'readInt16BE(number, undefined | false | true)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function readInt16BE(offset: number, noAssert?: undefined | false |
        true)
      parameters:
        - id: offset
          type:
            - number
          description: ''
        - id: noAssert
          type:
            - undefined | false | true
          description: ''
          optional: true
      return:
        type:
          - number
        description: ''
    package: '@azure/ms-rest-azure-env'
  - uid: '@azure/ms-rest-azure-env.safe-buffer.Buffer.readInt16LE'
    name: 'readInt16LE(number, undefined | false | true)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function readInt16LE(offset: number, noAssert?: undefined | false |
        true)
      parameters:
        - id: offset
          type:
            - number
          description: ''
        - id: noAssert
          type:
            - undefined | false | true
          description: ''
          optional: true
      return:
        type:
          - number
        description: ''
    package: '@azure/ms-rest-azure-env'
  - uid: '@azure/ms-rest-azure-env.safe-buffer.Buffer.readInt32BE'
    name: 'readInt32BE(number, undefined | false | true)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function readInt32BE(offset: number, noAssert?: undefined | false |
        true)
      parameters:
        - id: offset
          type:
            - number
          description: ''
        - id: noAssert
          type:
            - undefined | false | true
          description: ''
          optional: true
      return:
        type:
          - number
        description: ''
    package: '@azure/ms-rest-azure-env'
  - uid: '@azure/ms-rest-azure-env.safe-buffer.Buffer.readInt32LE'
    name: 'readInt32LE(number, undefined | false | true)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function readInt32LE(offset: number, noAssert?: undefined | false |
        true)
      parameters:
        - id: offset
          type:
            - number
          description: ''
        - id: noAssert
          type:
            - undefined | false | true
          description: ''
          optional: true
      return:
        type:
          - number
        description: ''
    package: '@azure/ms-rest-azure-env'
  - uid: '@azure/ms-rest-azure-env.safe-buffer.Buffer.readInt8'
    name: 'readInt8(number, undefined | false | true)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function readInt8(offset: number, noAssert?: undefined | false | true)'
      parameters:
        - id: offset
          type:
            - number
          description: ''
        - id: noAssert
          type:
            - undefined | false | true
          description: ''
          optional: true
      return:
        type:
          - number
        description: ''
    package: '@azure/ms-rest-azure-env'
  - uid: '@azure/ms-rest-azure-env.safe-buffer.Buffer.readIntBE'
    name: 'readIntBE(number, number, undefined | false | true)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function readIntBE(offset: number, byteLength: number, noAssert?:
        undefined | false | true)
      parameters:
        - id: offset
          type:
            - number
          description: ''
        - id: byteLength
          type:
            - number
          description: ''
        - id: noAssert
          type:
            - undefined | false | true
          description: ''
          optional: true
      return:
        type:
          - number
        description: ''
    package: '@azure/ms-rest-azure-env'
  - uid: '@azure/ms-rest-azure-env.safe-buffer.Buffer.readIntLE'
    name: 'readIntLE(number, number, undefined | false | true)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function readIntLE(offset: number, byteLength: number, noAssert?:
        undefined | false | true)
      parameters:
        - id: offset
          type:
            - number
          description: ''
        - id: byteLength
          type:
            - number
          description: ''
        - id: noAssert
          type:
            - undefined | false | true
          description: ''
          optional: true
      return:
        type:
          - number
        description: ''
    package: '@azure/ms-rest-azure-env'
  - uid: '@azure/ms-rest-azure-env.safe-buffer.Buffer.readUInt16BE'
    name: 'readUInt16BE(number, undefined | false | true)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function readUInt16BE(offset: number, noAssert?: undefined | false |
        true)
      parameters:
        - id: offset
          type:
            - number
          description: ''
        - id: noAssert
          type:
            - undefined | false | true
          description: ''
          optional: true
      return:
        type:
          - number
        description: ''
    package: '@azure/ms-rest-azure-env'
  - uid: '@azure/ms-rest-azure-env.safe-buffer.Buffer.readUInt16LE'
    name: 'readUInt16LE(number, undefined | false | true)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function readUInt16LE(offset: number, noAssert?: undefined | false |
        true)
      parameters:
        - id: offset
          type:
            - number
          description: ''
        - id: noAssert
          type:
            - undefined | false | true
          description: ''
          optional: true
      return:
        type:
          - number
        description: ''
    package: '@azure/ms-rest-azure-env'
  - uid: '@azure/ms-rest-azure-env.safe-buffer.Buffer.readUInt32BE'
    name: 'readUInt32BE(number, undefined | false | true)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function readUInt32BE(offset: number, noAssert?: undefined | false |
        true)
      parameters:
        - id: offset
          type:
            - number
          description: ''
        - id: noAssert
          type:
            - undefined | false | true
          description: ''
          optional: true
      return:
        type:
          - number
        description: ''
    package: '@azure/ms-rest-azure-env'
  - uid: '@azure/ms-rest-azure-env.safe-buffer.Buffer.readUInt32LE'
    name: 'readUInt32LE(number, undefined | false | true)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function readUInt32LE(offset: number, noAssert?: undefined | false |
        true)
      parameters:
        - id: offset
          type:
            - number
          description: ''
        - id: noAssert
          type:
            - undefined | false | true
          description: ''
          optional: true
      return:
        type:
          - number
        description: ''
    package: '@azure/ms-rest-azure-env'
  - uid: '@azure/ms-rest-azure-env.safe-buffer.Buffer.readUInt8'
    name: 'readUInt8(number, undefined | false | true)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function readUInt8(offset: number, noAssert?: undefined | false | true)'
      parameters:
        - id: offset
          type:
            - number
          description: ''
        - id: noAssert
          type:
            - undefined | false | true
          description: ''
          optional: true
      return:
        type:
          - number
        description: ''
    package: '@azure/ms-rest-azure-env'
  - uid: '@azure/ms-rest-azure-env.safe-buffer.Buffer.readUIntBE'
    name: 'readUIntBE(number, number, undefined | false | true)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function readUIntBE(offset: number, byteLength: number, noAssert?:
        undefined | false | true)
      parameters:
        - id: offset
          type:
            - number
          description: ''
        - id: byteLength
          type:
            - number
          description: ''
        - id: noAssert
          type:
            - undefined | false | true
          description: ''
          optional: true
      return:
        type:
          - number
        description: ''
    package: '@azure/ms-rest-azure-env'
  - uid: '@azure/ms-rest-azure-env.safe-buffer.Buffer.readUIntLE'
    name: 'readUIntLE(number, number, undefined | false | true)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function readUIntLE(offset: number, byteLength: number, noAssert?:
        undefined | false | true)
      parameters:
        - id: offset
          type:
            - number
          description: ''
        - id: byteLength
          type:
            - number
          description: ''
        - id: noAssert
          type:
            - undefined | false | true
          description: ''
          optional: true
      return:
        type:
          - number
        description: ''
    package: '@azure/ms-rest-azure-env'
  - uid: '@azure/ms-rest-azure-env.safe-buffer.Buffer.slice'
    name: 'slice(undefined | number, undefined | number)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function slice(start?: undefined | number, end?: undefined | number)'
      parameters:
        - id: start
          type:
            - undefined | number
          description: ''
          optional: true
        - id: end
          type:
            - undefined | number
          description: ''
          optional: true
      return:
        type:
          - '@azure/ms-rest-azure-env.safe-buffer.Buffer'
        description: ''
    package: '@azure/ms-rest-azure-env'
  - uid: '@azure/ms-rest-azure-env.safe-buffer.Buffer.swap16'
    name: swap16()
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: function swap16()
      parameters: []
      return:
        type:
          - '@azure/ms-rest-azure-env.safe-buffer.Buffer'
        description: ''
    package: '@azure/ms-rest-azure-env'
  - uid: '@azure/ms-rest-azure-env.safe-buffer.Buffer.swap32'
    name: swap32()
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: function swap32()
      parameters: []
      return:
        type:
          - '@azure/ms-rest-azure-env.safe-buffer.Buffer'
        description: ''
    package: '@azure/ms-rest-azure-env'
  - uid: '@azure/ms-rest-azure-env.safe-buffer.Buffer.swap64'
    name: swap64()
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: function swap64()
      parameters: []
      return:
        type:
          - '@azure/ms-rest-azure-env.safe-buffer.Buffer'
        description: ''
    package: '@azure/ms-rest-azure-env'
  - uid: '@azure/ms-rest-azure-env.safe-buffer.Buffer.toJSON'
    name: toJSON()
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: function toJSON()
      parameters: []
      return:
        type:
          - Object
        description: ''
    package: '@azure/ms-rest-azure-env'
  - uid: '@azure/ms-rest-azure-env.safe-buffer.Buffer.toString'
    name: 'toString(undefined | string, undefined | number, undefined | number)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function toString(encoding?: undefined | string, start?: undefined |
        number, end?: undefined | number)
      parameters:
        - id: encoding
          type:
            - undefined | string
          description: ''
          optional: true
        - id: start
          type:
            - undefined | number
          description: ''
          optional: true
        - id: end
          type:
            - undefined | number
          description: ''
          optional: true
      return:
        type:
          - string
        description: ''
    package: '@azure/ms-rest-azure-env'
  - uid: '@azure/ms-rest-azure-env.safe-buffer.Buffer.write'
    name: 'write(string, undefined | number, undefined | number, undefined | string)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function write(string: string, offset?: undefined | number, length?:
        undefined | number, encoding?: undefined | string)
      parameters:
        - id: string
          type:
            - string
          description: ''
        - id: offset
          type:
            - undefined | number
          description: ''
          optional: true
        - id: length
          type:
            - undefined | number
          description: ''
          optional: true
        - id: encoding
          type:
            - undefined | string
          description: ''
          optional: true
      return:
        type:
          - number
        description: ''
    package: '@azure/ms-rest-azure-env'
  - uid: '@azure/ms-rest-azure-env.safe-buffer.Buffer.writeDoubleBE'
    name: 'writeDoubleBE(number, number, undefined | false | true)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function writeDoubleBE(value: number, offset: number, noAssert?:
        undefined | false | true)
      parameters:
        - id: value
          type:
            - number
          description: ''
        - id: offset
          type:
            - number
          description: ''
        - id: noAssert
          type:
            - undefined | false | true
          description: ''
          optional: true
      return:
        type:
          - number
        description: ''
    package: '@azure/ms-rest-azure-env'
  - uid: '@azure/ms-rest-azure-env.safe-buffer.Buffer.writeDoubleLE'
    name: 'writeDoubleLE(number, number, undefined | false | true)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function writeDoubleLE(value: number, offset: number, noAssert?:
        undefined | false | true)
      parameters:
        - id: value
          type:
            - number
          description: ''
        - id: offset
          type:
            - number
          description: ''
        - id: noAssert
          type:
            - undefined | false | true
          description: ''
          optional: true
      return:
        type:
          - number
        description: ''
    package: '@azure/ms-rest-azure-env'
  - uid: '@azure/ms-rest-azure-env.safe-buffer.Buffer.writeFloatBE'
    name: 'writeFloatBE(number, number, undefined | false | true)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function writeFloatBE(value: number, offset: number, noAssert?:
        undefined | false | true)
      parameters:
        - id: value
          type:
            - number
          description: ''
        - id: offset
          type:
            - number
          description: ''
        - id: noAssert
          type:
            - undefined | false | true
          description: ''
          optional: true
      return:
        type:
          - number
        description: ''
    package: '@azure/ms-rest-azure-env'
  - uid: '@azure/ms-rest-azure-env.safe-buffer.Buffer.writeFloatLE'
    name: 'writeFloatLE(number, number, undefined | false | true)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function writeFloatLE(value: number, offset: number, noAssert?:
        undefined | false | true)
      parameters:
        - id: value
          type:
            - number
          description: ''
        - id: offset
          type:
            - number
          description: ''
        - id: noAssert
          type:
            - undefined | false | true
          description: ''
          optional: true
      return:
        type:
          - number
        description: ''
    package: '@azure/ms-rest-azure-env'
  - uid: '@azure/ms-rest-azure-env.safe-buffer.Buffer.writeInt16BE'
    name: 'writeInt16BE(number, number, undefined | false | true)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function writeInt16BE(value: number, offset: number, noAssert?:
        undefined | false | true)
      parameters:
        - id: value
          type:
            - number
          description: ''
        - id: offset
          type:
            - number
          description: ''
        - id: noAssert
          type:
            - undefined | false | true
          description: ''
          optional: true
      return:
        type:
          - number
        description: ''
    package: '@azure/ms-rest-azure-env'
  - uid: '@azure/ms-rest-azure-env.safe-buffer.Buffer.writeInt16LE'
    name: 'writeInt16LE(number, number, undefined | false | true)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function writeInt16LE(value: number, offset: number, noAssert?:
        undefined | false | true)
      parameters:
        - id: value
          type:
            - number
          description: ''
        - id: offset
          type:
            - number
          description: ''
        - id: noAssert
          type:
            - undefined | false | true
          description: ''
          optional: true
      return:
        type:
          - number
        description: ''
    package: '@azure/ms-rest-azure-env'
  - uid: '@azure/ms-rest-azure-env.safe-buffer.Buffer.writeInt32BE'
    name: 'writeInt32BE(number, number, undefined | false | true)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function writeInt32BE(value: number, offset: number, noAssert?:
        undefined | false | true)
      parameters:
        - id: value
          type:
            - number
          description: ''
        - id: offset
          type:
            - number
          description: ''
        - id: noAssert
          type:
            - undefined | false | true
          description: ''
          optional: true
      return:
        type:
          - number
        description: ''
    package: '@azure/ms-rest-azure-env'
  - uid: '@azure/ms-rest-azure-env.safe-buffer.Buffer.writeInt32LE'
    name: 'writeInt32LE(number, number, undefined | false | true)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function writeInt32LE(value: number, offset: number, noAssert?:
        undefined | false | true)
      parameters:
        - id: value
          type:
            - number
          description: ''
        - id: offset
          type:
            - number
          description: ''
        - id: noAssert
          type:
            - undefined | false | true
          description: ''
          optional: true
      return:
        type:
          - number
        description: ''
    package: '@azure/ms-rest-azure-env'
  - uid: '@azure/ms-rest-azure-env.safe-buffer.Buffer.writeInt8'
    name: 'writeInt8(number, number, undefined | false | true)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function writeInt8(value: number, offset: number, noAssert?: undefined |
        false | true)
      parameters:
        - id: value
          type:
            - number
          description: ''
        - id: offset
          type:
            - number
          description: ''
        - id: noAssert
          type:
            - undefined | false | true
          description: ''
          optional: true
      return:
        type:
          - number
        description: ''
    package: '@azure/ms-rest-azure-env'
  - uid: '@azure/ms-rest-azure-env.safe-buffer.Buffer.writeIntBE'
    name: 'writeIntBE(number, number, number, undefined | false | true)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function writeIntBE(value: number, offset: number, byteLength: number,
        noAssert?: undefined | false | true)
      parameters:
        - id: value
          type:
            - number
          description: ''
        - id: offset
          type:
            - number
          description: ''
        - id: byteLength
          type:
            - number
          description: ''
        - id: noAssert
          type:
            - undefined | false | true
          description: ''
          optional: true
      return:
        type:
          - number
        description: ''
    package: '@azure/ms-rest-azure-env'
  - uid: '@azure/ms-rest-azure-env.safe-buffer.Buffer.writeIntLE'
    name: 'writeIntLE(number, number, number, undefined | false | true)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function writeIntLE(value: number, offset: number, byteLength: number,
        noAssert?: undefined | false | true)
      parameters:
        - id: value
          type:
            - number
          description: ''
        - id: offset
          type:
            - number
          description: ''
        - id: byteLength
          type:
            - number
          description: ''
        - id: noAssert
          type:
            - undefined | false | true
          description: ''
          optional: true
      return:
        type:
          - number
        description: ''
    package: '@azure/ms-rest-azure-env'
  - uid: '@azure/ms-rest-azure-env.safe-buffer.Buffer.writeUInt16BE'
    name: 'writeUInt16BE(number, number, undefined | false | true)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function writeUInt16BE(value: number, offset: number, noAssert?:
        undefined | false | true)
      parameters:
        - id: value
          type:
            - number
          description: ''
        - id: offset
          type:
            - number
          description: ''
        - id: noAssert
          type:
            - undefined | false | true
          description: ''
          optional: true
      return:
        type:
          - number
        description: ''
    package: '@azure/ms-rest-azure-env'
  - uid: '@azure/ms-rest-azure-env.safe-buffer.Buffer.writeUInt16LE'
    name: 'writeUInt16LE(number, number, undefined | false | true)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function writeUInt16LE(value: number, offset: number, noAssert?:
        undefined | false | true)
      parameters:
        - id: value
          type:
            - number
          description: ''
        - id: offset
          type:
            - number
          description: ''
        - id: noAssert
          type:
            - undefined | false | true
          description: ''
          optional: true
      return:
        type:
          - number
        description: ''
    package: '@azure/ms-rest-azure-env'
  - uid: '@azure/ms-rest-azure-env.safe-buffer.Buffer.writeUInt32BE'
    name: 'writeUInt32BE(number, number, undefined | false | true)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function writeUInt32BE(value: number, offset: number, noAssert?:
        undefined | false | true)
      parameters:
        - id: value
          type:
            - number
          description: ''
        - id: offset
          type:
            - number
          description: ''
        - id: noAssert
          type:
            - undefined | false | true
          description: ''
          optional: true
      return:
        type:
          - number
        description: ''
    package: '@azure/ms-rest-azure-env'
  - uid: '@azure/ms-rest-azure-env.safe-buffer.Buffer.writeUInt32LE'
    name: 'writeUInt32LE(number, number, undefined | false | true)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function writeUInt32LE(value: number, offset: number, noAssert?:
        undefined | false | true)
      parameters:
        - id: value
          type:
            - number
          description: ''
        - id: offset
          type:
            - number
          description: ''
        - id: noAssert
          type:
            - undefined | false | true
          description: ''
          optional: true
      return:
        type:
          - number
        description: ''
    package: '@azure/ms-rest-azure-env'
  - uid: '@azure/ms-rest-azure-env.safe-buffer.Buffer.writeUInt8'
    name: 'writeUInt8(number, number, undefined | false | true)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function writeUInt8(value: number, offset: number, noAssert?: undefined
        | false | true)
      parameters:
        - id: value
          type:
            - number
          description: ''
        - id: offset
          type:
            - number
          description: ''
        - id: noAssert
          type:
            - undefined | false | true
          description: ''
          optional: true
      return:
        type:
          - number
        description: ''
    package: '@azure/ms-rest-azure-env'
  - uid: '@azure/ms-rest-azure-env.safe-buffer.Buffer.writeUIntBE'
    name: 'writeUIntBE(number, number, number, undefined | false | true)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function writeUIntBE(value: number, offset: number, byteLength: number,
        noAssert?: undefined | false | true)
      parameters:
        - id: value
          type:
            - number
          description: ''
        - id: offset
          type:
            - number
          description: ''
        - id: byteLength
          type:
            - number
          description: ''
        - id: noAssert
          type:
            - undefined | false | true
          description: ''
          optional: true
      return:
        type:
          - number
        description: ''
    package: '@azure/ms-rest-azure-env'
  - uid: '@azure/ms-rest-azure-env.safe-buffer.Buffer.writeUIntLE'
    name: 'writeUIntLE(number, number, number, undefined | false | true)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function writeUIntLE(value: number, offset: number, byteLength: number,
        noAssert?: undefined | false | true)
      parameters:
        - id: value
          type:
            - number
          description: ''
        - id: offset
          type:
            - number
          description: ''
        - id: byteLength
          type:
            - number
          description: ''
        - id: noAssert
          type:
            - undefined | false | true
          description: ''
          optional: true
      return:
        type:
          - number
        description: ''
    package: '@azure/ms-rest-azure-env'
references:
  - uid: '@azure/ms-rest-azure-env.safe-buffer.Buffer'
    name: Buffer
    spec.typeScript:
      - name: Buffer
        fullName: Buffer
        uid: '@azure/ms-rest-azure-env.safe-buffer.Buffer'
  - uid: string | number | @azure/ms-rest-azure-env.safe-buffer.Buffer
    name: Buffer
    spec.typeScript:
      - name: 'string | number | '
        fullName: 'string | number | '
      - name: Buffer
        fullName: Buffer
        uid: '@azure/ms-rest-azure-env.safe-buffer.Buffer'
  - uid: string | @azure/ms-rest-azure-env.safe-buffer.Buffer | number
    name: Buffer | number
    spec.typeScript:
      - name: 'string | '
        fullName: 'string | '
      - name: Buffer
        fullName: Buffer
        uid: '@azure/ms-rest-azure-env.safe-buffer.Buffer'
      - name: ' | number'
        fullName: ' | number'
  - uid: '@azure/ms-rest-azure-env.safe-buffer.Buffer[]'
    name: 'Buffer[]'
    spec.typeScript:
      - name: Buffer
        fullName: Buffer
        uid: '@azure/ms-rest-azure-env.safe-buffer.Buffer'
      - name: '[]'
        fullName: '[]'
