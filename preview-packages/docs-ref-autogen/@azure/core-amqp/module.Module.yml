### YamlMime:UniversalReference
items:
  - uid: tslib.module.Module
    name: Module
    fullName: Module
    children:
      - tslib.module.Module.builtinModules
      - tslib.module.Module.children
      - tslib.module.Module.createRequire
      - tslib.module.Module.createRequireFromPath
      - tslib.module.Module.exports
      - tslib.module.Module.filename
      - tslib.module.Module.findSourceMap
      - tslib.module.Module.id
      - tslib.module.Module.loaded
      - tslib.module.Module.Module
      - tslib.module.Module.constructor
      - tslib.module.Module.parent
      - tslib.module.Module.paths
      - tslib.module.Module.require
      - tslib.module.Module.runMain
      - tslib.module.Module.SourceMap
      - tslib.module.Module.SourceMapPayload
      - tslib.module.Module.SourceMapping
      - tslib.module.Module.syncBuiltinESMExports
      - tslib.module.Module.wrap
    langs:
      - typeScript
    type: class
    summary: ''
    extends:
      name: tslib.NodeModule
    package: tslib
  - uid: tslib.module.Module.builtinModules
    name: builtinModules
    fullName: builtinModules
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    syntax:
      content: 'static builtinModules: string[]'
      return:
        type:
          - 'string[]'
        description: ''
    package: tslib
  - uid: tslib.module.Module.children
    name: children
    fullName: children
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    syntax:
      content: 'children: Module[]'
      return:
        type:
          - 'tslib.NodeJS.Module[]'
        description: ''
    package: tslib
  - uid: tslib.module.Module.createRequire
    name: createRequire(string | URL)
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'static function createRequire(path: string | URL)'
      parameters:
        - id: path
          type:
            - string | tslib.url.URL
          description: ''
      return:
        type:
          - tslib.NodeRequire
        description: ''
    package: tslib
  - uid: tslib.module.Module.createRequireFromPath
    name: createRequireFromPath(string)
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'static function createRequireFromPath(path: string)'
      parameters:
        - id: path
          type:
            - string
          description: ''
      return:
        type:
          - tslib.NodeRequire
        description: ''
    package: tslib
    deprecated:
      content: 'Deprecated since: v12.2.0. Please use createRequire() instead.'
  - uid: tslib.module.Module.exports
    name: exports
    fullName: exports
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    syntax:
      content: 'exports: any'
      return:
        type:
          - any
        description: ''
    package: tslib
  - uid: tslib.module.Module.filename
    name: filename
    fullName: filename
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    syntax:
      content: 'filename: string'
      return:
        type:
          - string
        description: ''
    package: tslib
  - uid: tslib.module.Module.findSourceMap
    name: 'findSourceMap(string, Error)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'static function findSourceMap(path: string, error?: Error)'
      parameters:
        - id: path
          type:
            - string
          description: ''
        - id: error
          type:
            - tslib.AbortError.Error
          description: ''
          optional: true
      return:
        type:
          - tslib.module.Module.SourceMap
        description: ''
    package: tslib
  - uid: tslib.module.Module.id
    name: id
    fullName: id
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    syntax:
      content: 'id: string'
      return:
        type:
          - string
        description: ''
    package: tslib
  - uid: tslib.module.Module.loaded
    name: loaded
    fullName: loaded
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    syntax:
      content: 'loaded: boolean'
      return:
        type:
          - boolean
        description: ''
    package: tslib
  - uid: tslib.module.Module.Module
    name: Module
    fullName: Module
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    syntax:
      content: 'static Module: Module'
      return:
        type:
          - tslib.module.Module
        description: ''
    package: tslib
  - uid: tslib.module.Module.constructor
    name: 'Module(string, Module)'
    children: []
    type: constructor
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'new Module(id: string, parent?: Module)'
      parameters:
        - id: id
          type:
            - string
          description: ''
        - id: parent
          type:
            - tslib.module.Module.Module
          description: ''
          optional: true
    package: tslib
  - uid: tslib.module.Module.parent
    name: parent
    fullName: parent
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    syntax:
      content: 'parent: Module | null'
      return:
        type:
          - tslib.NodeJS.Module | null
        description: ''
    package: tslib
  - uid: tslib.module.Module.paths
    name: paths
    fullName: paths
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    syntax:
      content: 'paths: string[]'
      return:
        type:
          - 'string[]'
        description: ''
    package: tslib
  - uid: tslib.module.Module.require
    name: require
    fullName: require
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    syntax:
      content: 'require: Require'
      return:
        type:
          - tslib.NodeJS.Require
        description: ''
    package: tslib
  - uid: tslib.module.Module.runMain
    name: runMain()
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: static function runMain()
      parameters: []
    package: tslib
  - uid: tslib.module.Module.syncBuiltinESMExports
    name: syncBuiltinESMExports()
    children: []
    type: method
    langs:
      - typeScript
    summary: >-
      Updates all the live bindings for builtin ES Modules to match the
      properties of the CommonJS exports.

      It does not add or remove exported names from the ES Modules.
    syntax:
      content: static function syncBuiltinESMExports()
      parameters: []
    package: tslib
  - uid: tslib.module.Module.wrap
    name: wrap(string)
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'static function wrap(code: string)'
      parameters:
        - id: code
          type:
            - string
          description: ''
      return:
        type:
          - string
        description: ''
    package: tslib
references:
  - uid: tslib.NodeModule
    name: NodeModule
    spec.typeScript:
      - name: NodeModule
        fullName: NodeModule
        uid: tslib.NodeModule
  - uid: tslib.module.Module.SourceMapPayload
    name: SourceMapPayload
    spec.typeScript:
      - name: SourceMapPayload
        fullName: SourceMapPayload
        uid: tslib.module.Module.SourceMapPayload
  - uid: tslib.module.Module.SourceMapping
    name: SourceMapping
    spec.typeScript:
      - name: SourceMapping
        fullName: SourceMapping
        uid: tslib.module.Module.SourceMapping
  - uid: tslib.module.Module.Module
    name: Module
    spec.typeScript:
      - name: Module
        fullName: Module
        uid: tslib.module.Module.Module
  - uid: 'tslib.NodeJS.Module[]'
    name: 'Module[]'
    spec.typeScript:
      - name: Module
        fullName: Module
        uid: tslib.NodeJS.Module
      - name: '[]'
        fullName: '[]'
  - uid: tslib.NodeJS.Module | null
    name: Module | null
    spec.typeScript:
      - name: Module
        fullName: Module
        uid: tslib.NodeJS.Module
      - name: ' | null'
        fullName: ' | null'
  - uid: tslib.NodeJS.Require
    name: Require
    spec.typeScript:
      - name: Require
        fullName: Require
        uid: tslib.NodeJS.Require
  - uid: tslib.module.Module
    name: Module
    spec.typeScript:
      - name: Module
        fullName: Module
        uid: tslib.module.Module
  - uid: string | tslib.url.URL
    name: URL
    spec.typeScript:
      - name: 'string | '
        fullName: 'string | '
      - name: URL
        fullName: URL
        uid: tslib.url.URL
  - uid: tslib.NodeRequire
    name: NodeRequire
    spec.typeScript:
      - name: NodeRequire
        fullName: NodeRequire
        uid: tslib.NodeRequire
  - uid: tslib.AbortError.Error
    name: Error
    spec.typeScript:
      - name: Error
        fullName: Error
        uid: tslib.AbortError.Error
  - uid: tslib.module.Module.SourceMap
    name: SourceMap
    spec.typeScript:
      - name: SourceMap
        fullName: SourceMap
        uid: tslib.module.Module.SourceMap
