### YamlMime:UniversalReference
items:
  - uid: tslib.StatsEventListener
    name: StatsEventListener
    fullName: StatsEventListener
    children:
      - tslib.StatsEventListener.onRecord
      - tslib.StatsEventListener.onRegisterView
      - tslib.StatsEventListener.start
      - tslib.StatsEventListener.stop
    langs:
      - typeScript
    type: interface
    summary: >-
      An interface that describes the possible events that will be emitted from
      a

      Stats instance. Stats exporters should implement this interface.
    package: tslib
  - uid: tslib.StatsEventListener.onRecord
    name: 'onRecord(View[], Measurement, Map<TagKey, TagValue>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: Is called whenever a new measurement is recorded.
    syntax:
      content: >-
        function onRecord(views: View[], measurement: Measurement, tags:
        Map<TagKey, TagValue>)
      parameters:
        - id: views
          type:
            - 'tslib.View[]'
          description: The views related to the measurement
        - id: measurement
          type:
            - tslib.Measurement
          description: The recorded measurement
        - id: tags
          type:
            - 'Map<tslib.TagKey, tslib.TagValue>'
          description: |
            The tags to which the value is applied
    package: tslib
    deprecated:
      content: 'since version 0.0.9 - use <xref:start> instead'
  - uid: tslib.StatsEventListener.onRegisterView
    name: onRegisterView(View)
    children: []
    type: method
    langs:
      - typeScript
    summary: Is called whenever a new view is registered
    syntax:
      content: 'function onRegisterView(view: View)'
      parameters:
        - id: view
          type:
            - tslib.View
          description: |
            The registered view
    package: tslib
    deprecated:
      content: 'since version 0.0.9 - use <xref:start> instead'
  - uid: tslib.StatsEventListener.start
    name: start()
    children: []
    type: method
    langs:
      - typeScript
    summary: |-
      Starts the exporter that polls Metric from Metrics library and send
      batched data to backend.
    syntax:
      content: function start()
      parameters: []
    package: tslib
  - uid: tslib.StatsEventListener.stop
    name: stop()
    children: []
    type: method
    langs:
      - typeScript
    summary: Stops the exporter.
    syntax:
      content: function stop()
      parameters: []
    package: tslib
references:
  - uid: 'tslib.View[]'
    name: 'View[]'
    spec.typeScript:
      - name: View
        fullName: View
        uid: tslib.View
      - name: '[]'
        fullName: '[]'
  - uid: tslib.Measurement
    name: Measurement
    spec.typeScript:
      - name: Measurement
        fullName: Measurement
        uid: tslib.Measurement
  - uid: 'Map<tslib.TagKey, tslib.TagValue>'
    name: TagValue>
    spec.typeScript:
      - name: Map<
        fullName: Map<
      - name: TagKey
        fullName: TagKey
        uid: tslib.TagKey
      - name: ', '
        fullName: ', '
      - name: TagValue
        fullName: TagValue
        uid: tslib.TagValue
      - name: '>'
        fullName: '>'
  - uid: tslib.View
    name: View
    spec.typeScript:
      - name: View
        fullName: View
        uid: tslib.View
