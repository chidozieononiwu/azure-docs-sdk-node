### YamlMime:UniversalReference
items:
  - uid: microsoft-speech-browser-sdk.Promise
    name: Promise
    fullName: Promise<T>
    children:
      - microsoft-speech-browser-sdk.Promise.ContinueWith
      - microsoft-speech-browser-sdk.Promise.ContinueWithPromise
      - microsoft-speech-browser-sdk.Promise.Finally
      - microsoft-speech-browser-sdk.Promise.On
      - microsoft-speech-browser-sdk.Promise.OnSuccessContinueWith
      - microsoft-speech-browser-sdk.Promise.OnSuccessContinueWithPromise
      - microsoft-speech-browser-sdk.Promise.constructor
      - microsoft-speech-browser-sdk.Promise.Result
    langs:
      - typeScript
    type: class
    summary: ''
    package: microsoft-speech-browser-sdk
  - uid: microsoft-speech-browser-sdk.Promise.ContinueWith
    name: ContinueWith
    fullName: ContinueWith
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    syntax:
      content: >-
        ContinueWith: (continuationCallback: (promiseResult: PromiseResult<T>)
        => TContinuationResult) => Promise<TContinuationResult>
      return:
        type:
          - >-
            (continuationCallback: (promiseResult: PromiseResult<T>) =>
            TContinuationResult) => Promise<TContinuationResult>
        description: ''
    package: microsoft-speech-browser-sdk
  - uid: microsoft-speech-browser-sdk.Promise.ContinueWithPromise
    name: ContinueWithPromise
    fullName: ContinueWithPromise
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    syntax:
      content: >-
        ContinueWithPromise: (continuationCallback: (promiseResult:
        PromiseResult<T>) => Promise<TContinuationResult>) =>
        Promise<TContinuationResult>
      return:
        type:
          - >-
            (continuationCallback: (promiseResult: PromiseResult<T>) =>
            Promise<TContinuationResult>) => Promise<TContinuationResult>
        description: ''
    package: microsoft-speech-browser-sdk
  - uid: microsoft-speech-browser-sdk.Promise.Finally
    name: Finally
    fullName: Finally
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    syntax:
      content: 'Finally: (callback: () => void) => Promise<T>'
      return:
        type:
          - '(callback: () => void) => Promise<T>'
        description: ''
    package: microsoft-speech-browser-sdk
  - uid: microsoft-speech-browser-sdk.Promise.On
    name: 'On'
    fullName: 'On'
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    syntax:
      content: >-
        On: (successCallback: (result: T) => void, errorCallback: (error:
        string) => void) => Promise<T>
      return:
        type:
          - >-
            (successCallback: (result: T) => void, errorCallback: (error:
            string) => void) => Promise<T>
        description: ''
    package: microsoft-speech-browser-sdk
  - uid: microsoft-speech-browser-sdk.Promise.OnSuccessContinueWith
    name: OnSuccessContinueWith
    fullName: OnSuccessContinueWith
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    syntax:
      content: >-
        OnSuccessContinueWith: (continuationCallback: (result: T) =>
        TContinuationResult) => Promise<TContinuationResult>
      return:
        type:
          - >-
            (continuationCallback: (result: T) => TContinuationResult) =>
            Promise<TContinuationResult>
        description: ''
    package: microsoft-speech-browser-sdk
  - uid: microsoft-speech-browser-sdk.Promise.OnSuccessContinueWithPromise
    name: OnSuccessContinueWithPromise
    fullName: OnSuccessContinueWithPromise
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    syntax:
      content: >-
        OnSuccessContinueWithPromise: (continuationCallback: (result: T) =>
        Promise<TContinuationResult>) => Promise<TContinuationResult>
      return:
        type:
          - >-
            (continuationCallback: (result: T) => Promise<TContinuationResult>)
            => Promise<TContinuationResult>
        description: ''
    package: microsoft-speech-browser-sdk
  - uid: microsoft-speech-browser-sdk.Promise.constructor
    name: Promise(Sink<T>)
    children: []
    type: constructor
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'new Promise(sink: Sink<T>)'
      parameters:
        - id: sink
          type:
            - microsoft-speech-browser-sdk.Sink<T>
          description: ''
    package: microsoft-speech-browser-sdk
  - uid: microsoft-speech-browser-sdk.Promise.Result
    name: Result
    fullName: Result
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    syntax:
      content: 'Result: () => PromiseResult<T>'
      return:
        type:
          - () => PromiseResult<T>
        description: ''
    package: microsoft-speech-browser-sdk
references:
  - uid: microsoft-speech-browser-sdk.Sink<T>
    name: Sink<T>
    spec.typeScript:
      - name: Sink
        fullName: Sink
        uid: microsoft-speech-browser-sdk.Sink
      - name: <T>
        fullName: <T>
