### YamlMime:UniversalReference
items:
  - uid: tslib.http2.Http2ServerRequest
    name: Http2ServerRequest
    fullName: Http2ServerRequest
    children:
      - tslib.http2.Http2ServerRequest.aborted
      - tslib.http2.Http2ServerRequest.addListener
      - tslib.http2.Http2ServerRequest.addListener_1
      - tslib.http2.Http2ServerRequest.addListener_2
      - tslib.http2.Http2ServerRequest.addListener_3
      - tslib.http2.Http2ServerRequest.addListener_5
      - tslib.http2.Http2ServerRequest.addListener_4
      - tslib.http2.Http2ServerRequest.addListener_6
      - tslib.http2.Http2ServerRequest.authority
      - tslib.http2.Http2ServerRequest.destroy
      - tslib.http2.Http2ServerRequest.destroyed
      - tslib.http2.Http2ServerRequest.emit
      - tslib.http2.Http2ServerRequest.emit_1
      - tslib.http2.Http2ServerRequest.emit_2
      - tslib.http2.Http2ServerRequest.emit_3
      - tslib.http2.Http2ServerRequest.emit_5
      - tslib.http2.Http2ServerRequest.emit_4
      - tslib.http2.Http2ServerRequest.emit_6
      - tslib.http2.Http2ServerRequest.eventNames
      - tslib.http2.Http2ServerRequest.from
      - tslib.http2.Http2ServerRequest.getMaxListeners
      - tslib.http2.Http2ServerRequest.headers
      - tslib.http2.Http2ServerRequest.constructor
      - tslib.http2.Http2ServerRequest.httpVersion
      - tslib.http2.Http2ServerRequest.isPaused
      - tslib.http2.Http2ServerRequest.listenerCount
      - tslib.http2.Http2ServerRequest.listeners
      - tslib.http2.Http2ServerRequest.method
      - tslib.http2.Http2ServerRequest.off
      - tslib.http2.Http2ServerRequest.on
      - tslib.http2.Http2ServerRequest.on_1
      - tslib.http2.Http2ServerRequest.on_2
      - tslib.http2.Http2ServerRequest.on_3
      - tslib.http2.Http2ServerRequest.on_5
      - tslib.http2.Http2ServerRequest.on_4
      - tslib.http2.Http2ServerRequest.on_6
      - tslib.http2.Http2ServerRequest.once
      - tslib.http2.Http2ServerRequest.once_1
      - tslib.http2.Http2ServerRequest.once_2
      - tslib.http2.Http2ServerRequest.once_3
      - tslib.http2.Http2ServerRequest.once_5
      - tslib.http2.Http2ServerRequest.once_4
      - tslib.http2.Http2ServerRequest.once_6
      - tslib.http2.Http2ServerRequest.pause
      - tslib.http2.Http2ServerRequest.pipe
      - tslib.http2.Http2ServerRequest.prependListener
      - tslib.http2.Http2ServerRequest.prependListener_1
      - tslib.http2.Http2ServerRequest.prependListener_2
      - tslib.http2.Http2ServerRequest.prependListener_3
      - tslib.http2.Http2ServerRequest.prependListener_5
      - tslib.http2.Http2ServerRequest.prependListener_4
      - tslib.http2.Http2ServerRequest.prependListener_6
      - tslib.http2.Http2ServerRequest.prependOnceListener
      - tslib.http2.Http2ServerRequest.prependOnceListener_1
      - tslib.http2.Http2ServerRequest.prependOnceListener_2
      - tslib.http2.Http2ServerRequest.prependOnceListener_3
      - tslib.http2.Http2ServerRequest.prependOnceListener_5
      - tslib.http2.Http2ServerRequest.prependOnceListener_4
      - tslib.http2.Http2ServerRequest.prependOnceListener_6
      - tslib.http2.Http2ServerRequest.push
      - tslib.http2.Http2ServerRequest.rawHeaders
      - tslib.http2.Http2ServerRequest.rawListeners
      - tslib.http2.Http2ServerRequest.rawTrailers
      - tslib.http2.Http2ServerRequest.read
      - tslib.http2.Http2ServerRequest.readable
      - tslib.http2.Http2ServerRequest.readableHighWaterMark
      - tslib.http2.Http2ServerRequest.readableLength
      - tslib.http2.Http2ServerRequest.readableObjectMode
      - tslib.http2.Http2ServerRequest.removeAllListeners
      - tslib.http2.Http2ServerRequest.removeListener
      - tslib.http2.Http2ServerRequest.removeListener_1
      - tslib.http2.Http2ServerRequest.removeListener_2
      - tslib.http2.Http2ServerRequest.removeListener_4
      - tslib.http2.Http2ServerRequest.removeListener_3
      - tslib.http2.Http2ServerRequest.removeListener_5
      - tslib.http2.Http2ServerRequest.resume
      - tslib.http2.Http2ServerRequest.scheme
      - tslib.http2.Http2ServerRequest.setEncoding
      - tslib.http2.Http2ServerRequest.setMaxListeners
      - tslib.http2.Http2ServerRequest.setTimeout
      - tslib.http2.Http2ServerRequest.socket
      - tslib.http2.Http2ServerRequest.stream
      - tslib.http2.Http2ServerRequest.trailers
      - tslib.http2.Http2ServerRequest.unpipe
      - tslib.http2.Http2ServerRequest.unshift
      - tslib.http2.Http2ServerRequest.url
      - tslib.http2.Http2ServerRequest.wrap
    langs:
      - typeScript
    type: class
    summary: ''
    extends:
      name: tslib.stream.internal.Readable
    package: tslib
  - uid: tslib.http2.Http2ServerRequest.aborted
    name: aborted
    fullName: aborted
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    syntax:
      content: 'aborted: boolean'
      return:
        type:
          - boolean
        description: ''
    package: tslib
  - uid: tslib.http2.Http2ServerRequest.addListener
    name: 'addListener("aborted", (hadError: boolean, code: number) => void)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function addListener(event: "aborted", listener: (hadError: boolean,
        code: number) => void)
      parameters:
        - id: event
          type:
            - '"aborted"'
          description: ''
        - id: listener
          type:
            - '(hadError: boolean, code: number) => void'
          description: ''
      return:
        type:
          - this
        description: ''
    package: tslib
  - uid: tslib.http2.Http2ServerRequest.addListener_1
    name: 'addListener("close", () => void)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function addListener(event: "close", listener: () => void)'
      parameters:
        - id: event
          type:
            - '"close"'
          description: ''
        - id: listener
          type:
            - () => void
          description: ''
      return:
        type:
          - this
        description: ''
    package: tslib
  - uid: tslib.http2.Http2ServerRequest.addListener_2
    name: 'addListener("data", (chunk: Buffer | string) => void)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function addListener(event: "data", listener: (chunk: Buffer | string)
        => void)
      parameters:
        - id: event
          type:
            - '"data"'
          description: ''
        - id: listener
          type:
            - '(chunk: Buffer | string) => void'
          description: ''
      return:
        type:
          - this
        description: ''
    package: tslib
  - uid: tslib.http2.Http2ServerRequest.addListener_3
    name: 'addListener("end", () => void)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function addListener(event: "end", listener: () => void)'
      parameters:
        - id: event
          type:
            - '"end"'
          description: ''
        - id: listener
          type:
            - () => void
          description: ''
      return:
        type:
          - this
        description: ''
    package: tslib
  - uid: tslib.http2.Http2ServerRequest.addListener_5
    name: 'addListener("error", (err: Error) => void)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function addListener(event: "error", listener: (err: Error) => void)'
      parameters:
        - id: event
          type:
            - '"error"'
          description: ''
        - id: listener
          type:
            - '(err: Error) => void'
          description: ''
      return:
        type:
          - this
        description: ''
    package: tslib
  - uid: tslib.http2.Http2ServerRequest.addListener_4
    name: 'addListener("readable", () => void)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function addListener(event: "readable", listener: () => void)'
      parameters:
        - id: event
          type:
            - '"readable"'
          description: ''
        - id: listener
          type:
            - () => void
          description: ''
      return:
        type:
          - this
        description: ''
    package: tslib
  - uid: tslib.http2.Http2ServerRequest.addListener_6
    name: 'addListener(string | symbol, (args: any[]) => void)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function addListener(event: string | symbol, listener: (args: any[]) =>
        void)
      parameters:
        - id: event
          type:
            - string | symbol
          description: ''
        - id: listener
          type:
            - '(args: any[]) => void'
          description: ''
      return:
        type:
          - this
        description: ''
    package: tslib
  - uid: tslib.http2.Http2ServerRequest.authority
    name: authority
    fullName: authority
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    syntax:
      content: 'authority: string'
      return:
        type:
          - string
        description: ''
    package: tslib
  - uid: tslib.http2.Http2ServerRequest.destroy
    name: destroy(Error)
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function destroy(error?: Error)'
      parameters:
        - id: error
          type:
            - tslib.AbortError.Error
          description: ''
          optional: true
    package: tslib
  - uid: tslib.http2.Http2ServerRequest.destroyed
    name: destroyed
    fullName: destroyed
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    syntax:
      content: 'destroyed: boolean'
      return:
        type:
          - boolean
        description: ''
    package: tslib
  - uid: tslib.http2.Http2ServerRequest.emit
    name: 'emit("aborted", boolean, number)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function emit(event: "aborted", hadError: boolean, code: number)'
      parameters:
        - id: event
          type:
            - '"aborted"'
          description: ''
        - id: hadError
          type:
            - boolean
          description: ''
        - id: code
          type:
            - number
          description: ''
      return:
        type:
          - boolean
        description: ''
    package: tslib
  - uid: tslib.http2.Http2ServerRequest.emit_1
    name: emit("close")
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function emit(event: "close")'
      parameters:
        - id: event
          type:
            - '"close"'
          description: ''
      return:
        type:
          - boolean
        description: ''
    package: tslib
  - uid: tslib.http2.Http2ServerRequest.emit_2
    name: 'emit("data", Buffer | string)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function emit(event: "data", chunk: Buffer | string)'
      parameters:
        - id: event
          type:
            - '"data"'
          description: ''
        - id: chunk
          type:
            - Buffer | string
          description: ''
      return:
        type:
          - boolean
        description: ''
    package: tslib
  - uid: tslib.http2.Http2ServerRequest.emit_3
    name: emit("end")
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function emit(event: "end")'
      parameters:
        - id: event
          type:
            - '"end"'
          description: ''
      return:
        type:
          - boolean
        description: ''
    package: tslib
  - uid: tslib.http2.Http2ServerRequest.emit_5
    name: 'emit("error", Error)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function emit(event: "error", err: Error)'
      parameters:
        - id: event
          type:
            - '"error"'
          description: ''
        - id: err
          type:
            - Error
          description: ''
      return:
        type:
          - boolean
        description: ''
    package: tslib
  - uid: tslib.http2.Http2ServerRequest.emit_4
    name: emit("readable")
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function emit(event: "readable")'
      parameters:
        - id: event
          type:
            - '"readable"'
          description: ''
      return:
        type:
          - boolean
        description: ''
    package: tslib
  - uid: tslib.http2.Http2ServerRequest.emit_6
    name: 'emit(string | symbol, any[])'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function emit(event: string | symbol, args: any[])'
      parameters:
        - id: event
          type:
            - string | symbol
          description: ''
        - id: args
          type:
            - 'any[]'
          description: ''
      return:
        type:
          - boolean
        description: ''
    package: tslib
  - uid: tslib.http2.Http2ServerRequest.eventNames
    name: eventNames()
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: function eventNames()
      parameters: []
      return:
        type:
          - Array<string | symbol>
        description: ''
    package: tslib
  - uid: tslib.http2.Http2ServerRequest.from
    name: 'from(Iterable<any> | AsyncIterable<any>, ReadableOptions)'
    children: []
    type: method
    langs:
      - typeScript
    summary: A utility method for creating Readable Streams out of iterators.
    syntax:
      content: >-
        static function from(iterable: Iterable<any> | AsyncIterable<any>,
        options?: ReadableOptions)
      parameters:
        - id: iterable
          type:
            - Iterable<any> | AsyncIterable<any>
          description: ''
        - id: options
          type:
            - tslib.stream.internal.ReadableOptions
          description: ''
          optional: true
      return:
        type:
          - tslib.stream.internal.Readable
        description: ''
    package: tslib
  - uid: tslib.http2.Http2ServerRequest.getMaxListeners
    name: getMaxListeners()
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: function getMaxListeners()
      parameters: []
      return:
        type:
          - number
        description: ''
    package: tslib
  - uid: tslib.http2.Http2ServerRequest.headers
    name: headers
    fullName: headers
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    syntax:
      content: 'headers: IncomingHttpHeaders'
      return:
        type:
          - tslib.http2.IncomingHttpHeaders
        description: ''
    package: tslib
  - uid: tslib.http2.Http2ServerRequest.constructor
    name: >-
      Http2ServerRequest(ServerHttp2Stream, IncomingHttpHeaders,
      stream.ReadableOptions, string[])
    children: []
    type: constructor
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        new Http2ServerRequest(stream: ServerHttp2Stream, headers:
        IncomingHttpHeaders, options: stream.ReadableOptions, rawHeaders:
        string[])
      parameters:
        - id: stream
          type:
            - tslib.http2.ServerHttp2Stream
          description: ''
        - id: headers
          type:
            - tslib.http2.IncomingHttpHeaders
          description: ''
        - id: options
          type:
            - stream.ReadableOptions
          description: ''
        - id: rawHeaders
          type:
            - 'string[]'
          description: ''
    package: tslib
  - uid: tslib.http2.Http2ServerRequest.httpVersion
    name: httpVersion
    fullName: httpVersion
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    syntax:
      content: 'httpVersion: string'
      return:
        type:
          - string
        description: ''
    package: tslib
  - uid: tslib.http2.Http2ServerRequest.isPaused
    name: isPaused()
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: function isPaused()
      parameters: []
      return:
        type:
          - boolean
        description: ''
    package: tslib
  - uid: tslib.http2.Http2ServerRequest.listenerCount
    name: listenerCount(string | symbol)
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function listenerCount(type: string | symbol)'
      parameters:
        - id: type
          type:
            - string | symbol
          description: ''
      return:
        type:
          - number
        description: ''
    package: tslib
  - uid: tslib.http2.Http2ServerRequest.listeners
    name: listeners(string | symbol)
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function listeners(event: string | symbol)'
      parameters:
        - id: event
          type:
            - string | symbol
          description: ''
      return:
        type:
          - 'Function[]'
        description: ''
    package: tslib
  - uid: tslib.http2.Http2ServerRequest.method
    name: method
    fullName: method
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    syntax:
      content: 'method: string'
      return:
        type:
          - string
        description: ''
    package: tslib
  - uid: tslib.http2.Http2ServerRequest.off
    name: 'off(string | symbol, (args: any[]) => void)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function off(event: string | symbol, listener: (args: any[]) => void)'
      parameters:
        - id: event
          type:
            - string | symbol
          description: ''
        - id: listener
          type:
            - '(args: any[]) => void'
          description: ''
      return:
        type:
          - this
        description: ''
    package: tslib
  - uid: tslib.http2.Http2ServerRequest.on
    name: 'on("aborted", (hadError: boolean, code: number) => void)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function on(event: "aborted", listener: (hadError: boolean, code:
        number) => void)
      parameters:
        - id: event
          type:
            - '"aborted"'
          description: ''
        - id: listener
          type:
            - '(hadError: boolean, code: number) => void'
          description: ''
      return:
        type:
          - this
        description: ''
    package: tslib
  - uid: tslib.http2.Http2ServerRequest.on_1
    name: 'on("close", () => void)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function on(event: "close", listener: () => void)'
      parameters:
        - id: event
          type:
            - '"close"'
          description: ''
        - id: listener
          type:
            - () => void
          description: ''
      return:
        type:
          - this
        description: ''
    package: tslib
  - uid: tslib.http2.Http2ServerRequest.on_2
    name: 'on("data", (chunk: Buffer | string) => void)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function on(event: "data", listener: (chunk: Buffer | string) => void)'
      parameters:
        - id: event
          type:
            - '"data"'
          description: ''
        - id: listener
          type:
            - '(chunk: Buffer | string) => void'
          description: ''
      return:
        type:
          - this
        description: ''
    package: tslib
  - uid: tslib.http2.Http2ServerRequest.on_3
    name: 'on("end", () => void)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function on(event: "end", listener: () => void)'
      parameters:
        - id: event
          type:
            - '"end"'
          description: ''
        - id: listener
          type:
            - () => void
          description: ''
      return:
        type:
          - this
        description: ''
    package: tslib
  - uid: tslib.http2.Http2ServerRequest.on_5
    name: 'on("error", (err: Error) => void)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function on(event: "error", listener: (err: Error) => void)'
      parameters:
        - id: event
          type:
            - '"error"'
          description: ''
        - id: listener
          type:
            - '(err: Error) => void'
          description: ''
      return:
        type:
          - this
        description: ''
    package: tslib
  - uid: tslib.http2.Http2ServerRequest.on_4
    name: 'on("readable", () => void)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function on(event: "readable", listener: () => void)'
      parameters:
        - id: event
          type:
            - '"readable"'
          description: ''
        - id: listener
          type:
            - () => void
          description: ''
      return:
        type:
          - this
        description: ''
    package: tslib
  - uid: tslib.http2.Http2ServerRequest.on_6
    name: 'on(string | symbol, (args: any[]) => void)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function on(event: string | symbol, listener: (args: any[]) => void)'
      parameters:
        - id: event
          type:
            - string | symbol
          description: ''
        - id: listener
          type:
            - '(args: any[]) => void'
          description: ''
      return:
        type:
          - this
        description: ''
    package: tslib
  - uid: tslib.http2.Http2ServerRequest.once
    name: 'once("aborted", (hadError: boolean, code: number) => void)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function once(event: "aborted", listener: (hadError: boolean, code:
        number) => void)
      parameters:
        - id: event
          type:
            - '"aborted"'
          description: ''
        - id: listener
          type:
            - '(hadError: boolean, code: number) => void'
          description: ''
      return:
        type:
          - this
        description: ''
    package: tslib
  - uid: tslib.http2.Http2ServerRequest.once_1
    name: 'once("close", () => void)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function once(event: "close", listener: () => void)'
      parameters:
        - id: event
          type:
            - '"close"'
          description: ''
        - id: listener
          type:
            - () => void
          description: ''
      return:
        type:
          - this
        description: ''
    package: tslib
  - uid: tslib.http2.Http2ServerRequest.once_2
    name: 'once("data", (chunk: Buffer | string) => void)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function once(event: "data", listener: (chunk: Buffer | string) => void)'
      parameters:
        - id: event
          type:
            - '"data"'
          description: ''
        - id: listener
          type:
            - '(chunk: Buffer | string) => void'
          description: ''
      return:
        type:
          - this
        description: ''
    package: tslib
  - uid: tslib.http2.Http2ServerRequest.once_3
    name: 'once("end", () => void)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function once(event: "end", listener: () => void)'
      parameters:
        - id: event
          type:
            - '"end"'
          description: ''
        - id: listener
          type:
            - () => void
          description: ''
      return:
        type:
          - this
        description: ''
    package: tslib
  - uid: tslib.http2.Http2ServerRequest.once_5
    name: 'once("error", (err: Error) => void)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function once(event: "error", listener: (err: Error) => void)'
      parameters:
        - id: event
          type:
            - '"error"'
          description: ''
        - id: listener
          type:
            - '(err: Error) => void'
          description: ''
      return:
        type:
          - this
        description: ''
    package: tslib
  - uid: tslib.http2.Http2ServerRequest.once_4
    name: 'once("readable", () => void)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function once(event: "readable", listener: () => void)'
      parameters:
        - id: event
          type:
            - '"readable"'
          description: ''
        - id: listener
          type:
            - () => void
          description: ''
      return:
        type:
          - this
        description: ''
    package: tslib
  - uid: tslib.http2.Http2ServerRequest.once_6
    name: 'once(string | symbol, (args: any[]) => void)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function once(event: string | symbol, listener: (args: any[]) => void)'
      parameters:
        - id: event
          type:
            - string | symbol
          description: ''
        - id: listener
          type:
            - '(args: any[]) => void'
          description: ''
      return:
        type:
          - this
        description: ''
    package: tslib
  - uid: tslib.http2.Http2ServerRequest.pause
    name: pause()
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: function pause()
      parameters: []
      return:
        type:
          - this
        description: ''
    package: tslib
  - uid: tslib.http2.Http2ServerRequest.pipe
    name: 'pipe(T, undefined | Object)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function pipe<T>(destination: T, options?: undefined | Object)'
      parameters:
        - id: destination
          type:
            - T
          description: ''
        - id: options
          type:
            - undefined | Object
          description: ''
          optional: true
      return:
        type:
          - T
        description: ''
    package: tslib
  - uid: tslib.http2.Http2ServerRequest.prependListener
    name: 'prependListener("aborted", (hadError: boolean, code: number) => void)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function prependListener(event: "aborted", listener: (hadError: boolean,
        code: number) => void)
      parameters:
        - id: event
          type:
            - '"aborted"'
          description: ''
        - id: listener
          type:
            - '(hadError: boolean, code: number) => void'
          description: ''
      return:
        type:
          - this
        description: ''
    package: tslib
  - uid: tslib.http2.Http2ServerRequest.prependListener_1
    name: 'prependListener("close", () => void)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function prependListener(event: "close", listener: () => void)'
      parameters:
        - id: event
          type:
            - '"close"'
          description: ''
        - id: listener
          type:
            - () => void
          description: ''
      return:
        type:
          - this
        description: ''
    package: tslib
  - uid: tslib.http2.Http2ServerRequest.prependListener_2
    name: 'prependListener("data", (chunk: Buffer | string) => void)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function prependListener(event: "data", listener: (chunk: Buffer |
        string) => void)
      parameters:
        - id: event
          type:
            - '"data"'
          description: ''
        - id: listener
          type:
            - '(chunk: Buffer | string) => void'
          description: ''
      return:
        type:
          - this
        description: ''
    package: tslib
  - uid: tslib.http2.Http2ServerRequest.prependListener_3
    name: 'prependListener("end", () => void)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function prependListener(event: "end", listener: () => void)'
      parameters:
        - id: event
          type:
            - '"end"'
          description: ''
        - id: listener
          type:
            - () => void
          description: ''
      return:
        type:
          - this
        description: ''
    package: tslib
  - uid: tslib.http2.Http2ServerRequest.prependListener_5
    name: 'prependListener("error", (err: Error) => void)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function prependListener(event: "error", listener: (err: Error) => void)'
      parameters:
        - id: event
          type:
            - '"error"'
          description: ''
        - id: listener
          type:
            - '(err: Error) => void'
          description: ''
      return:
        type:
          - this
        description: ''
    package: tslib
  - uid: tslib.http2.Http2ServerRequest.prependListener_4
    name: 'prependListener("readable", () => void)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function prependListener(event: "readable", listener: () => void)'
      parameters:
        - id: event
          type:
            - '"readable"'
          description: ''
        - id: listener
          type:
            - () => void
          description: ''
      return:
        type:
          - this
        description: ''
    package: tslib
  - uid: tslib.http2.Http2ServerRequest.prependListener_6
    name: 'prependListener(string | symbol, (args: any[]) => void)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function prependListener(event: string | symbol, listener: (args: any[])
        => void)
      parameters:
        - id: event
          type:
            - string | symbol
          description: ''
        - id: listener
          type:
            - '(args: any[]) => void'
          description: ''
      return:
        type:
          - this
        description: ''
    package: tslib
  - uid: tslib.http2.Http2ServerRequest.prependOnceListener
    name: 'prependOnceListener("aborted", (hadError: boolean, code: number) => void)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function prependOnceListener(event: "aborted", listener: (hadError:
        boolean, code: number) => void)
      parameters:
        - id: event
          type:
            - '"aborted"'
          description: ''
        - id: listener
          type:
            - '(hadError: boolean, code: number) => void'
          description: ''
      return:
        type:
          - this
        description: ''
    package: tslib
  - uid: tslib.http2.Http2ServerRequest.prependOnceListener_1
    name: 'prependOnceListener("close", () => void)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function prependOnceListener(event: "close", listener: () => void)'
      parameters:
        - id: event
          type:
            - '"close"'
          description: ''
        - id: listener
          type:
            - () => void
          description: ''
      return:
        type:
          - this
        description: ''
    package: tslib
  - uid: tslib.http2.Http2ServerRequest.prependOnceListener_2
    name: 'prependOnceListener("data", (chunk: Buffer | string) => void)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function prependOnceListener(event: "data", listener: (chunk: Buffer |
        string) => void)
      parameters:
        - id: event
          type:
            - '"data"'
          description: ''
        - id: listener
          type:
            - '(chunk: Buffer | string) => void'
          description: ''
      return:
        type:
          - this
        description: ''
    package: tslib
  - uid: tslib.http2.Http2ServerRequest.prependOnceListener_3
    name: 'prependOnceListener("end", () => void)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function prependOnceListener(event: "end", listener: () => void)'
      parameters:
        - id: event
          type:
            - '"end"'
          description: ''
        - id: listener
          type:
            - () => void
          description: ''
      return:
        type:
          - this
        description: ''
    package: tslib
  - uid: tslib.http2.Http2ServerRequest.prependOnceListener_5
    name: 'prependOnceListener("error", (err: Error) => void)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function prependOnceListener(event: "error", listener: (err: Error) =>
        void)
      parameters:
        - id: event
          type:
            - '"error"'
          description: ''
        - id: listener
          type:
            - '(err: Error) => void'
          description: ''
      return:
        type:
          - this
        description: ''
    package: tslib
  - uid: tslib.http2.Http2ServerRequest.prependOnceListener_4
    name: 'prependOnceListener("readable", () => void)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function prependOnceListener(event: "readable", listener: () => void)'
      parameters:
        - id: event
          type:
            - '"readable"'
          description: ''
        - id: listener
          type:
            - () => void
          description: ''
      return:
        type:
          - this
        description: ''
    package: tslib
  - uid: tslib.http2.Http2ServerRequest.prependOnceListener_6
    name: 'prependOnceListener(string | symbol, (args: any[]) => void)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function prependOnceListener(event: string | symbol, listener: (args:
        any[]) => void)
      parameters:
        - id: event
          type:
            - string | symbol
          description: ''
        - id: listener
          type:
            - '(args: any[]) => void'
          description: ''
      return:
        type:
          - this
        description: ''
    package: tslib
  - uid: tslib.http2.Http2ServerRequest.push
    name: 'push(any, undefined | string)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function push(chunk: any, encoding?: undefined | string)'
      parameters:
        - id: chunk
          type:
            - any
          description: ''
        - id: encoding
          type:
            - undefined | string
          description: ''
          optional: true
      return:
        type:
          - boolean
        description: ''
    package: tslib
  - uid: tslib.http2.Http2ServerRequest.rawHeaders
    name: rawHeaders
    fullName: rawHeaders
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    syntax:
      content: 'rawHeaders: string[]'
      return:
        type:
          - 'string[]'
        description: ''
    package: tslib
  - uid: tslib.http2.Http2ServerRequest.rawListeners
    name: rawListeners(string | symbol)
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function rawListeners(event: string | symbol)'
      parameters:
        - id: event
          type:
            - string | symbol
          description: ''
      return:
        type:
          - 'Function[]'
        description: ''
    package: tslib
  - uid: tslib.http2.Http2ServerRequest.rawTrailers
    name: rawTrailers
    fullName: rawTrailers
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    syntax:
      content: 'rawTrailers: string[]'
      return:
        type:
          - 'string[]'
        description: ''
    package: tslib
  - uid: tslib.http2.Http2ServerRequest.read
    name: read(undefined | number)
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function read(size?: undefined | number)'
      parameters:
        - id: size
          type:
            - undefined | number
          description: ''
          optional: true
      return:
        type:
          - Buffer | string | null
        description: ''
    package: tslib
  - uid: tslib.http2.Http2ServerRequest.readable
    name: readable
    fullName: readable
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    syntax:
      content: 'readable: boolean'
      return:
        type:
          - boolean
        description: ''
    package: tslib
  - uid: tslib.http2.Http2ServerRequest.readableHighWaterMark
    name: readableHighWaterMark
    fullName: readableHighWaterMark
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    syntax:
      content: 'readableHighWaterMark: number'
      return:
        type:
          - number
        description: ''
    package: tslib
  - uid: tslib.http2.Http2ServerRequest.readableLength
    name: readableLength
    fullName: readableLength
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    syntax:
      content: 'readableLength: number'
      return:
        type:
          - number
        description: ''
    package: tslib
  - uid: tslib.http2.Http2ServerRequest.readableObjectMode
    name: readableObjectMode
    fullName: readableObjectMode
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    syntax:
      content: 'readableObjectMode: boolean'
      return:
        type:
          - boolean
        description: ''
    package: tslib
  - uid: tslib.http2.Http2ServerRequest.removeAllListeners
    name: removeAllListeners(string | symbol)
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function removeAllListeners(event?: string | symbol)'
      parameters:
        - id: event
          type:
            - string | symbol
          description: ''
          optional: true
      return:
        type:
          - this
        description: ''
    package: tslib
  - uid: tslib.http2.Http2ServerRequest.removeListener
    name: 'removeListener("close", () => void)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function removeListener(event: "close", listener: () => void)'
      parameters:
        - id: event
          type:
            - '"close"'
          description: ''
        - id: listener
          type:
            - () => void
          description: ''
      return:
        type:
          - this
        description: ''
    package: tslib
  - uid: tslib.http2.Http2ServerRequest.removeListener_1
    name: 'removeListener("data", (chunk: any) => void)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function removeListener(event: "data", listener: (chunk: any) => void)'
      parameters:
        - id: event
          type:
            - '"data"'
          description: ''
        - id: listener
          type:
            - '(chunk: any) => void'
          description: ''
      return:
        type:
          - this
        description: ''
    package: tslib
  - uid: tslib.http2.Http2ServerRequest.removeListener_2
    name: 'removeListener("end", () => void)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function removeListener(event: "end", listener: () => void)'
      parameters:
        - id: event
          type:
            - '"end"'
          description: ''
        - id: listener
          type:
            - () => void
          description: ''
      return:
        type:
          - this
        description: ''
    package: tslib
  - uid: tslib.http2.Http2ServerRequest.removeListener_4
    name: 'removeListener("error", (err: Error) => void)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function removeListener(event: "error", listener: (err: Error) => void)'
      parameters:
        - id: event
          type:
            - '"error"'
          description: ''
        - id: listener
          type:
            - '(err: Error) => void'
          description: ''
      return:
        type:
          - this
        description: ''
    package: tslib
  - uid: tslib.http2.Http2ServerRequest.removeListener_3
    name: 'removeListener("readable", () => void)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function removeListener(event: "readable", listener: () => void)'
      parameters:
        - id: event
          type:
            - '"readable"'
          description: ''
        - id: listener
          type:
            - () => void
          description: ''
      return:
        type:
          - this
        description: ''
    package: tslib
  - uid: tslib.http2.Http2ServerRequest.removeListener_5
    name: 'removeListener(string | symbol, (args: any[]) => void)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function removeListener(event: string | symbol, listener: (args: any[])
        => void)
      parameters:
        - id: event
          type:
            - string | symbol
          description: ''
        - id: listener
          type:
            - '(args: any[]) => void'
          description: ''
      return:
        type:
          - this
        description: ''
    package: tslib
  - uid: tslib.http2.Http2ServerRequest.resume
    name: resume()
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: function resume()
      parameters: []
      return:
        type:
          - this
        description: ''
    package: tslib
  - uid: tslib.http2.Http2ServerRequest.scheme
    name: scheme
    fullName: scheme
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    syntax:
      content: 'scheme: string'
      return:
        type:
          - string
        description: ''
    package: tslib
  - uid: tslib.http2.Http2ServerRequest.setEncoding
    name: setEncoding(string)
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function setEncoding(encoding: string)'
      parameters:
        - id: encoding
          type:
            - string
          description: ''
      return:
        type:
          - this
        description: ''
    package: tslib
  - uid: tslib.http2.Http2ServerRequest.setMaxListeners
    name: setMaxListeners(number)
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function setMaxListeners(n: number)'
      parameters:
        - id: 'n'
          type:
            - number
          description: ''
      return:
        type:
          - this
        description: ''
    package: tslib
  - uid: tslib.http2.Http2ServerRequest.setTimeout
    name: 'setTimeout(number, undefined | () => void)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function setTimeout(msecs: number, callback?: undefined | () => void)'
      parameters:
        - id: msecs
          type:
            - number
          description: ''
        - id: callback
          type:
            - undefined | () => void
          description: ''
          optional: true
    package: tslib
  - uid: tslib.http2.Http2ServerRequest.socket
    name: socket
    fullName: socket
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    syntax:
      content: 'socket: Socket | TLSSocket'
      return:
        type:
          - tslib.net.Socket | tslib.tls.TLSSocket
        description: ''
    package: tslib
  - uid: tslib.http2.Http2ServerRequest.stream
    name: stream
    fullName: stream
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    syntax:
      content: 'stream: ServerHttp2Stream'
      return:
        type:
          - tslib.http2.ServerHttp2Stream
        description: ''
    package: tslib
  - uid: tslib.http2.Http2ServerRequest.trailers
    name: trailers
    fullName: trailers
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    syntax:
      content: 'trailers: IncomingHttpHeaders'
      return:
        type:
          - tslib.http2.IncomingHttpHeaders
        description: ''
    package: tslib
  - uid: tslib.http2.Http2ServerRequest.unpipe
    name: unpipe(NodeJS.WritableStream)
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function unpipe(destination?: NodeJS.WritableStream)'
      parameters:
        - id: destination
          type:
            - tslib.NodeJS.WritableStream
          description: ''
          optional: true
      return:
        type:
          - this
        description: ''
    package: tslib
  - uid: tslib.http2.Http2ServerRequest.unshift
    name: 'unshift(any, BufferEncoding)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function unshift(chunk: any, encoding?: BufferEncoding)'
      parameters:
        - id: chunk
          type:
            - any
          description: ''
        - id: encoding
          type:
            - tslib.BufferEncoding
          description: ''
          optional: true
    package: tslib
  - uid: tslib.http2.Http2ServerRequest.url
    name: url
    fullName: url
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    syntax:
      content: 'url: string'
      return:
        type:
          - string
        description: ''
    package: tslib
  - uid: tslib.http2.Http2ServerRequest.wrap
    name: wrap(ReadableStream)
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function wrap(oldStream: ReadableStream)'
      parameters:
        - id: oldStream
          type:
            - tslib.NodeJS.ReadableStream
          description: ''
      return:
        type:
          - this
        description: ''
    package: tslib
references:
  - uid: tslib.stream.internal.Readable
    name: Readable
    spec.typeScript:
      - name: Readable
        fullName: Readable
        uid: tslib.stream.internal.Readable
  - uid: tslib.http2.ServerHttp2Stream
    name: ServerHttp2Stream
    spec.typeScript:
      - name: ServerHttp2Stream
        fullName: ServerHttp2Stream
        uid: tslib.http2.ServerHttp2Stream
  - uid: tslib.http2.IncomingHttpHeaders
    name: IncomingHttpHeaders
    spec.typeScript:
      - name: IncomingHttpHeaders
        fullName: IncomingHttpHeaders
        uid: tslib.http2.IncomingHttpHeaders
  - uid: tslib.net.Socket | tslib.tls.TLSSocket
    name: TLSSocket
    spec.typeScript:
      - name: Socket
        fullName: Socket
        uid: tslib.net.Socket
      - name: ' | '
        fullName: ' | '
      - name: TLSSocket
        fullName: TLSSocket
        uid: tslib.tls.TLSSocket
  - uid: tslib.AbortError.Error
    name: Error
    spec.typeScript:
      - name: Error
        fullName: Error
        uid: tslib.AbortError.Error
  - uid: tslib.NodeJS.WritableStream
    name: WritableStream
    spec.typeScript:
      - name: WritableStream
        fullName: WritableStream
        uid: tslib.NodeJS.WritableStream
  - uid: tslib.BufferEncoding
    name: BufferEncoding
    spec.typeScript:
      - name: BufferEncoding
        fullName: BufferEncoding
        uid: tslib.BufferEncoding
  - uid: tslib.NodeJS.ReadableStream
    name: ReadableStream
    spec.typeScript:
      - name: ReadableStream
        fullName: ReadableStream
        uid: tslib.NodeJS.ReadableStream
  - uid: tslib.stream.internal.ReadableOptions
    name: ReadableOptions
    spec.typeScript:
      - name: ReadableOptions
        fullName: ReadableOptions
        uid: tslib.stream.internal.ReadableOptions
  - uid: tslib.stream.internal.Stream
    name: Stream
    spec.typeScript:
      - name: Stream
        fullName: Stream
        uid: tslib.stream.internal.Stream
  - uid: tslib.http.OutgoingHttpHeaders
    name: OutgoingHttpHeaders
    spec.typeScript:
      - name: OutgoingHttpHeaders
        fullName: OutgoingHttpHeaders
        uid: tslib.http.OutgoingHttpHeaders
  - uid: number | string | tslib.url.URL
    name: URL
    spec.typeScript:
      - name: 'number | string | '
        fullName: 'number | string | '
      - name: URL
        fullName: URL
        uid: tslib.url.URL
  - uid: tslib.http2.Http2Session
    name: Http2Session
    spec.typeScript:
      - name: Http2Session
        fullName: Http2Session
        uid: tslib.http2.Http2Session
  - uid: tslib.http2.Settings
    name: Settings
    spec.typeScript:
      - name: Settings
        fullName: Settings
        uid: tslib.http2.Settings
  - uid: tslib.http2.SessionState
    name: SessionState
    spec.typeScript:
      - name: SessionState
        fullName: SessionState
        uid: tslib.http2.SessionState
  - uid: tslib.http2.ClientHttp2Session
    name: ClientHttp2Session
    spec.typeScript:
      - name: ClientHttp2Session
        fullName: ClientHttp2Session
        uid: tslib.http2.ClientHttp2Session
  - uid: tslib.http2.ClientHttp2Stream
    name: ClientHttp2Stream
    spec.typeScript:
      - name: ClientHttp2Stream
        fullName: ClientHttp2Stream
        uid: tslib.http2.ClientHttp2Stream
  - uid: tslib.http2.IncomingHttpHeaders & tslib.http2.IncomingHttpStatusHeader
    name: IncomingHttpStatusHeader
    spec.typeScript:
      - name: IncomingHttpHeaders
        fullName: IncomingHttpHeaders
        uid: tslib.http2.IncomingHttpHeaders
      - name: ' & '
        fullName: ' & '
      - name: IncomingHttpStatusHeader
        fullName: IncomingHttpStatusHeader
        uid: tslib.http2.IncomingHttpStatusHeader
  - uid: tslib.NodeJS.ArrayBufferView
    name: ArrayBufferView
    spec.typeScript:
      - name: ArrayBufferView
        fullName: ArrayBufferView
        uid: tslib.NodeJS.ArrayBufferView
  - uid: tslib.http2.ClientSessionRequestOptions
    name: ClientSessionRequestOptions
    spec.typeScript:
      - name: ClientSessionRequestOptions
        fullName: ClientSessionRequestOptions
        uid: tslib.http2.ClientSessionRequestOptions
  - uid: tslib.http2.Http2Stream
    name: Http2Stream
    spec.typeScript:
      - name: Http2Stream
        fullName: Http2Stream
        uid: tslib.http2.Http2Stream
  - uid: tslib.stream.internal.DuplexOptions
    name: DuplexOptions
    spec.typeScript:
      - name: DuplexOptions
        fullName: DuplexOptions
        uid: tslib.stream.internal.DuplexOptions
  - uid: 'tslib.http.OutgoingHttpHeaders[]'
    name: 'OutgoingHttpHeaders[]'
    spec.typeScript:
      - name: OutgoingHttpHeaders
        fullName: OutgoingHttpHeaders
        uid: tslib.http.OutgoingHttpHeaders
      - name: '[]'
        fullName: '[]'
  - uid: tslib.http2.StreamState
    name: StreamState
    spec.typeScript:
      - name: StreamState
        fullName: StreamState
        uid: tslib.http2.StreamState
  - uid: tslib.http2.StreamPriorityOptions
    name: StreamPriorityOptions
    spec.typeScript:
      - name: StreamPriorityOptions
        fullName: StreamPriorityOptions
        uid: tslib.http2.StreamPriorityOptions
  - uid: tslib.http2.SessionOptions
    name: SessionOptions
    spec.typeScript:
      - name: SessionOptions
        fullName: SessionOptions
        uid: tslib.http2.SessionOptions
  - uid: tslib.tls.Server
    name: Server
    spec.typeScript:
      - name: Server
        fullName: Server
        uid: tslib.tls.Server
  - uid: tslib.tls.SecureContextOptions
    name: SecureContextOptions
    spec.typeScript:
      - name: SecureContextOptions
        fullName: SecureContextOptions
        uid: tslib.tls.SecureContextOptions
  - uid: tslib.net.AddressInfo | string | null
    name: AddressInfo | string | null
    spec.typeScript:
      - name: AddressInfo
        fullName: AddressInfo
        uid: tslib.net.AddressInfo
      - name: ' | string | null'
        fullName: ' | string | null'
  - uid: tslib.http2.Http2ServerRequest
    name: Http2ServerRequest
    spec.typeScript:
      - name: Http2ServerRequest
        fullName: Http2ServerRequest
        uid: tslib.http2.Http2ServerRequest
  - uid: tslib.http2.Http2ServerResponse
    name: Http2ServerResponse
    spec.typeScript:
      - name: Http2ServerResponse
        fullName: Http2ServerResponse
        uid: tslib.http2.Http2ServerResponse
  - uid: tslib.http2.ServerHttp2Session
    name: ServerHttp2Session
    spec.typeScript:
      - name: ServerHttp2Session
        fullName: ServerHttp2Session
        uid: tslib.http2.ServerHttp2Session
  - uid: tslib.tls.TLSSocket
    name: TLSSocket
    spec.typeScript:
      - name: TLSSocket
        fullName: TLSSocket
        uid: tslib.tls.TLSSocket
  - uid: tslib.net.ListenOptions
    name: ListenOptions
    spec.typeScript:
      - name: ListenOptions
        fullName: ListenOptions
        uid: tslib.net.ListenOptions
  - uid: tslib.net.Server
    name: Server
    spec.typeScript:
      - name: Server
        fullName: Server
        uid: tslib.net.Server
  - uid: tslib.events.EventEmitter.EventEmitter
    name: EventEmitter
    spec.typeScript:
      - name: EventEmitter
        fullName: EventEmitter
        uid: tslib.events.EventEmitter.EventEmitter
  - uid: tslib.events.EventEmitterOptions
    name: EventEmitterOptions
    spec.typeScript:
      - name: EventEmitterOptions
        fullName: EventEmitterOptions
        uid: tslib.events.EventEmitterOptions
  - uid: tslib.stream.internal.Duplex
    name: Duplex
    spec.typeScript:
      - name: Duplex
        fullName: Duplex
        uid: tslib.stream.internal.Duplex
  - uid: tslib.http.IncomingHttpHeaders
    name: IncomingHttpHeaders
    spec.typeScript:
      - name: IncomingHttpHeaders
        fullName: IncomingHttpHeaders
        uid: tslib.http.IncomingHttpHeaders
  - uid: tslib.http2.ClientSessionOptions
    name: ClientSessionOptions
    spec.typeScript:
      - name: ClientSessionOptions
        fullName: ClientSessionOptions
        uid: tslib.http2.ClientSessionOptions
  - uid: undefined | tslib.tls.checkServerIdentity
    name: checkServerIdentity
    spec.typeScript:
      - name: 'undefined | '
        fullName: 'undefined | '
      - name: checkServerIdentity
        fullName: checkServerIdentity
        uid: tslib.tls.checkServerIdentity
  - uid: string | Buffer | Array<Buffer | tslib.tls.KeyObject>
    name: KeyObject>
    spec.typeScript:
      - name: 'string | Buffer | Array<Buffer | '
        fullName: 'string | Buffer | Array<Buffer | '
      - name: KeyObject
        fullName: KeyObject
        uid: tslib.tls.KeyObject
      - name: '>'
        fullName: '>'
  - uid: tslib.tls.SecureVersion
    name: SecureVersion
    spec.typeScript:
      - name: SecureVersion
        fullName: SecureVersion
        uid: tslib.tls.SecureVersion
  - uid: string | Buffer | Array<string | Buffer | tslib.tls.PxfObject>
    name: PxfObject>
    spec.typeScript:
      - name: 'string | Buffer | Array<string | Buffer | '
        fullName: 'string | Buffer | Array<string | Buffer | '
      - name: PxfObject
        fullName: PxfObject
        uid: tslib.tls.PxfObject
      - name: '>'
        fullName: '>'
  - uid: tslib.tls.SecureContext
    name: SecureContext
    spec.typeScript:
      - name: SecureContext
        fullName: SecureContext
        uid: tslib.tls.SecureContext
  - uid: tslib.Buffer
    name: Buffer
    spec.typeScript:
      - name: Buffer
        fullName: Buffer
        uid: tslib.Buffer
  - uid: tslib.tls.PSKCallbackNegotation | null
    name: PSKCallbackNegotation | null
    spec.typeScript:
      - name: PSKCallbackNegotation
        fullName: PSKCallbackNegotation
        uid: tslib.tls.PSKCallbackNegotation
      - name: ' | null'
        fullName: ' | null'
  - uid: tslib.http2.SecureServerSessionOptions
    name: SecureServerSessionOptions
    spec.typeScript:
      - name: SecureServerSessionOptions
        fullName: SecureServerSessionOptions
        uid: tslib.http2.SecureServerSessionOptions
  - uid: undefined | tslib.http.IncomingMessage
    name: IncomingMessage
    spec.typeScript:
      - name: 'undefined | '
        fullName: 'undefined | '
      - name: IncomingMessage
        fullName: IncomingMessage
        uid: tslib.http.IncomingMessage
  - uid: undefined | tslib.http.ServerResponse
    name: ServerResponse
    spec.typeScript:
      - name: 'undefined | '
        fullName: 'undefined | '
      - name: ServerResponse
        fullName: ServerResponse
        uid: tslib.http.ServerResponse
  - uid: undefined | tslib.http2.Http2ServerRequest
    name: Http2ServerRequest
    spec.typeScript:
      - name: 'undefined | '
        fullName: 'undefined | '
      - name: Http2ServerRequest
        fullName: Http2ServerRequest
        uid: tslib.http2.Http2ServerRequest
  - uid: undefined | tslib.http2.Http2ServerResponse
    name: Http2ServerResponse
    spec.typeScript:
      - name: 'undefined | '
        fullName: 'undefined | '
      - name: Http2ServerResponse
        fullName: Http2ServerResponse
        uid: tslib.http2.Http2ServerResponse
  - uid: tslib.url.URL
    name: URL
    spec.typeScript:
      - name: URL
        fullName: URL
        uid: tslib.url.URL
  - uid: DataView | tslib.NodeJS.TypedArray | null
    name: TypedArray | null
    spec.typeScript:
      - name: 'DataView | '
        fullName: 'DataView | '
      - name: TypedArray
        fullName: TypedArray
        uid: tslib.NodeJS.TypedArray
      - name: ' | null'
        fullName: ' | null'
  - uid: tslib.http2.ServerSessionOptions
    name: ServerSessionOptions
    spec.typeScript:
      - name: ServerSessionOptions
        fullName: ServerSessionOptions
        uid: tslib.http2.ServerSessionOptions
  - uid: tslib.http2.Http2Server | tslib.http2.Http2SecureServer
    name: Http2SecureServer
    spec.typeScript:
      - name: Http2Server
        fullName: Http2Server
        uid: tslib.http2.Http2Server
      - name: ' | '
        fullName: ' | '
      - name: Http2SecureServer
        fullName: Http2SecureServer
        uid: tslib.http2.Http2SecureServer
  - uid: number | string | tslib.url.URL | tslib.http2.AlternativeServiceOptions
    name: AlternativeServiceOptions
    spec.typeScript:
      - name: 'number | string | '
        fullName: 'number | string | '
      - name: URL
        fullName: URL
        uid: tslib.url.URL
      - name: ' | '
        fullName: ' | '
      - name: AlternativeServiceOptions
        fullName: AlternativeServiceOptions
        uid: tslib.http2.AlternativeServiceOptions
  - uid: Array<string | tslib.url.URL | Object>
    name: URL | Object>
    spec.typeScript:
      - name: 'Array<string | '
        fullName: 'Array<string | '
      - name: URL
        fullName: URL
        uid: tslib.url.URL
      - name: ' | Object>'
        fullName: ' | Object>'
  - uid: tslib.http2.ServerStreamResponseOptions
    name: ServerStreamResponseOptions
    spec.typeScript:
      - name: ServerStreamResponseOptions
        fullName: ServerStreamResponseOptions
        uid: tslib.http2.ServerStreamResponseOptions
  - uid: number | tslib.fs.promises.FileHandle
    name: FileHandle
    spec.typeScript:
      - name: 'number | '
        fullName: 'number | '
      - name: FileHandle
        fullName: FileHandle
        uid: tslib.fs.promises.FileHandle
  - uid: tslib.http2.ServerStreamFileResponseOptions
    name: ServerStreamFileResponseOptions
    spec.typeScript:
      - name: ServerStreamFileResponseOptions
        fullName: ServerStreamFileResponseOptions
        uid: tslib.http2.ServerStreamFileResponseOptions
  - uid: tslib.http2.ServerStreamFileResponseOptionsWithError
    name: ServerStreamFileResponseOptionsWithError
    spec.typeScript:
      - name: ServerStreamFileResponseOptionsWithError
        fullName: ServerStreamFileResponseOptionsWithError
        uid: tslib.http2.ServerStreamFileResponseOptionsWithError
  - uid: tslib.fs.Stats
    name: Stats
    spec.typeScript:
      - name: Stats
        fullName: Stats
        uid: tslib.fs.Stats
  - uid: tslib.http2.StatOptions
    name: StatOptions
    spec.typeScript:
      - name: StatOptions
        fullName: StatOptions
        uid: tslib.http2.StatOptions
  - uid: tslib.NodeJS.ErrnoException
    name: ErrnoException
    spec.typeScript:
      - name: ErrnoException
        fullName: ErrnoException
        uid: tslib.NodeJS.ErrnoException
  - uid: string | tslib.url.URL
    name: URL
    spec.typeScript:
      - name: 'string | '
        fullName: 'string | '
      - name: URL
        fullName: URL
        uid: tslib.url.URL
  - uid: tslib.http2.ClientSessionOptions | tslib.http2.SecureClientSessionOptions
    name: SecureClientSessionOptions
    spec.typeScript:
      - name: ClientSessionOptions
        fullName: ClientSessionOptions
        uid: tslib.http2.ClientSessionOptions
      - name: ' | '
        fullName: ' | '
      - name: SecureClientSessionOptions
        fullName: SecureClientSessionOptions
        uid: tslib.http2.SecureClientSessionOptions
  - uid: tslib.http2.Http2SecureServer
    name: Http2SecureServer
    spec.typeScript:
      - name: Http2SecureServer
        fullName: Http2SecureServer
        uid: tslib.http2.Http2SecureServer
  - uid: tslib.http2.SecureServerOptions
    name: SecureServerOptions
    spec.typeScript:
      - name: SecureServerOptions
        fullName: SecureServerOptions
        uid: tslib.http2.SecureServerOptions
  - uid: tslib.http2.Http2Server
    name: Http2Server
    spec.typeScript:
      - name: Http2Server
        fullName: Http2Server
        uid: tslib.http2.Http2Server
  - uid: tslib.http2.ServerOptions
    name: ServerOptions
    spec.typeScript:
      - name: ServerOptions
        fullName: ServerOptions
        uid: tslib.http2.ServerOptions
