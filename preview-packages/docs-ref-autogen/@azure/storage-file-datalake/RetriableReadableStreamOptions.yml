### YamlMime:UniversalReference
items:
  - uid: '@azure/abort-controller.RetriableReadableStreamOptions'
    name: RetriableReadableStreamOptions
    fullName: RetriableReadableStreamOptions
    children:
      - '@azure/abort-controller.RetriableReadableStreamOptions.abortSignal'
      - '@azure/abort-controller.RetriableReadableStreamOptions.doInjectErrorOnce'
      - '@azure/abort-controller.RetriableReadableStreamOptions.maxRetryRequests'
      - '@azure/abort-controller.RetriableReadableStreamOptions.onProgress'
    langs:
      - typeScript
    type: interface
    summary: ''
    package: '@azure/abort-controller'
  - uid: '@azure/abort-controller.RetriableReadableStreamOptions.abortSignal'
    name: abortSignal
    fullName: abortSignal
    children: []
    langs:
      - typeScript
    type: property
    summary: >-
      An implementation of the `AbortSignalLike` interface to signal the request
      to cancel the operation.

      For example, use the &commat;azure/abort-controller to create an
      `AbortSignal`.
    optional: true
    syntax:
      content: 'abortSignal?: AbortSignalLike'
      return:
        type:
          - '@azure/abort-controller.AbortSignalLike'
        description: ''
    package: '@azure/abort-controller'
  - uid: '@azure/abort-controller.RetriableReadableStreamOptions.doInjectErrorOnce'
    name: doInjectErrorOnce
    fullName: doInjectErrorOnce
    children: []
    langs:
      - typeScript
    type: property
    summary: >
      Debug purpose only. Used to inject an unexpected end to existing internal
      stream,

      to test stream retry works well or not.

      When assign it to true, for next incoming "data" event of internal stream,

      RetriableReadableStream will try to emit an "end" event to existing
      internal

      stream to force it end and start retry from the breaking point.

      The value will then update to "undefined", once the injection works.
    optional: true
    syntax:
      content: 'doInjectErrorOnce?: undefined | false | true'
      return:
        type:
          - undefined | false | true
        description: ''
    package: '@azure/abort-controller'
  - uid: '@azure/abort-controller.RetriableReadableStreamOptions.maxRetryRequests'
    name: maxRetryRequests
    fullName: maxRetryRequests
    children: []
    langs:
      - typeScript
    type: property
    summary: 'Max retry count (>=0), undefined or invalid value means no retry'
    optional: true
    syntax:
      content: 'maxRetryRequests?: undefined | number'
      return:
        type:
          - undefined | number
        description: ''
    package: '@azure/abort-controller'
  - uid: '@azure/abort-controller.RetriableReadableStreamOptions.onProgress'
    name: onProgress
    fullName: onProgress
    children: []
    langs:
      - typeScript
    type: property
    summary: Read progress event handler
    optional: true
    syntax:
      content: 'onProgress?: undefined | (progress: TransferProgressEvent) => void'
      return:
        type:
          - 'undefined | (progress: TransferProgressEvent) => void'
        description: ''
    package: '@azure/abort-controller'
references:
  - uid: '@azure/abort-controller.AbortSignalLike'
    name: AbortSignalLike
    spec.typeScript:
      - name: AbortSignalLike
        fullName: AbortSignalLike
        uid: '@azure/abort-controller.AbortSignalLike'
