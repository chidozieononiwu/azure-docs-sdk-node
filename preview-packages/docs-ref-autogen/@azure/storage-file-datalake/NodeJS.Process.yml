### YamlMime:UniversalReference
items:
  - uid: '@azure/abort-controller.NodeJS.Process'
    name: Process
    fullName: Process
    children:
      - '@azure/abort-controller.NodeJS.Process.abort'
      - '@azure/abort-controller.NodeJS.Process.addListener'
      - '@azure/abort-controller.NodeJS.Process.addListener_1'
      - '@azure/abort-controller.NodeJS.Process.addListener_2'
      - '@azure/abort-controller.NodeJS.Process.addListener_7'
      - '@azure/abort-controller.NodeJS.Process.addListener_11'
      - '@azure/abort-controller.NodeJS.Process.addListener_9'
      - '@azure/abort-controller.NodeJS.Process.addListener_3'
      - '@azure/abort-controller.NodeJS.Process.addListener_10'
      - '@azure/abort-controller.NodeJS.Process.addListener_4'
      - '@azure/abort-controller.NodeJS.Process.addListener_5'
      - '@azure/abort-controller.NodeJS.Process.addListener_6'
      - '@azure/abort-controller.NodeJS.Process.addListener_8'
      - '@azure/abort-controller.NodeJS.Process.allowedNodeEnvironmentFlags'
      - '@azure/abort-controller.NodeJS.Process.arch'
      - '@azure/abort-controller.NodeJS.Process.argv'
      - '@azure/abort-controller.NodeJS.Process.argv0'
      - '@azure/abort-controller.NodeJS.Process.chdir'
      - '@azure/abort-controller.NodeJS.Process.config'
      - '@azure/abort-controller.NodeJS.Process.connected'
      - '@azure/abort-controller.NodeJS.Process.cpuUsage'
      - '@azure/abort-controller.NodeJS.Process.cwd'
      - '@azure/abort-controller.NodeJS.Process.debugPort'
      - '@azure/abort-controller.NodeJS.Process.disconnect'
      - '@azure/abort-controller.NodeJS.Process.domain'
      - '@azure/abort-controller.NodeJS.Process.emit'
      - '@azure/abort-controller.NodeJS.Process.emit_1'
      - '@azure/abort-controller.NodeJS.Process.emit_2'
      - '@azure/abort-controller.NodeJS.Process.emit_7'
      - '@azure/abort-controller.NodeJS.Process.emit_11'
      - '@azure/abort-controller.NodeJS.Process.emit_9'
      - '@azure/abort-controller.NodeJS.Process.emit_3'
      - '@azure/abort-controller.NodeJS.Process.emit_10'
      - '@azure/abort-controller.NodeJS.Process.emit_4'
      - '@azure/abort-controller.NodeJS.Process.emit_5'
      - '@azure/abort-controller.NodeJS.Process.emit_6'
      - '@azure/abort-controller.NodeJS.Process.emit_8'
      - '@azure/abort-controller.NodeJS.Process.emitWarning'
      - '@azure/abort-controller.NodeJS.Process.env'
      - '@azure/abort-controller.NodeJS.Process.eventNames'
      - '@azure/abort-controller.NodeJS.Process.execArgv'
      - '@azure/abort-controller.NodeJS.Process.execPath'
      - '@azure/abort-controller.NodeJS.Process.exit'
      - '@azure/abort-controller.NodeJS.Process.exitCode'
      - '@azure/abort-controller.NodeJS.Process.features'
      - '@azure/abort-controller.NodeJS.Process.getegid'
      - '@azure/abort-controller.NodeJS.Process.geteuid'
      - '@azure/abort-controller.NodeJS.Process.getgid'
      - '@azure/abort-controller.NodeJS.Process.getgroups'
      - '@azure/abort-controller.NodeJS.Process.getMaxListeners'
      - '@azure/abort-controller.NodeJS.Process.getuid'
      - >-
        @azure/abort-controller.NodeJS.Process.hasUncaughtExceptionCaptureCallback
      - '@azure/abort-controller.NodeJS.Process.hrtime'
      - '@azure/abort-controller.NodeJS.Process.kill'
      - '@azure/abort-controller.NodeJS.Process.listenerCount'
      - '@azure/abort-controller.NodeJS.Process.listeners'
      - '@azure/abort-controller.NodeJS.Process.listeners_1'
      - '@azure/abort-controller.NodeJS.Process.listeners_2'
      - '@azure/abort-controller.NodeJS.Process.listeners_7'
      - '@azure/abort-controller.NodeJS.Process.listeners_11'
      - '@azure/abort-controller.NodeJS.Process.listeners_9'
      - '@azure/abort-controller.NodeJS.Process.listeners_3'
      - '@azure/abort-controller.NodeJS.Process.listeners_10'
      - '@azure/abort-controller.NodeJS.Process.listeners_4'
      - '@azure/abort-controller.NodeJS.Process.listeners_5'
      - '@azure/abort-controller.NodeJS.Process.listeners_6'
      - '@azure/abort-controller.NodeJS.Process.listeners_8'
      - '@azure/abort-controller.NodeJS.Process.mainModule'
      - '@azure/abort-controller.NodeJS.Process.memoryUsage'
      - '@azure/abort-controller.NodeJS.Process.nextTick'
      - '@azure/abort-controller.NodeJS.Process.off'
      - '@azure/abort-controller.NodeJS.Process.on'
      - '@azure/abort-controller.NodeJS.Process.on_1'
      - '@azure/abort-controller.NodeJS.Process.on_2'
      - '@azure/abort-controller.NodeJS.Process.on_7'
      - '@azure/abort-controller.NodeJS.Process.on_11'
      - '@azure/abort-controller.NodeJS.Process.on_9'
      - '@azure/abort-controller.NodeJS.Process.on_3'
      - '@azure/abort-controller.NodeJS.Process.on_10'
      - '@azure/abort-controller.NodeJS.Process.on_4'
      - '@azure/abort-controller.NodeJS.Process.on_5'
      - '@azure/abort-controller.NodeJS.Process.on_6'
      - '@azure/abort-controller.NodeJS.Process.on_8'
      - '@azure/abort-controller.NodeJS.Process.once'
      - '@azure/abort-controller.NodeJS.Process.once_1'
      - '@azure/abort-controller.NodeJS.Process.once_2'
      - '@azure/abort-controller.NodeJS.Process.once_7'
      - '@azure/abort-controller.NodeJS.Process.once_11'
      - '@azure/abort-controller.NodeJS.Process.once_9'
      - '@azure/abort-controller.NodeJS.Process.once_3'
      - '@azure/abort-controller.NodeJS.Process.once_10'
      - '@azure/abort-controller.NodeJS.Process.once_4'
      - '@azure/abort-controller.NodeJS.Process.once_5'
      - '@azure/abort-controller.NodeJS.Process.once_6'
      - '@azure/abort-controller.NodeJS.Process.once_8'
      - '@azure/abort-controller.NodeJS.Process.openStdin'
      - '@azure/abort-controller.NodeJS.Process.pid'
      - '@azure/abort-controller.NodeJS.Process.platform'
      - '@azure/abort-controller.NodeJS.Process.ppid'
      - '@azure/abort-controller.NodeJS.Process.prependListener'
      - '@azure/abort-controller.NodeJS.Process.prependListener_1'
      - '@azure/abort-controller.NodeJS.Process.prependListener_2'
      - '@azure/abort-controller.NodeJS.Process.prependListener_7'
      - '@azure/abort-controller.NodeJS.Process.prependListener_11'
      - '@azure/abort-controller.NodeJS.Process.prependListener_9'
      - '@azure/abort-controller.NodeJS.Process.prependListener_3'
      - '@azure/abort-controller.NodeJS.Process.prependListener_10'
      - '@azure/abort-controller.NodeJS.Process.prependListener_4'
      - '@azure/abort-controller.NodeJS.Process.prependListener_5'
      - '@azure/abort-controller.NodeJS.Process.prependListener_6'
      - '@azure/abort-controller.NodeJS.Process.prependListener_8'
      - '@azure/abort-controller.NodeJS.Process.prependOnceListener'
      - '@azure/abort-controller.NodeJS.Process.prependOnceListener_1'
      - '@azure/abort-controller.NodeJS.Process.prependOnceListener_2'
      - '@azure/abort-controller.NodeJS.Process.prependOnceListener_7'
      - '@azure/abort-controller.NodeJS.Process.prependOnceListener_11'
      - '@azure/abort-controller.NodeJS.Process.prependOnceListener_9'
      - '@azure/abort-controller.NodeJS.Process.prependOnceListener_3'
      - '@azure/abort-controller.NodeJS.Process.prependOnceListener_10'
      - '@azure/abort-controller.NodeJS.Process.prependOnceListener_4'
      - '@azure/abort-controller.NodeJS.Process.prependOnceListener_5'
      - '@azure/abort-controller.NodeJS.Process.prependOnceListener_6'
      - '@azure/abort-controller.NodeJS.Process.prependOnceListener_8'
      - '@azure/abort-controller.NodeJS.Process.rawListeners'
      - '@azure/abort-controller.NodeJS.Process.release'
      - '@azure/abort-controller.NodeJS.Process.removeAllListeners'
      - '@azure/abort-controller.NodeJS.Process.removeListener'
      - '@azure/abort-controller.NodeJS.Process.report'
      - '@azure/abort-controller.NodeJS.Process.resourceUsage'
      - '@azure/abort-controller.NodeJS.Process.send'
      - '@azure/abort-controller.NodeJS.Process.setegid'
      - '@azure/abort-controller.NodeJS.Process.seteuid'
      - '@azure/abort-controller.NodeJS.Process.setgid'
      - '@azure/abort-controller.NodeJS.Process.setgroups'
      - '@azure/abort-controller.NodeJS.Process.setMaxListeners'
      - '@azure/abort-controller.NodeJS.Process.setuid'
      - >-
        @azure/abort-controller.NodeJS.Process.setUncaughtExceptionCaptureCallback
      - '@azure/abort-controller.NodeJS.Process.stderr'
      - '@azure/abort-controller.NodeJS.Process.stdin'
      - '@azure/abort-controller.NodeJS.Process.stdout'
      - '@azure/abort-controller.NodeJS.Process.title'
      - '@azure/abort-controller.NodeJS.Process.umask'
      - '@azure/abort-controller.NodeJS.Process.uptime'
      - '@azure/abort-controller.NodeJS.Process.version'
      - '@azure/abort-controller.NodeJS.Process.versions'
    langs:
      - typeScript
    type: interface
    summary: ''
    extends:
      name: '@azure/abort-controller.NodeJS.EventEmitter'
    package: '@azure/abort-controller'
  - uid: '@azure/abort-controller.NodeJS.Process.abort'
    name: abort()
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: function abort()
      parameters: []
    package: '@azure/abort-controller'
  - uid: '@azure/abort-controller.NodeJS.Process.addListener'
    name: 'addListener("beforeExit", BeforeExitListener)'
    children: []
    type: method
    langs:
      - typeScript
    summary: |-
      EventEmitter
        1. beforeExit
        2. disconnect
        3. exit
        4. message
        5. rejectionHandled
        6. uncaughtException
        7. unhandledRejection
        8. warning
        9. message
       10. <All OS Signals>
       11. newListener/removeListener inherited from EventEmitter
    syntax:
      content: 'function addListener(event: "beforeExit", listener: BeforeExitListener)'
      parameters:
        - id: event
          type:
            - '"beforeExit"'
          description: ''
        - id: listener
          type:
            - '@azure/abort-controller.NodeJS.BeforeExitListener'
          description: ''
      return:
        type:
          - this
        description: ''
    package: '@azure/abort-controller'
  - uid: '@azure/abort-controller.NodeJS.Process.addListener_1'
    name: 'addListener("disconnect", DisconnectListener)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function addListener(event: "disconnect", listener: DisconnectListener)'
      parameters:
        - id: event
          type:
            - '"disconnect"'
          description: ''
        - id: listener
          type:
            - '@azure/abort-controller.NodeJS.DisconnectListener'
          description: ''
      return:
        type:
          - this
        description: ''
    package: '@azure/abort-controller'
  - uid: '@azure/abort-controller.NodeJS.Process.addListener_2'
    name: 'addListener("exit", ExitListener)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function addListener(event: "exit", listener: ExitListener)'
      parameters:
        - id: event
          type:
            - '"exit"'
          description: ''
        - id: listener
          type:
            - '@azure/abort-controller.NodeJS.ExitListener'
          description: ''
      return:
        type:
          - this
        description: ''
    package: '@azure/abort-controller'
  - uid: '@azure/abort-controller.NodeJS.Process.addListener_7'
    name: 'addListener("message", MessageListener)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function addListener(event: "message", listener: MessageListener)'
      parameters:
        - id: event
          type:
            - '"message"'
          description: ''
        - id: listener
          type:
            - '@azure/abort-controller.NodeJS.MessageListener'
          description: ''
      return:
        type:
          - this
        description: ''
    package: '@azure/abort-controller'
  - uid: '@azure/abort-controller.NodeJS.Process.addListener_11'
    name: 'addListener("multipleResolves", MultipleResolveListener)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function addListener(event: "multipleResolves", listener:
        MultipleResolveListener)
      parameters:
        - id: event
          type:
            - '"multipleResolves"'
          description: ''
        - id: listener
          type:
            - '@azure/abort-controller.NodeJS.MultipleResolveListener'
          description: ''
      return:
        type:
          - this
        description: ''
    package: '@azure/abort-controller'
  - uid: '@azure/abort-controller.NodeJS.Process.addListener_9'
    name: 'addListener("newListener", NewListenerListener)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function addListener(event: "newListener", listener:
        NewListenerListener)
      parameters:
        - id: event
          type:
            - '"newListener"'
          description: ''
        - id: listener
          type:
            - '@azure/abort-controller.NodeJS.NewListenerListener'
          description: ''
      return:
        type:
          - this
        description: ''
    package: '@azure/abort-controller'
  - uid: '@azure/abort-controller.NodeJS.Process.addListener_3'
    name: 'addListener("rejectionHandled", RejectionHandledListener)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function addListener(event: "rejectionHandled", listener:
        RejectionHandledListener)
      parameters:
        - id: event
          type:
            - '"rejectionHandled"'
          description: ''
        - id: listener
          type:
            - '@azure/abort-controller.NodeJS.RejectionHandledListener'
          description: ''
      return:
        type:
          - this
        description: ''
    package: '@azure/abort-controller'
  - uid: '@azure/abort-controller.NodeJS.Process.addListener_10'
    name: 'addListener("removeListener", RemoveListenerListener)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function addListener(event: "removeListener", listener:
        RemoveListenerListener)
      parameters:
        - id: event
          type:
            - '"removeListener"'
          description: ''
        - id: listener
          type:
            - '@azure/abort-controller.NodeJS.RemoveListenerListener'
          description: ''
      return:
        type:
          - this
        description: ''
    package: '@azure/abort-controller'
  - uid: '@azure/abort-controller.NodeJS.Process.addListener_4'
    name: 'addListener("uncaughtException", UncaughtExceptionListener)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function addListener(event: "uncaughtException", listener:
        UncaughtExceptionListener)
      parameters:
        - id: event
          type:
            - '"uncaughtException"'
          description: ''
        - id: listener
          type:
            - '@azure/abort-controller.NodeJS.UncaughtExceptionListener'
          description: ''
      return:
        type:
          - this
        description: ''
    package: '@azure/abort-controller'
  - uid: '@azure/abort-controller.NodeJS.Process.addListener_5'
    name: 'addListener("unhandledRejection", UnhandledRejectionListener)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function addListener(event: "unhandledRejection", listener:
        UnhandledRejectionListener)
      parameters:
        - id: event
          type:
            - '"unhandledRejection"'
          description: ''
        - id: listener
          type:
            - '@azure/abort-controller.NodeJS.UnhandledRejectionListener'
          description: ''
      return:
        type:
          - this
        description: ''
    package: '@azure/abort-controller'
  - uid: '@azure/abort-controller.NodeJS.Process.addListener_6'
    name: 'addListener("warning", WarningListener)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function addListener(event: "warning", listener: WarningListener)'
      parameters:
        - id: event
          type:
            - '"warning"'
          description: ''
        - id: listener
          type:
            - '@azure/abort-controller.NodeJS.WarningListener'
          description: ''
      return:
        type:
          - this
        description: ''
    package: '@azure/abort-controller'
  - uid: '@azure/abort-controller.NodeJS.Process.addListener_8'
    name: 'addListener(Signals, SignalsListener)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function addListener(event: Signals, listener: SignalsListener)'
      parameters:
        - id: event
          type:
            - '@azure/abort-controller.NodeJS.Signals'
          description: ''
        - id: listener
          type:
            - '@azure/abort-controller.NodeJS.SignalsListener'
          description: ''
      return:
        type:
          - this
        description: ''
    package: '@azure/abort-controller'
  - uid: '@azure/abort-controller.NodeJS.Process.allowedNodeEnvironmentFlags'
    name: allowedNodeEnvironmentFlags
    fullName: allowedNodeEnvironmentFlags
    children: []
    langs:
      - typeScript
    type: property
    summary: |-
      The `process.allowedNodeEnvironmentFlags` property is a special,
      read-only `Set` of flags allowable within the [`NODE_OPTIONS`][]
      environment variable.
    syntax:
      content: 'allowedNodeEnvironmentFlags: ReadonlySet<string>'
      return:
        type:
          - ReadonlySet<string>
        description: ''
    package: '@azure/abort-controller'
  - uid: '@azure/abort-controller.NodeJS.Process.arch'
    name: arch
    fullName: arch
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    syntax:
      content: 'arch: string'
      return:
        type:
          - string
        description: ''
    package: '@azure/abort-controller'
  - uid: '@azure/abort-controller.NodeJS.Process.argv'
    name: argv
    fullName: argv
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    syntax:
      content: 'argv: string[]'
      return:
        type:
          - 'string[]'
        description: ''
    package: '@azure/abort-controller'
  - uid: '@azure/abort-controller.NodeJS.Process.argv0'
    name: argv0
    fullName: argv0
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    syntax:
      content: 'argv0: string'
      return:
        type:
          - string
        description: ''
    package: '@azure/abort-controller'
  - uid: '@azure/abort-controller.NodeJS.Process.chdir'
    name: chdir(string)
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function chdir(directory: string)'
      parameters:
        - id: directory
          type:
            - string
          description: ''
    package: '@azure/abort-controller'
  - uid: '@azure/abort-controller.NodeJS.Process.config'
    name: config
    fullName: config
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    syntax:
      content: 'config: Object'
      return:
        type:
          - Object
        description: ''
    package: '@azure/abort-controller'
  - uid: '@azure/abort-controller.NodeJS.Process.connected'
    name: connected
    fullName: connected
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    syntax:
      content: 'connected: boolean'
      return:
        type:
          - boolean
        description: ''
    package: '@azure/abort-controller'
  - uid: '@azure/abort-controller.NodeJS.Process.cpuUsage'
    name: cpuUsage(CpuUsage)
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function cpuUsage(previousValue?: CpuUsage)'
      parameters:
        - id: previousValue
          type:
            - '@azure/abort-controller.NodeJS.CpuUsage'
          description: ''
          optional: true
      return:
        type:
          - '@azure/abort-controller.NodeJS.CpuUsage'
        description: ''
    package: '@azure/abort-controller'
  - uid: '@azure/abort-controller.NodeJS.Process.cwd'
    name: cwd()
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: function cwd()
      parameters: []
      return:
        type:
          - string
        description: ''
    package: '@azure/abort-controller'
  - uid: '@azure/abort-controller.NodeJS.Process.debugPort'
    name: debugPort
    fullName: debugPort
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    syntax:
      content: 'debugPort: number'
      return:
        type:
          - number
        description: ''
    package: '@azure/abort-controller'
  - uid: '@azure/abort-controller.NodeJS.Process.disconnect'
    name: disconnect()
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: function disconnect()
      parameters: []
    package: '@azure/abort-controller'
  - uid: '@azure/abort-controller.NodeJS.Process.domain'
    name: domain
    fullName: domain
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    syntax:
      content: 'domain: Domain'
      return:
        type:
          - '@azure/abort-controller.NodeJS.Domain'
        description: ''
    package: '@azure/abort-controller'
  - uid: '@azure/abort-controller.NodeJS.Process.emit'
    name: 'emit("beforeExit", number)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function emit(event: "beforeExit", code: number)'
      parameters:
        - id: event
          type:
            - '"beforeExit"'
          description: ''
        - id: code
          type:
            - number
          description: ''
      return:
        type:
          - boolean
        description: ''
    package: '@azure/abort-controller'
  - uid: '@azure/abort-controller.NodeJS.Process.emit_1'
    name: emit("disconnect")
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function emit(event: "disconnect")'
      parameters:
        - id: event
          type:
            - '"disconnect"'
          description: ''
      return:
        type:
          - boolean
        description: ''
    package: '@azure/abort-controller'
  - uid: '@azure/abort-controller.NodeJS.Process.emit_2'
    name: 'emit("exit", number)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function emit(event: "exit", code: number)'
      parameters:
        - id: event
          type:
            - '"exit"'
          description: ''
        - id: code
          type:
            - number
          description: ''
      return:
        type:
          - boolean
        description: ''
    package: '@azure/abort-controller'
  - uid: '@azure/abort-controller.NodeJS.Process.emit_7'
    name: 'emit("message", any, any)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function emit(event: "message", message: any, sendHandle: any)'
      parameters:
        - id: event
          type:
            - '"message"'
          description: ''
        - id: message
          type:
            - any
          description: ''
        - id: sendHandle
          type:
            - any
          description: ''
      return:
        type:
          - this
        description: ''
    package: '@azure/abort-controller'
  - uid: '@azure/abort-controller.NodeJS.Process.emit_11'
    name: 'emit("multipleResolves", MultipleResolveListener)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function emit(event: "multipleResolves", listener:
        MultipleResolveListener)
      parameters:
        - id: event
          type:
            - '"multipleResolves"'
          description: ''
        - id: listener
          type:
            - '@azure/abort-controller.NodeJS.MultipleResolveListener'
          description: ''
      return:
        type:
          - this
        description: ''
    package: '@azure/abort-controller'
  - uid: '@azure/abort-controller.NodeJS.Process.emit_9'
    name: 'emit("newListener", string | symbol, (args: any[]) => void)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function emit(event: "newListener", eventName: string | symbol,
        listener: (args: any[]) => void)
      parameters:
        - id: event
          type:
            - '"newListener"'
          description: ''
        - id: eventName
          type:
            - string | symbol
          description: ''
        - id: listener
          type:
            - '(args: any[]) => void'
          description: ''
      return:
        type:
          - this
        description: ''
    package: '@azure/abort-controller'
  - uid: '@azure/abort-controller.NodeJS.Process.emit_3'
    name: 'emit("rejectionHandled", Promise<any>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function emit(event: "rejectionHandled", promise: Promise<any>)'
      parameters:
        - id: event
          type:
            - '"rejectionHandled"'
          description: ''
        - id: promise
          type:
            - Promise<any>
          description: ''
      return:
        type:
          - boolean
        description: ''
    package: '@azure/abort-controller'
  - uid: '@azure/abort-controller.NodeJS.Process.emit_10'
    name: 'emit("removeListener", string, (args: any[]) => void)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function emit(event: "removeListener", eventName: string, listener:
        (args: any[]) => void)
      parameters:
        - id: event
          type:
            - '"removeListener"'
          description: ''
        - id: eventName
          type:
            - string
          description: ''
        - id: listener
          type:
            - '(args: any[]) => void'
          description: ''
      return:
        type:
          - this
        description: ''
    package: '@azure/abort-controller'
  - uid: '@azure/abort-controller.NodeJS.Process.emit_4'
    name: 'emit("uncaughtException", Error)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function emit(event: "uncaughtException", error: Error)'
      parameters:
        - id: event
          type:
            - '"uncaughtException"'
          description: ''
        - id: error
          type:
            - Error
          description: ''
      return:
        type:
          - boolean
        description: ''
    package: '@azure/abort-controller'
  - uid: '@azure/abort-controller.NodeJS.Process.emit_5'
    name: 'emit("unhandledRejection", any, Promise<any>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function emit(event: "unhandledRejection", reason: any, promise:
        Promise<any>)
      parameters:
        - id: event
          type:
            - '"unhandledRejection"'
          description: ''
        - id: reason
          type:
            - any
          description: ''
        - id: promise
          type:
            - Promise<any>
          description: ''
      return:
        type:
          - boolean
        description: ''
    package: '@azure/abort-controller'
  - uid: '@azure/abort-controller.NodeJS.Process.emit_6'
    name: 'emit("warning", Error)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function emit(event: "warning", warning: Error)'
      parameters:
        - id: event
          type:
            - '"warning"'
          description: ''
        - id: warning
          type:
            - Error
          description: ''
      return:
        type:
          - boolean
        description: ''
    package: '@azure/abort-controller'
  - uid: '@azure/abort-controller.NodeJS.Process.emit_8'
    name: 'emit(Signals, Signals)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function emit(event: Signals, signal: Signals)'
      parameters:
        - id: event
          type:
            - '@azure/abort-controller.NodeJS.Signals'
          description: ''
        - id: signal
          type:
            - '@azure/abort-controller.NodeJS.Signals'
          description: ''
      return:
        type:
          - boolean
        description: ''
    package: '@azure/abort-controller'
  - uid: '@azure/abort-controller.NodeJS.Process.emitWarning'
    name: 'emitWarning(string | Error, undefined | string, Function)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function emitWarning(warning: string | Error, name?: undefined | string,
        ctor?: Function)
      parameters:
        - id: warning
          type:
            - string | Error
          description: ''
        - id: name
          type:
            - undefined | string
          description: ''
          optional: true
        - id: ctor
          type:
            - '@azure/abort-controller.NodeJS.Global.Function'
          description: ''
          optional: true
    package: '@azure/abort-controller'
  - uid: '@azure/abort-controller.NodeJS.Process.env'
    name: env
    fullName: env
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    syntax:
      content: 'env: ProcessEnv'
      return:
        type:
          - '@azure/abort-controller.NodeJS.ProcessEnv'
        description: ''
    package: '@azure/abort-controller'
  - uid: '@azure/abort-controller.NodeJS.Process.eventNames'
    name: eventNames()
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: function eventNames()
      parameters: []
      return:
        type:
          - Array<string | symbol>
        description: ''
    package: '@azure/abort-controller'
  - uid: '@azure/abort-controller.NodeJS.Process.execArgv'
    name: execArgv
    fullName: execArgv
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    syntax:
      content: 'execArgv: string[]'
      return:
        type:
          - 'string[]'
        description: ''
    package: '@azure/abort-controller'
  - uid: '@azure/abort-controller.NodeJS.Process.execPath'
    name: execPath
    fullName: execPath
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    syntax:
      content: 'execPath: string'
      return:
        type:
          - string
        description: ''
    package: '@azure/abort-controller'
  - uid: '@azure/abort-controller.NodeJS.Process.exit'
    name: exit(undefined | number)
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function exit(code?: undefined | number)'
      parameters:
        - id: code
          type:
            - undefined | number
          description: ''
          optional: true
      return:
        type:
          - never
        description: ''
    package: '@azure/abort-controller'
  - uid: '@azure/abort-controller.NodeJS.Process.exitCode'
    name: exitCode
    fullName: exitCode
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    optional: true
    syntax:
      content: 'exitCode?: undefined | number'
      return:
        type:
          - undefined | number
        description: ''
    package: '@azure/abort-controller'
  - uid: '@azure/abort-controller.NodeJS.Process.features'
    name: features
    fullName: features
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    syntax:
      content: 'features: Object'
      return:
        type:
          - Object
        description: ''
    package: '@azure/abort-controller'
  - uid: '@azure/abort-controller.NodeJS.Process.getegid'
    name: getegid()
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: function getegid()
      parameters: []
      return:
        type:
          - number
        description: ''
    package: '@azure/abort-controller'
  - uid: '@azure/abort-controller.NodeJS.Process.geteuid'
    name: geteuid()
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: function geteuid()
      parameters: []
      return:
        type:
          - number
        description: ''
    package: '@azure/abort-controller'
  - uid: '@azure/abort-controller.NodeJS.Process.getgid'
    name: getgid()
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: function getgid()
      parameters: []
      return:
        type:
          - number
        description: ''
    package: '@azure/abort-controller'
  - uid: '@azure/abort-controller.NodeJS.Process.getgroups'
    name: getgroups()
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: function getgroups()
      parameters: []
      return:
        type:
          - 'number[]'
        description: ''
    package: '@azure/abort-controller'
  - uid: '@azure/abort-controller.NodeJS.Process.getMaxListeners'
    name: getMaxListeners()
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: function getMaxListeners()
      parameters: []
      return:
        type:
          - number
        description: ''
    package: '@azure/abort-controller'
  - uid: '@azure/abort-controller.NodeJS.Process.getuid'
    name: getuid()
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: function getuid()
      parameters: []
      return:
        type:
          - number
        description: ''
    package: '@azure/abort-controller'
  - uid: '@azure/abort-controller.NodeJS.Process.hasUncaughtExceptionCaptureCallback'
    name: hasUncaughtExceptionCaptureCallback()
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: function hasUncaughtExceptionCaptureCallback()
      parameters: []
      return:
        type:
          - boolean
        description: ''
    package: '@azure/abort-controller'
  - uid: '@azure/abort-controller.NodeJS.Process.hrtime'
    name: hrtime
    fullName: hrtime
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    syntax:
      content: 'hrtime: HRTime'
      return:
        type:
          - HRTime
        description: ''
    package: '@azure/abort-controller'
  - uid: '@azure/abort-controller.NodeJS.Process.kill'
    name: 'kill(number, string | number)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function kill(pid: number, signal?: string | number)'
      parameters:
        - id: pid
          type:
            - number
          description: ''
        - id: signal
          type:
            - string | number
          description: ''
          optional: true
    package: '@azure/abort-controller'
  - uid: '@azure/abort-controller.NodeJS.Process.listenerCount'
    name: listenerCount(string | symbol)
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function listenerCount(type: string | symbol)'
      parameters:
        - id: type
          type:
            - string | symbol
          description: ''
      return:
        type:
          - number
        description: ''
    package: '@azure/abort-controller'
  - uid: '@azure/abort-controller.NodeJS.Process.listeners'
    name: listeners("beforeExit")
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function listeners(event: "beforeExit")'
      parameters:
        - id: event
          type:
            - '"beforeExit"'
          description: ''
      return:
        type:
          - '@azure/abort-controller.NodeJS.BeforeExitListener[]'
        description: ''
    package: '@azure/abort-controller'
  - uid: '@azure/abort-controller.NodeJS.Process.listeners_1'
    name: listeners("disconnect")
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function listeners(event: "disconnect")'
      parameters:
        - id: event
          type:
            - '"disconnect"'
          description: ''
      return:
        type:
          - '@azure/abort-controller.NodeJS.DisconnectListener[]'
        description: ''
    package: '@azure/abort-controller'
  - uid: '@azure/abort-controller.NodeJS.Process.listeners_2'
    name: listeners("exit")
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function listeners(event: "exit")'
      parameters:
        - id: event
          type:
            - '"exit"'
          description: ''
      return:
        type:
          - '@azure/abort-controller.NodeJS.ExitListener[]'
        description: ''
    package: '@azure/abort-controller'
  - uid: '@azure/abort-controller.NodeJS.Process.listeners_7'
    name: listeners("message")
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function listeners(event: "message")'
      parameters:
        - id: event
          type:
            - '"message"'
          description: ''
      return:
        type:
          - '@azure/abort-controller.NodeJS.MessageListener[]'
        description: ''
    package: '@azure/abort-controller'
  - uid: '@azure/abort-controller.NodeJS.Process.listeners_11'
    name: listeners("multipleResolves")
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function listeners(event: "multipleResolves")'
      parameters:
        - id: event
          type:
            - '"multipleResolves"'
          description: ''
      return:
        type:
          - '@azure/abort-controller.NodeJS.MultipleResolveListener[]'
        description: ''
    package: '@azure/abort-controller'
  - uid: '@azure/abort-controller.NodeJS.Process.listeners_9'
    name: listeners("newListener")
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function listeners(event: "newListener")'
      parameters:
        - id: event
          type:
            - '"newListener"'
          description: ''
      return:
        type:
          - '@azure/abort-controller.NodeJS.NewListenerListener[]'
        description: ''
    package: '@azure/abort-controller'
  - uid: '@azure/abort-controller.NodeJS.Process.listeners_3'
    name: listeners("rejectionHandled")
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function listeners(event: "rejectionHandled")'
      parameters:
        - id: event
          type:
            - '"rejectionHandled"'
          description: ''
      return:
        type:
          - '@azure/abort-controller.NodeJS.RejectionHandledListener[]'
        description: ''
    package: '@azure/abort-controller'
  - uid: '@azure/abort-controller.NodeJS.Process.listeners_10'
    name: listeners("removeListener")
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function listeners(event: "removeListener")'
      parameters:
        - id: event
          type:
            - '"removeListener"'
          description: ''
      return:
        type:
          - '@azure/abort-controller.NodeJS.RemoveListenerListener[]'
        description: ''
    package: '@azure/abort-controller'
  - uid: '@azure/abort-controller.NodeJS.Process.listeners_4'
    name: listeners("uncaughtException")
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function listeners(event: "uncaughtException")'
      parameters:
        - id: event
          type:
            - '"uncaughtException"'
          description: ''
      return:
        type:
          - '@azure/abort-controller.NodeJS.UncaughtExceptionListener[]'
        description: ''
    package: '@azure/abort-controller'
  - uid: '@azure/abort-controller.NodeJS.Process.listeners_5'
    name: listeners("unhandledRejection")
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function listeners(event: "unhandledRejection")'
      parameters:
        - id: event
          type:
            - '"unhandledRejection"'
          description: ''
      return:
        type:
          - '@azure/abort-controller.NodeJS.UnhandledRejectionListener[]'
        description: ''
    package: '@azure/abort-controller'
  - uid: '@azure/abort-controller.NodeJS.Process.listeners_6'
    name: listeners("warning")
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function listeners(event: "warning")'
      parameters:
        - id: event
          type:
            - '"warning"'
          description: ''
      return:
        type:
          - '@azure/abort-controller.NodeJS.WarningListener[]'
        description: ''
    package: '@azure/abort-controller'
  - uid: '@azure/abort-controller.NodeJS.Process.listeners_8'
    name: listeners(Signals)
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function listeners(event: Signals)'
      parameters:
        - id: event
          type:
            - '@azure/abort-controller.NodeJS.Signals'
          description: ''
      return:
        type:
          - '@azure/abort-controller.NodeJS.SignalsListener[]'
        description: ''
    package: '@azure/abort-controller'
  - uid: '@azure/abort-controller.NodeJS.Process.mainModule'
    name: mainModule
    fullName: mainModule
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    optional: true
    syntax:
      content: 'mainModule?: Module'
      return:
        type:
          - '@azure/abort-controller.NodeJS.Module'
        description: ''
    package: '@azure/abort-controller'
  - uid: '@azure/abort-controller.NodeJS.Process.memoryUsage'
    name: memoryUsage()
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: function memoryUsage()
      parameters: []
      return:
        type:
          - '@azure/abort-controller.NodeJS.MemoryUsage'
        description: ''
    package: '@azure/abort-controller'
  - uid: '@azure/abort-controller.NodeJS.Process.nextTick'
    name: 'nextTick(Function, any[])'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function nextTick(callback: Function, args: any[])'
      parameters:
        - id: callback
          type:
            - Function
          description: ''
        - id: args
          type:
            - 'any[]'
          description: ''
    package: '@azure/abort-controller'
  - uid: '@azure/abort-controller.NodeJS.Process.off'
    name: 'off(string | symbol, (args: any[]) => void)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function off(event: string | symbol, listener: (args: any[]) => void)'
      parameters:
        - id: event
          type:
            - string | symbol
          description: ''
        - id: listener
          type:
            - '(args: any[]) => void'
          description: ''
      return:
        type:
          - this
        description: ''
    package: '@azure/abort-controller'
  - uid: '@azure/abort-controller.NodeJS.Process.on'
    name: 'on("beforeExit", BeforeExitListener)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function on(event: "beforeExit", listener: BeforeExitListener)'
      parameters:
        - id: event
          type:
            - '"beforeExit"'
          description: ''
        - id: listener
          type:
            - '@azure/abort-controller.NodeJS.BeforeExitListener'
          description: ''
      return:
        type:
          - this
        description: ''
    package: '@azure/abort-controller'
  - uid: '@azure/abort-controller.NodeJS.Process.on_1'
    name: 'on("disconnect", DisconnectListener)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function on(event: "disconnect", listener: DisconnectListener)'
      parameters:
        - id: event
          type:
            - '"disconnect"'
          description: ''
        - id: listener
          type:
            - '@azure/abort-controller.NodeJS.DisconnectListener'
          description: ''
      return:
        type:
          - this
        description: ''
    package: '@azure/abort-controller'
  - uid: '@azure/abort-controller.NodeJS.Process.on_2'
    name: 'on("exit", ExitListener)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function on(event: "exit", listener: ExitListener)'
      parameters:
        - id: event
          type:
            - '"exit"'
          description: ''
        - id: listener
          type:
            - '@azure/abort-controller.NodeJS.ExitListener'
          description: ''
      return:
        type:
          - this
        description: ''
    package: '@azure/abort-controller'
  - uid: '@azure/abort-controller.NodeJS.Process.on_7'
    name: 'on("message", MessageListener)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function on(event: "message", listener: MessageListener)'
      parameters:
        - id: event
          type:
            - '"message"'
          description: ''
        - id: listener
          type:
            - '@azure/abort-controller.NodeJS.MessageListener'
          description: ''
      return:
        type:
          - this
        description: ''
    package: '@azure/abort-controller'
  - uid: '@azure/abort-controller.NodeJS.Process.on_11'
    name: 'on("multipleResolves", MultipleResolveListener)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function on(event: "multipleResolves", listener:
        MultipleResolveListener)
      parameters:
        - id: event
          type:
            - '"multipleResolves"'
          description: ''
        - id: listener
          type:
            - '@azure/abort-controller.NodeJS.MultipleResolveListener'
          description: ''
      return:
        type:
          - this
        description: ''
    package: '@azure/abort-controller'
  - uid: '@azure/abort-controller.NodeJS.Process.on_9'
    name: 'on("newListener", NewListenerListener)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function on(event: "newListener", listener: NewListenerListener)'
      parameters:
        - id: event
          type:
            - '"newListener"'
          description: ''
        - id: listener
          type:
            - '@azure/abort-controller.NodeJS.NewListenerListener'
          description: ''
      return:
        type:
          - this
        description: ''
    package: '@azure/abort-controller'
  - uid: '@azure/abort-controller.NodeJS.Process.on_3'
    name: 'on("rejectionHandled", RejectionHandledListener)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function on(event: "rejectionHandled", listener:
        RejectionHandledListener)
      parameters:
        - id: event
          type:
            - '"rejectionHandled"'
          description: ''
        - id: listener
          type:
            - '@azure/abort-controller.NodeJS.RejectionHandledListener'
          description: ''
      return:
        type:
          - this
        description: ''
    package: '@azure/abort-controller'
  - uid: '@azure/abort-controller.NodeJS.Process.on_10'
    name: 'on("removeListener", RemoveListenerListener)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function on(event: "removeListener", listener: RemoveListenerListener)'
      parameters:
        - id: event
          type:
            - '"removeListener"'
          description: ''
        - id: listener
          type:
            - '@azure/abort-controller.NodeJS.RemoveListenerListener'
          description: ''
      return:
        type:
          - this
        description: ''
    package: '@azure/abort-controller'
  - uid: '@azure/abort-controller.NodeJS.Process.on_4'
    name: 'on("uncaughtException", UncaughtExceptionListener)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function on(event: "uncaughtException", listener:
        UncaughtExceptionListener)
      parameters:
        - id: event
          type:
            - '"uncaughtException"'
          description: ''
        - id: listener
          type:
            - '@azure/abort-controller.NodeJS.UncaughtExceptionListener'
          description: ''
      return:
        type:
          - this
        description: ''
    package: '@azure/abort-controller'
  - uid: '@azure/abort-controller.NodeJS.Process.on_5'
    name: 'on("unhandledRejection", UnhandledRejectionListener)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function on(event: "unhandledRejection", listener:
        UnhandledRejectionListener)
      parameters:
        - id: event
          type:
            - '"unhandledRejection"'
          description: ''
        - id: listener
          type:
            - '@azure/abort-controller.NodeJS.UnhandledRejectionListener'
          description: ''
      return:
        type:
          - this
        description: ''
    package: '@azure/abort-controller'
  - uid: '@azure/abort-controller.NodeJS.Process.on_6'
    name: 'on("warning", WarningListener)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function on(event: "warning", listener: WarningListener)'
      parameters:
        - id: event
          type:
            - '"warning"'
          description: ''
        - id: listener
          type:
            - '@azure/abort-controller.NodeJS.WarningListener'
          description: ''
      return:
        type:
          - this
        description: ''
    package: '@azure/abort-controller'
  - uid: '@azure/abort-controller.NodeJS.Process.on_8'
    name: 'on(Signals, SignalsListener)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function on(event: Signals, listener: SignalsListener)'
      parameters:
        - id: event
          type:
            - '@azure/abort-controller.NodeJS.Signals'
          description: ''
        - id: listener
          type:
            - '@azure/abort-controller.NodeJS.SignalsListener'
          description: ''
      return:
        type:
          - this
        description: ''
    package: '@azure/abort-controller'
  - uid: '@azure/abort-controller.NodeJS.Process.once'
    name: 'once("beforeExit", BeforeExitListener)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function once(event: "beforeExit", listener: BeforeExitListener)'
      parameters:
        - id: event
          type:
            - '"beforeExit"'
          description: ''
        - id: listener
          type:
            - '@azure/abort-controller.NodeJS.BeforeExitListener'
          description: ''
      return:
        type:
          - this
        description: ''
    package: '@azure/abort-controller'
  - uid: '@azure/abort-controller.NodeJS.Process.once_1'
    name: 'once("disconnect", DisconnectListener)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function once(event: "disconnect", listener: DisconnectListener)'
      parameters:
        - id: event
          type:
            - '"disconnect"'
          description: ''
        - id: listener
          type:
            - '@azure/abort-controller.NodeJS.DisconnectListener'
          description: ''
      return:
        type:
          - this
        description: ''
    package: '@azure/abort-controller'
  - uid: '@azure/abort-controller.NodeJS.Process.once_2'
    name: 'once("exit", ExitListener)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function once(event: "exit", listener: ExitListener)'
      parameters:
        - id: event
          type:
            - '"exit"'
          description: ''
        - id: listener
          type:
            - '@azure/abort-controller.NodeJS.ExitListener'
          description: ''
      return:
        type:
          - this
        description: ''
    package: '@azure/abort-controller'
  - uid: '@azure/abort-controller.NodeJS.Process.once_7'
    name: 'once("message", MessageListener)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function once(event: "message", listener: MessageListener)'
      parameters:
        - id: event
          type:
            - '"message"'
          description: ''
        - id: listener
          type:
            - '@azure/abort-controller.NodeJS.MessageListener'
          description: ''
      return:
        type:
          - this
        description: ''
    package: '@azure/abort-controller'
  - uid: '@azure/abort-controller.NodeJS.Process.once_11'
    name: 'once("multipleResolves", MultipleResolveListener)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function once(event: "multipleResolves", listener:
        MultipleResolveListener)
      parameters:
        - id: event
          type:
            - '"multipleResolves"'
          description: ''
        - id: listener
          type:
            - '@azure/abort-controller.NodeJS.MultipleResolveListener'
          description: ''
      return:
        type:
          - this
        description: ''
    package: '@azure/abort-controller'
  - uid: '@azure/abort-controller.NodeJS.Process.once_9'
    name: 'once("newListener", NewListenerListener)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function once(event: "newListener", listener: NewListenerListener)'
      parameters:
        - id: event
          type:
            - '"newListener"'
          description: ''
        - id: listener
          type:
            - '@azure/abort-controller.NodeJS.NewListenerListener'
          description: ''
      return:
        type:
          - this
        description: ''
    package: '@azure/abort-controller'
  - uid: '@azure/abort-controller.NodeJS.Process.once_3'
    name: 'once("rejectionHandled", RejectionHandledListener)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function once(event: "rejectionHandled", listener:
        RejectionHandledListener)
      parameters:
        - id: event
          type:
            - '"rejectionHandled"'
          description: ''
        - id: listener
          type:
            - '@azure/abort-controller.NodeJS.RejectionHandledListener'
          description: ''
      return:
        type:
          - this
        description: ''
    package: '@azure/abort-controller'
  - uid: '@azure/abort-controller.NodeJS.Process.once_10'
    name: 'once("removeListener", RemoveListenerListener)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function once(event: "removeListener", listener: RemoveListenerListener)'
      parameters:
        - id: event
          type:
            - '"removeListener"'
          description: ''
        - id: listener
          type:
            - '@azure/abort-controller.NodeJS.RemoveListenerListener'
          description: ''
      return:
        type:
          - this
        description: ''
    package: '@azure/abort-controller'
  - uid: '@azure/abort-controller.NodeJS.Process.once_4'
    name: 'once("uncaughtException", UncaughtExceptionListener)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function once(event: "uncaughtException", listener:
        UncaughtExceptionListener)
      parameters:
        - id: event
          type:
            - '"uncaughtException"'
          description: ''
        - id: listener
          type:
            - '@azure/abort-controller.NodeJS.UncaughtExceptionListener'
          description: ''
      return:
        type:
          - this
        description: ''
    package: '@azure/abort-controller'
  - uid: '@azure/abort-controller.NodeJS.Process.once_5'
    name: 'once("unhandledRejection", UnhandledRejectionListener)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function once(event: "unhandledRejection", listener:
        UnhandledRejectionListener)
      parameters:
        - id: event
          type:
            - '"unhandledRejection"'
          description: ''
        - id: listener
          type:
            - '@azure/abort-controller.NodeJS.UnhandledRejectionListener'
          description: ''
      return:
        type:
          - this
        description: ''
    package: '@azure/abort-controller'
  - uid: '@azure/abort-controller.NodeJS.Process.once_6'
    name: 'once("warning", WarningListener)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function once(event: "warning", listener: WarningListener)'
      parameters:
        - id: event
          type:
            - '"warning"'
          description: ''
        - id: listener
          type:
            - '@azure/abort-controller.NodeJS.WarningListener'
          description: ''
      return:
        type:
          - this
        description: ''
    package: '@azure/abort-controller'
  - uid: '@azure/abort-controller.NodeJS.Process.once_8'
    name: 'once(Signals, SignalsListener)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function once(event: Signals, listener: SignalsListener)'
      parameters:
        - id: event
          type:
            - '@azure/abort-controller.NodeJS.Signals'
          description: ''
        - id: listener
          type:
            - '@azure/abort-controller.NodeJS.SignalsListener'
          description: ''
      return:
        type:
          - this
        description: ''
    package: '@azure/abort-controller'
  - uid: '@azure/abort-controller.NodeJS.Process.openStdin'
    name: openStdin()
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: function openStdin()
      parameters: []
      return:
        type:
          - '@azure/abort-controller.NodeJS.Socket'
        description: ''
    package: '@azure/abort-controller'
  - uid: '@azure/abort-controller.NodeJS.Process.pid'
    name: pid
    fullName: pid
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    syntax:
      content: 'pid: number'
      return:
        type:
          - number
        description: ''
    package: '@azure/abort-controller'
  - uid: '@azure/abort-controller.NodeJS.Process.platform'
    name: platform
    fullName: platform
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    syntax:
      content: 'platform: Platform'
      return:
        type:
          - '@azure/abort-controller.NodeJS.Platform'
        description: ''
    package: '@azure/abort-controller'
  - uid: '@azure/abort-controller.NodeJS.Process.ppid'
    name: ppid
    fullName: ppid
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    syntax:
      content: 'ppid: number'
      return:
        type:
          - number
        description: ''
    package: '@azure/abort-controller'
  - uid: '@azure/abort-controller.NodeJS.Process.prependListener'
    name: 'prependListener("beforeExit", BeforeExitListener)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function prependListener(event: "beforeExit", listener:
        BeforeExitListener)
      parameters:
        - id: event
          type:
            - '"beforeExit"'
          description: ''
        - id: listener
          type:
            - '@azure/abort-controller.NodeJS.BeforeExitListener'
          description: ''
      return:
        type:
          - this
        description: ''
    package: '@azure/abort-controller'
  - uid: '@azure/abort-controller.NodeJS.Process.prependListener_1'
    name: 'prependListener("disconnect", DisconnectListener)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function prependListener(event: "disconnect", listener:
        DisconnectListener)
      parameters:
        - id: event
          type:
            - '"disconnect"'
          description: ''
        - id: listener
          type:
            - '@azure/abort-controller.NodeJS.DisconnectListener'
          description: ''
      return:
        type:
          - this
        description: ''
    package: '@azure/abort-controller'
  - uid: '@azure/abort-controller.NodeJS.Process.prependListener_2'
    name: 'prependListener("exit", ExitListener)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function prependListener(event: "exit", listener: ExitListener)'
      parameters:
        - id: event
          type:
            - '"exit"'
          description: ''
        - id: listener
          type:
            - '@azure/abort-controller.NodeJS.ExitListener'
          description: ''
      return:
        type:
          - this
        description: ''
    package: '@azure/abort-controller'
  - uid: '@azure/abort-controller.NodeJS.Process.prependListener_7'
    name: 'prependListener("message", MessageListener)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function prependListener(event: "message", listener: MessageListener)'
      parameters:
        - id: event
          type:
            - '"message"'
          description: ''
        - id: listener
          type:
            - '@azure/abort-controller.NodeJS.MessageListener'
          description: ''
      return:
        type:
          - this
        description: ''
    package: '@azure/abort-controller'
  - uid: '@azure/abort-controller.NodeJS.Process.prependListener_11'
    name: 'prependListener("multipleResolves", MultipleResolveListener)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function prependListener(event: "multipleResolves", listener:
        MultipleResolveListener)
      parameters:
        - id: event
          type:
            - '"multipleResolves"'
          description: ''
        - id: listener
          type:
            - '@azure/abort-controller.NodeJS.MultipleResolveListener'
          description: ''
      return:
        type:
          - this
        description: ''
    package: '@azure/abort-controller'
  - uid: '@azure/abort-controller.NodeJS.Process.prependListener_9'
    name: 'prependListener("newListener", NewListenerListener)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function prependListener(event: "newListener", listener:
        NewListenerListener)
      parameters:
        - id: event
          type:
            - '"newListener"'
          description: ''
        - id: listener
          type:
            - '@azure/abort-controller.NodeJS.NewListenerListener'
          description: ''
      return:
        type:
          - this
        description: ''
    package: '@azure/abort-controller'
  - uid: '@azure/abort-controller.NodeJS.Process.prependListener_3'
    name: 'prependListener("rejectionHandled", RejectionHandledListener)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function prependListener(event: "rejectionHandled", listener:
        RejectionHandledListener)
      parameters:
        - id: event
          type:
            - '"rejectionHandled"'
          description: ''
        - id: listener
          type:
            - '@azure/abort-controller.NodeJS.RejectionHandledListener'
          description: ''
      return:
        type:
          - this
        description: ''
    package: '@azure/abort-controller'
  - uid: '@azure/abort-controller.NodeJS.Process.prependListener_10'
    name: 'prependListener("removeListener", RemoveListenerListener)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function prependListener(event: "removeListener", listener:
        RemoveListenerListener)
      parameters:
        - id: event
          type:
            - '"removeListener"'
          description: ''
        - id: listener
          type:
            - '@azure/abort-controller.NodeJS.RemoveListenerListener'
          description: ''
      return:
        type:
          - this
        description: ''
    package: '@azure/abort-controller'
  - uid: '@azure/abort-controller.NodeJS.Process.prependListener_4'
    name: 'prependListener("uncaughtException", UncaughtExceptionListener)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function prependListener(event: "uncaughtException", listener:
        UncaughtExceptionListener)
      parameters:
        - id: event
          type:
            - '"uncaughtException"'
          description: ''
        - id: listener
          type:
            - '@azure/abort-controller.NodeJS.UncaughtExceptionListener'
          description: ''
      return:
        type:
          - this
        description: ''
    package: '@azure/abort-controller'
  - uid: '@azure/abort-controller.NodeJS.Process.prependListener_5'
    name: 'prependListener("unhandledRejection", UnhandledRejectionListener)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function prependListener(event: "unhandledRejection", listener:
        UnhandledRejectionListener)
      parameters:
        - id: event
          type:
            - '"unhandledRejection"'
          description: ''
        - id: listener
          type:
            - '@azure/abort-controller.NodeJS.UnhandledRejectionListener'
          description: ''
      return:
        type:
          - this
        description: ''
    package: '@azure/abort-controller'
  - uid: '@azure/abort-controller.NodeJS.Process.prependListener_6'
    name: 'prependListener("warning", WarningListener)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function prependListener(event: "warning", listener: WarningListener)'
      parameters:
        - id: event
          type:
            - '"warning"'
          description: ''
        - id: listener
          type:
            - '@azure/abort-controller.NodeJS.WarningListener'
          description: ''
      return:
        type:
          - this
        description: ''
    package: '@azure/abort-controller'
  - uid: '@azure/abort-controller.NodeJS.Process.prependListener_8'
    name: 'prependListener(Signals, SignalsListener)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function prependListener(event: Signals, listener: SignalsListener)'
      parameters:
        - id: event
          type:
            - '@azure/abort-controller.NodeJS.Signals'
          description: ''
        - id: listener
          type:
            - '@azure/abort-controller.NodeJS.SignalsListener'
          description: ''
      return:
        type:
          - this
        description: ''
    package: '@azure/abort-controller'
  - uid: '@azure/abort-controller.NodeJS.Process.prependOnceListener'
    name: 'prependOnceListener("beforeExit", BeforeExitListener)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function prependOnceListener(event: "beforeExit", listener:
        BeforeExitListener)
      parameters:
        - id: event
          type:
            - '"beforeExit"'
          description: ''
        - id: listener
          type:
            - '@azure/abort-controller.NodeJS.BeforeExitListener'
          description: ''
      return:
        type:
          - this
        description: ''
    package: '@azure/abort-controller'
  - uid: '@azure/abort-controller.NodeJS.Process.prependOnceListener_1'
    name: 'prependOnceListener("disconnect", DisconnectListener)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function prependOnceListener(event: "disconnect", listener:
        DisconnectListener)
      parameters:
        - id: event
          type:
            - '"disconnect"'
          description: ''
        - id: listener
          type:
            - '@azure/abort-controller.NodeJS.DisconnectListener'
          description: ''
      return:
        type:
          - this
        description: ''
    package: '@azure/abort-controller'
  - uid: '@azure/abort-controller.NodeJS.Process.prependOnceListener_2'
    name: 'prependOnceListener("exit", ExitListener)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function prependOnceListener(event: "exit", listener: ExitListener)'
      parameters:
        - id: event
          type:
            - '"exit"'
          description: ''
        - id: listener
          type:
            - '@azure/abort-controller.NodeJS.ExitListener'
          description: ''
      return:
        type:
          - this
        description: ''
    package: '@azure/abort-controller'
  - uid: '@azure/abort-controller.NodeJS.Process.prependOnceListener_7'
    name: 'prependOnceListener("message", MessageListener)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function prependOnceListener(event: "message", listener:
        MessageListener)
      parameters:
        - id: event
          type:
            - '"message"'
          description: ''
        - id: listener
          type:
            - '@azure/abort-controller.NodeJS.MessageListener'
          description: ''
      return:
        type:
          - this
        description: ''
    package: '@azure/abort-controller'
  - uid: '@azure/abort-controller.NodeJS.Process.prependOnceListener_11'
    name: 'prependOnceListener("multipleResolves", MultipleResolveListener)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function prependOnceListener(event: "multipleResolves", listener:
        MultipleResolveListener)
      parameters:
        - id: event
          type:
            - '"multipleResolves"'
          description: ''
        - id: listener
          type:
            - '@azure/abort-controller.NodeJS.MultipleResolveListener'
          description: ''
      return:
        type:
          - this
        description: ''
    package: '@azure/abort-controller'
  - uid: '@azure/abort-controller.NodeJS.Process.prependOnceListener_9'
    name: 'prependOnceListener("newListener", NewListenerListener)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function prependOnceListener(event: "newListener", listener:
        NewListenerListener)
      parameters:
        - id: event
          type:
            - '"newListener"'
          description: ''
        - id: listener
          type:
            - '@azure/abort-controller.NodeJS.NewListenerListener'
          description: ''
      return:
        type:
          - this
        description: ''
    package: '@azure/abort-controller'
  - uid: '@azure/abort-controller.NodeJS.Process.prependOnceListener_3'
    name: 'prependOnceListener("rejectionHandled", RejectionHandledListener)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function prependOnceListener(event: "rejectionHandled", listener:
        RejectionHandledListener)
      parameters:
        - id: event
          type:
            - '"rejectionHandled"'
          description: ''
        - id: listener
          type:
            - '@azure/abort-controller.NodeJS.RejectionHandledListener'
          description: ''
      return:
        type:
          - this
        description: ''
    package: '@azure/abort-controller'
  - uid: '@azure/abort-controller.NodeJS.Process.prependOnceListener_10'
    name: 'prependOnceListener("removeListener", RemoveListenerListener)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function prependOnceListener(event: "removeListener", listener:
        RemoveListenerListener)
      parameters:
        - id: event
          type:
            - '"removeListener"'
          description: ''
        - id: listener
          type:
            - '@azure/abort-controller.NodeJS.RemoveListenerListener'
          description: ''
      return:
        type:
          - this
        description: ''
    package: '@azure/abort-controller'
  - uid: '@azure/abort-controller.NodeJS.Process.prependOnceListener_4'
    name: 'prependOnceListener("uncaughtException", UncaughtExceptionListener)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function prependOnceListener(event: "uncaughtException", listener:
        UncaughtExceptionListener)
      parameters:
        - id: event
          type:
            - '"uncaughtException"'
          description: ''
        - id: listener
          type:
            - '@azure/abort-controller.NodeJS.UncaughtExceptionListener'
          description: ''
      return:
        type:
          - this
        description: ''
    package: '@azure/abort-controller'
  - uid: '@azure/abort-controller.NodeJS.Process.prependOnceListener_5'
    name: 'prependOnceListener("unhandledRejection", UnhandledRejectionListener)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function prependOnceListener(event: "unhandledRejection", listener:
        UnhandledRejectionListener)
      parameters:
        - id: event
          type:
            - '"unhandledRejection"'
          description: ''
        - id: listener
          type:
            - '@azure/abort-controller.NodeJS.UnhandledRejectionListener'
          description: ''
      return:
        type:
          - this
        description: ''
    package: '@azure/abort-controller'
  - uid: '@azure/abort-controller.NodeJS.Process.prependOnceListener_6'
    name: 'prependOnceListener("warning", WarningListener)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function prependOnceListener(event: "warning", listener:
        WarningListener)
      parameters:
        - id: event
          type:
            - '"warning"'
          description: ''
        - id: listener
          type:
            - '@azure/abort-controller.NodeJS.WarningListener'
          description: ''
      return:
        type:
          - this
        description: ''
    package: '@azure/abort-controller'
  - uid: '@azure/abort-controller.NodeJS.Process.prependOnceListener_8'
    name: 'prependOnceListener(Signals, SignalsListener)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function prependOnceListener(event: Signals, listener: SignalsListener)'
      parameters:
        - id: event
          type:
            - '@azure/abort-controller.NodeJS.Signals'
          description: ''
        - id: listener
          type:
            - '@azure/abort-controller.NodeJS.SignalsListener'
          description: ''
      return:
        type:
          - this
        description: ''
    package: '@azure/abort-controller'
  - uid: '@azure/abort-controller.NodeJS.Process.rawListeners'
    name: rawListeners(string | symbol)
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function rawListeners(event: string | symbol)'
      parameters:
        - id: event
          type:
            - string | symbol
          description: ''
      return:
        type:
          - 'Function[]'
        description: ''
    package: '@azure/abort-controller'
  - uid: '@azure/abort-controller.NodeJS.Process.release'
    name: release
    fullName: release
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    syntax:
      content: 'release: ProcessRelease'
      return:
        type:
          - '@azure/abort-controller.NodeJS.ProcessRelease'
        description: ''
    package: '@azure/abort-controller'
  - uid: '@azure/abort-controller.NodeJS.Process.removeAllListeners'
    name: removeAllListeners(string | symbol)
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function removeAllListeners(event?: string | symbol)'
      parameters:
        - id: event
          type:
            - string | symbol
          description: ''
          optional: true
      return:
        type:
          - this
        description: ''
    package: '@azure/abort-controller'
  - uid: '@azure/abort-controller.NodeJS.Process.removeListener'
    name: 'removeListener(string | symbol, (args: any[]) => void)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function removeListener(event: string | symbol, listener: (args: any[])
        => void)
      parameters:
        - id: event
          type:
            - string | symbol
          description: ''
        - id: listener
          type:
            - '(args: any[]) => void'
          description: ''
      return:
        type:
          - this
        description: ''
    package: '@azure/abort-controller'
  - uid: '@azure/abort-controller.NodeJS.Process.report'
    name: report
    fullName: report
    children: []
    langs:
      - typeScript
    type: property
    summary: Only available with `--experimental-report`
    optional: true
    syntax:
      content: 'report?: ProcessReport'
      return:
        type:
          - '@azure/abort-controller.NodeJS.ProcessReport'
        description: ''
    package: '@azure/abort-controller'
  - uid: '@azure/abort-controller.NodeJS.Process.resourceUsage'
    name: resourceUsage()
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: function resourceUsage()
      parameters: []
      return:
        type:
          - '@azure/abort-controller.NodeJS.ResourceUsage'
        description: ''
    package: '@azure/abort-controller'
  - uid: '@azure/abort-controller.NodeJS.Process.send'
    name: >-
      send(any, any, undefined | Object, undefined | (error: Error | null) =>
      void)
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function send(message: any, sendHandle?: any, options?: undefined |
        Object, callback?: undefined | (error: Error | null) => void)
      parameters:
        - id: message
          type:
            - any
          description: ''
        - id: sendHandle
          type:
            - any
          description: ''
          optional: true
        - id: options
          type:
            - undefined | Object
          description: ''
          optional: true
        - id: callback
          type:
            - 'undefined | (error: Error | null) => void'
          description: ''
          optional: true
      return:
        type:
          - boolean
        description: ''
    package: '@azure/abort-controller'
  - uid: '@azure/abort-controller.NodeJS.Process.setegid'
    name: setegid(number | string)
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function setegid(id: number | string)'
      parameters:
        - id: id
          type:
            - number | string
          description: ''
    package: '@azure/abort-controller'
  - uid: '@azure/abort-controller.NodeJS.Process.seteuid'
    name: seteuid(number | string)
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function seteuid(id: number | string)'
      parameters:
        - id: id
          type:
            - number | string
          description: ''
    package: '@azure/abort-controller'
  - uid: '@azure/abort-controller.NodeJS.Process.setgid'
    name: setgid(number | string)
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function setgid(id: number | string)'
      parameters:
        - id: id
          type:
            - number | string
          description: ''
    package: '@azure/abort-controller'
  - uid: '@azure/abort-controller.NodeJS.Process.setgroups'
    name: setgroups(Array<string | number>)
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function setgroups(groups: Array<string | number>)'
      parameters:
        - id: groups
          type:
            - Array<string | number>
          description: ''
    package: '@azure/abort-controller'
  - uid: '@azure/abort-controller.NodeJS.Process.setMaxListeners'
    name: setMaxListeners(number)
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function setMaxListeners(n: number)'
      parameters:
        - id: 'n'
          type:
            - number
          description: ''
      return:
        type:
          - this
        description: ''
    package: '@azure/abort-controller'
  - uid: '@azure/abort-controller.NodeJS.Process.setuid'
    name: setuid(number | string)
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function setuid(id: number | string)'
      parameters:
        - id: id
          type:
            - number | string
          description: ''
    package: '@azure/abort-controller'
  - uid: '@azure/abort-controller.NodeJS.Process.setUncaughtExceptionCaptureCallback'
    name: 'setUncaughtExceptionCaptureCallback((err: Error) => void | null)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function setUncaughtExceptionCaptureCallback(cb: (err: Error) => void |
        null)
      parameters:
        - id: cb
          type:
            - '(err: Error) => void | null'
          description: ''
    package: '@azure/abort-controller'
  - uid: '@azure/abort-controller.NodeJS.Process.stderr'
    name: stderr
    fullName: stderr
    children: []
    langs:
      - typeScript
    type: property
    summary: 'Can also be a tty.WriteStream, not typed due to limitation.s'
    syntax:
      content: 'stderr: WriteStream'
      return:
        type:
          - WriteStream
        description: ''
    package: '@azure/abort-controller'
  - uid: '@azure/abort-controller.NodeJS.Process.stdin'
    name: stdin
    fullName: stdin
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    syntax:
      content: 'stdin: ReadStream'
      return:
        type:
          - ReadStream
        description: ''
    package: '@azure/abort-controller'
  - uid: '@azure/abort-controller.NodeJS.Process.stdout'
    name: stdout
    fullName: stdout
    children: []
    langs:
      - typeScript
    type: property
    summary: 'Can also be a tty.WriteStream, not typed due to limitation.s'
    syntax:
      content: 'stdout: WriteStream'
      return:
        type:
          - WriteStream
        description: ''
    package: '@azure/abort-controller'
  - uid: '@azure/abort-controller.NodeJS.Process.title'
    name: title
    fullName: title
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    syntax:
      content: 'title: string'
      return:
        type:
          - string
        description: ''
    package: '@azure/abort-controller'
  - uid: '@azure/abort-controller.NodeJS.Process.umask'
    name: umask(undefined | number)
    children: []
    type: method
    langs:
      - typeScript
    summary: Can only be set if not in worker thread.
    syntax:
      content: 'function umask(mask?: undefined | number)'
      parameters:
        - id: mask
          type:
            - undefined | number
          description: ''
          optional: true
      return:
        type:
          - number
        description: ''
    package: '@azure/abort-controller'
  - uid: '@azure/abort-controller.NodeJS.Process.uptime'
    name: uptime()
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: function uptime()
      parameters: []
      return:
        type:
          - number
        description: ''
    package: '@azure/abort-controller'
  - uid: '@azure/abort-controller.NodeJS.Process.version'
    name: version
    fullName: version
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    syntax:
      content: 'version: string'
      return:
        type:
          - string
        description: ''
    package: '@azure/abort-controller'
  - uid: '@azure/abort-controller.NodeJS.Process.versions'
    name: versions
    fullName: versions
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    syntax:
      content: 'versions: ProcessVersions'
      return:
        type:
          - '@azure/abort-controller.NodeJS.ProcessVersions'
        description: ''
    package: '@azure/abort-controller'
references:
  - uid: '@azure/abort-controller.NodeJS.WritableStream'
    name: WritableStream
    spec.typeScript:
      - name: WritableStream
        fullName: WritableStream
        uid: '@azure/abort-controller.NodeJS.WritableStream'
  - uid: '@azure/abort-controller.NodeJS.ConsoleConstructorOptions'
    name: ConsoleConstructorOptions
    spec.typeScript:
      - name: ConsoleConstructorOptions
        fullName: ConsoleConstructorOptions
        uid: '@azure/abort-controller.NodeJS.ConsoleConstructorOptions'
  - uid: '@azure/abort-controller.NodeJS.InspectOptions'
    name: InspectOptions
    spec.typeScript:
      - name: InspectOptions
        fullName: InspectOptions
        uid: '@azure/abort-controller.NodeJS.InspectOptions'
  - uid: '@azure/abort-controller.NodeJS.EventEmitter'
    name: EventEmitter
    spec.typeScript:
      - name: EventEmitter
        fullName: EventEmitter
        uid: '@azure/abort-controller.NodeJS.EventEmitter'
  - uid: >-
      @azure/abort-controller.NodeJS.EventEmitter |
      @azure/abort-controller.NodeJS.Timer
    name: Timer
    spec.typeScript:
      - name: EventEmitter
        fullName: EventEmitter
        uid: '@azure/abort-controller.NodeJS.EventEmitter'
      - name: ' | '
        fullName: ' | '
      - name: Timer
        fullName: Timer
        uid: '@azure/abort-controller.NodeJS.Timer'
  - uid: '@azure/abort-controller.NodeJS.Global'
    name: Global
    spec.typeScript:
      - name: Global
        fullName: Global
        uid: '@azure/abort-controller.NodeJS.Global'
  - uid: '@azure/abort-controller.NodeJS.Process'
    name: Process
    spec.typeScript:
      - name: Process
        fullName: Process
        uid: '@azure/abort-controller.NodeJS.Process'
  - uid: '@azure/abort-controller.NodeJS.RefCounted'
    name: RefCounted
    spec.typeScript:
      - name: RefCounted
        fullName: RefCounted
        uid: '@azure/abort-controller.NodeJS.RefCounted'
  - uid: '@azure/abort-controller.NodeJS.Module[]'
    name: 'Module[]'
    spec.typeScript:
      - name: Module
        fullName: Module
        uid: '@azure/abort-controller.NodeJS.Module'
      - name: '[]'
        fullName: '[]'
  - uid: '@azure/abort-controller.NodeJS.Module | null'
    name: Module | null
    spec.typeScript:
      - name: Module
        fullName: Module
        uid: '@azure/abort-controller.NodeJS.Module'
      - name: ' | null'
        fullName: ' | null'
  - uid: '@azure/abort-controller.NodeJS.Require'
    name: Require
    spec.typeScript:
      - name: Require
        fullName: Require
        uid: '@azure/abort-controller.NodeJS.Require'
  - uid: '@azure/abort-controller.NodeJS.Domain'
    name: Domain
    spec.typeScript:
      - name: Domain
        fullName: Domain
        uid: '@azure/abort-controller.NodeJS.Domain'
  - uid: '@azure/abort-controller.NodeJS.ProcessEnv'
    name: ProcessEnv
    spec.typeScript:
      - name: ProcessEnv
        fullName: ProcessEnv
        uid: '@azure/abort-controller.NodeJS.ProcessEnv'
  - uid: '@azure/abort-controller.NodeJS.Module'
    name: Module
    spec.typeScript:
      - name: Module
        fullName: Module
        uid: '@azure/abort-controller.NodeJS.Module'
  - uid: '@azure/abort-controller.NodeJS.Platform'
    name: Platform
    spec.typeScript:
      - name: Platform
        fullName: Platform
        uid: '@azure/abort-controller.NodeJS.Platform'
  - uid: '@azure/abort-controller.NodeJS.ProcessRelease'
    name: ProcessRelease
    spec.typeScript:
      - name: ProcessRelease
        fullName: ProcessRelease
        uid: '@azure/abort-controller.NodeJS.ProcessRelease'
  - uid: '@azure/abort-controller.NodeJS.ProcessReport'
    name: ProcessReport
    spec.typeScript:
      - name: ProcessReport
        fullName: ProcessReport
        uid: '@azure/abort-controller.NodeJS.ProcessReport'
  - uid: '@azure/abort-controller.NodeJS.ProcessVersions'
    name: ProcessVersions
    spec.typeScript:
      - name: ProcessVersions
        fullName: ProcessVersions
        uid: '@azure/abort-controller.NodeJS.ProcessVersions'
  - uid: '@azure/abort-controller.NodeJS.BeforeExitListener'
    name: BeforeExitListener
    spec.typeScript:
      - name: BeforeExitListener
        fullName: BeforeExitListener
        uid: '@azure/abort-controller.NodeJS.BeforeExitListener'
  - uid: '@azure/abort-controller.NodeJS.DisconnectListener'
    name: DisconnectListener
    spec.typeScript:
      - name: DisconnectListener
        fullName: DisconnectListener
        uid: '@azure/abort-controller.NodeJS.DisconnectListener'
  - uid: '@azure/abort-controller.NodeJS.ExitListener'
    name: ExitListener
    spec.typeScript:
      - name: ExitListener
        fullName: ExitListener
        uid: '@azure/abort-controller.NodeJS.ExitListener'
  - uid: '@azure/abort-controller.NodeJS.RejectionHandledListener'
    name: RejectionHandledListener
    spec.typeScript:
      - name: RejectionHandledListener
        fullName: RejectionHandledListener
        uid: '@azure/abort-controller.NodeJS.RejectionHandledListener'
  - uid: '@azure/abort-controller.NodeJS.UncaughtExceptionListener'
    name: UncaughtExceptionListener
    spec.typeScript:
      - name: UncaughtExceptionListener
        fullName: UncaughtExceptionListener
        uid: '@azure/abort-controller.NodeJS.UncaughtExceptionListener'
  - uid: '@azure/abort-controller.NodeJS.UnhandledRejectionListener'
    name: UnhandledRejectionListener
    spec.typeScript:
      - name: UnhandledRejectionListener
        fullName: UnhandledRejectionListener
        uid: '@azure/abort-controller.NodeJS.UnhandledRejectionListener'
  - uid: '@azure/abort-controller.NodeJS.WarningListener'
    name: WarningListener
    spec.typeScript:
      - name: WarningListener
        fullName: WarningListener
        uid: '@azure/abort-controller.NodeJS.WarningListener'
  - uid: '@azure/abort-controller.NodeJS.MessageListener'
    name: MessageListener
    spec.typeScript:
      - name: MessageListener
        fullName: MessageListener
        uid: '@azure/abort-controller.NodeJS.MessageListener'
  - uid: '@azure/abort-controller.NodeJS.Signals'
    name: Signals
    spec.typeScript:
      - name: Signals
        fullName: Signals
        uid: '@azure/abort-controller.NodeJS.Signals'
  - uid: '@azure/abort-controller.NodeJS.SignalsListener'
    name: SignalsListener
    spec.typeScript:
      - name: SignalsListener
        fullName: SignalsListener
        uid: '@azure/abort-controller.NodeJS.SignalsListener'
  - uid: '@azure/abort-controller.NodeJS.NewListenerListener'
    name: NewListenerListener
    spec.typeScript:
      - name: NewListenerListener
        fullName: NewListenerListener
        uid: '@azure/abort-controller.NodeJS.NewListenerListener'
  - uid: '@azure/abort-controller.NodeJS.RemoveListenerListener'
    name: RemoveListenerListener
    spec.typeScript:
      - name: RemoveListenerListener
        fullName: RemoveListenerListener
        uid: '@azure/abort-controller.NodeJS.RemoveListenerListener'
  - uid: '@azure/abort-controller.NodeJS.MultipleResolveListener'
    name: MultipleResolveListener
    spec.typeScript:
      - name: MultipleResolveListener
        fullName: MultipleResolveListener
        uid: '@azure/abort-controller.NodeJS.MultipleResolveListener'
  - uid: '@azure/abort-controller.NodeJS.CpuUsage'
    name: CpuUsage
    spec.typeScript:
      - name: CpuUsage
        fullName: CpuUsage
        uid: '@azure/abort-controller.NodeJS.CpuUsage'
  - uid: '@azure/abort-controller.NodeJS.Global.Function'
    name: Function
    spec.typeScript:
      - name: Function
        fullName: Function
        uid: '@azure/abort-controller.NodeJS.Global.Function'
  - uid: '@azure/abort-controller.NodeJS.BeforeExitListener[]'
    name: 'BeforeExitListener[]'
    spec.typeScript:
      - name: BeforeExitListener
        fullName: BeforeExitListener
        uid: '@azure/abort-controller.NodeJS.BeforeExitListener'
      - name: '[]'
        fullName: '[]'
  - uid: '@azure/abort-controller.NodeJS.DisconnectListener[]'
    name: 'DisconnectListener[]'
    spec.typeScript:
      - name: DisconnectListener
        fullName: DisconnectListener
        uid: '@azure/abort-controller.NodeJS.DisconnectListener'
      - name: '[]'
        fullName: '[]'
  - uid: '@azure/abort-controller.NodeJS.ExitListener[]'
    name: 'ExitListener[]'
    spec.typeScript:
      - name: ExitListener
        fullName: ExitListener
        uid: '@azure/abort-controller.NodeJS.ExitListener'
      - name: '[]'
        fullName: '[]'
  - uid: '@azure/abort-controller.NodeJS.RejectionHandledListener[]'
    name: 'RejectionHandledListener[]'
    spec.typeScript:
      - name: RejectionHandledListener
        fullName: RejectionHandledListener
        uid: '@azure/abort-controller.NodeJS.RejectionHandledListener'
      - name: '[]'
        fullName: '[]'
  - uid: '@azure/abort-controller.NodeJS.UncaughtExceptionListener[]'
    name: 'UncaughtExceptionListener[]'
    spec.typeScript:
      - name: UncaughtExceptionListener
        fullName: UncaughtExceptionListener
        uid: '@azure/abort-controller.NodeJS.UncaughtExceptionListener'
      - name: '[]'
        fullName: '[]'
  - uid: '@azure/abort-controller.NodeJS.UnhandledRejectionListener[]'
    name: 'UnhandledRejectionListener[]'
    spec.typeScript:
      - name: UnhandledRejectionListener
        fullName: UnhandledRejectionListener
        uid: '@azure/abort-controller.NodeJS.UnhandledRejectionListener'
      - name: '[]'
        fullName: '[]'
  - uid: '@azure/abort-controller.NodeJS.WarningListener[]'
    name: 'WarningListener[]'
    spec.typeScript:
      - name: WarningListener
        fullName: WarningListener
        uid: '@azure/abort-controller.NodeJS.WarningListener'
      - name: '[]'
        fullName: '[]'
  - uid: '@azure/abort-controller.NodeJS.MessageListener[]'
    name: 'MessageListener[]'
    spec.typeScript:
      - name: MessageListener
        fullName: MessageListener
        uid: '@azure/abort-controller.NodeJS.MessageListener'
      - name: '[]'
        fullName: '[]'
  - uid: '@azure/abort-controller.NodeJS.SignalsListener[]'
    name: 'SignalsListener[]'
    spec.typeScript:
      - name: SignalsListener
        fullName: SignalsListener
        uid: '@azure/abort-controller.NodeJS.SignalsListener'
      - name: '[]'
        fullName: '[]'
  - uid: '@azure/abort-controller.NodeJS.NewListenerListener[]'
    name: 'NewListenerListener[]'
    spec.typeScript:
      - name: NewListenerListener
        fullName: NewListenerListener
        uid: '@azure/abort-controller.NodeJS.NewListenerListener'
      - name: '[]'
        fullName: '[]'
  - uid: '@azure/abort-controller.NodeJS.RemoveListenerListener[]'
    name: 'RemoveListenerListener[]'
    spec.typeScript:
      - name: RemoveListenerListener
        fullName: RemoveListenerListener
        uid: '@azure/abort-controller.NodeJS.RemoveListenerListener'
      - name: '[]'
        fullName: '[]'
  - uid: '@azure/abort-controller.NodeJS.MultipleResolveListener[]'
    name: 'MultipleResolveListener[]'
    spec.typeScript:
      - name: MultipleResolveListener
        fullName: MultipleResolveListener
        uid: '@azure/abort-controller.NodeJS.MultipleResolveListener'
      - name: '[]'
        fullName: '[]'
  - uid: '@azure/abort-controller.NodeJS.MemoryUsage'
    name: MemoryUsage
    spec.typeScript:
      - name: MemoryUsage
        fullName: MemoryUsage
        uid: '@azure/abort-controller.NodeJS.MemoryUsage'
  - uid: '@azure/abort-controller.NodeJS.Socket'
    name: Socket
    spec.typeScript:
      - name: Socket
        fullName: Socket
        uid: '@azure/abort-controller.NodeJS.Socket'
  - uid: '@azure/abort-controller.NodeJS.ResourceUsage'
    name: ResourceUsage
    spec.typeScript:
      - name: ResourceUsage
        fullName: ResourceUsage
        uid: '@azure/abort-controller.NodeJS.ResourceUsage'
  - uid: '@azure/abort-controller.AbortError.Error'
    name: Error
    spec.typeScript:
      - name: Error
        fullName: Error
        uid: '@azure/abort-controller.AbortError.Error'
  - uid: '@azure/abort-controller.NodeJS.ReadableStream'
    name: ReadableStream
    spec.typeScript:
      - name: ReadableStream
        fullName: ReadableStream
        uid: '@azure/abort-controller.NodeJS.ReadableStream'
  - uid: '@azure/abort-controller.BufferEncoding'
    name: BufferEncoding
    spec.typeScript:
      - name: BufferEncoding
        fullName: BufferEncoding
        uid: '@azure/abort-controller.BufferEncoding'
  - uid: '@azure/abort-controller.NodeJS.NodeRequireCache'
    name: NodeRequireCache
    spec.typeScript:
      - name: NodeRequireCache
        fullName: NodeRequireCache
        uid: '@azure/abort-controller.NodeJS.NodeRequireCache'
  - uid: '@azure/abort-controller.NodeJS.RequireExtensions'
    name: RequireExtensions
    spec.typeScript:
      - name: RequireExtensions
        fullName: RequireExtensions
        uid: '@azure/abort-controller.NodeJS.RequireExtensions'
  - uid: '@azure/abort-controller.NodeJS.Module | undefined'
    name: Module | undefined
    spec.typeScript:
      - name: Module
        fullName: Module
        uid: '@azure/abort-controller.NodeJS.Module'
      - name: ' | undefined'
        fullName: ' | undefined'
  - uid: '@azure/abort-controller.NodeJS.RequireResolve'
    name: RequireResolve
    spec.typeScript:
      - name: RequireResolve
        fullName: RequireResolve
        uid: '@azure/abort-controller.NodeJS.RequireResolve'
  - uid: '@azure/abort-controller.NodeJS.ReadWriteStream'
    name: ReadWriteStream
    spec.typeScript:
      - name: ReadWriteStream
        fullName: ReadWriteStream
        uid: '@azure/abort-controller.NodeJS.ReadWriteStream'
  - uid: '@azure/abort-controller.NodeJS.Timer'
    name: Timer
    spec.typeScript:
      - name: Timer
        fullName: Timer
        uid: '@azure/abort-controller.NodeJS.Timer'
