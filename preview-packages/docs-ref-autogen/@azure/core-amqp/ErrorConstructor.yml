### YamlMime:UniversalReference
items:
  - uid: tslib.ErrorConstructor
    name: ErrorConstructor
    fullName: ErrorConstructor
    children:
      - tslib.ErrorConstructor.captureStackTrace
      - tslib.ErrorConstructor.prepareStackTrace
      - tslib.ErrorConstructor.stackTraceLimit
    langs:
      - typeScript
    type: interface
    summary: ''
    package: tslib
  - uid: tslib.ErrorConstructor.captureStackTrace
    name: 'captureStackTrace(object, Function)'
    children: []
    type: method
    langs:
      - typeScript
    summary: Create .stack property on a target object
    syntax:
      content: >-
        function captureStackTrace(targetObject: object, constructorOpt?:
        Function)
      parameters:
        - id: targetObject
          type:
            - object
          description: ''
        - id: constructorOpt
          type:
            - tslib.NodeJS.Global.Function
          description: ''
          optional: true
    package: tslib
  - uid: tslib.ErrorConstructor.prepareStackTrace
    name: prepareStackTrace
    fullName: prepareStackTrace
    children: []
    langs:
      - typeScript
    type: property
    summary: Optional override for formatting stack traces
    optional: true
    syntax:
      content: >-
        prepareStackTrace?: undefined | (err: Error, stackTraces: CallSite[]) =>
        any
      return:
        type:
          - 'undefined | (err: Error, stackTraces: CallSite[]) => any'
        description: ''
    package: tslib
  - uid: tslib.ErrorConstructor.stackTraceLimit
    name: stackTraceLimit
    fullName: stackTraceLimit
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    syntax:
      content: 'stackTraceLimit: number'
      return:
        type:
          - number
        description: ''
    package: tslib
references:
  - uid: tslib.NodeJS.Global.Function
    name: Function
    spec.typeScript:
      - name: Function
        fullName: Function
        uid: tslib.NodeJS.Global.Function
