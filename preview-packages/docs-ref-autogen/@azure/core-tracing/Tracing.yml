### YamlMime:UniversalReference
items:
  - uid: '@opentelemetry/types.Tracing'
    name: Tracing
    fullName: Tracing
    children:
      - '@opentelemetry/types.Tracing.active'
      - '@opentelemetry/types.Tracing.exporter'
      - '@opentelemetry/types.Tracing.registerExporter'
      - '@opentelemetry/types.Tracing.start'
      - '@opentelemetry/types.Tracing.stop'
      - '@opentelemetry/types.Tracing.tracer'
      - '@opentelemetry/types.Tracing.unregisterExporter'
    langs:
      - typeScript
    type: interface
    summary: Main interface for tracing.
    package: '@opentelemetry/types'
  - uid: '@opentelemetry/types.Tracing.active'
    name: active
    fullName: active
    children: []
    langs:
      - typeScript
    type: property
    summary: Gets active status
    syntax:
      content: 'active: boolean'
      return:
        type:
          - boolean
        description: ''
    package: '@opentelemetry/types'
  - uid: '@opentelemetry/types.Tracing.exporter'
    name: exporter
    fullName: exporter
    children: []
    langs:
      - typeScript
    type: property
    summary: Service to send collected traces to.
    syntax:
      content: 'exporter: Exporter'
      return:
        type:
          - '@opentelemetry/types.Exporter'
        description: ''
    package: '@opentelemetry/types'
  - uid: '@opentelemetry/types.Tracing.registerExporter'
    name: registerExporter(Exporter)
    children: []
    type: method
    langs:
      - typeScript
    summary: Registers an exporter to send the collected traces to.
    syntax:
      content: 'function registerExporter(exporter: Exporter)'
      parameters:
        - id: exporter
          type:
            - '@opentelemetry/types.Exporter'
          description: The exporter to send the traces to.
      return:
        type:
          - '@opentelemetry/types.Tracing'
        description: The tracing object.
    package: '@opentelemetry/types'
  - uid: '@opentelemetry/types.Tracing.start'
    name: start(configTypes.Config)
    children: []
    type: method
    langs:
      - typeScript
    summary: Starts tracing.
    syntax:
      content: 'function start(userConfig?: configTypes.Config)'
      parameters:
        - id: userConfig
          type:
            - configTypes.Config
          description: A configuration object to start tracing.
          optional: true
      return:
        type:
          - '@opentelemetry/types.Tracing'
        description: The started Tracing instance.
    package: '@opentelemetry/types'
  - uid: '@opentelemetry/types.Tracing.stop'
    name: stop()
    children: []
    type: method
    langs:
      - typeScript
    summary: Stops tracing.
    syntax:
      content: function stop()
      parameters: []
    package: '@opentelemetry/types'
  - uid: '@opentelemetry/types.Tracing.tracer'
    name: tracer
    fullName: tracer
    children: []
    langs:
      - typeScript
    type: property
    summary: Object responsible for managing a trace.
    syntax:
      content: 'tracer: TracerBase'
      return:
        type:
          - '@opentelemetry/types.TracerBase'
        description: ''
    package: '@opentelemetry/types'
  - uid: '@opentelemetry/types.Tracing.unregisterExporter'
    name: unregisterExporter(Exporter)
    children: []
    type: method
    langs:
      - typeScript
    summary: Unregisters an exporter.
    syntax:
      content: 'function unregisterExporter(exporter: Exporter)'
      parameters:
        - id: exporter
          type:
            - '@opentelemetry/types.Exporter'
          description: |
            The exporter to stop sending traces to.
      return:
        type:
          - '@opentelemetry/types.Tracing'
        description: ''
    package: '@opentelemetry/types'
references:
  - uid: '@opentelemetry/types.Exporter'
    name: Exporter
    spec.typeScript:
      - name: Exporter
        fullName: Exporter
        uid: '@opentelemetry/types.Exporter'
  - uid: '@opentelemetry/types.TracerBase'
    name: TracerBase
    spec.typeScript:
      - name: TracerBase
        fullName: TracerBase
        uid: '@opentelemetry/types.TracerBase'
  - uid: '@opentelemetry/types.Tracing'
    name: Tracing
    spec.typeScript:
      - name: Tracing
        fullName: Tracing
        uid: '@opentelemetry/types.Tracing'
