### YamlMime:UniversalReference
items:
  - uid: tslib.http
    name: http
    langs:
      - typeScript
    fullName: http
    children:
      - tslib.http.Agent
      - tslib.http.AgentOptions
      - tslib.http.ClientRequest
      - tslib.http.ClientRequestArgs
      - tslib.http.createServer
      - tslib.http.createServer_1
      - tslib.http.get
      - tslib.http.get_1
      - tslib.http.HttpBase
      - tslib.http.IncomingHttpHeaders
      - tslib.http.IncomingMessage
      - tslib.http.InformationEvent
      - tslib.http.OutgoingHttpHeaders
      - tslib.http.OutgoingMessage
      - tslib.http.request
      - tslib.http.request_1
      - tslib.http.RequestListener
      - tslib.http.RequestOptions
      - tslib.http.Server
      - tslib.http.ServerOptions
      - tslib.http.ServerResponse
    type: module
    summary: ''
    package: tslib
  - uid: tslib.http.createServer
    name: createServer(RequestListener)
    children: []
    type: function
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function createServer(requestListener?: RequestListener)'
      parameters:
        - id: requestListener
          type:
            - tslib.http.RequestListener
          description: ''
          optional: true
      return:
        type:
          - tslib.http.Server
        description: ''
    package: tslib
  - uid: tslib.http.createServer_1
    name: 'createServer(ServerOptions, RequestListener)'
    children: []
    type: function
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function createServer(options: ServerOptions, requestListener?:
        RequestListener)
      parameters:
        - id: options
          type:
            - tslib.http.ServerOptions
          description: ''
        - id: requestListener
          type:
            - tslib.http.RequestListener
          description: ''
          optional: true
      return:
        type:
          - tslib.http.Server
        description: ''
    package: tslib
  - uid: tslib.http.get
    name: >-
      get(RequestOptions | string | URL, undefined | (res: IncomingMessage) =>
      void)
    children: []
    type: function
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function get(options: RequestOptions | string | URL, callback?:
        undefined | (res: IncomingMessage) => void)
      parameters:
        - id: options
          type:
            - tslib.http.RequestOptions | string | tslib.url.URL
          description: ''
        - id: callback
          type:
            - 'undefined | (res: IncomingMessage) => void'
          description: ''
          optional: true
      return:
        type:
          - tslib.http.ClientRequest
        description: ''
    package: tslib
  - uid: tslib.http.get_1
    name: >-
      get(string | URL, RequestOptions, undefined | (res: IncomingMessage) =>
      void)
    children: []
    type: function
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function get(url: string | URL, options: RequestOptions, callback?:
        undefined | (res: IncomingMessage) => void)
      parameters:
        - id: url
          type:
            - string | tslib.url.URL
          description: ''
        - id: options
          type:
            - tslib.http.RequestOptions
          description: ''
        - id: callback
          type:
            - 'undefined | (res: IncomingMessage) => void'
          description: ''
          optional: true
      return:
        type:
          - tslib.http.ClientRequest
        description: ''
    package: tslib
  - uid: tslib.http.request
    name: >-
      request(RequestOptions | string | URL, undefined | (res: IncomingMessage)
      => void)
    children: []
    type: function
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function request(options: RequestOptions | string | URL, callback?:
        undefined | (res: IncomingMessage) => void)
      parameters:
        - id: options
          type:
            - tslib.http.RequestOptions | string | tslib.url.URL
          description: ''
        - id: callback
          type:
            - 'undefined | (res: IncomingMessage) => void'
          description: ''
          optional: true
      return:
        type:
          - tslib.http.ClientRequest
        description: ''
    package: tslib
  - uid: tslib.http.request_1
    name: >-
      request(string | URL, RequestOptions, undefined | (res: IncomingMessage)
      => void)
    children: []
    type: function
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function request(url: string | URL, options: RequestOptions, callback?:
        undefined | (res: IncomingMessage) => void)
      parameters:
        - id: url
          type:
            - string | tslib.url.URL
          description: ''
        - id: options
          type:
            - tslib.http.RequestOptions
          description: ''
        - id: callback
          type:
            - 'undefined | (res: IncomingMessage) => void'
          description: ''
          optional: true
      return:
        type:
          - tslib.http.ClientRequest
        description: ''
    package: tslib
references:
  - uid: tslib.http.AgentOptions
    name: AgentOptions
    spec.typeScript:
      - name: AgentOptions
        fullName: AgentOptions
        uid: tslib.http.AgentOptions
  - uid: tslib.http.OutgoingMessage
    name: OutgoingMessage
    spec.typeScript:
      - name: OutgoingMessage
        fullName: OutgoingMessage
        uid: tslib.http.OutgoingMessage
  - uid: string | tslib.url.URL | tslib.http.ClientRequestArgs
    name: ClientRequestArgs
    spec.typeScript:
      - name: 'string | '
        fullName: 'string | '
      - name: URL
        fullName: URL
        uid: tslib.url.URL
      - name: ' | '
        fullName: ' | '
      - name: ClientRequestArgs
        fullName: ClientRequestArgs
        uid: tslib.http.ClientRequestArgs
  - uid: tslib.net.Socket
    name: Socket
    spec.typeScript:
      - name: Socket
        fullName: Socket
        uid: tslib.net.Socket
  - uid: tslib.http.OutgoingHttpHeaders | Array<Object>
    name: OutgoingHttpHeaders | Array<Object>
    spec.typeScript:
      - name: OutgoingHttpHeaders
        fullName: OutgoingHttpHeaders
        uid: tslib.http.OutgoingHttpHeaders
      - name: ' | Array<Object>'
        fullName: ' | Array<Object>'
  - uid: tslib.AbortError.Error
    name: Error
    spec.typeScript:
      - name: Error
        fullName: Error
        uid: tslib.AbortError.Error
  - uid: tslib.stream.internal.Readable
    name: Readable
    spec.typeScript:
      - name: Readable
        fullName: Readable
        uid: tslib.stream.internal.Readable
  - uid: tslib.http.OutgoingHttpHeaders
    name: OutgoingHttpHeaders
    spec.typeScript:
      - name: OutgoingHttpHeaders
        fullName: OutgoingHttpHeaders
        uid: tslib.http.OutgoingHttpHeaders
  - uid: tslib.http.IncomingHttpHeaders
    name: IncomingHttpHeaders
    spec.typeScript:
      - name: IncomingHttpHeaders
        fullName: IncomingHttpHeaders
        uid: tslib.http.IncomingHttpHeaders
  - uid: tslib.NodeJS.WritableStream
    name: WritableStream
    spec.typeScript:
      - name: WritableStream
        fullName: WritableStream
        uid: tslib.NodeJS.WritableStream
  - uid: tslib.BufferEncoding
    name: BufferEncoding
    spec.typeScript:
      - name: BufferEncoding
        fullName: BufferEncoding
        uid: tslib.BufferEncoding
  - uid: tslib.NodeJS.ReadableStream
    name: ReadableStream
    spec.typeScript:
      - name: ReadableStream
        fullName: ReadableStream
        uid: tslib.NodeJS.ReadableStream
  - uid: tslib.stream.internal.ReadableOptions
    name: ReadableOptions
    spec.typeScript:
      - name: ReadableOptions
        fullName: ReadableOptions
        uid: tslib.stream.internal.ReadableOptions
  - uid: tslib.stream.internal.Writable
    name: Writable
    spec.typeScript:
      - name: Writable
        fullName: Writable
        uid: tslib.stream.internal.Writable
  - uid: tslib.http.HttpBase
    name: HttpBase
    spec.typeScript:
      - name: HttpBase
        fullName: HttpBase
        uid: tslib.http.HttpBase
  - uid: tslib.http.RequestListener
    name: RequestListener
    spec.typeScript:
      - name: RequestListener
        fullName: RequestListener
        uid: tslib.http.RequestListener
  - uid: tslib.http.ServerOptions
    name: ServerOptions
    spec.typeScript:
      - name: ServerOptions
        fullName: ServerOptions
        uid: tslib.http.ServerOptions
  - uid: tslib.net.AddressInfo | string | null
    name: AddressInfo | string | null
    spec.typeScript:
      - name: AddressInfo
        fullName: AddressInfo
        uid: tslib.net.AddressInfo
      - name: ' | string | null'
        fullName: ' | string | null'
  - uid: tslib.net.ListenOptions
    name: ListenOptions
    spec.typeScript:
      - name: ListenOptions
        fullName: ListenOptions
        uid: tslib.net.ListenOptions
  - uid: tslib.http.IncomingMessage
    name: IncomingMessage
    spec.typeScript:
      - name: IncomingMessage
        fullName: IncomingMessage
        uid: tslib.http.IncomingMessage
  - uid: tslib.http.Agent | boolean
    name: Agent | boolean
    spec.typeScript:
      - name: Agent
        fullName: Agent
        uid: tslib.http.Agent
      - name: ' | boolean'
        fullName: ' | boolean'
  - uid: tslib.http.ClientRequestArgs
    name: ClientRequestArgs
    spec.typeScript:
      - name: ClientRequestArgs
        fullName: ClientRequestArgs
        uid: tslib.http.ClientRequestArgs
  - uid: undefined | tslib.http.IncomingMessage
    name: IncomingMessage
    spec.typeScript:
      - name: 'undefined | '
        fullName: 'undefined | '
      - name: IncomingMessage
        fullName: IncomingMessage
        uid: tslib.http.IncomingMessage
  - uid: undefined | tslib.http.ServerResponse
    name: ServerResponse
    spec.typeScript:
      - name: 'undefined | '
        fullName: 'undefined | '
      - name: ServerResponse
        fullName: ServerResponse
        uid: tslib.http.ServerResponse
  - uid: tslib.http.Server
    name: Server
    spec.typeScript:
      - name: Server
        fullName: Server
        uid: tslib.http.Server
  - uid: tslib.http.RequestOptions | string | tslib.url.URL
    name: URL
    spec.typeScript:
      - name: RequestOptions
        fullName: RequestOptions
        uid: tslib.http.RequestOptions
      - name: ' | string | '
        fullName: ' | string | '
      - name: URL
        fullName: URL
        uid: tslib.url.URL
  - uid: tslib.http.ClientRequest
    name: ClientRequest
    spec.typeScript:
      - name: ClientRequest
        fullName: ClientRequest
        uid: tslib.http.ClientRequest
  - uid: string | tslib.url.URL
    name: URL
    spec.typeScript:
      - name: 'string | '
        fullName: 'string | '
      - name: URL
        fullName: URL
        uid: tslib.url.URL
  - uid: tslib.http.RequestOptions
    name: RequestOptions
    spec.typeScript:
      - name: RequestOptions
        fullName: RequestOptions
        uid: tslib.http.RequestOptions
  - uid: tslib.http.Agent
    name: Agent
  - uid: tslib.http.createServer
    name: createServer
  - uid: tslib.http.createServer_1
    name: createServer_1
  - uid: tslib.http.get
    name: get
  - uid: tslib.http.get_1
    name: get_1
  - uid: tslib.http.InformationEvent
    name: InformationEvent
  - uid: tslib.http.request
    name: request
  - uid: tslib.http.request_1
    name: request_1
  - uid: tslib.http.ServerResponse
    name: ServerResponse
