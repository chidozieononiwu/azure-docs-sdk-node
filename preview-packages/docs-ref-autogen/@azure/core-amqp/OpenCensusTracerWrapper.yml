### YamlMime:UniversalReference
items:
  - uid: tslib.OpenCensusTracerWrapper
    name: OpenCensusTracerWrapper
    fullName: OpenCensusTracerWrapper
    children:
      - tslib.OpenCensusTracerWrapper.bind
      - tslib.OpenCensusTracerWrapper.getBinaryFormat
      - tslib.OpenCensusTracerWrapper.getCurrentSpan
      - tslib.OpenCensusTracerWrapper.getHttpTextFormat
      - tslib.OpenCensusTracerWrapper.getWrappedTracer
      - tslib.OpenCensusTracerWrapper.constructor
      - tslib.OpenCensusTracerWrapper.recordSpanData
      - tslib.OpenCensusTracerWrapper.startSpan
      - tslib.OpenCensusTracerWrapper.withSpan
    langs:
      - typeScript
    type: class
    summary: An implementation of OpenTelemetry Tracer that wraps an OpenCensus Tracer.
    package: tslib
  - uid: tslib.OpenCensusTracerWrapper.bind
    name: 'bind(T, Span)'
    children: []
    type: method
    langs:
      - typeScript
    summary: Bind a Span as the target's scope
    syntax:
      content: 'function bind<T>(_target: T, _span?: Span)'
      parameters:
        - id: _target
          type:
            - T
          description: ''
        - id: _span
          type:
            - tslib.Span
          description: |
            A specific Span to use. Otherwise, use the current one.
          optional: true
      return:
        type:
          - T
        description: ''
    package: tslib
  - uid: tslib.OpenCensusTracerWrapper.getBinaryFormat
    name: getBinaryFormat()
    children: []
    type: method
    langs:
      - typeScript
    summary: Returns the BinaryFormat interface for serializing/deserializing Spans.
    syntax:
      content: function getBinaryFormat()
      parameters: []
      return:
        type:
          - tslib.BinaryFormat
        description: ''
    package: tslib
  - uid: tslib.OpenCensusTracerWrapper.getCurrentSpan
    name: getCurrentSpan()
    children: []
    type: method
    langs:
      - typeScript
    summary: 'Returns the current Span from the current context, if available.'
    syntax:
      content: function getCurrentSpan()
      parameters: []
      return:
        type:
          - tslib.Span | null
        description: ''
    package: tslib
  - uid: tslib.OpenCensusTracerWrapper.getHttpTextFormat
    name: getHttpTextFormat()
    children: []
    type: method
    langs:
      - typeScript
    summary: Returns the HttpTextFormat interface for injecting/extracting Spans.
    syntax:
      content: function getHttpTextFormat()
      parameters: []
      return:
        type:
          - tslib.HttpTextFormat
        description: ''
    package: tslib
  - uid: tslib.OpenCensusTracerWrapper.getWrappedTracer
    name: getWrappedTracer()
    children: []
    type: method
    langs:
      - typeScript
    summary: The wrapped OpenCensus Tracer
    syntax:
      content: function getWrappedTracer()
      parameters: []
      return:
        type:
          - tslib.TracerBase
        description: ''
    package: tslib
  - uid: tslib.OpenCensusTracerWrapper.constructor
    name: OpenCensusTracerWrapper(TracerBase)
    children: []
    type: constructor
    langs:
      - typeScript
    summary: Create a new wrapper around a given OpenCensus Tracer.
    syntax:
      content: 'new OpenCensusTracerWrapper(tracer: TracerBase)'
      parameters:
        - id: tracer
          type:
            - tslib.TracerBase
          description: |
            The OpenCensus Tracer to wrap.
    package: tslib
  - uid: tslib.OpenCensusTracerWrapper.recordSpanData
    name: recordSpanData(Span)
    children: []
    type: method
    langs:
      - typeScript
    summary: Send a pre-populated Span object to the exporter.
    syntax:
      content: 'function recordSpanData(_span: Span)'
      parameters:
        - id: _span
          type:
            - tslib.Span
          description: |
            The span to pass along.
    package: tslib
  - uid: tslib.OpenCensusTracerWrapper.startSpan
    name: 'startSpan(string, SpanOptions)'
    children: []
    type: method
    langs:
      - typeScript
    summary: Starts a new Span.
    syntax:
      content: 'function startSpan(name: string, options?: SpanOptions)'
      parameters:
        - id: name
          type:
            - string
          description: The name of the span.
        - id: options
          type:
            - tslib.SpanOptions
          description: |
            The SpanOptions used during Span creation.
          optional: true
      return:
        type:
          - tslib.Span
        description: ''
    package: tslib
  - uid: tslib.OpenCensusTracerWrapper.withSpan
    name: 'withSpan(Span, T)'
    children: []
    type: method
    langs:
      - typeScript
    summary: Executes the given function within the context provided by a Span.
    syntax:
      content: 'function withSpan<T>(_span: Span, _fn: T)'
      parameters:
        - id: _span
          type:
            - tslib.Span
          description: The span that provides the context.
        - id: _fn
          type:
            - T
          description: |
            The function to be executed.
      return:
        type:
          - ReturnType<T>
        description: ''
    package: tslib
references:
  - uid: tslib.TracerBase
    name: TracerBase
    spec.typeScript:
      - name: TracerBase
        fullName: TracerBase
        uid: tslib.TracerBase
  - uid: tslib.Span
    name: Span
    spec.typeScript:
      - name: Span
        fullName: Span
        uid: tslib.Span
  - uid: tslib.BinaryFormat
    name: BinaryFormat
    spec.typeScript:
      - name: BinaryFormat
        fullName: BinaryFormat
        uid: tslib.BinaryFormat
  - uid: tslib.Span | null
    name: Span | null
    spec.typeScript:
      - name: Span
        fullName: Span
        uid: tslib.Span
      - name: ' | null'
        fullName: ' | null'
  - uid: tslib.HttpTextFormat
    name: HttpTextFormat
    spec.typeScript:
      - name: HttpTextFormat
        fullName: HttpTextFormat
        uid: tslib.HttpTextFormat
  - uid: tslib.SpanOptions
    name: SpanOptions
    spec.typeScript:
      - name: SpanOptions
        fullName: SpanOptions
        uid: tslib.SpanOptions
