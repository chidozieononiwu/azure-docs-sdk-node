### YamlMime:UniversalReference
items:
  - uid: tslib.v8.Deserializer
    name: Deserializer
    fullName: Deserializer
    children:
      - tslib.v8.Deserializer.constructor
      - tslib.v8.Deserializer.getWireFormatVersion
      - tslib.v8.Deserializer.readDouble
      - tslib.v8.Deserializer.readHeader
      - tslib.v8.Deserializer.readRawBytes
      - tslib.v8.Deserializer.readUint32
      - tslib.v8.Deserializer.readUint64
      - tslib.v8.Deserializer.readValue
      - tslib.v8.Deserializer.transferArrayBuffer
    langs:
      - typeScript
    type: class
    summary: ''
    package: tslib
  - uid: tslib.v8.Deserializer.constructor
    name: Deserializer(NodeJS.TypedArray)
    children: []
    type: constructor
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'new Deserializer(data: NodeJS.TypedArray)'
      parameters:
        - id: data
          type:
            - tslib.NodeJS.TypedArray
          description: ''
    package: tslib
  - uid: tslib.v8.Deserializer.getWireFormatVersion
    name: getWireFormatVersion()
    children: []
    type: method
    langs:
      - typeScript
    summary: >-
      Reads the underlying wire format version.

      Likely mostly to be useful to legacy code reading old wire format
      versions.

      May not be called before .readHeader().
    syntax:
      content: function getWireFormatVersion()
      parameters: []
      return:
        type:
          - number
        description: ''
    package: tslib
  - uid: tslib.v8.Deserializer.readDouble
    name: readDouble()
    children: []
    type: method
    langs:
      - typeScript
    summary: Read a JS number value.
    syntax:
      content: function readDouble()
      parameters: []
      return:
        type:
          - number
        description: ''
    package: tslib
  - uid: tslib.v8.Deserializer.readHeader
    name: readHeader()
    children: []
    type: method
    langs:
      - typeScript
    summary: |-
      Reads and validates a header (including the format version).
      May, for example, reject an invalid or unsupported wire format.
      In that case, an Error is thrown.
    syntax:
      content: function readHeader()
      parameters: []
      return:
        type:
          - boolean
        description: ''
    package: tslib
  - uid: tslib.v8.Deserializer.readRawBytes
    name: readRawBytes(number)
    children: []
    type: method
    langs:
      - typeScript
    summary: >-
      Read raw bytes from the deserializerâ€™s internal buffer.

      The length parameter must correspond to the length of the buffer that was
      passed to serializer.writeRawBytes().
    syntax:
      content: 'function readRawBytes(length: number)'
      parameters:
        - id: length
          type:
            - number
          description: ''
      return:
        type:
          - Buffer
        description: ''
    package: tslib
  - uid: tslib.v8.Deserializer.readUint32
    name: readUint32()
    children: []
    type: method
    langs:
      - typeScript
    summary: Read a raw 32-bit unsigned integer and return it.
    syntax:
      content: function readUint32()
      parameters: []
      return:
        type:
          - number
        description: ''
    package: tslib
  - uid: tslib.v8.Deserializer.readUint64
    name: readUint64()
    children: []
    type: method
    langs:
      - typeScript
    summary: >-
      Read a raw 64-bit unsigned integer and return it as an array [hi, lo] with
      two 32-bit unsigned integer entries.
    syntax:
      content: function readUint64()
      parameters: []
      return:
        type:
          - Object
        description: ''
    package: tslib
  - uid: tslib.v8.Deserializer.readValue
    name: readValue()
    children: []
    type: method
    langs:
      - typeScript
    summary: Deserializes a JavaScript value from the buffer and returns it.
    syntax:
      content: function readValue()
      parameters: []
      return:
        type:
          - any
        description: ''
    package: tslib
  - uid: tslib.v8.Deserializer.transferArrayBuffer
    name: 'transferArrayBuffer(number, ArrayBuffer)'
    children: []
    type: method
    langs:
      - typeScript
    summary: >-
      Marks an ArrayBuffer as having its contents transferred out of band.

      Pass the corresponding `ArrayBuffer` in the serializing context to
      serializer.transferArrayBuffer()

      (or return the id from serializer._getSharedArrayBufferId() in the case of
      SharedArrayBuffers).
    syntax:
      content: 'function transferArrayBuffer(id: number, arrayBuffer: ArrayBuffer)'
      parameters:
        - id: id
          type:
            - number
          description: ''
        - id: arrayBuffer
          type:
            - ArrayBuffer
          description: ''
    package: tslib
references:
  - uid: tslib.v8.Deserializer
    name: Deserializer
    spec.typeScript:
      - name: Deserializer
        fullName: Deserializer
        uid: tslib.v8.Deserializer
  - uid: tslib.NodeJS.TypedArray
    name: TypedArray
    spec.typeScript:
      - name: TypedArray
        fullName: TypedArray
        uid: tslib.NodeJS.TypedArray
  - uid: tslib.v8.Serializer
    name: Serializer
    spec.typeScript:
      - name: Serializer
        fullName: Serializer
        uid: tslib.v8.Serializer
  - uid: tslib.v8.DoesZapCodeSpaceFlag
    name: DoesZapCodeSpaceFlag
    spec.typeScript:
      - name: DoesZapCodeSpaceFlag
        fullName: DoesZapCodeSpaceFlag
        uid: tslib.v8.DoesZapCodeSpaceFlag
  - uid: tslib.v8.HeapCodeStatistics
    name: HeapCodeStatistics
    spec.typeScript:
      - name: HeapCodeStatistics
        fullName: HeapCodeStatistics
        uid: tslib.v8.HeapCodeStatistics
  - uid: tslib.stream.internal.Readable
    name: Readable
    spec.typeScript:
      - name: Readable
        fullName: Readable
        uid: tslib.stream.internal.Readable
  - uid: 'tslib.v8.HeapSpaceInfo[]'
    name: 'HeapSpaceInfo[]'
    spec.typeScript:
      - name: HeapSpaceInfo
        fullName: HeapSpaceInfo
        uid: tslib.v8.HeapSpaceInfo
      - name: '[]'
        fullName: '[]'
  - uid: tslib.v8.HeapInfo
    name: HeapInfo
    spec.typeScript:
      - name: HeapInfo
        fullName: HeapInfo
        uid: tslib.v8.HeapInfo
