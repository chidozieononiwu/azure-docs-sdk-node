### YamlMime:UniversalReference
items:
  - uid: '@azure/abort-controller.tls'
    name: tls
    langs:
      - typeScript
    fullName: tls
    children:
      - '@azure/abort-controller.tls.Certificate'
      - '@azure/abort-controller.tls.checkServerIdentity'
      - '@azure/abort-controller.tls.CipherNameAndProtocol'
      - '@azure/abort-controller.tls.CommonConnectionOptions'
      - '@azure/abort-controller.tls.connect'
      - '@azure/abort-controller.tls.connect_2'
      - '@azure/abort-controller.tls.connect_1'
      - '@azure/abort-controller.tls.ConnectionOptions'
      - '@azure/abort-controller.tls.createSecureContext'
      - '@azure/abort-controller.tls.createSecurePair'
      - '@azure/abort-controller.tls.createServer_1'
      - '@azure/abort-controller.tls.createServer'
      - '@azure/abort-controller.tls.DetailedPeerCertificate'
      - '@azure/abort-controller.tls.EphemeralKeyInfo'
      - '@azure/abort-controller.tls.getCiphers'
      - '@azure/abort-controller.tls.KeyObject'
      - '@azure/abort-controller.tls.PeerCertificate'
      - '@azure/abort-controller.tls.PSKCallbackNegotation'
      - '@azure/abort-controller.tls.PxfObject'
      - '@azure/abort-controller.tls.SecureContext'
      - '@azure/abort-controller.tls.SecureContextOptions'
      - '@azure/abort-controller.tls.SecurePair'
      - '@azure/abort-controller.tls.SecureVersion'
      - '@azure/abort-controller.tls.Server'
      - '@azure/abort-controller.tls.TlsOptions'
      - '@azure/abort-controller.tls.TLSSocket'
      - '@azure/abort-controller.tls.TLSSocketOptions'
    type: module
    summary: ''
    package: '@azure/abort-controller'
  - uid: '@azure/abort-controller.tls.checkServerIdentity'
    name: 'checkServerIdentity(string, PeerCertificate)'
    children: []
    type: function
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function checkServerIdentity(host: string, cert: PeerCertificate)'
      parameters:
        - id: host
          type:
            - string
          description: ''
        - id: cert
          type:
            - '@azure/abort-controller.tls.PeerCertificate'
          description: ''
      return:
        type:
          - Error | undefined
        description: ''
    package: '@azure/abort-controller'
  - uid: '@azure/abort-controller.tls.connect'
    name: 'connect(ConnectionOptions, undefined | () => void)'
    children: []
    type: function
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function connect(options: ConnectionOptions, secureConnectListener?:
        undefined | () => void)
      parameters:
        - id: options
          type:
            - '@azure/abort-controller.tls.ConnectionOptions'
          description: ''
        - id: secureConnectListener
          type:
            - undefined | () => void
          description: ''
          optional: true
      return:
        type:
          - '@azure/abort-controller.tls.TLSSocket'
        description: ''
    package: '@azure/abort-controller'
  - uid: '@azure/abort-controller.tls.connect_2'
    name: 'connect(number, ConnectionOptions, undefined | () => void)'
    children: []
    type: function
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function connect(port: number, options?: ConnectionOptions,
        secureConnectListener?: undefined | () => void)
      parameters:
        - id: port
          type:
            - number
          description: ''
        - id: options
          type:
            - '@azure/abort-controller.tls.ConnectionOptions'
          description: ''
          optional: true
        - id: secureConnectListener
          type:
            - undefined | () => void
          description: ''
          optional: true
      return:
        type:
          - '@azure/abort-controller.tls.TLSSocket'
        description: ''
    package: '@azure/abort-controller'
  - uid: '@azure/abort-controller.tls.connect_1'
    name: >-
      connect(number, undefined | string, ConnectionOptions, undefined | () =>
      void)
    children: []
    type: function
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function connect(port: number, host?: undefined | string, options?:
        ConnectionOptions, secureConnectListener?: undefined | () => void)
      parameters:
        - id: port
          type:
            - number
          description: ''
        - id: host
          type:
            - undefined | string
          description: ''
          optional: true
        - id: options
          type:
            - '@azure/abort-controller.tls.ConnectionOptions'
          description: ''
          optional: true
        - id: secureConnectListener
          type:
            - undefined | () => void
          description: ''
          optional: true
      return:
        type:
          - '@azure/abort-controller.tls.TLSSocket'
        description: ''
    package: '@azure/abort-controller'
  - uid: '@azure/abort-controller.tls.createSecureContext'
    name: createSecureContext(SecureContextOptions)
    children: []
    type: function
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function createSecureContext(details: SecureContextOptions)'
      parameters:
        - id: details
          type:
            - '@azure/abort-controller.tls.SecureContextOptions'
          description: ''
      return:
        type:
          - '@azure/abort-controller.tls.SecureContext'
        description: ''
    package: '@azure/abort-controller'
  - uid: '@azure/abort-controller.tls.createSecurePair'
    name: >-
      createSecurePair(SecureContext, undefined | false | true, undefined |
      false | true, undefined | false | true)
    children: []
    type: function
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function createSecurePair(credentials?: SecureContext, isServer?:
        undefined | false | true, requestCert?: undefined | false | true,
        rejectUnauthorized?: undefined | false | true)
      parameters:
        - id: credentials
          type:
            - '@azure/abort-controller.tls.SecureContext'
          description: ''
          optional: true
        - id: isServer
          type:
            - undefined | false | true
          description: ''
          optional: true
        - id: requestCert
          type:
            - undefined | false | true
          description: ''
          optional: true
        - id: rejectUnauthorized
          type:
            - undefined | false | true
          description: ''
          optional: true
      return:
        type:
          - '@azure/abort-controller.tls.SecurePair'
        description: ''
    package: '@azure/abort-controller'
    deprecated:
      content: ''
  - uid: '@azure/abort-controller.tls.createServer_1'
    name: 'createServer(TlsOptions, undefined | (socket: TLSSocket) => void)'
    children: []
    type: function
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function createServer(options: TlsOptions, secureConnectionListener?:
        undefined | (socket: TLSSocket) => void)
      parameters:
        - id: options
          type:
            - '@azure/abort-controller.tls.TlsOptions'
          description: ''
        - id: secureConnectionListener
          type:
            - 'undefined | (socket: TLSSocket) => void'
          description: ''
          optional: true
      return:
        type:
          - '@azure/abort-controller.tls.Server'
        description: ''
    package: '@azure/abort-controller'
  - uid: '@azure/abort-controller.tls.createServer'
    name: 'createServer(undefined | (socket: TLSSocket) => void)'
    children: []
    type: function
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function createServer(secureConnectionListener?: undefined | (socket:
        TLSSocket) => void)
      parameters:
        - id: secureConnectionListener
          type:
            - 'undefined | (socket: TLSSocket) => void'
          description: ''
          optional: true
      return:
        type:
          - '@azure/abort-controller.tls.Server'
        description: ''
    package: '@azure/abort-controller'
  - uid: '@azure/abort-controller.tls.getCiphers'
    name: getCiphers()
    children: []
    type: function
    langs:
      - typeScript
    summary: ''
    syntax:
      content: function getCiphers()
      parameters: []
      return:
        type:
          - 'string[]'
        description: ''
    package: '@azure/abort-controller'
references:
  - uid: '@azure/abort-controller.net.Server'
    name: Server
    spec.typeScript:
      - name: Server
        fullName: Server
        uid: '@azure/abort-controller.net.Server'
  - uid: '@azure/abort-controller.tls.SecureContextOptions'
    name: SecureContextOptions
    spec.typeScript:
      - name: SecureContextOptions
        fullName: SecureContextOptions
        uid: '@azure/abort-controller.tls.SecureContextOptions'
  - uid: '@azure/abort-controller.net.AddressInfo | string | null'
    name: AddressInfo | string | null
    spec.typeScript:
      - name: AddressInfo
        fullName: AddressInfo
        uid: '@azure/abort-controller.net.AddressInfo'
      - name: ' | string | null'
        fullName: ' | string | null'
  - uid: '@azure/abort-controller.tls.TLSSocket'
    name: TLSSocket
    spec.typeScript:
      - name: TLSSocket
        fullName: TLSSocket
        uid: '@azure/abort-controller.tls.TLSSocket'
  - uid: '@azure/abort-controller.net.ListenOptions'
    name: ListenOptions
    spec.typeScript:
      - name: ListenOptions
        fullName: ListenOptions
        uid: '@azure/abort-controller.net.ListenOptions'
  - uid: '@azure/abort-controller.net.Socket'
    name: Socket
    spec.typeScript:
      - name: Socket
        fullName: Socket
        uid: '@azure/abort-controller.net.Socket'
  - uid: '@azure/abort-controller.tls.TLSSocketOptions'
    name: TLSSocketOptions
    spec.typeScript:
      - name: TLSSocketOptions
        fullName: TLSSocketOptions
        uid: '@azure/abort-controller.tls.TLSSocketOptions'
  - uid: '@azure/abort-controller.net.AddressInfo | string'
    name: AddressInfo | string
    spec.typeScript:
      - name: AddressInfo
        fullName: AddressInfo
        uid: '@azure/abort-controller.net.AddressInfo'
      - name: ' | string'
        fullName: ' | string'
  - uid: '@azure/abort-controller.net.SocketConnectOpts'
    name: SocketConnectOpts
    spec.typeScript:
      - name: SocketConnectOpts
        fullName: SocketConnectOpts
        uid: '@azure/abort-controller.net.SocketConnectOpts'
  - uid: '@azure/abort-controller.AbortError.Error'
    name: Error
    spec.typeScript:
      - name: Error
        fullName: Error
        uid: '@azure/abort-controller.AbortError.Error'
  - uid: '@azure/abort-controller.tls.PeerCertificate | object | null'
    name: PeerCertificate | object | null
    spec.typeScript:
      - name: PeerCertificate
        fullName: PeerCertificate
        uid: '@azure/abort-controller.tls.PeerCertificate'
      - name: ' | object | null'
        fullName: ' | object | null'
  - uid: '@azure/abort-controller.tls.CipherNameAndProtocol'
    name: CipherNameAndProtocol
    spec.typeScript:
      - name: CipherNameAndProtocol
        fullName: CipherNameAndProtocol
        uid: '@azure/abort-controller.tls.CipherNameAndProtocol'
  - uid: '@azure/abort-controller.tls.EphemeralKeyInfo | object | null'
    name: EphemeralKeyInfo | object | null
    spec.typeScript:
      - name: EphemeralKeyInfo
        fullName: EphemeralKeyInfo
        uid: '@azure/abort-controller.tls.EphemeralKeyInfo'
      - name: ' | object | null'
        fullName: ' | object | null'
  - uid: '@azure/abort-controller.tls.DetailedPeerCertificate'
    name: DetailedPeerCertificate
    spec.typeScript:
      - name: DetailedPeerCertificate
        fullName: DetailedPeerCertificate
        uid: '@azure/abort-controller.tls.DetailedPeerCertificate'
  - uid: '@azure/abort-controller.tls.PeerCertificate'
    name: PeerCertificate
    spec.typeScript:
      - name: PeerCertificate
        fullName: PeerCertificate
        uid: '@azure/abort-controller.tls.PeerCertificate'
  - uid: >-
      @azure/abort-controller.tls.PeerCertificate |
      @azure/abort-controller.tls.DetailedPeerCertificate
    name: DetailedPeerCertificate
    spec.typeScript:
      - name: PeerCertificate
        fullName: PeerCertificate
        uid: '@azure/abort-controller.tls.PeerCertificate'
      - name: ' | '
        fullName: ' | '
      - name: DetailedPeerCertificate
        fullName: DetailedPeerCertificate
        uid: '@azure/abort-controller.tls.DetailedPeerCertificate'
  - uid: '@azure/abort-controller.NodeJS.WritableStream'
    name: WritableStream
    spec.typeScript:
      - name: WritableStream
        fullName: WritableStream
        uid: '@azure/abort-controller.NodeJS.WritableStream'
  - uid: '@azure/abort-controller.BufferEncoding'
    name: BufferEncoding
    spec.typeScript:
      - name: BufferEncoding
        fullName: BufferEncoding
        uid: '@azure/abort-controller.BufferEncoding'
  - uid: '@azure/abort-controller.NodeJS.ReadableStream'
    name: ReadableStream
    spec.typeScript:
      - name: ReadableStream
        fullName: ReadableStream
        uid: '@azure/abort-controller.NodeJS.ReadableStream'
  - uid: '@azure/abort-controller.stream.internal.ReadableOptions'
    name: ReadableOptions
    spec.typeScript:
      - name: ReadableOptions
        fullName: ReadableOptions
        uid: '@azure/abort-controller.stream.internal.ReadableOptions'
  - uid: '@azure/abort-controller.stream.internal.Readable'
    name: Readable
    spec.typeScript:
      - name: Readable
        fullName: Readable
        uid: '@azure/abort-controller.stream.internal.Readable'
  - uid: '@azure/abort-controller.tls.SecureContext'
    name: SecureContext
    spec.typeScript:
      - name: SecureContext
        fullName: SecureContext
        uid: '@azure/abort-controller.tls.SecureContext'
  - uid: undefined | @azure/abort-controller.tls.checkServerIdentity
    name: checkServerIdentity
    spec.typeScript:
      - name: 'undefined | '
        fullName: 'undefined | '
      - name: checkServerIdentity
        fullName: checkServerIdentity
        uid: '@azure/abort-controller.tls.checkServerIdentity'
  - uid: string | Buffer | Array<Buffer | @azure/abort-controller.tls.KeyObject>
    name: KeyObject>
    spec.typeScript:
      - name: 'string | Buffer | Array<Buffer | '
        fullName: 'string | Buffer | Array<Buffer | '
      - name: KeyObject
        fullName: KeyObject
        uid: '@azure/abort-controller.tls.KeyObject'
      - name: '>'
        fullName: '>'
  - uid: '@azure/abort-controller.tls.SecureVersion'
    name: SecureVersion
    spec.typeScript:
      - name: SecureVersion
        fullName: SecureVersion
        uid: '@azure/abort-controller.tls.SecureVersion'
  - uid: >-
      string | Buffer | Array<string | Buffer |
      @azure/abort-controller.tls.PxfObject>
    name: PxfObject>
    spec.typeScript:
      - name: 'string | Buffer | Array<string | Buffer | '
        fullName: 'string | Buffer | Array<string | Buffer | '
      - name: PxfObject
        fullName: PxfObject
        uid: '@azure/abort-controller.tls.PxfObject'
      - name: '>'
        fullName: '>'
  - uid: '@azure/abort-controller.Buffer'
    name: Buffer
    spec.typeScript:
      - name: Buffer
        fullName: Buffer
        uid: '@azure/abort-controller.Buffer'
  - uid: '@azure/abort-controller.tls.PSKCallbackNegotation | null'
    name: PSKCallbackNegotation | null
    spec.typeScript:
      - name: PSKCallbackNegotation
        fullName: PSKCallbackNegotation
        uid: '@azure/abort-controller.tls.PSKCallbackNegotation'
      - name: ' | null'
        fullName: ' | null'
  - uid: '@azure/abort-controller.tls.Certificate'
    name: Certificate
    spec.typeScript:
      - name: Certificate
        fullName: Certificate
        uid: '@azure/abort-controller.tls.Certificate'
  - uid: DataView | @azure/abort-controller.NodeJS.TypedArray
    name: TypedArray
    spec.typeScript:
      - name: 'DataView | '
        fullName: 'DataView | '
      - name: TypedArray
        fullName: TypedArray
        uid: '@azure/abort-controller.NodeJS.TypedArray'
  - uid: DataView | @azure/abort-controller.NodeJS.TypedArray | null
    name: TypedArray | null
    spec.typeScript:
      - name: 'DataView | '
        fullName: 'DataView | '
      - name: TypedArray
        fullName: TypedArray
        uid: '@azure/abort-controller.NodeJS.TypedArray'
      - name: ' | null'
        fullName: ' | null'
  - uid: '@azure/abort-controller.tls.ConnectionOptions'
    name: ConnectionOptions
    spec.typeScript:
      - name: ConnectionOptions
        fullName: ConnectionOptions
        uid: '@azure/abort-controller.tls.ConnectionOptions'
  - uid: '@azure/abort-controller.tls.SecurePair'
    name: SecurePair
    spec.typeScript:
      - name: SecurePair
        fullName: SecurePair
        uid: '@azure/abort-controller.tls.SecurePair'
  - uid: '@azure/abort-controller.tls.Server'
    name: Server
    spec.typeScript:
      - name: Server
        fullName: Server
        uid: '@azure/abort-controller.tls.Server'
  - uid: '@azure/abort-controller.tls.TlsOptions'
    name: TlsOptions
    spec.typeScript:
      - name: TlsOptions
        fullName: TlsOptions
        uid: '@azure/abort-controller.tls.TlsOptions'
  - uid: '@azure/abort-controller.tls.checkServerIdentity'
    name: checkServerIdentity
  - uid: '@azure/abort-controller.tls.CommonConnectionOptions'
    name: CommonConnectionOptions
  - uid: '@azure/abort-controller.tls.connect'
    name: connect
  - uid: '@azure/abort-controller.tls.connect_2'
    name: connect_2
  - uid: '@azure/abort-controller.tls.connect_1'
    name: connect_1
  - uid: '@azure/abort-controller.tls.createSecureContext'
    name: createSecureContext
  - uid: '@azure/abort-controller.tls.createSecurePair'
    name: createSecurePair
  - uid: '@azure/abort-controller.tls.createServer_1'
    name: createServer_1
  - uid: '@azure/abort-controller.tls.createServer'
    name: createServer
  - uid: '@azure/abort-controller.tls.EphemeralKeyInfo'
    name: EphemeralKeyInfo
  - uid: '@azure/abort-controller.tls.getCiphers'
    name: getCiphers
  - uid: '@azure/abort-controller.tls.KeyObject'
    name: KeyObject
  - uid: '@azure/abort-controller.tls.PSKCallbackNegotation'
    name: PSKCallbackNegotation
  - uid: '@azure/abort-controller.tls.PxfObject'
    name: PxfObject
