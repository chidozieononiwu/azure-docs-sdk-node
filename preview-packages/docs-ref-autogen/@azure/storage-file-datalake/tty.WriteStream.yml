### YamlMime:UniversalReference
items:
  - uid: '@azure/abort-controller.tty.WriteStream'
    name: WriteStream
    fullName: WriteStream
    children:
      - '@azure/abort-controller.tty.WriteStream.addListener_1'
      - '@azure/abort-controller.tty.WriteStream.addListener'
      - '@azure/abort-controller.tty.WriteStream.address'
      - '@azure/abort-controller.tty.WriteStream.bufferSize'
      - '@azure/abort-controller.tty.WriteStream.bytesRead'
      - '@azure/abort-controller.tty.WriteStream.bytesWritten'
      - '@azure/abort-controller.tty.WriteStream.clearLine'
      - '@azure/abort-controller.tty.WriteStream.clearScreenDown'
      - '@azure/abort-controller.tty.WriteStream.columns'
      - '@azure/abort-controller.tty.WriteStream.connect_1'
      - '@azure/abort-controller.tty.WriteStream.connect_2'
      - '@azure/abort-controller.tty.WriteStream.connect'
      - '@azure/abort-controller.tty.WriteStream.connect_3'
      - '@azure/abort-controller.tty.WriteStream.connecting'
      - '@azure/abort-controller.tty.WriteStream.cork'
      - '@azure/abort-controller.tty.WriteStream.cursorTo_1'
      - '@azure/abort-controller.tty.WriteStream.cursorTo'
      - '@azure/abort-controller.tty.WriteStream.destroy'
      - '@azure/abort-controller.tty.WriteStream.destroyed'
      - '@azure/abort-controller.tty.WriteStream.emit_1'
      - '@azure/abort-controller.tty.WriteStream.emit'
      - '@azure/abort-controller.tty.WriteStream.end_1'
      - '@azure/abort-controller.tty.WriteStream.end_2'
      - '@azure/abort-controller.tty.WriteStream.end'
      - '@azure/abort-controller.tty.WriteStream.eventNames'
      - '@azure/abort-controller.tty.WriteStream.from'
      - '@azure/abort-controller.tty.WriteStream.getColorDepth'
      - '@azure/abort-controller.tty.WriteStream.getMaxListeners'
      - '@azure/abort-controller.tty.WriteStream.getWindowSize'
      - '@azure/abort-controller.tty.WriteStream.hasColors_2'
      - '@azure/abort-controller.tty.WriteStream.hasColors'
      - '@azure/abort-controller.tty.WriteStream.hasColors_1'
      - '@azure/abort-controller.tty.WriteStream.isPaused'
      - '@azure/abort-controller.tty.WriteStream.isTTY'
      - '@azure/abort-controller.tty.WriteStream.listenerCount'
      - '@azure/abort-controller.tty.WriteStream.listeners'
      - '@azure/abort-controller.tty.WriteStream.localAddress'
      - '@azure/abort-controller.tty.WriteStream.localPort'
      - '@azure/abort-controller.tty.WriteStream.moveCursor'
      - '@azure/abort-controller.tty.WriteStream.off'
      - '@azure/abort-controller.tty.WriteStream.on_1'
      - '@azure/abort-controller.tty.WriteStream.on'
      - '@azure/abort-controller.tty.WriteStream.once_1'
      - '@azure/abort-controller.tty.WriteStream.once'
      - '@azure/abort-controller.tty.WriteStream.pause'
      - '@azure/abort-controller.tty.WriteStream.pipe'
      - '@azure/abort-controller.tty.WriteStream.prependListener_1'
      - '@azure/abort-controller.tty.WriteStream.prependListener'
      - '@azure/abort-controller.tty.WriteStream.prependOnceListener_1'
      - '@azure/abort-controller.tty.WriteStream.prependOnceListener'
      - '@azure/abort-controller.tty.WriteStream.push'
      - '@azure/abort-controller.tty.WriteStream.rawListeners'
      - '@azure/abort-controller.tty.WriteStream.read'
      - '@azure/abort-controller.tty.WriteStream.readable'
      - '@azure/abort-controller.tty.WriteStream.readableHighWaterMark'
      - '@azure/abort-controller.tty.WriteStream.readableLength'
      - '@azure/abort-controller.tty.WriteStream.readableObjectMode'
      - '@azure/abort-controller.tty.WriteStream.ref'
      - '@azure/abort-controller.tty.WriteStream.remoteAddress'
      - '@azure/abort-controller.tty.WriteStream.remoteFamily'
      - '@azure/abort-controller.tty.WriteStream.remotePort'
      - '@azure/abort-controller.tty.WriteStream.removeAllListeners'
      - '@azure/abort-controller.tty.WriteStream.removeListener'
      - '@azure/abort-controller.tty.WriteStream.removeListener_1'
      - '@azure/abort-controller.tty.WriteStream.removeListener_2'
      - '@azure/abort-controller.tty.WriteStream.removeListener_4'
      - '@azure/abort-controller.tty.WriteStream.removeListener_3'
      - '@azure/abort-controller.tty.WriteStream.removeListener_5'
      - '@azure/abort-controller.tty.WriteStream.resume'
      - '@azure/abort-controller.tty.WriteStream.rows'
      - '@azure/abort-controller.tty.WriteStream.setDefaultEncoding'
      - '@azure/abort-controller.tty.WriteStream.setEncoding'
      - '@azure/abort-controller.tty.WriteStream.setKeepAlive'
      - '@azure/abort-controller.tty.WriteStream.setMaxListeners'
      - '@azure/abort-controller.tty.WriteStream.setNoDelay'
      - '@azure/abort-controller.tty.WriteStream.setTimeout'
      - '@azure/abort-controller.tty.WriteStream.uncork'
      - '@azure/abort-controller.tty.WriteStream.unpipe'
      - '@azure/abort-controller.tty.WriteStream.unref'
      - '@azure/abort-controller.tty.WriteStream.unshift'
      - '@azure/abort-controller.tty.WriteStream.wrap'
      - '@azure/abort-controller.tty.WriteStream.writable'
      - '@azure/abort-controller.tty.WriteStream.writableCorked'
      - '@azure/abort-controller.tty.WriteStream.writableEnded'
      - '@azure/abort-controller.tty.WriteStream.writableFinished'
      - '@azure/abort-controller.tty.WriteStream.writableHighWaterMark'
      - '@azure/abort-controller.tty.WriteStream.writableLength'
      - '@azure/abort-controller.tty.WriteStream.writableObjectMode'
      - '@azure/abort-controller.tty.WriteStream.write'
      - '@azure/abort-controller.tty.WriteStream.write_1'
      - '@azure/abort-controller.tty.WriteStream.constructor'
    langs:
      - typeScript
    type: class
    summary: ''
    extends:
      name: '@azure/abort-controller.net.Socket'
    package: '@azure/abort-controller'
  - uid: '@azure/abort-controller.tty.WriteStream.addListener_1'
    name: 'addListener("resize", () => void)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function addListener(event: "resize", listener: () => void)'
      parameters:
        - id: event
          type:
            - '"resize"'
          description: ''
        - id: listener
          type:
            - () => void
          description: ''
      return:
        type:
          - this
        description: ''
    package: '@azure/abort-controller'
  - uid: '@azure/abort-controller.tty.WriteStream.addListener'
    name: 'addListener(string, (args: any[]) => void)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function addListener(event: string, listener: (args: any[]) => void)'
      parameters:
        - id: event
          type:
            - string
          description: ''
        - id: listener
          type:
            - '(args: any[]) => void'
          description: ''
      return:
        type:
          - this
        description: ''
    package: '@azure/abort-controller'
  - uid: '@azure/abort-controller.tty.WriteStream.address'
    name: address()
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: function address()
      parameters: []
      return:
        type:
          - '@azure/abort-controller.net.AddressInfo | string'
        description: ''
    package: '@azure/abort-controller'
  - uid: '@azure/abort-controller.tty.WriteStream.bufferSize'
    name: bufferSize
    fullName: bufferSize
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    syntax:
      content: 'bufferSize: number'
      return:
        type:
          - number
        description: ''
    package: '@azure/abort-controller'
  - uid: '@azure/abort-controller.tty.WriteStream.bytesRead'
    name: bytesRead
    fullName: bytesRead
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    syntax:
      content: 'bytesRead: number'
      return:
        type:
          - number
        description: ''
    package: '@azure/abort-controller'
  - uid: '@azure/abort-controller.tty.WriteStream.bytesWritten'
    name: bytesWritten
    fullName: bytesWritten
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    syntax:
      content: 'bytesWritten: number'
      return:
        type:
          - number
        description: ''
    package: '@azure/abort-controller'
  - uid: '@azure/abort-controller.tty.WriteStream.clearLine'
    name: 'clearLine(Direction, undefined | () => void)'
    children: []
    type: method
    langs:
      - typeScript
    summary: >-
      Clears the current line of this WriteStream in a direction identified by
      `dir`.
    syntax:
      content: 'function clearLine(dir: Direction, callback?: undefined | () => void)'
      parameters:
        - id: dir
          type:
            - '@azure/abort-controller.tty.Direction'
          description: ''
        - id: callback
          type:
            - undefined | () => void
          description: ''
          optional: true
      return:
        type:
          - boolean
        description: ''
    package: '@azure/abort-controller'
  - uid: '@azure/abort-controller.tty.WriteStream.clearScreenDown'
    name: clearScreenDown(undefined | () => void)
    children: []
    type: method
    langs:
      - typeScript
    summary: Clears this `WriteStream` from the current cursor down.
    syntax:
      content: 'function clearScreenDown(callback?: undefined | () => void)'
      parameters:
        - id: callback
          type:
            - undefined | () => void
          description: ''
          optional: true
      return:
        type:
          - boolean
        description: ''
    package: '@azure/abort-controller'
  - uid: '@azure/abort-controller.tty.WriteStream.columns'
    name: columns
    fullName: columns
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    syntax:
      content: 'columns: number'
      return:
        type:
          - number
        description: ''
    package: '@azure/abort-controller'
  - uid: '@azure/abort-controller.tty.WriteStream.connect_1'
    name: 'connect(number, string, undefined | () => void)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function connect(port: number, host: string, connectionListener?:
        undefined | () => void)
      parameters:
        - id: port
          type:
            - number
          description: ''
        - id: host
          type:
            - string
          description: ''
        - id: connectionListener
          type:
            - undefined | () => void
          description: ''
          optional: true
      return:
        type:
          - this
        description: ''
    package: '@azure/abort-controller'
  - uid: '@azure/abort-controller.tty.WriteStream.connect_2'
    name: 'connect(number, undefined | () => void)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function connect(port: number, connectionListener?: undefined | () =>
        void)
      parameters:
        - id: port
          type:
            - number
          description: ''
        - id: connectionListener
          type:
            - undefined | () => void
          description: ''
          optional: true
      return:
        type:
          - this
        description: ''
    package: '@azure/abort-controller'
  - uid: '@azure/abort-controller.tty.WriteStream.connect'
    name: 'connect(SocketConnectOpts, undefined | () => void)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function connect(options: SocketConnectOpts, connectionListener?:
        undefined | () => void)
      parameters:
        - id: options
          type:
            - '@azure/abort-controller.net.SocketConnectOpts'
          description: ''
        - id: connectionListener
          type:
            - undefined | () => void
          description: ''
          optional: true
      return:
        type:
          - this
        description: ''
    package: '@azure/abort-controller'
  - uid: '@azure/abort-controller.tty.WriteStream.connect_3'
    name: 'connect(string, undefined | () => void)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function connect(path: string, connectionListener?: undefined | () =>
        void)
      parameters:
        - id: path
          type:
            - string
          description: ''
        - id: connectionListener
          type:
            - undefined | () => void
          description: ''
          optional: true
      return:
        type:
          - this
        description: ''
    package: '@azure/abort-controller'
  - uid: '@azure/abort-controller.tty.WriteStream.connecting'
    name: connecting
    fullName: connecting
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    syntax:
      content: 'connecting: boolean'
      return:
        type:
          - boolean
        description: ''
    package: '@azure/abort-controller'
  - uid: '@azure/abort-controller.tty.WriteStream.cork'
    name: cork()
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: function cork()
      parameters: []
    package: '@azure/abort-controller'
  - uid: '@azure/abort-controller.tty.WriteStream.cursorTo_1'
    name: 'cursorTo(number, () => void)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function cursorTo(x: number, callback: () => void)'
      parameters:
        - id: x
          type:
            - number
          description: ''
        - id: callback
          type:
            - () => void
          description: ''
      return:
        type:
          - boolean
        description: ''
    package: '@azure/abort-controller'
  - uid: '@azure/abort-controller.tty.WriteStream.cursorTo'
    name: 'cursorTo(number, undefined | number, undefined | () => void)'
    children: []
    type: method
    langs:
      - typeScript
    summary: Moves this WriteStream's cursor to the specified position.
    syntax:
      content: >-
        function cursorTo(x: number, y?: undefined | number, callback?:
        undefined | () => void)
      parameters:
        - id: x
          type:
            - number
          description: ''
        - id: 'y'
          type:
            - undefined | number
          description: ''
          optional: true
        - id: callback
          type:
            - undefined | () => void
          description: ''
          optional: true
      return:
        type:
          - boolean
        description: ''
    package: '@azure/abort-controller'
  - uid: '@azure/abort-controller.tty.WriteStream.destroy'
    name: destroy(Error)
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function destroy(error?: Error)'
      parameters:
        - id: error
          type:
            - '@azure/abort-controller.AbortError.Error'
          description: ''
          optional: true
    package: '@azure/abort-controller'
  - uid: '@azure/abort-controller.tty.WriteStream.destroyed'
    name: destroyed
    fullName: destroyed
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    syntax:
      content: 'destroyed: boolean'
      return:
        type:
          - boolean
        description: ''
    package: '@azure/abort-controller'
  - uid: '@azure/abort-controller.tty.WriteStream.emit_1'
    name: emit("resize")
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function emit(event: "resize")'
      parameters:
        - id: event
          type:
            - '"resize"'
          description: ''
      return:
        type:
          - boolean
        description: ''
    package: '@azure/abort-controller'
  - uid: '@azure/abort-controller.tty.WriteStream.emit'
    name: 'emit(string | symbol, any[])'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function emit(event: string | symbol, args: any[])'
      parameters:
        - id: event
          type:
            - string | symbol
          description: ''
        - id: args
          type:
            - 'any[]'
          description: ''
      return:
        type:
          - boolean
        description: ''
    package: '@azure/abort-controller'
  - uid: '@azure/abort-controller.tty.WriteStream.end_1'
    name: 'end(Uint8Array | string, undefined | () => void)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function end(buffer: Uint8Array | string, cb?: undefined | () => void)'
      parameters:
        - id: buffer
          type:
            - Uint8Array | string
          description: ''
        - id: cb
          type:
            - undefined | () => void
          description: ''
          optional: true
    package: '@azure/abort-controller'
  - uid: '@azure/abort-controller.tty.WriteStream.end_2'
    name: 'end(Uint8Array | string, undefined | string, undefined | () => void)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function end(str: Uint8Array | string, encoding?: undefined | string,
        cb?: undefined | () => void)
      parameters:
        - id: str
          type:
            - Uint8Array | string
          description: ''
        - id: encoding
          type:
            - undefined | string
          description: ''
          optional: true
        - id: cb
          type:
            - undefined | () => void
          description: ''
          optional: true
    package: '@azure/abort-controller'
  - uid: '@azure/abort-controller.tty.WriteStream.end'
    name: end(undefined | () => void)
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function end(cb?: undefined | () => void)'
      parameters:
        - id: cb
          type:
            - undefined | () => void
          description: ''
          optional: true
    package: '@azure/abort-controller'
  - uid: '@azure/abort-controller.tty.WriteStream.eventNames'
    name: eventNames()
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: function eventNames()
      parameters: []
      return:
        type:
          - Array<string | symbol>
        description: ''
    package: '@azure/abort-controller'
  - uid: '@azure/abort-controller.tty.WriteStream.from'
    name: 'from(Iterable<any> | AsyncIterable<any>, ReadableOptions)'
    children: []
    type: method
    langs:
      - typeScript
    summary: A utility method for creating Readable Streams out of iterators.
    syntax:
      content: >-
        static function from(iterable: Iterable<any> | AsyncIterable<any>,
        options?: ReadableOptions)
      parameters:
        - id: iterable
          type:
            - Iterable<any> | AsyncIterable<any>
          description: ''
        - id: options
          type:
            - '@azure/abort-controller.stream.internal.ReadableOptions'
          description: ''
          optional: true
      return:
        type:
          - '@azure/abort-controller.stream.internal.Readable'
        description: ''
    package: '@azure/abort-controller'
  - uid: '@azure/abort-controller.tty.WriteStream.getColorDepth'
    name: getColorDepth(undefined | __type)
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function getColorDepth(env?: undefined | __type)'
      parameters:
        - id: env
          type:
            - undefined | __type
          description: ''
          optional: true
      return:
        type:
          - number
        description: ''
    package: '@azure/abort-controller'
  - uid: '@azure/abort-controller.tty.WriteStream.getMaxListeners'
    name: getMaxListeners()
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: function getMaxListeners()
      parameters: []
      return:
        type:
          - number
        description: ''
    package: '@azure/abort-controller'
  - uid: '@azure/abort-controller.tty.WriteStream.getWindowSize'
    name: getWindowSize()
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: function getWindowSize()
      parameters: []
      return:
        type:
          - Object
        description: ''
    package: '@azure/abort-controller'
  - uid: '@azure/abort-controller.tty.WriteStream.hasColors_2'
    name: 'hasColors(number, undefined | __type)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function hasColors(depth: number, env?: undefined | __type)'
      parameters:
        - id: depth
          type:
            - number
          description: ''
        - id: env
          type:
            - undefined | __type
          description: ''
          optional: true
      return:
        type:
          - boolean
        description: ''
    package: '@azure/abort-controller'
  - uid: '@azure/abort-controller.tty.WriteStream.hasColors'
    name: hasColors(undefined | number)
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function hasColors(depth?: undefined | number)'
      parameters:
        - id: depth
          type:
            - undefined | number
          description: ''
          optional: true
      return:
        type:
          - boolean
        description: ''
    package: '@azure/abort-controller'
  - uid: '@azure/abort-controller.tty.WriteStream.hasColors_1'
    name: hasColors(undefined | __type)
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function hasColors(env?: undefined | __type)'
      parameters:
        - id: env
          type:
            - undefined | __type
          description: ''
          optional: true
      return:
        type:
          - boolean
        description: ''
    package: '@azure/abort-controller'
  - uid: '@azure/abort-controller.tty.WriteStream.isPaused'
    name: isPaused()
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: function isPaused()
      parameters: []
      return:
        type:
          - boolean
        description: ''
    package: '@azure/abort-controller'
  - uid: '@azure/abort-controller.tty.WriteStream.isTTY'
    name: isTTY
    fullName: isTTY
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    syntax:
      content: 'isTTY: boolean'
      return:
        type:
          - boolean
        description: ''
    package: '@azure/abort-controller'
  - uid: '@azure/abort-controller.tty.WriteStream.listenerCount'
    name: listenerCount(string | symbol)
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function listenerCount(type: string | symbol)'
      parameters:
        - id: type
          type:
            - string | symbol
          description: ''
      return:
        type:
          - number
        description: ''
    package: '@azure/abort-controller'
  - uid: '@azure/abort-controller.tty.WriteStream.listeners'
    name: listeners(string | symbol)
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function listeners(event: string | symbol)'
      parameters:
        - id: event
          type:
            - string | symbol
          description: ''
      return:
        type:
          - 'Function[]'
        description: ''
    package: '@azure/abort-controller'
  - uid: '@azure/abort-controller.tty.WriteStream.localAddress'
    name: localAddress
    fullName: localAddress
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    syntax:
      content: 'localAddress: string'
      return:
        type:
          - string
        description: ''
    package: '@azure/abort-controller'
  - uid: '@azure/abort-controller.tty.WriteStream.localPort'
    name: localPort
    fullName: localPort
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    syntax:
      content: 'localPort: number'
      return:
        type:
          - number
        description: ''
    package: '@azure/abort-controller'
  - uid: '@azure/abort-controller.tty.WriteStream.moveCursor'
    name: 'moveCursor(number, number, undefined | () => void)'
    children: []
    type: method
    langs:
      - typeScript
    summary: Moves this WriteStream's cursor relative to its current position.
    syntax:
      content: >-
        function moveCursor(dx: number, dy: number, callback?: undefined | () =>
        void)
      parameters:
        - id: dx
          type:
            - number
          description: ''
        - id: dy
          type:
            - number
          description: ''
        - id: callback
          type:
            - undefined | () => void
          description: ''
          optional: true
      return:
        type:
          - boolean
        description: ''
    package: '@azure/abort-controller'
  - uid: '@azure/abort-controller.tty.WriteStream.off'
    name: 'off(string | symbol, (args: any[]) => void)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function off(event: string | symbol, listener: (args: any[]) => void)'
      parameters:
        - id: event
          type:
            - string | symbol
          description: ''
        - id: listener
          type:
            - '(args: any[]) => void'
          description: ''
      return:
        type:
          - this
        description: ''
    package: '@azure/abort-controller'
  - uid: '@azure/abort-controller.tty.WriteStream.on_1'
    name: 'on("resize", () => void)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function on(event: "resize", listener: () => void)'
      parameters:
        - id: event
          type:
            - '"resize"'
          description: ''
        - id: listener
          type:
            - () => void
          description: ''
      return:
        type:
          - this
        description: ''
    package: '@azure/abort-controller'
  - uid: '@azure/abort-controller.tty.WriteStream.on'
    name: 'on(string, (args: any[]) => void)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function on(event: string, listener: (args: any[]) => void)'
      parameters:
        - id: event
          type:
            - string
          description: ''
        - id: listener
          type:
            - '(args: any[]) => void'
          description: ''
      return:
        type:
          - this
        description: ''
    package: '@azure/abort-controller'
  - uid: '@azure/abort-controller.tty.WriteStream.once_1'
    name: 'once("resize", () => void)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function once(event: "resize", listener: () => void)'
      parameters:
        - id: event
          type:
            - '"resize"'
          description: ''
        - id: listener
          type:
            - () => void
          description: ''
      return:
        type:
          - this
        description: ''
    package: '@azure/abort-controller'
  - uid: '@azure/abort-controller.tty.WriteStream.once'
    name: 'once(string, (args: any[]) => void)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function once(event: string, listener: (args: any[]) => void)'
      parameters:
        - id: event
          type:
            - string
          description: ''
        - id: listener
          type:
            - '(args: any[]) => void'
          description: ''
      return:
        type:
          - this
        description: ''
    package: '@azure/abort-controller'
  - uid: '@azure/abort-controller.tty.WriteStream.pause'
    name: pause()
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: function pause()
      parameters: []
      return:
        type:
          - this
        description: ''
    package: '@azure/abort-controller'
  - uid: '@azure/abort-controller.tty.WriteStream.pipe'
    name: 'pipe(T, undefined | Object)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function pipe<T>(destination: T, options?: undefined | Object)'
      parameters:
        - id: destination
          type:
            - T
          description: ''
        - id: options
          type:
            - undefined | Object
          description: ''
          optional: true
      return:
        type:
          - T
        description: ''
    package: '@azure/abort-controller'
  - uid: '@azure/abort-controller.tty.WriteStream.prependListener_1'
    name: 'prependListener("resize", () => void)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function prependListener(event: "resize", listener: () => void)'
      parameters:
        - id: event
          type:
            - '"resize"'
          description: ''
        - id: listener
          type:
            - () => void
          description: ''
      return:
        type:
          - this
        description: ''
    package: '@azure/abort-controller'
  - uid: '@azure/abort-controller.tty.WriteStream.prependListener'
    name: 'prependListener(string, (args: any[]) => void)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function prependListener(event: string, listener: (args: any[]) => void)'
      parameters:
        - id: event
          type:
            - string
          description: ''
        - id: listener
          type:
            - '(args: any[]) => void'
          description: ''
      return:
        type:
          - this
        description: ''
    package: '@azure/abort-controller'
  - uid: '@azure/abort-controller.tty.WriteStream.prependOnceListener_1'
    name: 'prependOnceListener("resize", () => void)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function prependOnceListener(event: "resize", listener: () => void)'
      parameters:
        - id: event
          type:
            - '"resize"'
          description: ''
        - id: listener
          type:
            - () => void
          description: ''
      return:
        type:
          - this
        description: ''
    package: '@azure/abort-controller'
  - uid: '@azure/abort-controller.tty.WriteStream.prependOnceListener'
    name: 'prependOnceListener(string, (args: any[]) => void)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function prependOnceListener(event: string, listener: (args: any[]) =>
        void)
      parameters:
        - id: event
          type:
            - string
          description: ''
        - id: listener
          type:
            - '(args: any[]) => void'
          description: ''
      return:
        type:
          - this
        description: ''
    package: '@azure/abort-controller'
  - uid: '@azure/abort-controller.tty.WriteStream.push'
    name: 'push(any, undefined | string)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function push(chunk: any, encoding?: undefined | string)'
      parameters:
        - id: chunk
          type:
            - any
          description: ''
        - id: encoding
          type:
            - undefined | string
          description: ''
          optional: true
      return:
        type:
          - boolean
        description: ''
    package: '@azure/abort-controller'
  - uid: '@azure/abort-controller.tty.WriteStream.rawListeners'
    name: rawListeners(string | symbol)
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function rawListeners(event: string | symbol)'
      parameters:
        - id: event
          type:
            - string | symbol
          description: ''
      return:
        type:
          - 'Function[]'
        description: ''
    package: '@azure/abort-controller'
  - uid: '@azure/abort-controller.tty.WriteStream.read'
    name: read(undefined | number)
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function read(size?: undefined | number)'
      parameters:
        - id: size
          type:
            - undefined | number
          description: ''
          optional: true
      return:
        type:
          - any
        description: ''
    package: '@azure/abort-controller'
  - uid: '@azure/abort-controller.tty.WriteStream.readable'
    name: readable
    fullName: readable
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    syntax:
      content: 'readable: boolean'
      return:
        type:
          - boolean
        description: ''
    package: '@azure/abort-controller'
  - uid: '@azure/abort-controller.tty.WriteStream.readableHighWaterMark'
    name: readableHighWaterMark
    fullName: readableHighWaterMark
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    syntax:
      content: 'readableHighWaterMark: number'
      return:
        type:
          - number
        description: ''
    package: '@azure/abort-controller'
  - uid: '@azure/abort-controller.tty.WriteStream.readableLength'
    name: readableLength
    fullName: readableLength
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    syntax:
      content: 'readableLength: number'
      return:
        type:
          - number
        description: ''
    package: '@azure/abort-controller'
  - uid: '@azure/abort-controller.tty.WriteStream.readableObjectMode'
    name: readableObjectMode
    fullName: readableObjectMode
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    syntax:
      content: 'readableObjectMode: boolean'
      return:
        type:
          - boolean
        description: ''
    package: '@azure/abort-controller'
  - uid: '@azure/abort-controller.tty.WriteStream.ref'
    name: ref()
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: function ref()
      parameters: []
      return:
        type:
          - this
        description: ''
    package: '@azure/abort-controller'
  - uid: '@azure/abort-controller.tty.WriteStream.remoteAddress'
    name: remoteAddress
    fullName: remoteAddress
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    optional: true
    syntax:
      content: 'remoteAddress?: undefined | string'
      return:
        type:
          - undefined | string
        description: ''
    package: '@azure/abort-controller'
  - uid: '@azure/abort-controller.tty.WriteStream.remoteFamily'
    name: remoteFamily
    fullName: remoteFamily
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    optional: true
    syntax:
      content: 'remoteFamily?: undefined | string'
      return:
        type:
          - undefined | string
        description: ''
    package: '@azure/abort-controller'
  - uid: '@azure/abort-controller.tty.WriteStream.remotePort'
    name: remotePort
    fullName: remotePort
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    optional: true
    syntax:
      content: 'remotePort?: undefined | number'
      return:
        type:
          - undefined | number
        description: ''
    package: '@azure/abort-controller'
  - uid: '@azure/abort-controller.tty.WriteStream.removeAllListeners'
    name: removeAllListeners(string | symbol)
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function removeAllListeners(event?: string | symbol)'
      parameters:
        - id: event
          type:
            - string | symbol
          description: ''
          optional: true
      return:
        type:
          - this
        description: ''
    package: '@azure/abort-controller'
  - uid: '@azure/abort-controller.tty.WriteStream.removeListener'
    name: 'removeListener("close", () => void)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function removeListener(event: "close", listener: () => void)'
      parameters:
        - id: event
          type:
            - '"close"'
          description: ''
        - id: listener
          type:
            - () => void
          description: ''
      return:
        type:
          - this
        description: ''
    package: '@azure/abort-controller'
  - uid: '@azure/abort-controller.tty.WriteStream.removeListener_1'
    name: 'removeListener("data", (chunk: any) => void)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function removeListener(event: "data", listener: (chunk: any) => void)'
      parameters:
        - id: event
          type:
            - '"data"'
          description: ''
        - id: listener
          type:
            - '(chunk: any) => void'
          description: ''
      return:
        type:
          - this
        description: ''
    package: '@azure/abort-controller'
  - uid: '@azure/abort-controller.tty.WriteStream.removeListener_2'
    name: 'removeListener("end", () => void)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function removeListener(event: "end", listener: () => void)'
      parameters:
        - id: event
          type:
            - '"end"'
          description: ''
        - id: listener
          type:
            - () => void
          description: ''
      return:
        type:
          - this
        description: ''
    package: '@azure/abort-controller'
  - uid: '@azure/abort-controller.tty.WriteStream.removeListener_4'
    name: 'removeListener("error", (err: Error) => void)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function removeListener(event: "error", listener: (err: Error) => void)'
      parameters:
        - id: event
          type:
            - '"error"'
          description: ''
        - id: listener
          type:
            - '(err: Error) => void'
          description: ''
      return:
        type:
          - this
        description: ''
    package: '@azure/abort-controller'
  - uid: '@azure/abort-controller.tty.WriteStream.removeListener_3'
    name: 'removeListener("readable", () => void)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function removeListener(event: "readable", listener: () => void)'
      parameters:
        - id: event
          type:
            - '"readable"'
          description: ''
        - id: listener
          type:
            - () => void
          description: ''
      return:
        type:
          - this
        description: ''
    package: '@azure/abort-controller'
  - uid: '@azure/abort-controller.tty.WriteStream.removeListener_5'
    name: 'removeListener(string | symbol, (args: any[]) => void)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function removeListener(event: string | symbol, listener: (args: any[])
        => void)
      parameters:
        - id: event
          type:
            - string | symbol
          description: ''
        - id: listener
          type:
            - '(args: any[]) => void'
          description: ''
      return:
        type:
          - this
        description: ''
    package: '@azure/abort-controller'
  - uid: '@azure/abort-controller.tty.WriteStream.resume'
    name: resume()
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: function resume()
      parameters: []
      return:
        type:
          - this
        description: ''
    package: '@azure/abort-controller'
  - uid: '@azure/abort-controller.tty.WriteStream.rows'
    name: rows
    fullName: rows
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    syntax:
      content: 'rows: number'
      return:
        type:
          - number
        description: ''
    package: '@azure/abort-controller'
  - uid: '@azure/abort-controller.tty.WriteStream.setDefaultEncoding'
    name: setDefaultEncoding(string)
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function setDefaultEncoding(encoding: string)'
      parameters:
        - id: encoding
          type:
            - string
          description: ''
      return:
        type:
          - this
        description: ''
    package: '@azure/abort-controller'
  - uid: '@azure/abort-controller.tty.WriteStream.setEncoding'
    name: setEncoding(undefined | string)
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function setEncoding(encoding?: undefined | string)'
      parameters:
        - id: encoding
          type:
            - undefined | string
          description: ''
          optional: true
      return:
        type:
          - this
        description: ''
    package: '@azure/abort-controller'
  - uid: '@azure/abort-controller.tty.WriteStream.setKeepAlive'
    name: 'setKeepAlive(undefined | false | true, undefined | number)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function setKeepAlive(enable?: undefined | false | true, initialDelay?:
        undefined | number)
      parameters:
        - id: enable
          type:
            - undefined | false | true
          description: ''
          optional: true
        - id: initialDelay
          type:
            - undefined | number
          description: ''
          optional: true
      return:
        type:
          - this
        description: ''
    package: '@azure/abort-controller'
  - uid: '@azure/abort-controller.tty.WriteStream.setMaxListeners'
    name: setMaxListeners(number)
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function setMaxListeners(n: number)'
      parameters:
        - id: 'n'
          type:
            - number
          description: ''
      return:
        type:
          - this
        description: ''
    package: '@azure/abort-controller'
  - uid: '@azure/abort-controller.tty.WriteStream.setNoDelay'
    name: setNoDelay(undefined | false | true)
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function setNoDelay(noDelay?: undefined | false | true)'
      parameters:
        - id: noDelay
          type:
            - undefined | false | true
          description: ''
          optional: true
      return:
        type:
          - this
        description: ''
    package: '@azure/abort-controller'
  - uid: '@azure/abort-controller.tty.WriteStream.setTimeout'
    name: 'setTimeout(number, undefined | () => void)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function setTimeout(timeout: number, callback?: undefined | () => void)'
      parameters:
        - id: timeout
          type:
            - number
          description: ''
        - id: callback
          type:
            - undefined | () => void
          description: ''
          optional: true
      return:
        type:
          - this
        description: ''
    package: '@azure/abort-controller'
  - uid: '@azure/abort-controller.tty.WriteStream.uncork'
    name: uncork()
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: function uncork()
      parameters: []
    package: '@azure/abort-controller'
  - uid: '@azure/abort-controller.tty.WriteStream.unpipe'
    name: unpipe(NodeJS.WritableStream)
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function unpipe(destination?: NodeJS.WritableStream)'
      parameters:
        - id: destination
          type:
            - '@azure/abort-controller.NodeJS.WritableStream'
          description: ''
          optional: true
      return:
        type:
          - this
        description: ''
    package: '@azure/abort-controller'
  - uid: '@azure/abort-controller.tty.WriteStream.unref'
    name: unref()
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: function unref()
      parameters: []
      return:
        type:
          - this
        description: ''
    package: '@azure/abort-controller'
  - uid: '@azure/abort-controller.tty.WriteStream.unshift'
    name: 'unshift(any, BufferEncoding)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function unshift(chunk: any, encoding?: BufferEncoding)'
      parameters:
        - id: chunk
          type:
            - any
          description: ''
        - id: encoding
          type:
            - '@azure/abort-controller.BufferEncoding'
          description: ''
          optional: true
    package: '@azure/abort-controller'
  - uid: '@azure/abort-controller.tty.WriteStream.wrap'
    name: wrap(ReadableStream)
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function wrap(oldStream: ReadableStream)'
      parameters:
        - id: oldStream
          type:
            - '@azure/abort-controller.NodeJS.ReadableStream'
          description: ''
      return:
        type:
          - this
        description: ''
    package: '@azure/abort-controller'
  - uid: '@azure/abort-controller.tty.WriteStream.writable'
    name: writable
    fullName: writable
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    syntax:
      content: 'writable: boolean'
      return:
        type:
          - boolean
        description: ''
    package: '@azure/abort-controller'
  - uid: '@azure/abort-controller.tty.WriteStream.writableCorked'
    name: writableCorked
    fullName: writableCorked
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    syntax:
      content: 'writableCorked: number'
      return:
        type:
          - number
        description: ''
    package: '@azure/abort-controller'
  - uid: '@azure/abort-controller.tty.WriteStream.writableEnded'
    name: writableEnded
    fullName: writableEnded
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    syntax:
      content: 'writableEnded: boolean'
      return:
        type:
          - boolean
        description: ''
    package: '@azure/abort-controller'
  - uid: '@azure/abort-controller.tty.WriteStream.writableFinished'
    name: writableFinished
    fullName: writableFinished
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    syntax:
      content: 'writableFinished: boolean'
      return:
        type:
          - boolean
        description: ''
    package: '@azure/abort-controller'
  - uid: '@azure/abort-controller.tty.WriteStream.writableHighWaterMark'
    name: writableHighWaterMark
    fullName: writableHighWaterMark
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    syntax:
      content: 'writableHighWaterMark: number'
      return:
        type:
          - number
        description: ''
    package: '@azure/abort-controller'
  - uid: '@azure/abort-controller.tty.WriteStream.writableLength'
    name: writableLength
    fullName: writableLength
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    syntax:
      content: 'writableLength: number'
      return:
        type:
          - number
        description: ''
    package: '@azure/abort-controller'
  - uid: '@azure/abort-controller.tty.WriteStream.writableObjectMode'
    name: writableObjectMode
    fullName: writableObjectMode
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    syntax:
      content: 'writableObjectMode: boolean'
      return:
        type:
          - boolean
        description: ''
    package: '@azure/abort-controller'
  - uid: '@azure/abort-controller.tty.WriteStream.write'
    name: 'write(Uint8Array | string, undefined | (err?: Error) => void)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function write(buffer: Uint8Array | string, cb?: undefined | (err?:
        Error) => void)
      parameters:
        - id: buffer
          type:
            - Uint8Array | string
          description: ''
        - id: cb
          type:
            - 'undefined | (err?: Error) => void'
          description: ''
          optional: true
      return:
        type:
          - boolean
        description: ''
    package: '@azure/abort-controller'
  - uid: '@azure/abort-controller.tty.WriteStream.write_1'
    name: >-
      write(Uint8Array | string, undefined | string, undefined | (err?: Error)
      => void)
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function write(str: Uint8Array | string, encoding?: undefined | string,
        cb?: undefined | (err?: Error) => void)
      parameters:
        - id: str
          type:
            - Uint8Array | string
          description: ''
        - id: encoding
          type:
            - undefined | string
          description: ''
          optional: true
        - id: cb
          type:
            - 'undefined | (err?: Error) => void'
          description: ''
          optional: true
      return:
        type:
          - boolean
        description: ''
    package: '@azure/abort-controller'
  - uid: '@azure/abort-controller.tty.WriteStream.constructor'
    name: WriteStream(number)
    children: []
    type: constructor
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'new WriteStream(fd: number)'
      parameters:
        - id: fd
          type:
            - number
          description: ''
    package: '@azure/abort-controller'
references:
  - uid: '@azure/abort-controller.net.Socket'
    name: Socket
    spec.typeScript:
      - name: Socket
        fullName: Socket
        uid: '@azure/abort-controller.net.Socket'
  - uid: '@azure/abort-controller.net.AddressInfo | string'
    name: AddressInfo | string
    spec.typeScript:
      - name: AddressInfo
        fullName: AddressInfo
        uid: '@azure/abort-controller.net.AddressInfo'
      - name: ' | string'
        fullName: ' | string'
  - uid: '@azure/abort-controller.net.SocketConnectOpts'
    name: SocketConnectOpts
    spec.typeScript:
      - name: SocketConnectOpts
        fullName: SocketConnectOpts
        uid: '@azure/abort-controller.net.SocketConnectOpts'
  - uid: '@azure/abort-controller.AbortError.Error'
    name: Error
    spec.typeScript:
      - name: Error
        fullName: Error
        uid: '@azure/abort-controller.AbortError.Error'
  - uid: '@azure/abort-controller.NodeJS.WritableStream'
    name: WritableStream
    spec.typeScript:
      - name: WritableStream
        fullName: WritableStream
        uid: '@azure/abort-controller.NodeJS.WritableStream'
  - uid: '@azure/abort-controller.BufferEncoding'
    name: BufferEncoding
    spec.typeScript:
      - name: BufferEncoding
        fullName: BufferEncoding
        uid: '@azure/abort-controller.BufferEncoding'
  - uid: '@azure/abort-controller.NodeJS.ReadableStream'
    name: ReadableStream
    spec.typeScript:
      - name: ReadableStream
        fullName: ReadableStream
        uid: '@azure/abort-controller.NodeJS.ReadableStream'
  - uid: '@azure/abort-controller.stream.internal.ReadableOptions'
    name: ReadableOptions
    spec.typeScript:
      - name: ReadableOptions
        fullName: ReadableOptions
        uid: '@azure/abort-controller.stream.internal.ReadableOptions'
  - uid: '@azure/abort-controller.stream.internal.Readable'
    name: Readable
    spec.typeScript:
      - name: Readable
        fullName: Readable
        uid: '@azure/abort-controller.stream.internal.Readable'
  - uid: '@azure/abort-controller.tty.Direction'
    name: Direction
    spec.typeScript:
      - name: Direction
        fullName: Direction
        uid: '@azure/abort-controller.tty.Direction'
