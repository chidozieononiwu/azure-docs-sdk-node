### YamlMime:UniversalReference
items:
  - uid: tslib.worker_threads.WorkerOptions
    name: WorkerOptions
    fullName: WorkerOptions
    children:
      - tslib.worker_threads.WorkerOptions.argv
      - tslib.worker_threads.WorkerOptions.eval
      - tslib.worker_threads.WorkerOptions.execArgv
      - tslib.worker_threads.WorkerOptions.resourceLimits
      - tslib.worker_threads.WorkerOptions.stderr
      - tslib.worker_threads.WorkerOptions.stdin
      - tslib.worker_threads.WorkerOptions.stdout
      - tslib.worker_threads.WorkerOptions.workerData
    langs:
      - typeScript
    type: interface
    summary: ''
    package: tslib
  - uid: tslib.worker_threads.WorkerOptions.argv
    name: argv
    fullName: argv
    children: []
    langs:
      - typeScript
    type: property
    summary: |-
      List of arguments which would be stringified and appended to
      `process.argv` in the worker. This is mostly similar to the `workerData`
      but the values will be available on the global `process.argv` as if they
      were passed as CLI options to the script.
    optional: true
    syntax:
      content: 'argv?: any[]'
      return:
        type:
          - 'any[]'
        description: ''
    package: tslib
  - uid: tslib.worker_threads.WorkerOptions.eval
    name: eval
    fullName: eval
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    optional: true
    syntax:
      content: 'eval?: undefined | false | true'
      return:
        type:
          - undefined | false | true
        description: ''
    package: tslib
  - uid: tslib.worker_threads.WorkerOptions.execArgv
    name: execArgv
    fullName: execArgv
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    optional: true
    syntax:
      content: 'execArgv?: string[]'
      return:
        type:
          - 'string[]'
        description: ''
    package: tslib
  - uid: tslib.worker_threads.WorkerOptions.resourceLimits
    name: resourceLimits
    fullName: resourceLimits
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    optional: true
    syntax:
      content: 'resourceLimits?: ResourceLimits'
      return:
        type:
          - tslib.worker_threads.ResourceLimits
        description: ''
    package: tslib
  - uid: tslib.worker_threads.WorkerOptions.stderr
    name: stderr
    fullName: stderr
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    optional: true
    syntax:
      content: 'stderr?: undefined | false | true'
      return:
        type:
          - undefined | false | true
        description: ''
    package: tslib
  - uid: tslib.worker_threads.WorkerOptions.stdin
    name: stdin
    fullName: stdin
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    optional: true
    syntax:
      content: 'stdin?: undefined | false | true'
      return:
        type:
          - undefined | false | true
        description: ''
    package: tslib
  - uid: tslib.worker_threads.WorkerOptions.stdout
    name: stdout
    fullName: stdout
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    optional: true
    syntax:
      content: 'stdout?: undefined | false | true'
      return:
        type:
          - undefined | false | true
        description: ''
    package: tslib
  - uid: tslib.worker_threads.WorkerOptions.workerData
    name: workerData
    fullName: workerData
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    optional: true
    syntax:
      content: 'workerData?: any'
      return:
        type:
          - any
        description: ''
    package: tslib
references:
  - uid: tslib.worker_threads.MessagePort
    name: MessagePort
    spec.typeScript:
      - name: MessagePort
        fullName: MessagePort
        uid: tslib.worker_threads.MessagePort
  - uid: tslib.events.EventEmitter.EventEmitter
    name: EventEmitter
    spec.typeScript:
      - name: EventEmitter
        fullName: EventEmitter
        uid: tslib.events.EventEmitter.EventEmitter
  - uid: tslib.events.EventEmitterOptions
    name: EventEmitterOptions
    spec.typeScript:
      - name: EventEmitterOptions
        fullName: EventEmitterOptions
        uid: tslib.events.EventEmitterOptions
  - uid: tslib.NodeJS.Global.Array<ArrayBuffer | tslib.worker_threads.MessagePort>
    name: MessagePort>
    spec.typeScript:
      - name: Array
        fullName: Array
        uid: tslib.NodeJS.Global.Array
      - name: '<ArrayBuffer | '
        fullName: '<ArrayBuffer | '
      - name: MessagePort
        fullName: MessagePort
        uid: tslib.worker_threads.MessagePort
      - name: '>'
        fullName: '>'
  - uid: tslib.worker_threads.WorkerOptions
    name: WorkerOptions
    spec.typeScript:
      - name: WorkerOptions
        fullName: WorkerOptions
        uid: tslib.worker_threads.WorkerOptions
  - uid: tslib.worker_threads.ResourceLimits
    name: ResourceLimits
    spec.typeScript:
      - name: ResourceLimits
        fullName: ResourceLimits
        uid: tslib.worker_threads.ResourceLimits
  - uid: tslib.stream.internal.Readable
    name: Readable
    spec.typeScript:
      - name: Readable
        fullName: Readable
        uid: tslib.stream.internal.Readable
  - uid: tslib.stream.internal.Writable | null
    name: Writable | null
    spec.typeScript:
      - name: Writable
        fullName: Writable
        uid: tslib.stream.internal.Writable
      - name: ' | null'
        fullName: ' | null'
  - uid: tslib.vm.Context
    name: Context
    spec.typeScript:
      - name: Context
        fullName: Context
        uid: tslib.vm.Context
