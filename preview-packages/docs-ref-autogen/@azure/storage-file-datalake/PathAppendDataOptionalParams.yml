### YamlMime:UniversalReference
items:
  - uid: '@azure/storage-file-datalake.PathAppendDataOptionalParams'
    name: PathAppendDataOptionalParams
    fullName: PathAppendDataOptionalParams
    children:
      - '@azure/storage-file-datalake.PathAppendDataOptionalParams.abortSignal'
      - '@azure/storage-file-datalake.PathAppendDataOptionalParams.contentLength'
      - '@azure/storage-file-datalake.PathAppendDataOptionalParams.customHeaders'
      - >-
        @azure/storage-file-datalake.PathAppendDataOptionalParams.leaseAccessConditions
      - >-
        @azure/storage-file-datalake.PathAppendDataOptionalParams.onDownloadProgress
      - >-
        @azure/storage-file-datalake.PathAppendDataOptionalParams.onUploadProgress
      - >-
        @azure/storage-file-datalake.PathAppendDataOptionalParams.pathHttpHeaders
      - '@azure/storage-file-datalake.PathAppendDataOptionalParams.position'
      - '@azure/storage-file-datalake.PathAppendDataOptionalParams.requestId'
      - '@azure/storage-file-datalake.PathAppendDataOptionalParams.spanOptions'
      - '@azure/storage-file-datalake.PathAppendDataOptionalParams.timeout'
      - >-
        @azure/storage-file-datalake.PathAppendDataOptionalParams.timeoutParameter
    langs:
      - typeScript
    type: interface
    summary: Optional Parameters.
    extends:
      name: RequestOptionsBase
    package: '@azure/storage-file-datalake'
  - uid: '@azure/storage-file-datalake.PathAppendDataOptionalParams.abortSignal'
    name: abortSignal
    fullName: abortSignal
    children: []
    langs:
      - typeScript
    type: property
    summary: The signal which can be used to abort requests.
    optional: true
    syntax:
      content: 'abortSignal?: AbortSignalLike'
      return:
        type:
          - AbortSignalLike
        description: ''
    package: '@azure/storage-file-datalake'
  - uid: '@azure/storage-file-datalake.PathAppendDataOptionalParams.contentLength'
    name: contentLength
    fullName: contentLength
    children: []
    langs:
      - typeScript
    type: property
    summary: >-
      Required for "Append Data" and "Flush Data".  Must be 0 for "Flush Data". 
      Must be the length

      of the request content in bytes for "Append Data".
    optional: true
    syntax:
      content: 'contentLength?: undefined | number'
      return:
        type:
          - undefined | number
        description: ''
    package: '@azure/storage-file-datalake'
  - uid: '@azure/storage-file-datalake.PathAppendDataOptionalParams.customHeaders'
    name: customHeaders
    fullName: customHeaders
    children: []
    langs:
      - typeScript
    type: property
    summary: |-
      {object} [customHeaders] User defined custom request headers that
      will be applied before the request is sent.
    optional: true
    syntax:
      content: 'customHeaders?: undefined | [key: string]: string'
      return:
        type:
          - 'undefined | [key: string]: string'
        description: ''
    package: '@azure/storage-file-datalake'
  - uid: >-
      @azure/storage-file-datalake.PathAppendDataOptionalParams.leaseAccessConditions
    name: leaseAccessConditions
    fullName: leaseAccessConditions
    children: []
    langs:
      - typeScript
    type: property
    summary: Additional parameters for the operation
    optional: true
    syntax:
      content: 'leaseAccessConditions?: LeaseAccessConditions'
      return:
        type:
          - '@azure/storage-file-datalake.LeaseAccessConditions'
        description: ''
    package: '@azure/storage-file-datalake'
  - uid: >-
      @azure/storage-file-datalake.PathAppendDataOptionalParams.onDownloadProgress
    name: onDownloadProgress
    fullName: onDownloadProgress
    children: []
    langs:
      - typeScript
    type: property
    summary: Callback which fires upon download progress.
    optional: true
    syntax:
      content: >-
        onDownloadProgress?: undefined | (progress: TransferProgressEvent) =>
        void
      return:
        type:
          - 'undefined | (progress: TransferProgressEvent) => void'
        description: ''
    package: '@azure/storage-file-datalake'
  - uid: '@azure/storage-file-datalake.PathAppendDataOptionalParams.onUploadProgress'
    name: onUploadProgress
    fullName: onUploadProgress
    children: []
    langs:
      - typeScript
    type: property
    summary: Callback which fires upon upload progress.
    optional: true
    syntax:
      content: 'onUploadProgress?: undefined | (progress: TransferProgressEvent) => void'
      return:
        type:
          - 'undefined | (progress: TransferProgressEvent) => void'
        description: ''
    package: '@azure/storage-file-datalake'
  - uid: '@azure/storage-file-datalake.PathAppendDataOptionalParams.pathHttpHeaders'
    name: pathHttpHeaders
    fullName: pathHttpHeaders
    children: []
    langs:
      - typeScript
    type: property
    summary: Additional parameters for the operation
    optional: true
    syntax:
      content: 'pathHttpHeaders?: PathHttpHeaders'
      return:
        type:
          - '@azure/storage-file-datalake.PathHttpHeaders'
        description: ''
    package: '@azure/storage-file-datalake'
  - uid: '@azure/storage-file-datalake.PathAppendDataOptionalParams.position'
    name: position
    fullName: position
    children: []
    langs:
      - typeScript
    type: property
    summary: >-
      This parameter allows the caller to upload data in parallel and control
      the order in which it

      is appended to the file.  It is required when uploading data to be
      appended to the file and

      when flushing previously uploaded data to the file.  The value must be the
      position where the

      data is to be appended.  Uploaded data is not immediately flushed, or
      written, to the file.

      To flush, the previously uploaded data must be contiguous, the position
      parameter must be

      specified and equal to the length of the file after all data has been
      written, and there must

      not be a request entity body included with the request.
    optional: true
    syntax:
      content: 'position?: undefined | number'
      return:
        type:
          - undefined | number
        description: ''
    package: '@azure/storage-file-datalake'
  - uid: '@azure/storage-file-datalake.PathAppendDataOptionalParams.requestId'
    name: requestId
    fullName: requestId
    children: []
    langs:
      - typeScript
    type: property
    summary: >-
      Provides a client-generated, opaque value with a 1 KB character limit that
      is recorded in the

      analytics logs when storage analytics logging is enabled.
    optional: true
    syntax:
      content: 'requestId?: undefined | string'
      return:
        type:
          - undefined | string
        description: ''
    package: '@azure/storage-file-datalake'
  - uid: '@azure/storage-file-datalake.PathAppendDataOptionalParams.spanOptions'
    name: spanOptions
    fullName: spanOptions
    children: []
    langs:
      - typeScript
    type: property
    summary: Options used to create a span when tracing is enabled.
    optional: true
    syntax:
      content: 'spanOptions?: SpanOptions'
      return:
        type:
          - SpanOptions
        description: ''
    package: '@azure/storage-file-datalake'
  - uid: '@azure/storage-file-datalake.PathAppendDataOptionalParams.timeout'
    name: timeout
    fullName: timeout
    children: []
    langs:
      - typeScript
    type: property
    summary: >-
      The number of milliseconds a request can take before automatically being
      terminated.
    optional: true
    syntax:
      content: 'timeout?: undefined | number'
      return:
        type:
          - undefined | number
        description: ''
    package: '@azure/storage-file-datalake'
  - uid: '@azure/storage-file-datalake.PathAppendDataOptionalParams.timeoutParameter'
    name: timeoutParameter
    fullName: timeoutParameter
    children: []
    langs:
      - typeScript
    type: property
    summary: >-
      The timeout parameter is expressed in seconds. For more information, see
      <a

      href="https://docs.microsoft.com/en-us/rest/api/storageservices/fileservices/setting-timeouts-for-blob-service-operations">Setting

      Timeouts for Blob Service Operations.</a>
    optional: true
    syntax:
      content: 'timeoutParameter?: undefined | number'
      return:
        type:
          - undefined | number
        description: ''
    package: '@azure/storage-file-datalake'
references:
  - uid: '@azure/storage-file-datalake.LeaseAccessConditions'
    name: LeaseAccessConditions
    spec.typeScript:
      - name: LeaseAccessConditions
        fullName: LeaseAccessConditions
        uid: '@azure/storage-file-datalake.LeaseAccessConditions'
  - uid: '@azure/storage-file-datalake.PathHttpHeaders'
    name: PathHttpHeaders
    spec.typeScript:
      - name: PathHttpHeaders
        fullName: PathHttpHeaders
        uid: '@azure/storage-file-datalake.PathHttpHeaders'
