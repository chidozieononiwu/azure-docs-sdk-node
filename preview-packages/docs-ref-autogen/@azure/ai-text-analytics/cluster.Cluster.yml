### YamlMime:UniversalReference
items:
  - uid: '@azure/abort-controller.cluster.Cluster'
    name: Cluster
    fullName: Cluster
    children:
      - '@azure/abort-controller.cluster.Cluster.addListener_1'
      - '@azure/abort-controller.cluster.Cluster.addListener_2'
      - '@azure/abort-controller.cluster.Cluster.addListener_3'
      - '@azure/abort-controller.cluster.Cluster.addListener_4'
      - '@azure/abort-controller.cluster.Cluster.addListener_5'
      - '@azure/abort-controller.cluster.Cluster.addListener_6'
      - '@azure/abort-controller.cluster.Cluster.addListener_7'
      - '@azure/abort-controller.cluster.Cluster.addListener'
      - '@azure/abort-controller.cluster.Cluster.constructor'
      - '@azure/abort-controller.cluster.Cluster.defaultMaxListeners'
      - '@azure/abort-controller.cluster.Cluster.disconnect'
      - '@azure/abort-controller.cluster.Cluster.emit_1'
      - '@azure/abort-controller.cluster.Cluster.emit_2'
      - '@azure/abort-controller.cluster.Cluster.emit_3'
      - '@azure/abort-controller.cluster.Cluster.emit_4'
      - '@azure/abort-controller.cluster.Cluster.emit_5'
      - '@azure/abort-controller.cluster.Cluster.emit_6'
      - '@azure/abort-controller.cluster.Cluster.emit_7'
      - '@azure/abort-controller.cluster.Cluster.emit'
      - '@azure/abort-controller.cluster.Cluster.eventNames'
      - '@azure/abort-controller.cluster.Cluster.fork'
      - '@azure/abort-controller.cluster.Cluster.getMaxListeners'
      - '@azure/abort-controller.cluster.Cluster.isMaster'
      - '@azure/abort-controller.cluster.Cluster.isWorker'
      - '@azure/abort-controller.cluster.Cluster.listenerCount'
      - '@azure/abort-controller.cluster.Cluster.listenerCount'
      - '@azure/abort-controller.cluster.Cluster.listeners'
      - '@azure/abort-controller.cluster.Cluster.off'
      - '@azure/abort-controller.cluster.Cluster.on_1'
      - '@azure/abort-controller.cluster.Cluster.on_2'
      - '@azure/abort-controller.cluster.Cluster.on_3'
      - '@azure/abort-controller.cluster.Cluster.on_4'
      - '@azure/abort-controller.cluster.Cluster.on_5'
      - '@azure/abort-controller.cluster.Cluster.on_6'
      - '@azure/abort-controller.cluster.Cluster.on_7'
      - '@azure/abort-controller.cluster.Cluster.on'
      - '@azure/abort-controller.cluster.Cluster.once_1'
      - '@azure/abort-controller.cluster.Cluster.once_2'
      - '@azure/abort-controller.cluster.Cluster.once_3'
      - '@azure/abort-controller.cluster.Cluster.once_4'
      - '@azure/abort-controller.cluster.Cluster.once_5'
      - '@azure/abort-controller.cluster.Cluster.once_6'
      - '@azure/abort-controller.cluster.Cluster.once_7'
      - '@azure/abort-controller.cluster.Cluster.once'
      - '@azure/abort-controller.cluster.Cluster.prependListener_1'
      - '@azure/abort-controller.cluster.Cluster.prependListener_2'
      - '@azure/abort-controller.cluster.Cluster.prependListener_3'
      - '@azure/abort-controller.cluster.Cluster.prependListener_4'
      - '@azure/abort-controller.cluster.Cluster.prependListener_5'
      - '@azure/abort-controller.cluster.Cluster.prependListener_6'
      - '@azure/abort-controller.cluster.Cluster.prependListener_7'
      - '@azure/abort-controller.cluster.Cluster.prependListener'
      - '@azure/abort-controller.cluster.Cluster.prependOnceListener_1'
      - '@azure/abort-controller.cluster.Cluster.prependOnceListener_2'
      - '@azure/abort-controller.cluster.Cluster.prependOnceListener_3'
      - '@azure/abort-controller.cluster.Cluster.prependOnceListener_4'
      - '@azure/abort-controller.cluster.Cluster.prependOnceListener_5'
      - '@azure/abort-controller.cluster.Cluster.prependOnceListener_6'
      - '@azure/abort-controller.cluster.Cluster.prependOnceListener_7'
      - '@azure/abort-controller.cluster.Cluster.prependOnceListener'
      - '@azure/abort-controller.cluster.Cluster.rawListeners'
      - '@azure/abort-controller.cluster.Cluster.removeAllListeners'
      - '@azure/abort-controller.cluster.Cluster.removeListener'
      - '@azure/abort-controller.cluster.Cluster.schedulingPolicy'
      - '@azure/abort-controller.cluster.Cluster.SCHED_NONE'
      - '@azure/abort-controller.cluster.Cluster.SCHED_RR'
      - '@azure/abort-controller.cluster.Cluster.setMaxListeners'
      - '@azure/abort-controller.cluster.Cluster.settings'
      - '@azure/abort-controller.cluster.Cluster.setupMaster'
      - '@azure/abort-controller.cluster.Cluster.worker'
      - '@azure/abort-controller.cluster.Cluster.Worker'
      - '@azure/abort-controller.cluster.Cluster.workers'
    langs:
      - typeScript
    type: interface
    summary: ''
    extends:
      name: '@azure/abort-controller.events.EventEmitter.EventEmitter'
    package: '@azure/abort-controller'
  - uid: '@azure/abort-controller.cluster.Cluster.addListener_1'
    name: 'addListener("disconnect", (worker: Worker) => void)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function addListener(event: "disconnect", listener: (worker: Worker) =>
        void)
      parameters:
        - id: event
          type:
            - '"disconnect"'
          description: ''
        - id: listener
          type:
            - '(worker: Worker) => void'
          description: ''
      return:
        type:
          - this
        description: ''
    package: '@azure/abort-controller'
  - uid: '@azure/abort-controller.cluster.Cluster.addListener_2'
    name: >-
      addListener("exit", (worker: Worker, code: number, signal: string) =>
      void)
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function addListener(event: "exit", listener: (worker: Worker, code:
        number, signal: string) => void)
      parameters:
        - id: event
          type:
            - '"exit"'
          description: ''
        - id: listener
          type:
            - '(worker: Worker, code: number, signal: string) => void'
          description: ''
      return:
        type:
          - this
        description: ''
    package: '@azure/abort-controller'
  - uid: '@azure/abort-controller.cluster.Cluster.addListener_3'
    name: 'addListener("fork", (worker: Worker) => void)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function addListener(event: "fork", listener: (worker: Worker) => void)'
      parameters:
        - id: event
          type:
            - '"fork"'
          description: ''
        - id: listener
          type:
            - '(worker: Worker) => void'
          description: ''
      return:
        type:
          - this
        description: ''
    package: '@azure/abort-controller'
  - uid: '@azure/abort-controller.cluster.Cluster.addListener_4'
    name: 'addListener("listening", (worker: Worker, address: Address) => void)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function addListener(event: "listening", listener: (worker: Worker,
        address: Address) => void)
      parameters:
        - id: event
          type:
            - '"listening"'
          description: ''
        - id: listener
          type:
            - '(worker: Worker, address: Address) => void'
          description: ''
      return:
        type:
          - this
        description: ''
    package: '@azure/abort-controller'
  - uid: '@azure/abort-controller.cluster.Cluster.addListener_5'
    name: >-
      addListener("message", (worker: Worker, message: any, handle: Socket |
      Server) => void)
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function addListener(event: "message", listener: (worker: Worker,
        message: any, handle: Socket | Server) => void)
      parameters:
        - id: event
          type:
            - '"message"'
          description: ''
        - id: listener
          type:
            - '(worker: Worker, message: any, handle: Socket | Server) => void'
          description: ''
      return:
        type:
          - this
        description: ''
    package: '@azure/abort-controller'
  - uid: '@azure/abort-controller.cluster.Cluster.addListener_6'
    name: 'addListener("online", (worker: Worker) => void)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function addListener(event: "online", listener: (worker: Worker) =>
        void)
      parameters:
        - id: event
          type:
            - '"online"'
          description: ''
        - id: listener
          type:
            - '(worker: Worker) => void'
          description: ''
      return:
        type:
          - this
        description: ''
    package: '@azure/abort-controller'
  - uid: '@azure/abort-controller.cluster.Cluster.addListener_7'
    name: 'addListener("setup", (settings: ClusterSettings) => void)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function addListener(event: "setup", listener: (settings:
        ClusterSettings) => void)
      parameters:
        - id: event
          type:
            - '"setup"'
          description: ''
        - id: listener
          type:
            - '(settings: ClusterSettings) => void'
          description: ''
      return:
        type:
          - this
        description: ''
    package: '@azure/abort-controller'
  - uid: '@azure/abort-controller.cluster.Cluster.addListener'
    name: 'addListener(string, (args: any[]) => void)'
    children: []
    type: method
    langs:
      - typeScript
    summary: |-
      events.EventEmitter
        1. disconnect
        2. exit
        3. fork
        4. listening
        5. message
        6. online
        7. setup
    syntax:
      content: 'function addListener(event: string, listener: (args: any[]) => void)'
      parameters:
        - id: event
          type:
            - string
          description: ''
        - id: listener
          type:
            - '(args: any[]) => void'
          description: ''
      return:
        type:
          - this
        description: ''
    package: '@azure/abort-controller'
  - uid: '@azure/abort-controller.cluster.Cluster.constructor'
    name: Cluster(EventEmitterOptions)
    children: []
    type: constructor
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'new Cluster(options?: EventEmitterOptions)'
      parameters:
        - id: options
          type:
            - '@azure/abort-controller.events.EventEmitterOptions'
          description: ''
          optional: true
    package: '@azure/abort-controller'
  - uid: '@azure/abort-controller.cluster.Cluster.defaultMaxListeners'
    name: defaultMaxListeners
    fullName: defaultMaxListeners
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    syntax:
      content: 'static defaultMaxListeners: number'
      return:
        type:
          - number
        description: ''
    package: '@azure/abort-controller'
  - uid: '@azure/abort-controller.cluster.Cluster.disconnect'
    name: disconnect(() => void)
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function disconnect(callback?: () => void)'
      parameters:
        - id: callback
          type:
            - () => void
          description: ''
          optional: true
    package: '@azure/abort-controller'
  - uid: '@azure/abort-controller.cluster.Cluster.emit_1'
    name: 'emit("disconnect", Worker)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function emit(event: "disconnect", worker: Worker)'
      parameters:
        - id: event
          type:
            - '"disconnect"'
          description: ''
        - id: worker
          type:
            - '@azure/abort-controller.cluster.Worker'
          description: ''
      return:
        type:
          - boolean
        description: ''
    package: '@azure/abort-controller'
  - uid: '@azure/abort-controller.cluster.Cluster.emit_2'
    name: 'emit("exit", Worker, number, string)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function emit(event: "exit", worker: Worker, code: number, signal:
        string)
      parameters:
        - id: event
          type:
            - '"exit"'
          description: ''
        - id: worker
          type:
            - '@azure/abort-controller.cluster.Worker'
          description: ''
        - id: code
          type:
            - number
          description: ''
        - id: signal
          type:
            - string
          description: ''
      return:
        type:
          - boolean
        description: ''
    package: '@azure/abort-controller'
  - uid: '@azure/abort-controller.cluster.Cluster.emit_3'
    name: 'emit("fork", Worker)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function emit(event: "fork", worker: Worker)'
      parameters:
        - id: event
          type:
            - '"fork"'
          description: ''
        - id: worker
          type:
            - '@azure/abort-controller.cluster.Worker'
          description: ''
      return:
        type:
          - boolean
        description: ''
    package: '@azure/abort-controller'
  - uid: '@azure/abort-controller.cluster.Cluster.emit_4'
    name: 'emit("listening", Worker, Address)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function emit(event: "listening", worker: Worker, address: Address)'
      parameters:
        - id: event
          type:
            - '"listening"'
          description: ''
        - id: worker
          type:
            - '@azure/abort-controller.cluster.Worker'
          description: ''
        - id: address
          type:
            - '@azure/abort-controller.cluster.Address'
          description: ''
      return:
        type:
          - boolean
        description: ''
    package: '@azure/abort-controller'
  - uid: '@azure/abort-controller.cluster.Cluster.emit_5'
    name: 'emit("message", Worker, any, Socket | Server)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function emit(event: "message", worker: Worker, message: any, handle:
        Socket | Server)
      parameters:
        - id: event
          type:
            - '"message"'
          description: ''
        - id: worker
          type:
            - '@azure/abort-controller.cluster.Worker'
          description: ''
        - id: message
          type:
            - any
          description: ''
        - id: handle
          type:
            - >-
              @azure/abort-controller.net.Socket |
              @azure/abort-controller.net.Server
          description: ''
      return:
        type:
          - boolean
        description: ''
    package: '@azure/abort-controller'
  - uid: '@azure/abort-controller.cluster.Cluster.emit_6'
    name: 'emit("online", Worker)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function emit(event: "online", worker: Worker)'
      parameters:
        - id: event
          type:
            - '"online"'
          description: ''
        - id: worker
          type:
            - '@azure/abort-controller.cluster.Worker'
          description: ''
      return:
        type:
          - boolean
        description: ''
    package: '@azure/abort-controller'
  - uid: '@azure/abort-controller.cluster.Cluster.emit_7'
    name: 'emit("setup", ClusterSettings)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function emit(event: "setup", settings: ClusterSettings)'
      parameters:
        - id: event
          type:
            - '"setup"'
          description: ''
        - id: settings
          type:
            - '@azure/abort-controller.cluster.ClusterSettings'
          description: ''
      return:
        type:
          - boolean
        description: ''
    package: '@azure/abort-controller'
  - uid: '@azure/abort-controller.cluster.Cluster.emit'
    name: 'emit(string | symbol, any[])'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function emit(event: string | symbol, args: any[])'
      parameters:
        - id: event
          type:
            - string | symbol
          description: ''
        - id: args
          type:
            - 'any[]'
          description: ''
      return:
        type:
          - boolean
        description: ''
    package: '@azure/abort-controller'
  - uid: '@azure/abort-controller.cluster.Cluster.eventNames'
    name: eventNames()
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: function eventNames()
      parameters: []
      return:
        type:
          - Array<string | symbol>
        description: ''
    package: '@azure/abort-controller'
  - uid: '@azure/abort-controller.cluster.Cluster.fork'
    name: fork(any)
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function fork(env?: any)'
      parameters:
        - id: env
          type:
            - any
          description: ''
          optional: true
      return:
        type:
          - '@azure/abort-controller.cluster.Worker'
        description: ''
    package: '@azure/abort-controller'
  - uid: '@azure/abort-controller.cluster.Cluster.getMaxListeners'
    name: getMaxListeners()
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: function getMaxListeners()
      parameters: []
      return:
        type:
          - number
        description: ''
    package: '@azure/abort-controller'
  - uid: '@azure/abort-controller.cluster.Cluster.isMaster'
    name: isMaster
    fullName: isMaster
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    syntax:
      content: 'isMaster: boolean'
      return:
        type:
          - boolean
        description: ''
    package: '@azure/abort-controller'
  - uid: '@azure/abort-controller.cluster.Cluster.isWorker'
    name: isWorker
    fullName: isWorker
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    syntax:
      content: 'isWorker: boolean'
      return:
        type:
          - boolean
        description: ''
    package: '@azure/abort-controller'
  - uid: '@azure/abort-controller.cluster.Cluster.listenerCount'
    name: 'listenerCount(EventEmitter, string | symbol)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        static function listenerCount(emitter: EventEmitter, event: string |
        symbol)
      parameters:
        - id: emitter
          type:
            - '@azure/abort-controller.events.EventEmitter.EventEmitter'
          description: ''
        - id: event
          type:
            - string | symbol
          description: ''
      return:
        type:
          - number
        description: ''
    package: '@azure/abort-controller'
    deprecated:
      content: since v4.0.0
  - uid: '@azure/abort-controller.cluster.Cluster.listenerCount'
    name: listenerCount(string | symbol)
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function listenerCount(type: string | symbol)'
      parameters:
        - id: type
          type:
            - string | symbol
          description: ''
      return:
        type:
          - number
        description: ''
    package: '@azure/abort-controller'
  - uid: '@azure/abort-controller.cluster.Cluster.listeners'
    name: listeners(string | symbol)
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function listeners(event: string | symbol)'
      parameters:
        - id: event
          type:
            - string | symbol
          description: ''
      return:
        type:
          - 'Function[]'
        description: ''
    package: '@azure/abort-controller'
  - uid: '@azure/abort-controller.cluster.Cluster.off'
    name: 'off(string | symbol, (args: any[]) => void)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function off(event: string | symbol, listener: (args: any[]) => void)'
      parameters:
        - id: event
          type:
            - string | symbol
          description: ''
        - id: listener
          type:
            - '(args: any[]) => void'
          description: ''
      return:
        type:
          - this
        description: ''
    package: '@azure/abort-controller'
  - uid: '@azure/abort-controller.cluster.Cluster.on_1'
    name: 'on("disconnect", (worker: Worker) => void)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function on(event: "disconnect", listener: (worker: Worker) => void)'
      parameters:
        - id: event
          type:
            - '"disconnect"'
          description: ''
        - id: listener
          type:
            - '(worker: Worker) => void'
          description: ''
      return:
        type:
          - this
        description: ''
    package: '@azure/abort-controller'
  - uid: '@azure/abort-controller.cluster.Cluster.on_2'
    name: 'on("exit", (worker: Worker, code: number, signal: string) => void)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function on(event: "exit", listener: (worker: Worker, code: number,
        signal: string) => void)
      parameters:
        - id: event
          type:
            - '"exit"'
          description: ''
        - id: listener
          type:
            - '(worker: Worker, code: number, signal: string) => void'
          description: ''
      return:
        type:
          - this
        description: ''
    package: '@azure/abort-controller'
  - uid: '@azure/abort-controller.cluster.Cluster.on_3'
    name: 'on("fork", (worker: Worker) => void)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function on(event: "fork", listener: (worker: Worker) => void)'
      parameters:
        - id: event
          type:
            - '"fork"'
          description: ''
        - id: listener
          type:
            - '(worker: Worker) => void'
          description: ''
      return:
        type:
          - this
        description: ''
    package: '@azure/abort-controller'
  - uid: '@azure/abort-controller.cluster.Cluster.on_4'
    name: 'on("listening", (worker: Worker, address: Address) => void)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function on(event: "listening", listener: (worker: Worker, address:
        Address) => void)
      parameters:
        - id: event
          type:
            - '"listening"'
          description: ''
        - id: listener
          type:
            - '(worker: Worker, address: Address) => void'
          description: ''
      return:
        type:
          - this
        description: ''
    package: '@azure/abort-controller'
  - uid: '@azure/abort-controller.cluster.Cluster.on_5'
    name: >-
      on("message", (worker: Worker, message: any, handle: Socket | Server) =>
      void)
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function on(event: "message", listener: (worker: Worker, message: any,
        handle: Socket | Server) => void)
      parameters:
        - id: event
          type:
            - '"message"'
          description: ''
        - id: listener
          type:
            - '(worker: Worker, message: any, handle: Socket | Server) => void'
          description: ''
      return:
        type:
          - this
        description: ''
    package: '@azure/abort-controller'
  - uid: '@azure/abort-controller.cluster.Cluster.on_6'
    name: 'on("online", (worker: Worker) => void)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function on(event: "online", listener: (worker: Worker) => void)'
      parameters:
        - id: event
          type:
            - '"online"'
          description: ''
        - id: listener
          type:
            - '(worker: Worker) => void'
          description: ''
      return:
        type:
          - this
        description: ''
    package: '@azure/abort-controller'
  - uid: '@azure/abort-controller.cluster.Cluster.on_7'
    name: 'on("setup", (settings: ClusterSettings) => void)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function on(event: "setup", listener: (settings: ClusterSettings) =>
        void)
      parameters:
        - id: event
          type:
            - '"setup"'
          description: ''
        - id: listener
          type:
            - '(settings: ClusterSettings) => void'
          description: ''
      return:
        type:
          - this
        description: ''
    package: '@azure/abort-controller'
  - uid: '@azure/abort-controller.cluster.Cluster.on'
    name: 'on(string, (args: any[]) => void)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function on(event: string, listener: (args: any[]) => void)'
      parameters:
        - id: event
          type:
            - string
          description: ''
        - id: listener
          type:
            - '(args: any[]) => void'
          description: ''
      return:
        type:
          - this
        description: ''
    package: '@azure/abort-controller'
  - uid: '@azure/abort-controller.cluster.Cluster.once_1'
    name: 'once("disconnect", (worker: Worker) => void)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function once(event: "disconnect", listener: (worker: Worker) => void)'
      parameters:
        - id: event
          type:
            - '"disconnect"'
          description: ''
        - id: listener
          type:
            - '(worker: Worker) => void'
          description: ''
      return:
        type:
          - this
        description: ''
    package: '@azure/abort-controller'
  - uid: '@azure/abort-controller.cluster.Cluster.once_2'
    name: 'once("exit", (worker: Worker, code: number, signal: string) => void)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function once(event: "exit", listener: (worker: Worker, code: number,
        signal: string) => void)
      parameters:
        - id: event
          type:
            - '"exit"'
          description: ''
        - id: listener
          type:
            - '(worker: Worker, code: number, signal: string) => void'
          description: ''
      return:
        type:
          - this
        description: ''
    package: '@azure/abort-controller'
  - uid: '@azure/abort-controller.cluster.Cluster.once_3'
    name: 'once("fork", (worker: Worker) => void)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function once(event: "fork", listener: (worker: Worker) => void)'
      parameters:
        - id: event
          type:
            - '"fork"'
          description: ''
        - id: listener
          type:
            - '(worker: Worker) => void'
          description: ''
      return:
        type:
          - this
        description: ''
    package: '@azure/abort-controller'
  - uid: '@azure/abort-controller.cluster.Cluster.once_4'
    name: 'once("listening", (worker: Worker, address: Address) => void)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function once(event: "listening", listener: (worker: Worker, address:
        Address) => void)
      parameters:
        - id: event
          type:
            - '"listening"'
          description: ''
        - id: listener
          type:
            - '(worker: Worker, address: Address) => void'
          description: ''
      return:
        type:
          - this
        description: ''
    package: '@azure/abort-controller'
  - uid: '@azure/abort-controller.cluster.Cluster.once_5'
    name: >-
      once("message", (worker: Worker, message: any, handle: Socket | Server) =>
      void)
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function once(event: "message", listener: (worker: Worker, message: any,
        handle: Socket | Server) => void)
      parameters:
        - id: event
          type:
            - '"message"'
          description: ''
        - id: listener
          type:
            - '(worker: Worker, message: any, handle: Socket | Server) => void'
          description: ''
      return:
        type:
          - this
        description: ''
    package: '@azure/abort-controller'
  - uid: '@azure/abort-controller.cluster.Cluster.once_6'
    name: 'once("online", (worker: Worker) => void)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function once(event: "online", listener: (worker: Worker) => void)'
      parameters:
        - id: event
          type:
            - '"online"'
          description: ''
        - id: listener
          type:
            - '(worker: Worker) => void'
          description: ''
      return:
        type:
          - this
        description: ''
    package: '@azure/abort-controller'
  - uid: '@azure/abort-controller.cluster.Cluster.once_7'
    name: 'once("setup", (settings: ClusterSettings) => void)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function once(event: "setup", listener: (settings: ClusterSettings) =>
        void)
      parameters:
        - id: event
          type:
            - '"setup"'
          description: ''
        - id: listener
          type:
            - '(settings: ClusterSettings) => void'
          description: ''
      return:
        type:
          - this
        description: ''
    package: '@azure/abort-controller'
  - uid: '@azure/abort-controller.cluster.Cluster.once'
    name: 'once(string, (args: any[]) => void)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function once(event: string, listener: (args: any[]) => void)'
      parameters:
        - id: event
          type:
            - string
          description: ''
        - id: listener
          type:
            - '(args: any[]) => void'
          description: ''
      return:
        type:
          - this
        description: ''
    package: '@azure/abort-controller'
  - uid: '@azure/abort-controller.cluster.Cluster.prependListener_1'
    name: 'prependListener("disconnect", (worker: Worker) => void)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function prependListener(event: "disconnect", listener: (worker: Worker)
        => void)
      parameters:
        - id: event
          type:
            - '"disconnect"'
          description: ''
        - id: listener
          type:
            - '(worker: Worker) => void'
          description: ''
      return:
        type:
          - this
        description: ''
    package: '@azure/abort-controller'
  - uid: '@azure/abort-controller.cluster.Cluster.prependListener_2'
    name: >-
      prependListener("exit", (worker: Worker, code: number, signal: string) =>
      void)
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function prependListener(event: "exit", listener: (worker: Worker, code:
        number, signal: string) => void)
      parameters:
        - id: event
          type:
            - '"exit"'
          description: ''
        - id: listener
          type:
            - '(worker: Worker, code: number, signal: string) => void'
          description: ''
      return:
        type:
          - this
        description: ''
    package: '@azure/abort-controller'
  - uid: '@azure/abort-controller.cluster.Cluster.prependListener_3'
    name: 'prependListener("fork", (worker: Worker) => void)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function prependListener(event: "fork", listener: (worker: Worker) =>
        void)
      parameters:
        - id: event
          type:
            - '"fork"'
          description: ''
        - id: listener
          type:
            - '(worker: Worker) => void'
          description: ''
      return:
        type:
          - this
        description: ''
    package: '@azure/abort-controller'
  - uid: '@azure/abort-controller.cluster.Cluster.prependListener_4'
    name: 'prependListener("listening", (worker: Worker, address: Address) => void)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function prependListener(event: "listening", listener: (worker: Worker,
        address: Address) => void)
      parameters:
        - id: event
          type:
            - '"listening"'
          description: ''
        - id: listener
          type:
            - '(worker: Worker, address: Address) => void'
          description: ''
      return:
        type:
          - this
        description: ''
    package: '@azure/abort-controller'
  - uid: '@azure/abort-controller.cluster.Cluster.prependListener_5'
    name: >-
      prependListener("message", (worker: Worker, message: any, handle: Socket |
      Server) => void)
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function prependListener(event: "message", listener: (worker: Worker,
        message: any, handle: Socket | Server) => void)
      parameters:
        - id: event
          type:
            - '"message"'
          description: ''
        - id: listener
          type:
            - '(worker: Worker, message: any, handle: Socket | Server) => void'
          description: ''
      return:
        type:
          - this
        description: ''
    package: '@azure/abort-controller'
  - uid: '@azure/abort-controller.cluster.Cluster.prependListener_6'
    name: 'prependListener("online", (worker: Worker) => void)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function prependListener(event: "online", listener: (worker: Worker) =>
        void)
      parameters:
        - id: event
          type:
            - '"online"'
          description: ''
        - id: listener
          type:
            - '(worker: Worker) => void'
          description: ''
      return:
        type:
          - this
        description: ''
    package: '@azure/abort-controller'
  - uid: '@azure/abort-controller.cluster.Cluster.prependListener_7'
    name: 'prependListener("setup", (settings: ClusterSettings) => void)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function prependListener(event: "setup", listener: (settings:
        ClusterSettings) => void)
      parameters:
        - id: event
          type:
            - '"setup"'
          description: ''
        - id: listener
          type:
            - '(settings: ClusterSettings) => void'
          description: ''
      return:
        type:
          - this
        description: ''
    package: '@azure/abort-controller'
  - uid: '@azure/abort-controller.cluster.Cluster.prependListener'
    name: 'prependListener(string, (args: any[]) => void)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function prependListener(event: string, listener: (args: any[]) => void)'
      parameters:
        - id: event
          type:
            - string
          description: ''
        - id: listener
          type:
            - '(args: any[]) => void'
          description: ''
      return:
        type:
          - this
        description: ''
    package: '@azure/abort-controller'
  - uid: '@azure/abort-controller.cluster.Cluster.prependOnceListener_1'
    name: 'prependOnceListener("disconnect", (worker: Worker) => void)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function prependOnceListener(event: "disconnect", listener: (worker:
        Worker) => void)
      parameters:
        - id: event
          type:
            - '"disconnect"'
          description: ''
        - id: listener
          type:
            - '(worker: Worker) => void'
          description: ''
      return:
        type:
          - this
        description: ''
    package: '@azure/abort-controller'
  - uid: '@azure/abort-controller.cluster.Cluster.prependOnceListener_2'
    name: >-
      prependOnceListener("exit", (worker: Worker, code: number, signal: string)
      => void)
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function prependOnceListener(event: "exit", listener: (worker: Worker,
        code: number, signal: string) => void)
      parameters:
        - id: event
          type:
            - '"exit"'
          description: ''
        - id: listener
          type:
            - '(worker: Worker, code: number, signal: string) => void'
          description: ''
      return:
        type:
          - this
        description: ''
    package: '@azure/abort-controller'
  - uid: '@azure/abort-controller.cluster.Cluster.prependOnceListener_3'
    name: 'prependOnceListener("fork", (worker: Worker) => void)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function prependOnceListener(event: "fork", listener: (worker: Worker)
        => void)
      parameters:
        - id: event
          type:
            - '"fork"'
          description: ''
        - id: listener
          type:
            - '(worker: Worker) => void'
          description: ''
      return:
        type:
          - this
        description: ''
    package: '@azure/abort-controller'
  - uid: '@azure/abort-controller.cluster.Cluster.prependOnceListener_4'
    name: >-
      prependOnceListener("listening", (worker: Worker, address: Address) =>
      void)
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function prependOnceListener(event: "listening", listener: (worker:
        Worker, address: Address) => void)
      parameters:
        - id: event
          type:
            - '"listening"'
          description: ''
        - id: listener
          type:
            - '(worker: Worker, address: Address) => void'
          description: ''
      return:
        type:
          - this
        description: ''
    package: '@azure/abort-controller'
  - uid: '@azure/abort-controller.cluster.Cluster.prependOnceListener_5'
    name: >-
      prependOnceListener("message", (worker: Worker, message: any, handle:
      Socket | Server) => void)
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function prependOnceListener(event: "message", listener: (worker:
        Worker, message: any, handle: Socket | Server) => void)
      parameters:
        - id: event
          type:
            - '"message"'
          description: ''
        - id: listener
          type:
            - '(worker: Worker, message: any, handle: Socket | Server) => void'
          description: ''
      return:
        type:
          - this
        description: ''
    package: '@azure/abort-controller'
  - uid: '@azure/abort-controller.cluster.Cluster.prependOnceListener_6'
    name: 'prependOnceListener("online", (worker: Worker) => void)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function prependOnceListener(event: "online", listener: (worker: Worker)
        => void)
      parameters:
        - id: event
          type:
            - '"online"'
          description: ''
        - id: listener
          type:
            - '(worker: Worker) => void'
          description: ''
      return:
        type:
          - this
        description: ''
    package: '@azure/abort-controller'
  - uid: '@azure/abort-controller.cluster.Cluster.prependOnceListener_7'
    name: 'prependOnceListener("setup", (settings: ClusterSettings) => void)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function prependOnceListener(event: "setup", listener: (settings:
        ClusterSettings) => void)
      parameters:
        - id: event
          type:
            - '"setup"'
          description: ''
        - id: listener
          type:
            - '(settings: ClusterSettings) => void'
          description: ''
      return:
        type:
          - this
        description: ''
    package: '@azure/abort-controller'
  - uid: '@azure/abort-controller.cluster.Cluster.prependOnceListener'
    name: 'prependOnceListener(string, (args: any[]) => void)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function prependOnceListener(event: string, listener: (args: any[]) =>
        void)
      parameters:
        - id: event
          type:
            - string
          description: ''
        - id: listener
          type:
            - '(args: any[]) => void'
          description: ''
      return:
        type:
          - this
        description: ''
    package: '@azure/abort-controller'
  - uid: '@azure/abort-controller.cluster.Cluster.rawListeners'
    name: rawListeners(string | symbol)
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function rawListeners(event: string | symbol)'
      parameters:
        - id: event
          type:
            - string | symbol
          description: ''
      return:
        type:
          - 'Function[]'
        description: ''
    package: '@azure/abort-controller'
  - uid: '@azure/abort-controller.cluster.Cluster.removeAllListeners'
    name: removeAllListeners(string | symbol)
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function removeAllListeners(event?: string | symbol)'
      parameters:
        - id: event
          type:
            - string | symbol
          description: ''
          optional: true
      return:
        type:
          - this
        description: ''
    package: '@azure/abort-controller'
  - uid: '@azure/abort-controller.cluster.Cluster.removeListener'
    name: 'removeListener(string | symbol, (args: any[]) => void)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function removeListener(event: string | symbol, listener: (args: any[])
        => void)
      parameters:
        - id: event
          type:
            - string | symbol
          description: ''
        - id: listener
          type:
            - '(args: any[]) => void'
          description: ''
      return:
        type:
          - this
        description: ''
    package: '@azure/abort-controller'
  - uid: '@azure/abort-controller.cluster.Cluster.schedulingPolicy'
    name: schedulingPolicy
    fullName: schedulingPolicy
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    syntax:
      content: 'schedulingPolicy: number'
      return:
        type:
          - number
        description: ''
    package: '@azure/abort-controller'
  - uid: '@azure/abort-controller.cluster.Cluster.SCHED_NONE'
    name: SCHED_NONE
    fullName: SCHED_NONE
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    syntax:
      content: 'SCHED_NONE: number'
      return:
        type:
          - number
        description: ''
    package: '@azure/abort-controller'
  - uid: '@azure/abort-controller.cluster.Cluster.SCHED_RR'
    name: SCHED_RR
    fullName: SCHED_RR
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    syntax:
      content: 'SCHED_RR: number'
      return:
        type:
          - number
        description: ''
    package: '@azure/abort-controller'
  - uid: '@azure/abort-controller.cluster.Cluster.setMaxListeners'
    name: setMaxListeners(number)
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function setMaxListeners(n: number)'
      parameters:
        - id: 'n'
          type:
            - number
          description: ''
      return:
        type:
          - this
        description: ''
    package: '@azure/abort-controller'
  - uid: '@azure/abort-controller.cluster.Cluster.settings'
    name: settings
    fullName: settings
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    syntax:
      content: 'settings: ClusterSettings'
      return:
        type:
          - '@azure/abort-controller.cluster.ClusterSettings'
        description: ''
    package: '@azure/abort-controller'
  - uid: '@azure/abort-controller.cluster.Cluster.setupMaster'
    name: setupMaster(ClusterSettings)
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function setupMaster(settings?: ClusterSettings)'
      parameters:
        - id: settings
          type:
            - '@azure/abort-controller.cluster.ClusterSettings'
          description: ''
          optional: true
    package: '@azure/abort-controller'
  - uid: '@azure/abort-controller.cluster.Cluster.worker'
    name: worker
    fullName: worker
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    optional: true
    syntax:
      content: 'worker?: Worker'
      return:
        type:
          - '@azure/abort-controller.cluster.Worker'
        description: ''
    package: '@azure/abort-controller'
  - uid: '@azure/abort-controller.cluster.Cluster.Worker'
    name: Worker
    fullName: Worker
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    syntax:
      content: 'Worker: Worker'
      return:
        type:
          - '@azure/abort-controller.cluster.Worker'
        description: ''
    package: '@azure/abort-controller'
  - uid: '@azure/abort-controller.cluster.Cluster.workers'
    name: workers
    fullName: workers
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    optional: true
    syntax:
      content: 'workers?: [key: string]: function'
      return:
        type:
          - '[key: string]: function'
        description: ''
    package: '@azure/abort-controller'
references:
  - uid: '@azure/abort-controller.events.EventEmitter.EventEmitter'
    name: EventEmitter
    spec.typeScript:
      - name: EventEmitter
        fullName: EventEmitter
        uid: '@azure/abort-controller.events.EventEmitter.EventEmitter'
  - uid: '@azure/abort-controller.events.EventEmitterOptions'
    name: EventEmitterOptions
    spec.typeScript:
      - name: EventEmitterOptions
        fullName: EventEmitterOptions
        uid: '@azure/abort-controller.events.EventEmitterOptions'
  - uid: '@azure/abort-controller.child_process.ChildProcess'
    name: ChildProcess
    spec.typeScript:
      - name: ChildProcess
        fullName: ChildProcess
        uid: '@azure/abort-controller.child_process.ChildProcess'
  - uid: '@azure/abort-controller.cluster.Address'
    name: Address
    spec.typeScript:
      - name: Address
        fullName: Address
        uid: '@azure/abort-controller.cluster.Address'
  - uid: '@azure/abort-controller.net.Socket | @azure/abort-controller.net.Server'
    name: Server
    spec.typeScript:
      - name: Socket
        fullName: Socket
        uid: '@azure/abort-controller.net.Socket'
      - name: ' | '
        fullName: ' | '
      - name: Server
        fullName: Server
        uid: '@azure/abort-controller.net.Server'
  - uid: '@azure/abort-controller.cluster.Worker'
    name: Worker
    spec.typeScript:
      - name: Worker
        fullName: Worker
        uid: '@azure/abort-controller.cluster.Worker'
  - uid: '@azure/abort-controller.cluster.ClusterSettings'
    name: ClusterSettings
    spec.typeScript:
      - name: ClusterSettings
        fullName: ClusterSettings
        uid: '@azure/abort-controller.cluster.ClusterSettings'
  - uid: '@azure/abort-controller.cluster.Cluster'
    name: Cluster
    spec.typeScript:
      - name: Cluster
        fullName: Cluster
        uid: '@azure/abort-controller.cluster.Cluster'
