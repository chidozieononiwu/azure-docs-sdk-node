### YamlMime:UniversalReference
items:
  - uid: microsoft-speech-browser-sdk.Queue
    name: Queue
    fullName: Queue<TItem>
    children:
      - microsoft-speech-browser-sdk.Queue.Dequeue
      - microsoft-speech-browser-sdk.Queue.Dispose
      - microsoft-speech-browser-sdk.Queue.DrainAndDispose
      - microsoft-speech-browser-sdk.Queue.Enqueue
      - microsoft-speech-browser-sdk.Queue.EnqueueFromPromise
      - microsoft-speech-browser-sdk.Queue.IsDisposed
      - microsoft-speech-browser-sdk.Queue.Length
      - microsoft-speech-browser-sdk.Queue.Peek
      - microsoft-speech-browser-sdk.Queue.constructor
    langs:
      - typeScript
    type: class
    summary: ''
    package: microsoft-speech-browser-sdk
  - uid: microsoft-speech-browser-sdk.Queue.Dequeue
    name: Dequeue()
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: function Dequeue()
      parameters: []
      return:
        type:
          - microsoft-speech-browser-sdk.Promise<TItem>
        description: ''
    package: microsoft-speech-browser-sdk
  - uid: microsoft-speech-browser-sdk.Queue.Dispose
    name: Dispose(string)
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function Dispose(reason?: string)'
      parameters:
        - id: reason
          type:
            - string
          description: ''
          optional: true
    package: microsoft-speech-browser-sdk
  - uid: microsoft-speech-browser-sdk.Queue.DrainAndDispose
    name: 'DrainAndDispose((pendingItemInQueue: TItem) => void, string)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function DrainAndDispose(pendingItemProcessor: (pendingItemInQueue:
        TItem) => void, reason?: string)
      parameters:
        - id: pendingItemProcessor
          type:
            - '(pendingItemInQueue: TItem) => void'
          description: ''
        - id: reason
          type:
            - string
          description: ''
          optional: true
      return:
        type:
          - microsoft-speech-browser-sdk.Promise<boolean>
        description: ''
    package: microsoft-speech-browser-sdk
  - uid: microsoft-speech-browser-sdk.Queue.Enqueue
    name: Enqueue(TItem)
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function Enqueue(item: TItem)'
      parameters:
        - id: item
          type:
            - TItem
          description: ''
    package: microsoft-speech-browser-sdk
  - uid: microsoft-speech-browser-sdk.Queue.EnqueueFromPromise
    name: EnqueueFromPromise(Promise<TItem>)
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function EnqueueFromPromise(promise: Promise<TItem>)'
      parameters:
        - id: promise
          type:
            - microsoft-speech-browser-sdk.Promise<TItem>
          description: ''
    package: microsoft-speech-browser-sdk
  - uid: microsoft-speech-browser-sdk.Queue.IsDisposed
    name: IsDisposed()
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: function IsDisposed()
      parameters: []
      return:
        type:
          - boolean
        description: ''
    package: microsoft-speech-browser-sdk
  - uid: microsoft-speech-browser-sdk.Queue.Length
    name: Length()
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: function Length()
      parameters: []
      return:
        type:
          - number
        description: ''
    package: microsoft-speech-browser-sdk
  - uid: microsoft-speech-browser-sdk.Queue.Peek
    name: Peek()
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: function Peek()
      parameters: []
      return:
        type:
          - microsoft-speech-browser-sdk.Promise<TItem>
        description: ''
    package: microsoft-speech-browser-sdk
  - uid: microsoft-speech-browser-sdk.Queue.constructor
    name: Queue(List<TItem>)
    children: []
    type: constructor
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'new Queue(list?: List<TItem>)'
      parameters:
        - id: list
          type:
            - microsoft-speech-browser-sdk.List<TItem>
          description: ''
          optional: true
    package: microsoft-speech-browser-sdk
references:
  - uid: microsoft-speech-browser-sdk.List<TItem>
    name: List<TItem>
    spec.typeScript:
      - name: List
        fullName: List
        uid: microsoft-speech-browser-sdk.List
      - name: <TItem>
        fullName: <TItem>
  - uid: microsoft-speech-browser-sdk.Promise<TItem>
    name: Promise<TItem>
    spec.typeScript:
      - name: Promise
        fullName: Promise
        uid: microsoft-speech-browser-sdk.Promise
      - name: <TItem>
        fullName: <TItem>
  - uid: microsoft-speech-browser-sdk.Promise<boolean>
    name: Promise<boolean>
    spec.typeScript:
      - name: Promise
        fullName: Promise
        uid: microsoft-speech-browser-sdk.Promise
      - name: <boolean>
        fullName: <boolean>
